.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pckt.7,v $ $Revision: 1.1.3.3 $ (DEC) $Date: 1993/09/20 17:09:09 $
.\"
...\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\" OSF/1 1.2
...\"	[91/10/02  16:21:52  steto]
...\"
.TH pckt 7
.SH NAME
.PP
\*Lpckt\*O - STREAMS module for constructing message packets on a pty
.SH DESCRIPTION
.PP
.iX "packetizing module for STREAMS messages"
The \*Lpckt\*O module is a STREAMS module that can be used
with a pseudoterminal to transfer messages in packet mode.
The packet mode feature of pty devices allows the user process
on the master side of the device to be informed of state changes.
.PP
For packet mode to be enabled in the pty device, the user process must push
the \*Lpckt\*O module onto the master side of the pty with a call to the
STREAMS \*LI_PUSH ioctl(\|)\*O function.
.PP
When the user process writes data, the \*Lpckt\*O module passes the message
on to the next module or driver unchanged.
When the user process reads data or when the \*Lpckt\*O module
receives certain STREAMS message types, it constructs a packet out of the
message for forwarding upstream.
.PP
To construct a message packet, the module creates an \*LM_PROTO\*O message.
This \*LM_PROTO\*O message contains the original message type in the first
data block and the original message in as many data blocks as needed.
The user process can then retrieve the \*LM_PROTO\*O message with a call
to the \*Lgetmsg()\*O function.
.PP
The STREAMS message types that the \*Lpckt\*O module places in packets,
are the following:
.nL
	\*LM_DATA\*O
.nL
	\*LM_IOCTL\*O
.nL
	\*LM_PROTO\*O
.nL
	\*LM_PCPROTO\*O
.nL
	\*LM_FLUSH\*O
.nL
	\*LM_START\*O
.nL
	\*LM_STOP\*O
.nL
	\*LM_STARTI\*O
.nL
	\*LM_STOPI\*O
.nL
	\*LM_READ\*O
.PP
All other messages are passed unchanged upstream.
.PP
If the message is an \*LM_FLUSH\*O message, the \*Lpckt\*O module
looks at the flag and takes the following actions:
.ML
.LI
If the flag is \*LFLUSHW\*O, the module changes it to \*LFLUSHR\*O
before creating the \*LM_PROTO\*O message, and passes the message upstream.
The module also sends an \*LM_FLUSH\*O message with the \*LFLUSHW\*O flag set.
.LI
If the flag is \*LFLUSHR\*O, the module changes it to \*LFLUSHW\*O
before creating the \*LM_PROTO\*O message, and passes the message upstream.
.LI
If the flag is \*LFLUSHRW\*O, the module changes it to \*LFLUSHW\*O
before creating the \*LM_PROTO\*O message, and passes the message upstream.
The module also sends an \*LM_FLUSH\*O message with the \*LFLUSHW\*O flag set.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lgetmsg\*O(2),
\*Lioctl\*O(2).
.nL
Interfaces:
\*Lldterm\*O(7),
\*Lptem\*O(7),
\*Lstreamio\*O(7).
.EQ
delim off
.EN
