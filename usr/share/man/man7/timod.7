.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
...\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\"
...\" OSF/1 1.2
.TH timod 7
.SH NAME
.PP
\*Ltimod\*O - STREAMS module for converting \*Lioctl(\|)\*O calls into TI messages
.SH DESCRIPTION
.PP
.iX "timod module"
The \*Ltimod\*O module is a STREAMS module that converts \*Lioctl(\|)\*O
calls from a transport user supporting the Transport Interface (TI)
into messages that a transport protocol provider supporting TI can consume.
This allows the user to initiate TI functions as atomic operations.
.PP
The user places and removes the \*Ltimod\*O module on a device stream
by calling the STREAMS \*LI_PUSH ioctl(\|)\*O and \*LI_POP ioctl(\|)\*O
functions.
.PP
The \*Ltimod\*O module recognizes and processes STREAMS messages generated by
\*LI_STR ioctl(\|)\*O calls containing the following TI commands:
.VL
.LI "\*LTI_BIND\*O"
This TI command binds an address to the transport protocol provider.
The STREAMS message that the module issues to the \*LTI_BIND ioctl(\|)\*O
call is equivalent to the TI message type \*LT_BIND_REQ\*O.
The STREAMS message that the module returns in response to the successful
completion of the \*LTI_BIND ioctl(\|)\*O call is equivalent to
the TI message type \*LTI_BIND_ACK\*O.
.LI "\*LTI_UNBIND\*O"
This TI command unbinds an address from the transport protocol provider.
The STREAMS message that the module issues to the \*LTI_UNBIND ioctl(\|)\*O
call is equivalent to the TI message type \*LT_UNBIND_REQ\*O.
The STREAMS message that the module returns in response to the successful
completion of the \*LTI_UNBIND ioctl(\|)\*O call is equivalent to
the TI message type \*LTI_OK_ACK\*O.
.LI "\*LTI_GETINFO\*O"
This TI command gets the TI protocol-specific information from
the transport protocol provider.
The STREAMS message that the module issues to the \*LTI_GETINFO ioctl(\|)\*O
call is equivalent to the TI message type \*LT_INFO_REQ\*O.
The STREAMS message that the module returns in response to the successful
completion of the \*LTI_GETINFO ioctl(\|)\*O call is equivalent to
the TI message type \*LTI_INFO_ACK\*O.
.LI "\*LTI_OPTMGMT\*O"
This TI command gets, sets, or negotiates TI protocol-specific options with
the transport protocol provider.
The STREAMS message that the module issues to the \*LTI_OPTMGMT ioctl(\|)\*O
call is equivalent to the TI message type \*LT_OPTMGMT_REQ\*O.
The STREAMS message that the module returns in response to the successful
completion of the \*LTI_OPTMGMT ioctl(\|)\*O call is equivalent to
the TI message type \*LTI_OPTMGMT_ACK\*O.
.LE
.PP
The \*Ltimod\*O module transparently passes any STREAMS messages that
are not generated by the \*Lioctl(\|)\*O calls previously described
to the neighboring module or driver.
.PP
.SS RETURN VALUES
If the \*Ltimod\*O module returns an error for an \*Lioctl(\|)\*O call,
the lower 8 bits of the return value will be one of the TI error codes
defined in the \*Lsys/tiusr.h\*O header file.
If the TI error is of the type \*LTSYERR\*O, then the second 8 bits of the
return value will contain an error as defined in the \*Lsys/errno.h\*O
header file.
.SH FILES
.PP
.VL 1.5i
.LI "<\*Lsys/tiuser.h\*O>"
Defines the error codes for TI functions.
.LI "<\*Lsys/tihdr.h\*O>"
Defines the message types for TI.
.LI "<\*Lsys/errno.h\*O>"
Defines the error codes for system errors.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lintro(2)\*O,
\*Lioctl(2)\*O
.PP
Interfaces:
\*Lstreamio(7)\*O
.iX "timod module"
.EQ
delim off
.EN
