.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: tcp.7,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/04/20 20:12:55 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\"
.\" Copyright (c) 1983 The Regents of the University of California.
.\" All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\" 
.\" @(#)tcp.4	6.4 (Berkeley) 6/23/90
.\" 
.TH tcp 7
.SH NAME
\*Ltcp\*O \- Internet transmission control protocol
.SH SYNOPSIS
.PP
.sS
\*L#include <sys/socket.h>\*O
.nL
\*L#include <netinet/in.h>\*O
.PP
\*Ls = socket(AF_INET, SOCK_STREAM, 0);\*O
.sE
.SH DESCRIPTION
.iX "tcp" "Transmission Control Protocol"
.iX "Transmission Control Protocol"
.iX "protocols" "TCP"
.iX "sockets"
The TCP provides reliable, flow-controlled, two-way
transmission of data.  It is a byte-stream protocol used to
support the SOCK_STREAM abstraction.  TCP uses the standard
Internet address format and, in addition, provides a per-host
collection of \*(lqport addresses\*(rq.  Thus, each address is composed
of an Internet address specifying the host and network, with
a specific TCP port on the host identifying the peer entity.
.PP
Sockets utilizing the TCP are either \*(lqactive\*(rq or
\*(lqpassive\*(rq.  Active sockets initiate connections to passive
sockets.  By default, TCP sockets are created active; to create a
passive socket the
\*Llisten(\|)\*O
function must be used
after binding the socket with the
\*Lbind(\|)\*O
function.  Only
passive sockets may use the
\*Laccept(\|)\*O
function to accept incoming connections.  Only active sockets may
use the
\*Lconnect(\|)\*O
function to initiate connections.
.PP
Passive sockets may \*(lqunderspecify\*(rq their location to match
incoming connection requests from multiple networks.  This
technique, termed \*Lwildcard addressing\*O, allows a single
server to provide service to clients on multiple networks.
To create a socket which listens on all networks, the Internet
address INADDR_ANY
must be bound.  The TCP port may still be specified
at this time; if the port is not specified the system will assign one.
Once a connection has been established the socket's address is
fixed by the peer entity's location.   The address assigned the
socket is the address associated with the network interface
through which packets are being transmitted and received.  Normally
this address corresponds to the peer entity's network.
.PP
TCP supports the following socket options: TCP_MAXSEG and TCP_NODELAY. Both can
be retrieved with the
\*Lgetsockopt(\|)\*O
function, while only TCP_NODELAY can be set with the
\*Lsetsockopt(\|)\*O
function.
Under most circumstances, TCP sends data when it is presented;
when outstanding data has not yet been acknowledged, it gathers
small amounts of output to be sent in a single packet once
an acknowledgement is received.
For a small number of clients, such as window systems
that send a stream of mouse events which receive no replies,
this gathering of
output may cause significant delays.
Therefore, TCP provides a Boolean option, TCP_NODELAY (from the
\*Lnetinet/tcp.h\*O
header file),
to defeat this algorithm.
The option level for the
\*Lsetsockopt(\|)\*O
and
\*Lgetsockopt(\|)\*O
functions is the protocol number for TCP,
available from the
\*Lgetprotobyname(\|)\*O
function.
.PP
Options at the IP transport level may be used with TCP; see
.\" Begin Digital-specific information CORRECTION
\*Lip\*O(7).
.\" End Digital-specific information CORRECTION
Incoming connection requests that are source-routed are noted,
and the reverse source route is used in responding.
.SH ERRORS
.PP
If a socket operation fails,
\*Lerrno\*O
may be set to one of the following values:
.\"from TP 1i"  
.VL 1i
.LI "[EISCONN]"
The socket to be connected already has a connection.
.\"from TP "  
.LI "[ENOBUFS]"
The system ran out of memory for
an internal data structure.
.\"from TP "  
.LI "[ETIMEDOUT]"
A connection was dropped
due to excessive retransmissions.
.\"from TP "  
.LI "[ECONNRESET]"
The remote peer
forced the connection to be closed.
.\"from TP "  
.LI "[ECONNREFUSED]"
The remote
peer actively refuses connection establishment (usually because
no process is listening to the port).
.\"from TP "  
.LI "[EADDRINUSE]"
An attempt
is made to create a socket with a port which has already been
allocated.
.\"from TP "  
.LI "[EADDRNOTAVAIL]"
An attempt is made to create a
socket with a network address for which no network interface
exists.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lgetsockopt\*O(2),
\*Lsocket\*O(2)
.PP
Files:
\*Lnetintro\*O(7),
\*Linet\*O(7),
\*Lip\*O(7)
.iX "tcp" "Transmission Control Protocol"
.EQ
delim off
.EN
