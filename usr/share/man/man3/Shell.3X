.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: Shell.3X,v $ $Revision: 3.3.4.4 $ (DEC) $Date: 1993/10/25 18:47:44 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH Shell 3X "" "" "" "OSF/Motif"
.SH NAME
\*LShell\*O \- The Shell widget class
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/Xm.h>
\&#include <X11/Shell.h>
.iE
.sE
.SH DESCRIPTION
.iX "Shell"
.iX "widget class" "Shell"
Shell is a top-level widget (with only one managed child) that encapsulates
the interaction with the window manager.
.PP 
At the time the shell's child is managed, the child's width is used
for both widgets if the shell is unrealized and no width has been
specified for the shell.  Otherwise, the shell's width is used for
both widgets.  The same relations hold for the height of the shell and
its child.
.SS "Classes"
Shell inherits behavior and resources from \*LComposite\*O and \*LCore\*O.
.PP
The class pointer is \*LshellWidgetClass\*O.
.PP
The class name is \*LShell\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Shell Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNallowShellResize	False	CG
\ \ \ \ \ \ XmCAllowShellResize	\ \ \ \ \ \ \ Boolean
_
XmNcreatePopupChildProc	NULL	CSG
\ \ \ \ \ \ XmCCreatePopupChildProc	\ \ \ \ \ \ \ XtCreatePopupChildProc
_
XmNgeometry	NULL	CSG
\ \ \ \ \ \ XmCGeometry	\ \ \ \ \ \ \ String
_
XmNoverrideRedirect	False	CSG
\ \ \ \ \ \ XmCOverrideRedirect	\ \ \ \ \ \ \ Boolean
_
XmNpopdownCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNpopupCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNsaveUnder	False	CSG
\ \ \ \ \ \ XmCSaveUnder	\ \ \ \ \ \ \ Boolean
_
XmNvisual	CopyFromParent	CSG
\ \ \ \ \ \ XmCVisual	\ \ \ \ \ \ \ Visual *
_
.TE
.\" NROFF HACK END
.nL
.ne 6
.VL  
.LI "\*LXmNallowShellResize\*O"
Specifies that if this resource is False, the Shell widget instance
returns \*LXtGeometryNo\*O to all geometry requests from its children.
.LI "\*LXmNcreatePopupChildProc\*O"
Specifies the pointer to a function that is called when the Shell
widget instance is popped up by \*LXtPopup\*O.
The function creates the child widget when the shell is popped up
instead of when the application starts up.
This can be used if the child needs to be reconfigured each time the
shell is popped up.
The function takes one argument, the popup shell, and returns no result.
It is called after the popup callbacks specified by
\*LXmNpopupCallback\*O.
.LI "\*LXmNgeometry\*O"
Specifies the desired geometry for the widget instance.  This resource
is examined only when the widget instance is unrealized and the number
of its managed children is changed.  It is to change the values
of the \*LXmNx\*O, \*LXmNy\*O, \*LXmNwidth\*O, and \*LXmNheight\*O
resources.
.LI "\*LXmNoverrideRedirect\*O"
Specifies this is True if the widget instance is a temporary
window which should be ignored by the window manager.  Applications and
users should not normally alter this resource.
.LI "\*LXmNpopdownCallback\*O"
Specifies a list of callbacks that is called when the widget instance
is popped down by \*LXtPopdown\*O.
.LI "\*LXmNpopupCallback\*O"
Specifies a list of callbacks that is called when the widget instance
is popped up by \*LXtPopup\*O.
.LI "\*LXmNsaveUnder\*O"
Specifies a True value if it is desirable to save the contents of the
screen beneath this widget instance, avoiding expose events when the
instance is unmapped.  This is a hint, and an implementation may save
contents whenever it desires, including always or never.
.nL
.ne 6
.LI "\*LXmNvisual\*O"
Specifies the visual used in creating the widget.
.LE 
.nL
.ne 3i
.SS "Inherited Resources"
Shell inherits behavior and resources from the following
superclass.  For a complete description of each resource, refer to the
man page for that superclass.
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Composite Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNchildren	NULL	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ WidgetList
_
XmNinsertPosition	NULL	CSG
\ \ \ \ \ \ XmCInsertPosition	\ \ \ \ \ \ \ XtOrderProc
_
XmNnumChildren	0	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ Cardinal
_
.TE
.\" NROFF HACK END
.PP
.wH .in 0 
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Core Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaccelerators	dynamic	CSG
\ \ \ \ \ \ XmCAccelerators	\ \ \ \ \ \ \ XtAccelerators
_
XmNancestorSensitive	dynamic	G
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNbackground	dynamic	CSG
\ \ \ \ \ \ XmCBackground	\ \ \ \ \ \ \ Pixel
_
XmNbackgroundPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderColor	XtDefaultForeground	CSG
\ \ \ \ \ \ XmCBorderColor	\ \ \ \ \ \ \ Pixel
_
XmNborderPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderWidth	1	CSG
\ \ \ \ \ \ XmCBorderWidth	\ \ \ \ \ \ \ Dimension
_
XmNcolormap	dynamic	CG
\ \ \ \ \ \ XmCColormap	\ \ \ \ \ \ \ Colormap
_
XmNdepth	dynamic	CG
\ \ \ \ \ \ XmCDepth	\ \ \ \ \ \ \ int
_
XmNdestroyCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNheight	dynamic	CSG
\ \ \ \ \ \ XmCHeight	\ \ \ \ \ \ \ Dimension
_
XmNinitialResourcesPersistent	True	C
\ \ \ \ \ \ XmCInitialResourcesPersistent	\ \ \ \ \ \ \ Boolean
_
XmNmappedWhenManaged	True	CSG
\ \ \ \ \ \ XmCMappedWhenManaged	\ \ \ \ \ \ \ Boolean
_
XmNscreen	dynamic	CG
\ \ \ \ \ \ XmCScreen	\ \ \ \ \ \ \ Screen *
_
.wH .tH
XmNsensitive	True	CSG
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNtranslations	dynamic	CSG
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNwidth	dynamic	CSG
\ \ \ \ \ \ XmCWidth	\ \ \ \ \ \ \ Dimension
_
XmNx	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
XmNy	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
.TE
.\" NROFF HACK END
.wH .in  
.SS "Translations"
There are no translations for Shell.
.SH RELATED INFORMATION
.na
\*LComposite(3X)\*O and \*LCore(3X)\*O.
.ad
.EQ
delim off
.EN
