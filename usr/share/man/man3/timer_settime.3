.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: timer_settime.3,v $ $Revision: 1.2.2.3 $ (DEC) $Date: 1992/11/25 13:57:30 $
.\"
.\" SCCSID: @(#)timer_settime.3 6.5 1/10/92
.TH timer_settime 3
.SH NAME
\*Ltimer_settime\*O, \*Ltimer_gettime\*O \- Get or set the expiration time of  the specified per-process timer (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<time.h>\*O
.PP
int \*Ltimer_gettime\*O (
.br
timer_t \*Vtimerid\*O,
.br
struct \*Litimerspec\*O \*V*value\*O);
.PP
int \*Ltimer_settime\*O (
.br
timer_t \*Vtimerid\*O,
.br
int \*Vflags\*O,
.br
const struct \*Litimerspec\*O \*V*value\*O,
.br
struct \*Litimerspec\*O \*V*ovalue\*O);
.SH PARAMETERS
.PP
.TP 8
.I timerid
The timer ID for the timer whose expiration time is set or returned.
.TP
.I flags
Specifies whether the timer is to be an absolute or relative timer.
.TP
.I *value
A pointer to an \*Litimerspec\*O data structure.
.TP
.I *ovalue
A pointer to the \*Litimerspec\*O data structure into which the
time remaining on the previous timer is returned.
.SH DESCRIPTION
.PP
.iX "timer_gettime function"
.iX "timer_settime function"
.iX "timers" "getting values"
.iX "timers" "establishing timers"
The \*Ltimer_gettime\*O function returns
the amount of time remaining in the current time interval
before the expiration of the specified timer. The \*Ltimer_settime\*O
function sets the expiration time of the specified per-process timer,
determines whether the timer is an absolute or relative timer, returns the
time remaining (if any) on the previous specified timer, and arms
the timer.
.PP
Both the \*Ltimer_gettime\*O and \*Ltimer_settime\*O
functions use an \*Litimerspec\*O structure, which consists of the
following members:
.TP 15
\*Lstruct\*O
\*Ltimespec\*O
.I it_interval;
.TP
\*Lstruct\*O
\*Ltimespec\*O
.I it_value;
.PP
The \*Litimerspec\*O structure points to a \*Ltimespec\*O structure, which
consists of the following members:
.TP 8
\*Ltime_t\*O
.I tv_sec;
.TP
\*Llong\*O
.I tv_nsec;
.PP
Values specified for these members determine the duration of the timer
intervals, as well as the start and end times.
.PP
Use the \*Ltimer_gettime\*O function to determine whether a
per-process timer is still active. If the timer
is disabled, zero is returned.
.PP
The \*Ltimer_settime\*O function sets the expiration time
of the specified per-process timer and arms
the timer.  The TIMER_ABSTIME flag determines whether the timer is an absolute
or relative timer.
If the TIMER_ABSTIME flag is not set (\*Vflags=0\*O), the timer is set
relative to the current time (a relative timer).
In this case, the time until the next
timer expiration equals the interval specified by
the \*Vit_value\*O member of \*Vvalue\*O. The timer expires in the specified
number of seconds and nanoseconds from when the call was made.
.PP
If the TIMER_ABSTIME flag is set, the timer is set with a specified starting
time (an absolute timer). In this case,
the time until the next
timer expiration equals the difference between the absolute time
specified by the \*Vit_value\*O member of \*Vvalue\*O and the current value
of the clock associated with the timer ID. The timer expires when the clock
reaches the value specified by \*Vit_value\*O member.
.PP
Times that are between two consecutive non-negative integer multiples
of the resolution are rounded up to the larger multiple of the resolution.
.PP
To disarm a timer, specify a value of zero for the \*Vit_value\*O member
and call the \*Ltimer_settime\*O function.
.PP
The reload value to the timer is set to the value specified by
the \*Vit_interval\*O member of \*Vvalue\*O. If the \*Vit_interval\*O
is zero, a one-shot timer is specified. If the \*Vit_interval\*O is non-zero,
a periodic timer is specified.
.SH RETURN VALUES
.PP
On a successful call, a value of 0 is returned.
.PP
On an unsuccessful call,
a value of \-1 is returned and \*Lerrno\*O is
set to indicate that an error occurred.
.SH ERRORS
.PP
The \*Ltimer_gettime\*O and \*Ltimer_settime\*O functions
fail under the following conditions:
.TP 15
[EINVAL]
The \*Vtimerid\*O argument does not correspond to an id returned
by \*Ltimer_create\*O, but not yet removed by \*Ltimer_delete\*O.
.sp
The \*Ltimer_settime\*O function can fail with this error,
if a \*Vvalue\*O structure specified a nanosecond
value less than zero or greater
than or equal to 1000 million.
.TP 15
[ENOSYS]
The \*Ltimer_settime\*O and \*Ltimer_gettime\*O functions are not supported
by this implementation.
.SH RELATED INFORMATION
.PP
Functions:
\*Lalarm\*O(3), \*Lclock_gettime\*O(3), \*Ltimer_create\*O(3)
.EQ
delim off
.EN
