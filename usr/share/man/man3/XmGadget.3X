.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XmGadget.3X,v $ $Revision: 3.2.4.4 $ (DEC) $Date: 1993/10/25 19:11:53 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **
.TH XmGadget 3X "" "" "" "OSF/Motif"
.SH NAME
\*LXmGadget\*O \- The Gadget widget class
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/Xm.h>
.iE
.sE
.SH DESCRIPTION
.iX "XmGadget"
.iX "widget class" "Gadget"
Gadget is a widget class used as
a supporting superclass for other
gadget classes.  It handles shadow-border drawing and highlighting, traversal
activation and deactivation, and various callback lists needed by
gadgets.
.PP 
The color and pixmap resources defined by XmManager are directly used by
gadgets.  If \*LXtSetValues\*O is used
to change one of the resources for a manager
widget, all of the gadget children within the manager also change.
.SS "Classes"
Gadget inherits behavior and resources from \*LObject\*O and
\*LRectObj\*O classes.
.PP
The class pointer is \*LxmGadgetClass\*O.
.PP
The class name is \*LXmGadget\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmGadget Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNbottomShadowColor	dynamic	G
\ \ \ \ \ \ XmCBottomShadowColor	\ \ \ \ \ \ \ Pixel
_
XmNhelpCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNhighlightColor	dynamic	G
\ \ \ \ \ \ XmCHighlightColor	\ \ \ \ \ \ \ Pixel
_
XmNhighlightOnEnter	False	CSG
\ \ \ \ \ \ XmCHighlightOnEnter	\ \ \ \ \ \ \ Boolean
_
XmNhighlightThickness	2	CSG
\ \ \ \ \ \ XmCHighlightThickness	\ \ \ \ \ \ \ Dimension
_
XmNnavigationType	XmNONE	CSG
\ \ \ \ \ \ XmCNavigationType	\ \ \ \ \ \ \ XmNavigationType
_
XmNshadowThickness	2	CSG
\ \ \ \ \ \ XmCShadowThickness	\ \ \ \ \ \ \ Dimension
_
XmNtopShadowColor	dynamic	G
\ \ \ \ \ \ XmCTopShadowColor	\ \ \ \ \ \ \ Pixel
_
XmNtraversalOn	True	CSG
\ \ \ \ \ \ XmCTraversalOn	\ \ \ \ \ \ \ Boolean
_
XmNunitType	dynamic	CSG
\ \ \ \ \ \ XmCUnitType	\ \ \ \ \ \ \ unsigned char
_
XmNuserData	NULL	CSG
\ \ \ \ \ \ XmCUserData	\ \ \ \ \ \ \ XtPointer
_
.TE
.\" NROFF HACK END
.nL
.ne 8
.VL  
.LI "\*LXmNbottomShadowColor\*O"
Contains the color to use to draw the bottom and right sides of the
border shadow.
.LI "\*LXmNhelpCallback\*O"
Specifies the list of callbacks that is called when the help key sequence
is pressed.  The reason sent by the callback is \*LXmCR_HELP\*O.
.LI "\*LXmNhighlightColor\*O"
Contains the color of the highlighting rectangle.
.LI "\*LXmNhighlightOnEnter\*O"
Specifies if the highlighting rectangle is drawn when the cursor moves
into the widget.
If the shell's focus policy is \*LXmEXPLICIT\*O, this resource is
ignored, and the widget is highlighted when it has the focus.
If the shell's focus policy is \*LXmPOINTER\*O and if this resource is
True, the highlighting rectangle is drawn when the the cursor moves into
the widget.
If the shell's focus policy is \*LXmPOINTER\*O and if this resource is
False, the highlighting rectangle is not drawn when the the cursor moves
into the widget.
The default is False.
.LI "\*LXmNhighlightThickness\*O"
Specifies the thickness of the highlighting rectangle.
.LI "\*LXmNnavigationType\*O"
Determines whether the widget is a tab group.
.wH .rS 
.ML
.LI
\*LXmNONE\*O indicates that the widget is not a tab group.
.LI
\*LXmTAB_GROUP\*O indicates that the widget is a tab group, unless
another widget in the hierarchy has an \*LXmNnavigationType\*O of
\*LXmEXCLUSIVE_TAB_GROUP\*O.
.LI
\*LXmSTICKY_TAB_GROUP\*O indicates that the widget is a tab group, even
if another widget in the hierarchy has an \*LXmNnavigationType\*O of
\*LXmEXCLUSIVE_TAB_GROUP\*O.
.LI
\*LXmEXCLUSIVE_TAB_GROUP\*O indicates that the widget is a tab group and
that widgets in the hierarchy whose \*LXmNnavigationType\*O is
\*LXmTAB_GROUP\*O are not tab groups.
.PP
When a parent widget has an \*LXmNnavigationType\*O of
\*LXmEXCLUSIVE_TAB_GROUP\*O, traversal of non-tab-group widgets within
the group is based on the order of those widgets in their parent's
\*LXmNchildren\*O list.
.PP
When any widget in a hierarchy has an \*LXmNnavigationType\*O of
\*LXmEXCLUSIVE_TAB_GROUP\*O, traversal of tab groups in the hierarchy
proceeds to widgets in the order in which their \*LXmNnavigationType\*O
resources were specified as \*LXmEXCLUSIVE_TAB_GROUP\*O or
\*LXmSTICKY_TAB_GROUP\*O, whether by creating the widgets with that value,
by calling \*LXtSetValues\*O, or by calling \*LXmAddTabGroup\*O.
.LE
.wH .rE
.nL
.ne 8
.LI "\*LXmNshadowThickness\*O"
Specifies the size of the drawn border shadow.
.LI "\*LXmNtopShadowColor\*O"
Contains the color to use to draw the top and left sides of the border
shadow.
.LI "\*LXmNtraversalOn\*O"
Specifies traversal activation for this gadget.
.LI "\*LXmNunitType\*O"
Provides the basic support for resolution independence.
It defines the type of units a widget uses with sizing and
positioning resources.
If the widget's parent is a subclass of \*LXmManager\*O and if the
\*LXmNunitType\*O resource is not explicitly set, it defaults to the
unit type of the parent widget.
If the widget's parent is not a subclass of \*LXmManager\*O, the
resource has a default unit type of \*LXmPIXELS\*O.
.PP
\*LXmNunitType\*O can have the following values:
.wH .rS 
.ML
.LI
\*LXmPIXELS\*O\(emall values provided to the widget are treated as normal
pixel values.
.LI
\*LXm100TH_MILLIMETERS\*O\(emall values provided to the widget are treated
as 1/100 millimeter.
.LI
\*LXm1000TH_INCHES\*O\(emall values provided to the widget are treated as
1/1000 inch.
.LI
\*LXm100TH_POINTS\*O\(emall values provided to the widget are treated as
1/100 point.  A point is a unit used in text processing
applications and is defined as 1/72 inch.
.LI
\*LXm100TH_FONT_UNITS\*O\(emall values provided to the widget are
treated as 1/100 of a font unit.
A font unit has horizontal and vertical components.
These are the values of the XmScreen resources \*LXmNhorizontalFontUnit\*O
and \*LXmNverticalFontUnit\*O.
.LE 
.wH .rE
.LI "\*LXmNuserData\*O"
Allows the application to attach any necessary specific data to the gadget.
This is an internally unused resource.
.LE
.nL
.ne 10
.SS "Inherited Resources"
Gadget inherits the following resources from the named
superclass.  For a complete description of each resource, refer to the
man page for that superclass.
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
RectObj Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNancestorSensitive	dynamic	G
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNborderWidth	0	CSG
\ \ \ \ \ \ XmCBorderWidth	\ \ \ \ \ \ \ Dimension
_
XmNheight	dynamic	CSG
\ \ \ \ \ \ XmCHeight	\ \ \ \ \ \ \ Dimension
_
XmNsensitive	True	CSG
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNwidth	dynamic	CSG
\ \ \ \ \ \ XmCWidth	\ \ \ \ \ \ \ Dimension
_
XmNx	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
XmNy	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Object Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNdestroyCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
.TE
.\" NROFF HACK END
.SS "Callback Information"
A pointer to the following structure is passed to each callback:
.sS
.iS
.ta .25i 1.50i
typedef struct
{
	int	\*Vreason\*L;
	\*LXEvent	\*V* event\*L;
} XmAnyCallbackStruct;
.iE
.sE
.wH .fi
.VL .75i 
.LI "\*Vreason\*O"
Indicates why the callback was invoked.
For this callback, \*Vreason\*O is set to \*LXmCR_HELP\*O.
.LI "\*Vevent\*O"
Points to the \*LXEvent\*O that triggered the callback.
.LE 
.nL
.ne 12
.SS "Behavior"
Gadgets cannot have translations associated with them.
Because of this, a Gadget's behavior is determined by the Manager
widget into which the Gadget is placed.  If focus is on a Gadget,
events are passed to the Gadget by its Manager.
.nL
.ne 4
.SH RELATED INFORMATION
.na
\*LObject(3X)\*O,
\*LRectObj(3X)\*O,
\*LXmManager(3X)\*O, and
\*LXmScreen(3X)\*O.
.ad
.EQ
delim off
.EN
