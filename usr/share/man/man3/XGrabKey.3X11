.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XGrabKey.3X11,v $ $Revision: 1.2.6.2 $ (DEC) $Date: 1993/12/03 20:50:23 $
.\" 
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"     choose appropriate monospace font
.\"     the imagen conditional, 480,
.\"     may be changed to L if LB is too
.\"     heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.               \" Note End -- doug kraft 3/85
.ny0
.TH XGrabKey 3X11 "" "" "" "X11R5"
.SH NAME
XGrabKey, XUngrabKey \- grab keyboard keys
.SH SYNTAX
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
XGrabKey\^(\^\f2display\fP, \f2keycode\fP\^, \f2modifiers\fP\^, \f2grab_window\fP\^, \f2owner_events\fP\^, \f2pointer_mode\fP\^, 
.br
             \f2keyboard_mode\fP\^)
.br
      Display *\f2display\fP\^;
.br
      int \f2keycode\fP\^;
.br
      unsigned int \f2modifiers\fP\^;
.br
      Window \f2grab_window\fP\^;
.br
      Bool \f2owner_events\fP\^;
.br
      int \f2pointer_mode\fP\^, \f2keyboard_mode\fP\^;
.LP
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
XUngrabKey\^(\^\f2display\fP, \f2keycode\fP\^, \f2modifiers\fP\^, \f2grab_window\fP\^)
.br
      Display *\f2display\fP\^;
.br
      int \f2keycode\fP\^;
.br
      unsigned int \f2modifiers\fP\^;
.br
      Window \f2grab_window\fP\^;
.SH ARGUMENTS
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.IP \f2display\fP 1i
Specifies the connection to the X server.
.IP \f2grab_window\fP 1i
Specifies the grab window.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.IP \f2keyboard_mode\fP 1i
Specifies further processing of keyboard events.
You can pass 
.PN GrabModeSync 
or
.PN GrabModeAsync .
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.IP \f2keycode\fP 1i
Specifies the KeyCode or
.PN AnyKey .
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.IP \f2modifiers\fP 1i
Specifies the set of keymasks or
.PN AnyModifier .
The mask is the bitwise inclusive OR of the valid keymask bits.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.IP \f2owner_events\fP 1i
Specifies a Boolean value that indicates whether the keyboard events 
are to be reported as usual.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.IP \f2pointer_mode\fP 1i
Specifies further processing of pointer events.
You can pass 
.PN GrabModeSync 
or
.PN GrabModeAsync .
.SH DESCRIPTION
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
The
.PN XGrabKey
function establishes a passive grab on the keyboard.
In the future,
the keyboard is actively grabbed (as for
.PN XGrabKeyboard ),
the last-keyboard-grab time is set to the time at which the key was pressed
(as transmitted in the
.PN KeyPress
event), and the
.PN KeyPress
event is reported if all of the following conditions are true:
.IP \(bu 5
The keyboard is not grabbed and the specified key
(which can itself be a modifier key) is logically pressed
when the specified modifier keys are logically down,
and no other modifier keys are logically down.
.IP \(bu 5
Either the grab_window is an ancestor of (or is) the focus window,
or the grab_window is a descendant of the focus window and contains the pointer.
.IP \(bu 5
A passive grab on the same key combination does not exist
on any ancestor of grab_window.
.LP
The interpretation of the remaining arguments is as for 
.PN XGrabKeyboard .
The active grab is terminated automatically when the logical state of the
keyboard has the specified key released
(independent of the logical state of the modifier keys).
.LP
Note that the logical state of a device (as seen by client applications)
may lag the physical state if device event processing is frozen.
.LP
A modifiers argument of 
.PN AnyModifier
is equivalent to issuing the request for all
possible modifier combinations (including the combination of no
modifiers).  
It is not required that all modifiers specified have
currently assigned KeyCodes.
A keycode argument of 
.PN AnyKey
is equivalent to issuing
the request for all possible KeyCodes.
Otherwise, the specified keycode must be in
the range specified by min_keycode and max_keycode in the connection
setup, 
or a
.PN BadValue
error results.
.LP
If some other client has issued a 
.PN XGrabKey
with the same key combination on the same window, a 
.PN BadAccess 
error results.
When using
.PN AnyModifier
or 
.PN AnyKey ,
the request fails completely,
and a
.PN BadAccess 
error results (no grabs are established) 
if there is a conflicting grab for any combination.
.LP
.PN XGrabKey
can generate
.PN BadAccess ,
.PN BadValue ,
and
.PN BadWindow 
errors.
.LP
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
The
.PN XUngrabKey
function releases the key combination on the specified window if it was grabbed
by this client.
It has no effect on an active grab.
A modifiers of
.PN AnyModifier
is equivalent to issuing
the request for all possible modifier combinations
(including the combination of no modifiers).
A keycode argument of
.PN AnyKey
is equivalent to issuing the request for all possible key codes.
.LP
.PN XUngrabKey
can generate
.PN BadValue
and
.PN BadWindow 
error.
.SH DIAGNOSTICS
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.TP 1i
.PN BadAccess
A client attempted
to grab a key/button combination already grabbed by another client.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.TP 1i
.PN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XGrabKey.3X11,v 1.2.6.2 1993/12/03 20:50:23 Margaret_Barham Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XAllowEvents(3X11),
XGrabButton(3X11),
XGrabKeyboard(3X11),
XGrabPointer(3X11)
.br
\f2\*(xL\fP
.EQ
delim off
.EN
