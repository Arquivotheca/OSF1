.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: atoi.3,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1993/08/23 18:47:52 $
.\" 
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.\"
.TH atoi 3
.SH NAME
.PP
\*Latoi\*O, \*Latol\*O, \*Lstrtol\*O, \*Lstrtoul\*O \- Convert a character string to the specified integer data type
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <stdlib.h>\*O
.PP
\*Lint atoi(
.nL
        \*Lconst char *\*Vnptr\*L);\*O
.PP
\*Llong int atol(
.nL
        \*Lconst char *\*Vnptr\*L);\*O
.PP
\*Llong int strtol(
.nL
        \*Lconst char *\*Vnptr\*L,
.nL
        \*Lchar **\*Vendptr\*L,
.nL
        \*Lint \*Vbase\*L);\*O
.PP
\*Lunsigned long int strtoul(
.nL
        \*Lconst char *\*Vnptr\*L,
.nL
        \*Lchar **\*Vendptr\*L,
.nL
        \*Lint \*Vbase\*L);\*O
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vnptr\*O"
Points to the character string to convert.
.LI "\*Vendptr\*O"
Points to a pointer in which the function stores the
position in the string specified by the \*Vnptr\*O
parameter where a character is
found that is not a valid character for the purpose of this conversion.
.LI "\*Vbase\*O"
Specifies the radix to use for the conversion.
.LE
.SH DESCRIPTION
.PP
.iX "atoi function"
.iX "atol function"
.iX "strtol function"
.iX "strtoul function"
.iX "string" "converting character to integer"
.iX "string conversion" "character to integer"
.iX "character string" "converting to integer"
The \*Latoi(\|)\*O, \*Latol(\|)\*O, \*Lstrtol(\|)\*O, and \*Lstrtoul(\|)\*O
functions are used to convert a character string pointed to by
the \*Vnptr\*O parameter to an integer having a specified data type.
The \*Latoi(\|)\*O and \*Latol(\|)\*O functions convert a character
string containing decimal integer constants, but the \*Lstrtol(\|)\*O
.\"
.\" changed stroul to strtoul in following line as per tech review
.\"
and \*Lstrtoul(\|)\*O functions can convert a character string
containing a integer constant in octal, decimal, hexadecimal, or a
base specified by the \*Vbase\*O parameter.
.PP
The \*Latoi(\|)\*O
function converts the character string pointed to by the \*Vnptr\*O
parameter,
up to the first character inconsistent with the format of a decimal
integer, to an integer data type.  Leading white-space characters are ignored.
A call to this function is equivalent to
a call to \*Lstrtol(\*Vnptr\*L, (char**) NULL, 10)\*O.
The \*Lint\*O value of the input string is returned.
.PP
The \*Latol(\|)\*O
function converts the character string pointed to by the
\*Vnptr\*O parameter, up to the first character inconsistent with the format of a
decimal integer, to a long integer data type. Leading white-space
characters are ignored. A call to this function is equivalent to a
call to \*Lstrtol(\*Vnptr\*L, (char**) NULL, 10)\*O. The
\*Llong int\*O value of the input string is returned.
.PP
The \*Lstrtol(\|)\*O function converts the initial portion of the character
string pointed to by the \*Vnptr\*O parameter to a long integer
representation. The
input character string is first broken down into three parts:
.ML
.LI
White space -- an initial (possibly empty) sequence of spaces
(as specified by the \*Lisspace(\|)\*O function)
.LI
Subject sequence -- a sequence of characters that are valid in an
integer constant of the radix determined by the \*Vbase\*O parameter
.LI
Unrecognized characters -- final sequence of unrecognized character codes,
including the terminating null character
.LE
.PP
.\" Changed "integer" to "long integer" as per review by Neil O'Brien.  LW
If possible, the subject is then converted
to a long integer and the result is returned.
.PP
The \*Vbase\*O parameter can take values between 0 and 36.
.ML
.LI
If the \*Vbase\*O value is 0 (zero), the subject string can be a decimal,
octal, or hexadecimal integer constant. A
decimal constant begins with a nonzero digit, and consists of a
sequence of decimal digits. An octal constant consists of the prefix 0
(zero) optionally followed by a sequence of digits in the range 0
through 7. A hexadecimal constant consists of the prefix 0x or 0X
followed by a sequence consisting of decimal digits and the letters in
the range a (or A) to f (or F).
.LI
If the base value is
between 2 and 36, the subject string can be a sequence of digits and
letters a (or A) to z ( or Z ) that are used to represent an
integer in the specified base. Alphabetic characters represent digits
with an equivalent decimal value from 10 (for the letter A) to 35
(for the letter Z). The subject string can only have digits with a
value less than \*Vbase\*O and alphabetic characters with
equivalent values less than \*Vbase\*O.
For example, when the value of the \*Vbase\*O parameter is
20, only the following value assignments are converted:
.IP
.iS
Character   \*L0 1 2 3 4 5 6 7 8 9  A  B  C  D  E  F  G  H  I  J\*O
                                 \*La  b  c  d  e  f  g  h  i  j\*O
.iE
.IP
.iS
Value       \*L0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\*O
.iE
.LE
.PP
The subject string can
optionally be preceded by a + (plus sign) or - (minus sign),
but cannot include an integer suffix (such as \*LL\*O).
If the subject string is preceded by a - (minus sign), the converted
integer value has a negative value.
If the value of base is 16, the characters \*L0x\*O or \*L0X\*O may
optionally precede the sequence of letters or digits,
following the sign, if present.
.PP
The character string is parsed to skip the initial space characters (as
determined by the \*Lisspace(\|)\*O function). Any nonspace character is the
starting of a potential subject string that may form an integer in the base
specified by the \*Vbase\*O parameter. The subject sequence is defined to be the
longest initial substring that is of the expected form of long integer. Any
character that does not satisfy this expected form begins the final
sequence of unrecognized characters.  The \*Lstrtol(\|)\*O function sets
the location pointed to by the \*Vendptr\*O
parameter to point to this final sequence of unrecognized characters
except when \*Vendptr\*O is a null pointer.
.PP
The \*LLC_CTYPE\*O category of the locale controls what
characters are treated as spaces but does not effect the
interpretation of characters as part of the subject string. The
characters in the subject string are always treated as if the locale
was the C locale.
.PP
The \*Lstrtoul(\|)\*O function is the same as the \*Lstrtol(\|)\*O
function, except that \*Lstrtoul(\|)\*O returns an unsigned long integer.
.SH EXAMPLES
.PP
The following example
converts a character string to a signed long integer.
.PP
.oS
#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <errno.h>
#define LENGTH 40

main()
{
    char String[LENGTH], *endptr;
    long int    retval;

    (void)setlocale(LC_ALL, "");
    if (fgets(String, LENGTH, stdin) != NULL) {
        errno = 0;

        retval = strtol ( String, &endptr, 0 );

        if (retval == 0 && (errno != 0
                            || String == endptr)) {
            /* No conversion could be performed */
            printf("No conversion performed\en");
        } else if (errno !=0 && (retval == LONG_MAX
                                 || retval == LONG_MIN)) {
            /* Error handling */
        } else {
            /* retval contains long integer */
            printf("Integer in decimal is %d\en", retval);
        }
    }
}
.oE
.SH RETURN VALUES
.PP
The \*Latoi(\|)\*O function returns the converted value of an integer
if the expected form is found.  If no conversion could be performed, a
value of 0 (zero) is
returned. If the converted value is outside the range of representable values,
\*LINT_MAX\*O or \*LINT_MIN\*O is returned (according to the sign of the
value).
.PP
The \*Latol(\|)\*O and
\*Lstrtol(\|)\*O functions return the converted value of long
integer if the
expected form is found. If no conversion could be performed, a value
of 0 (zero) is
returned. If the converted value is outside the range of representable values,
\*LLONG_MAX\*O or \*LLONG_MIN\*O is returned (according to the sign of the
value).
.PP
The \*Lstrtoul(\|)\*O function returns the converted value of long
integer if the
expected form is found. If no conversion could be performed, a value
of 0 (zero) is
returned. If the converted value is outside the range of representable values,
\*LULONG_MAX\*O is returned.
.PP
In the \*Lstrtol(\|)\*O and \*Lstrtoul(\|)\*O functions,
if the \*Vendptr\*O parameter is not a null pointer, the function
stores a pointer to the final sequence of unrecognized characters in
the object pointed to by
\*Vendptr\*O except when the subject sequence is empty or invalid. In
this case, the function stores the \*Vnptr\*O pointer in the
object pointed to by the \*Vendptr\*O parameter.
.PP
Since these functions return
0 (zero), \*LINT_MIN\*O, \*LINT_MAX\*O,
\*LLONG_MIN\*O, \*LLONG_MAX\*O, and \*LULONG_MAX\*O
in the event of an
error and these values are also valid returns if the function
is successful, applications should set \*Lerrno\*O to 0 (zero)
before calling these
functions, and check \*Lerrno\*O after return
from the function.
If \*Lerrno\*O is nonzero, an error occurred.
.PP
Additionally, for the \*Lstrtol(\|)\*O and \*Lstrtoul(\|)\*O functions,
if 0 (zero) is returned, applications should check if
the \*Vendptr\*O parameter equals the \*Vnptr\*O parameter. In this
case, there was no valid subject string.
.SH ERRORS
.PP
If any of the following conditions occurs, the \*Latoi(\|)\*O,
\*Latol(\|)\*O, \*Lstrtol(\|)\*O, or \*Lstrtoul(\|)\*O function sets
\*Lerrno\*O to the corresponding value.
.VL 1i
.LI "[EINVAL]"
The \*Vbase\*O parameter has a value less than 0 or greater than 36.
.IP
If \*Vnptr\*O is NULL, the functions return 0 and do not set \*Lerrno\*O.
.LI "[ERANGE]"
The converted value is outside the range of representable values.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Latof\*O(3),
\*Lscanf\*O(3),
\*Lwcstol\*O(3),
\*Lwcstoul\*O(3).
.EQ
delim off
.EN
