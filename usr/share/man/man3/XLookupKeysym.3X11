.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XLookupKeysym.3X11,v $ $Revision: 1.2.6.2 $ (DEC) $Date: 1993/12/15 01:43:26 $
.\" 
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"     choose appropriate monospace font
.\"     the imagen conditional, 480,
.\"     may be changed to L if LB is too
.\"     heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.               \" Note End -- doug kraft 3/85
.ny0
.TH XLookupKeysym 3X11 "" "" "" "X11R5"
.SH NAME
XLookupKeysym, XRefreshKeyboardMapping, XLookupString, XRebindKeySym \- handle keyboard input events in Latin-1
.SH SYNTAX
KeySym XLookupKeysym(\^\f2key_event\fP, \f2index\fP\^)
.br
      XKeyEvent *\f2key_event\fP\^;
.br
      int \f2index\fP\^;
.LP
XRefreshKeyboardMapping(\^\f2event_map\fP\^)
.br
      XMappingEvent *\f2event_map\fP\^;
.LP
int XLookupString(\^\f2event_struct\fP, \f2buffer_return\fP,\
 \f2bytes_buffer\fP, \f2keysym_return\fP, \f2status_in_out\fP\^)
.br
      XKeyEvent *\f2event_struct\fP\^;
.br
      char *\f2buffer_return\fP\^;
.br
      int \f2bytes_buffer\fP\^;
.br
      KeySym *\f2keysym_return\fP\^;
.br
      XComposeStatus *\f2status_in_out\fP\^;
.LP
XRebindKeysym(\^\f2display\fP, \f2keysym\fP, \f2list\fP, \f2mod_count\fP, \f2string\fP, \f2num_bytes\fP\^)
.br
      Display *\f2display\fP\^;
.br
      KeySym \f2keysym\fP\^;
.br
      KeySym \f2list\fP\^[\^]\^;
.br
      int \f2mod_count\fP\^;
.br
      unsigned char *\f2string\fP\^;
.br
      int \f2num_bytes\fP\^;
.SH ARGUMENTS
.IP \f2buffer_return\fP 1i
Returns the translated characters.
.IP \f2bytes_buffer\fP 1i
Specifies the length of the buffer.
No more than bytes_buffer of translation are returned.
.IP \f2num_bytes\fP 1i
Specifies the number of bytes in the string argument.
.IP \f2display\fP 1i
Specifies the connection to the X server.
.IP \f2event_map\fP 1i
Specifies the mapping event that is to be used.
.IP \f2event_struct\fP 1i
Specifies the key event structure to be used.
You can pass
.PN XKeyPressedEvent
or
.PN XKeyReleasedEvent .
.IP \f2index\fP 1i
Specifies the index into the KeySyms list for the event's KeyCode.
.IP \f2key_event\fP 1i
Specifies the 
.PN KeyPress
or
.PN KeyRelease
event.
.IP \f2keysym\fP 1i
Specifies the KeySym that is to be searched for.
.IP \f2keysym_return\fP 1i
Returns the KeySym computed from the event if this argument is not NULL.
.IP \f2list\fP 1i
Specifies the KeySyms to be used as modifiers.
.IP \f2mod_count\fP 1i
Specifies the number of modifiers in the modifier list.
.IP \f2status_in_out\fP 1i
Specifies or returns the 
.PN XComposeStatus 
structure or NULL.
.IP \f2string\fP 1i
Specifies the string that is copied and will be returned by 
.PN XLookupString .
.SH DESCRIPTION
The
.PN XLookupKeysym
function uses a given keyboard event and the index you specified to return
the KeySym from the list that corresponds to the KeyCode member in the
.PN XKeyPressedEvent
or
.PN XKeyReleasedEvent
structure.
If no KeySym is defined for the KeyCode of the event,
.PN XLookupKeysym
returns
.PN NoSymbol .
.LP
The
.PN XRefreshKeyboardMapping
function refreshes the stored modifier and keymap information.
You usually call this function when a
.PN MappingNotify
event with a request member of
.PN MappingKeyboard
or
.PN MappingModifier
occurs.
The result is to update Xlib's knowledge of the keyboard.
.LP
The
.PN XLookupString
function translates a key event to a KeySym and a string.
The KeySym is obtained by using the standard interpretation of the Shift,
Lock, and group modifiers as defined in the X Protocol specification.
If the KeySym has been rebound (see
.PN XRebindKeysym ),
the bound string will be stored in the buffer.
Otherwise, the KeySym is mapped, if possible, to an ISO Latin-1 character
or (if the Control modifier is on) to an ASCII control character,
and that character is stored in the buffer.
.PN XLookupString
returns the number of characters that are stored in the buffer.
.LP
If present (non-NULL),
the
.PN XComposeStatus
structure records the state,
which is private to Xlib,
that needs preservation across calls to
.PN XLookupString
to implement compose processing.
The creation of
.PN XComposeStatus
structures is implementation dependent;
a portable program must pass NULL for this argument.
.LP
The
.PN XRebindKeysym
function can be used to rebind the meaning of a KeySym for the client.
It does not redefine any key in the X server but merely
provides an easy way for long strings to be attached to keys.
.PN XLookupString
returns this string when the appropriate set of
modifier keys are pressed and when the KeySym would have been used for
the translation.
No text conversions are performed;
the client is responsible for supplying appropriately encoded strings.
Note that you can rebind a KeySym that may not exist.
.SH "SEE ALSO"
XButtonEvent(3X11),
XMapEvent(3X11),
XStringToKeysym(3X11)
.br
\f2\*(xL\fP
.EQ
delim off
.EN
