.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: MrmRegisterNamesInHierarchy.3X,v $ $Revision: 3.2.4.5 $ (DEC) $Date: 1993/12/14 17:45:44 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH MrmRegisterNamesInHierarchy 3X "" "" "" "OSF/Motif"
.SH NAME
\*LMrmRegisterNamesInHierarchy\*O \- Registers the values associated with the names referenced in UIL within a single hierarchy (for example, UIL callback function names or UIL identifier names)
.SH SYNOPSIS
.sS
.iS
\&#include <Mrm/MrmPublic.h>
.sp \n(PDu
Cardinal MrmRegisterNamesInHierarchy(\*Vhierarchy_id, register_list, 
                         register_count\*L)
.ta .5i 2.5i
	MrmHierarchy	\*Vhierarchy_id\*L;
	MrmRegisterArglist	\*Vregister_list\*L;
	MrmCount	\*Vregister_count\*L;
.iE
.sE
.SH DESCRIPTION
.iX "MrmRegisterNamesInHierarchy"
.iX "uil functions" "MrmRegisterNamesInHierarchy"
.iX "MRM function" "MrmRegisterNamesInHierarchy"
.iX "MrmRegisterNamesInHierarchy" "definition"
The
\*LMrmRegisterNamesInHierarchy\*O
function
.iX "MrmRegisterNamesInHierarchy" "description"
registers a vector of names and associated values
for access in MRM.
The values can be callback functions, pointers
to user-defined data, or any other values.
The information provided is used to resolve symbolic references
occurring in UID files to their run-time
values.For callbacks, this information
provides the procedure address required
by the Motif Toolkit.
For names used as identifiers in UIL, this information
provides any
run-time mapping the application needs.
.PP 
This function is similar to
\*LMrmRegisterNames\*O,
except that the scope of the names registered by
\*LMrmRegisterNamesInHierarchy\*O
is limited to the hierarchy specified by
\*Vhierarchy_id\*O,
whereas the names registered by
\*LMrmRegisterNames\*O
have
.ne 8
global scope.
When MRM looks up a name, it first tries to find the name among those
registered for the given hierarchy.
If that lookup fails, it tries to find the name among those registered
globally.
.VL 1.2i 
.LI "\*Vhierarchy_id\*O"
Specifies the hierarchy with which the names are to be associated.
.LI "\*Vregister_list\*O"
Specifies a list of name/value pairs for the names to be registered.
Each name is a case-sensitive, NULL-terminated ASCII string.
Each value is a 32-bit quantity, interpreted as a procedure address if
the name is a callback function, and uninterpreted otherwise.
.LI "\*Vregister_count\*O"
Specifies the number of entries in
\*Vregister_list\*O.
.LE 
.PP 
The names in the list are case-sensitive.
The list can be either ordered or unordered.
.PP 
Callback functions registered through
\*LMrmRegisterNamesInHierarchy\*O
can be either
regular or creation callbacks.
Regular callbacks have declarations determined by Motif Toolkit and user
requirements.
Creation callbacks have the same format as any other callback:
.sS
.iS
void CallBackProc(\*Vwidget_id, tag, callback_data\*L)
.ta .5i 2.5i
	Widget	*\*Vwidget_id\*L;
	Opaque	\*Vtag\*L;
	XmAnyCallbackStruct	*\*Vcallback_data\*L;
.iE
.sE
.VL 1.5i 
.LI "\*Vwidget_id\*O"
Specifies the widget ID associated with the widget performing the
callback (as in any callback function).
.LI "\*Vtag\*O"
Specifies the tag value (as in any callback function).
.LI "\*Vcallback_data\*O"
Specifies a widget-specific data structure.
This data structure has a minimum of two members: event and reason.
The reason member is always set to
\*LMrmCR_CREATE\*O.
.LE 
.PP 
Note that the widget name and parent are available from the widget
record accessible through
\*Vwidget_id\*O.
.SH RETURN VALUE
.iX "MrmSUCCESS"
.iX "MrmFAILURE"
This function returns one of these status return constants:
.VL 1.5i 
.LI "\*LMrmSUCCESS\*O"
The function executed successfully.
.LI "\*LMrmFAILURE\*O"
The function failed.
.LE
.EQ
delim off
.EN
