.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: drand48.3,v $ $Revision: 3.2.7.3 $ (DEC) $Date: 1994/01/13 16:19:11 $
.\"
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.EQ
delim $$
.EN
.TH drand48 3
.SH NAME
.PP
\*Ldrand48\*O, \*Ldrand48_r\*O, \*Lerand48\*O, \*Lerand48_r\*O, \*Llrand48\*O, \*Llrand48_r\*O, \*Lnrand48\*O, \*Lnrand48_r\*O, \*Lmrand48\*O, \*Lmrand48_r\*O, \*Ljrand48\*O, \*Ljrand48_r\*O, \*Lsrand48\*O, \*Lsrand48_r\*O, \*Lseed48\*O, \*Lseed48_r\*O, \*Llcong48\*O, \*Llcong48_r\*O \- Generate uniformly distributed pseudorandom number sequences
.SH LIBRARY
.PP
\*OStandard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <stdlib.h>\*O
.sp 0.4ÿv
\*Ldouble drand48(void);\*O
.sp 0.4ÿv
\*Lint drand48_r(
.nL
	\*Lstruct drand48_data *\*Vdp\*O,
.nL
	\*Ldouble *\*Vrandval\*L);
.sp 0.4ÿv
\*Ldouble erand48(\*O
.nL
	\*Lunsigned short \*Vxsubi\*L[3]);\*L
.sp 0.4ÿv
\*Lint erand48_r(\*O
.nL
	\*Lunsigned short \*Vxsubi\*L[3],
.nL
	\*Lstruct drand48_data *\*Vdp\*O,
.nL
	\*Ldouble *\*Vrandval\*L);
.sp 0.4ÿv
\*Llong jrand48(\*O
.nL
	\*Lunsigned short \*Vxsubi\*L[3]);\*L
.sp 0.4ÿv
\*Lint jrand48_r(\*O
.nL
	\*Lunsigned short \*Vxsubi\*L[3],\*L
.nL
	\*Lstruct drand48_data *\*Vdp\*O,
.nL
	\*Llong *\*Vrandval\*L);
.sp 0.4ÿv
\*Lvoid lcong48(\*O
.nL
	\*Lunsigned short \*Vparam\*L[7]);\*L
.sp 0.4ÿv
\*Lint lcong48_r(\*O
.nL
	\*Lunsigned short \*Vparam\*L[7],\*L
.nL
	\*Lstruct drand48_data *\*Vdp\*L);
.sp 0.4ÿv
\*Llong lrand48(void);\*O
.sp 0.4ÿv
\*Lint lrand48_r(
.nL
	\*Lstruct drand48_data *\*Vdp\*O,
.nL
	\*Llong *\*Vrandval\*L);
.sp 0.4ÿv
\*Llong mrand48(void);\*O
.sp 0.4ÿv
\*Lint mrand48_r(
.nL
	\*Lstruct drand48_data *\*Vdp\*O,
.nL
	\*Llong *\*Vrandval\*L);
.sp 0.4ÿv
\*Llong nrand48(\*O
.nL
	\*Lunsigned short \*Vxsubi\*L[3]);\*L
.sp 0.4ÿv
\*Lint nrand48_r(\*O
.nL
	\*Lunsigned short \*Vxsubi\*L[3],
.nL
	\*Lstruct drand48_data *\*Vdp\*O,
.nL
	\*Llong *\*Vrandval\*L);
.sp 0.4ÿv
\*Lunsigned short \(**seed48(\*O
.nL
	\*Lunsigned short \*Vseed_16v\*L[3]);\*L
.sp 0.4ÿv
\*Lint seed48_r(\*O
.nL
	\*Lunsigned short \*Vseed_16v\*L[3],\*L
.nL
	\*Lstruct drand48_data *\*Vdp\*L);
.sp 0.4ÿv
\*Lvoid srand48 (\*O
.nL
	\*Llong \*Vseed_val\*O);\*L
.sp 0.4ÿv
\*Lint srand48_r(\*O
.nL
	\*Llong \*Vseed_val\*O,\*L
.nL
	\*Lstruct drand48_data *\*Vdp\*L);
.\" .iE
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vxsubi"
\*OSpecifies an \*Oarray \*Oof three shorts, which,
when concatenated together, form a 48-bit integer.
.LI "\*Vseed_val"
\*OSpecifies the initialization value to begin
randomization. Changing this value changes the randomization pattern.
.LI "\*Vseed_16v"
\*OSpecifies another seed value; an array of three
unsigned shorts that form a 48-bit seed value.
.LI "\*Vparam"
\*OSpecifies an array that in turn specifies the initial
$X sub i $, the multiplier value \*Va\*O,
and the addend value \*Vc\*O.
.LI "\*Vdp\*O"
Points to a structure which contains data for the reentrant
routines.
.LI "\*Vrandval\*O"
Points at the returned nonnegative pseudorandom numbers.
.LE
.SH DESCRIPTION
.PP
.iX "pseudo-random numbers" "generator functions"
.iX "drand48 function"
.iX "erand48 function"
.iX "lrand48 function"
.iX "nrand48 function"
.iX "mrand48 function"
.iX "jrand48 function"
.iX "srand48 function"
.iX "seed48 function"
.iX "lcong48 function"
.iX "drand48_r function"
.iX "erand48_r function"
.iX "lrand48_r function"
.iX "nrand48_r function"
.iX "mrand48_r function"
.iX "jrand48_r function"
.iX "srand48_r function"
.iX "seed48_r function"
.iX "lcong48_r function"
.PP
This family of functions generates pseudorandom numbers using
the linear congruential algorithm and 48-bit integer arithmetic.
.PP
The \*Ldrand48(\|)\*O and \*Lerand48(\|)\*O functions
return nonnegative, double-precision, floating-point values uniformly
distributed over the range of \*Vy\*O values such that
0 \(<= \*Vy\*O < 1.0.
.PP
The \*Llrand48(\|)\*O and \*Lnrand48(\|)\*O functions
return nonnegative long integers uniformly distributed over the range
of \*Vy\*O values such that 0 \(<= \*Vy\*O < 2\u\s-231\d\s0.
.PP
The \*Lmrand48(\|)\*O and \*Ljrand48(\|)\*O functions
return signed long integers uniformly distributed over the range of \*Vy\*O
values such that -2\u\s-231\d\s0 \(<= \*Vy\*O < 2\u\s-231\d\s0.
.PP
The \*Lsrand48(\|)\*O, \*Lseed48(\|)\*O, and \*Llcong48(\|)\*O
functions initialize the random-number generator.  Programs
should invoke one of them before calling the
\*Ldrand48(\|)\*O, \*Llrand48(\|)\*O, or the \*Lmrand48(\|)\*O functions.
(Although it is not recommended practice, constant default initializer
values are supplied automatically if the \*Ldrand48(\|)\*O, \*Llrand48(\|)\*O,
or \*Lmrand48(\|)\*O functions are called without first calling an
initialization function.) The \*Lerand48(\|)\*O, \*Lnrand48(\|)\*O,
and \*Ljrand48(\|)\*O functions do not require that
an initialization function be called first.
.PP
All the functions work by generating a sequence of 48-bit integer
values, $X sub i $, according to the linear congruential formula:
.oS
$X sub{n+1}~=~(aX sub n^+^c) sub{roman mod~m}~~~~~~~~n>=~0$
.oE
.PP
The parameter \*Vm\*O equals $2 sup 48$; hence 48-bit integer arithmetic is
performed.
Unless
\*Llcong48(\|)\*O
has been invoked, the multiplier value $a$ and the addend value $c$
are given by
.PP
.rS
$a~mark =~roman "5DEECE66D"^sub 16~=~roman 273673163155^sub 8$
.nL
$c~lineup =~roman B^sub 16~=~roman 13^sub 8 $
.rE
.PP
The values returned by the \*Ldrand48(\|)\*O, \*Lerand48(\|)\*O,
\*Llrand48(\|)\*O, \*Lnrand48(\|)\*O, \*Lmrand48(\|)\*O, and
\*Ljrand48(\|)\*O functions are computed by first
generating the next 48-bit $X sub i $ in the sequence. Then the appropriate
bits, according to the type of data item to be returned,
are copied from the high-order (most-significant) bits of $X sub i $
and transformed into the returned value.
.PP
The \*Ldrand48(\|)\*O, \*Llrand48(\|)\*O, and \*Lmrand48(\|)\*O functions
store the last 48-bit $X sub i $
generated into an internal buffer, which is why they must be initialized
prior to being invoked.
.PP
The \*Lerand48(\|)\*O, \*Lnrand48(\|)\*O, and \*Ljrand48(\|)\*O functions
require that the calling program provide
storage for the successive $X sub i $ values in the array pointed
to by the \*Vxsubi\*O parameter.  This is why these routines do
not have to be initialized; the calling program merely has to place
the desired initial value of $X sub i $ into the array and pass it
as a parameter.
.PP
By using different parameters, the \*Lerand48(\|)\*O,
\*Lnrand48(\|)\*O, and \*Ljrand48(\|)\*O functions allow separate
modules of a large program to generate several independent sequences
of pseudorandom numbers; that is, the sequence of numbers
that one module generates does not depend upon how many times the
functions are called by other modules.
.PP
The initializer function \*Lsrand48(\|)\*O sets the high-order
32 bits of $X sub i $ to the LONG_BIT bits contained in its parameter.
The low-order 16 bits of $X sub i $ are set to the arbitrary value
$roman 330E sub 16 .$
.PP
The initializer function \*Lseed48(\|)\*O sets the value of
$X sub i $ to the 48-bit value specified in the array pointed
to by the \*Vseed_16v\*O
parameter. In addition, \*Lseed48(\|)\*O returns a pointer to
a 48-bit internal buffer that contains the previous value of $X sub i $
which is used only by \*Lseed48(\|)\*O. The returned pointer allows
you to restart the pseudorandom sequence at a given point. Use the
pointer to copy the previous $X sub i $ value into a temporary array.
To resume where the original sequence left off, you can
call \*Lseed48(\|)\*O with a pointer to this array.
.PP
The \*Llcong48(\|)\*O function specifies the initial $X sub i $
value, the multiplier value \*Va\*O, and the addend value \*Vc\*O.
The \*Vparam\*O array elements \*Vparam\*O[0-2] specify
$X sub i $, \*Vparam\*O[3-5] specify the multiplier \*Va\*O,
and \*Vparam\*O[6] specifies the 16-bit addend \*Vc\*O.
After \*Llcong48(\|)\*O has been called, a subsequent call to either
\*Lsrand48(\|)\*O or \*Lseed48(\|)\*O restores the standard \*Va\*O and \*Vc\*O
as specified previously.
.PP
The \*Ldrand48_r(\|)\*O, \*Lerand48_r(\|)\*O,
\*Llrand48_r(\|)\*O, \*Lnrand48_r(\|)\*O,
\*Lmrand48_r(\|)\*O, \*Ljrand48_r(\|)\*O,
\*Lsrand48_r(\|)\*O, \*Lseed48_r(\|)\*O, and
\*Llcong48_r(\|)\*O functions are the reentrant versions of
\*Ldrand48(\|)\*O, \*Lerand48(\|)\*O,
\*Llrand48(\|)\*O, \*Lnrand48(\|)\*O,
\*Lmrand48(\|)\*O, \*Ljrand48(\|)\*O,
\*Lsrand48(\|)\*O, \*Lseed48(\|)\*O, and
\*Llcong48(\|)\*O, respectively.
.ig ++
Upon success, these routines return
the following, and a 0 (zero).  Both \*Ldrand48_r(\|)\*O and
\*Lerand48_r(\|)\*O
functions return a pointer (\*Vrandval\*O) at the returned double
value.  Both \*Lmrand48_r(\|)\*O and
\*Ljrand48_r(\|)\*O functions return a pointer (\*Vrandval\*O) at the
returned long value.  The \*Llcong48_r(\|)\*O, \*Lseed48_r(\|)\*O,
and
\*Lsrand48_r(\|)\*O functions initialize the DRAND48D
structure which is used by the other functions.  All
three functions
do not return anything.
The \*Llrand48_r(\|)\*O and \*Lrand48_r(\|)\*O functions
return a pointer (\*Vrandval\*O) at the returned long
value.  Upon error,
The \*Ldrand48_r(\|)\*O, \*Lerand48_r(\|)\*O,
\*Llrand48_r(\|)\*O, \*Lnrand48_r(\|)\*O,
\*Lmrand48_r(\|)\*O, \*Ljrand48_r(\|)\*O,
\*Lsrand48_r(\|)\*O, \*Lseed48_r(\|)\*O, and
\*Llcong48_r(\|)\*O functions return -1 and may set \*Lerrno\*O to
[EFAULT].
.++
.SH NOTES
.PP
Note that if the reentrant initialization functions are not used prior
to calling the random number generators, the \*Linit\*O field of the
\*Lstruct drand48_data\*O structure (passed to the random number
generator functions) must be cleared prior to calling them.
.PP
Note also, that the 48-bit internal buffer that used to be
returned by the \*Lseed48(\|)\*O function is now placed in the
DRAND48D structure in the \*Llastx\*O field by the \*Lseed48_r(\|)\*O
function.
.PP
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Trial use.
.LE
.PP
.SH RETURN VALUES
.PP
The
\*Ldrand48(\|)\*O
and
\*Lerand48(\|)\*O
functions return nonnegative, double-precision, floating-point
values.  The
\*Llrand48(\|)\*O
and
\*Lnrand48(\|)\*O
functions return signed long integers uniformly distributed over the
range 0 \(<= \*Vy\*O < 2\u\s-231\d\s0.
The
\*Lmrand48(\|)\*O
and
\*Ljrand48(\|)\*O
functions return signed long integers uniformly distributed over the
range -2\u\s-231\d\s0 \(<= \*Vy\*O < 2\u\s-231\d\s0.
.PP
The
\*Lseed48(\|)\*O
function returns a pointer to a 48-bit internal buffer.
.PP
The
\*Llcong48(\|)\*O
and
\*Lsrand48(\|)\*O
functions do not return a value.
.PP
Upon success, both the \*Ldrand48_r(\|)\*O and
\*Lerand48_r(\|)\*O
functions have \*Vrandval\*O point at the returned double
value, and return a value of 0 (zero).  Upon success, both the
\*Lmrand48_r(\|)\*O and
\*Ljrand48_r(\|)\*O functions have \*Vrandval\*O at the
returned long value, and return a value of 0 (zero).  Upon success, the
\*Llcong48_r(\|)\*O, \*Lseed48_r(\|)\*O,
and
\*Lsrand48_r(\|)\*O
return a value of 0 (zero).
The \*Llrand48_r(\|)\*O and \*Lrand48_r(\|)\*O functions
have \*Vrandval\*O point at the returned long
value, and return a value of 0 (zero).  Upon error, the
reentrant functions return
a value of -1, and set \*Lerrno\*O to [EFAULT].
.SH ERRORS
.PP
Upon error, the \*Ldrand48_r(\|)\*O, \*Lerand48_r(\|)\*O,
\*Llrand48_r(\|)\*O, \*Lnrand48_r(\|)\*O,
\*Lmrand48_r(\|)\*O, \*Ljrand48_r(\|)\*O,
\*Lsrand48_r(\|)\*O, \*Lseed48_r(\|)\*O, and
\*Llcong48_r(\|)\*O functions return a value of -1, and \*Lerrno\*O
will be set to the following value:
.VL 1i
.LI "[EFAULT]"
The \*Vdp\*O, \*Vrandval\*O, \*Vxsubi\*O, \*Vparam\*O, or
\*Vseed_16v\*O value is invalid.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lrand(3)\*O,
\*Lrandom(3)\*O.
.EQ
delim off
.EN
.iX "pseudo-random numbers" "generator functions"
.iX "drand48 function"
.iX "erand48 function"
.iX "lrand48 function"
.iX "nrand48 function"
.iX "mrand48 function"
.iX "jrand48 function"
.iX "srand48 function"
.iX "seed48 function"
.iX "lcong48 function"
.iX "drand48_r function"
.iX "erand48_r function"
.iX "lrand48_r function"
.iX "nrand48_r function"
.iX "mrand48_r function"
.iX "jrand48_r function"
.iX "srand48_r function"
.iX "seed48_r function"
.iX "lcong48_r function"
.EQ
delim off
.EN
