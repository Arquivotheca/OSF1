.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XmCascadeButton.3X,v $ $Revision: 3.2.4.4 $ (DEC) $Date: 1993/10/25 18:51:17 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH XmCascadeButton 3X "" "" "" "OSF/Motif"
.SH NAME
\*LXmCascadeButton\*O \- The CascadeButton widget class
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/CascadeB.h>
.iE
.sE
.SH DESCRIPTION
.iX "XmCascadeButton"
.iX "widget class" "CascadeButton"
CascadeButton links two MenuPanes or a MenuBar to a MenuPane.
.PP 
It is used in menu systems and must have a RowColumn parent
with its \*LXmNrowColumnType\*O resource set to \*LXmMENU_BAR\*O,
\*LXmMENU_POPUP\*O or \*LXmMENU_PULLDOWN\*O.
.PP 
It is the only widget that can have a Pulldown MenuPane attached to it as
a submenu.  The submenu is displayed when this widget is activated within
a MenuBar, a PopupMenu, or a PulldownMenu.  Its visuals can
include a label or pixmap and a cascading indicator when it is in a
Popup or Pulldown MenuPane; or, it can include only a label or a pixmap
when it is in a MenuBar.
.PP 
The default behavior associated with a CascadeButton depends on the type
of menu system in which it resides.
By default, \*LBSelect\*O controls the behavior of the CascadeButton.
In addition, \*LBMenu\*O controls the behavior of the CascadeButton if
it resides in a PopupMenu system.
The actual mouse button used is determined by its RowColumn parent.
.PP 
A CascadeButton's visuals differ from most other button gadgets.  When the
button
becomes armed, its visuals change from a 2-D to a 3-D look, and it displays
the submenu that has been attached
to it.  If no submenu is attached, it simply changes its visuals.
.PP 
When a CascadeButton within a Pulldown or Popup MenuPane
is armed as the result of the user
moving the mouse pointer into the widget, it does not immediately display its
submenu.  Instead, it waits a short amount of time to see if the arming
was temporary (that is, the user was simply passing through the widget), or
whether the user really wanted the submenu posted.  This time delay is
configurable via \*LXmNmappingDelay\*O.
.PP 
CascadeButton provides a single mechanism for
activating the widget from the keyboard.  This mechanism is referred to as
a keyboard mnemonic.
If a mnemonic has been
specified for the widget, the user may activate the CascadeButton
by simply typing the mnemonic while the CascadeButton is visible.
If the CascadeButton is in a MenuBar and the MenuBar does not have the
focus, the \*LMAlt\*O modifier must be
pressed with the mnemonic.
Mnemonics are typically used to interact with a menu
via the keyboard interface.
.PP 
If in a Pulldown or Popup MenuPane and there is a submenu attached, the
\*LXmNmarginBottom\*O, \*LXmNmarginLeft\*O, \*LXmNmarginRight\*O, and
\*LXmNmarginTop\*O resources may
enlarge to accommodate \*LXmNcascadePixmap\*O.
\*LXmNmarginWidth\*O defaults
to 6 if this
resource is in a MenuBar; otherwise, it takes Label's default, which
is 2.
.SS "Classes"
CascadeButton inherits behavior and resources from \*LCore\*O,
\*LXmPrimitive\*O, and \*LXmLabel\*O classes.
.PP 
The class pointer is \*LxmCascadeButtonWidgetClass\*O.
.PP 
The class name is \*LXmCascadeButton\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmCascadeButton Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNactivateCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNcascadePixmap	dynamic	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNcascadingCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNmappingDelay	180 ms	CSG
\ \ \ \ \ \ XmCMappingDelay	\ \ \ \ \ \ \ int
_
XmNsubMenuId	NULL	CSG
\ \ \ \ \ \ XmCMenuWidget	\ \ \ \ \ \ \ Widget
_
.TE
.\" NROFF HACK END
.VL  
.LI "\*LXmNactivateCallback\*O"
Specifies the list of callbacks that is called
when the user activates the CascadeButton widget,
and there is no submenu attached to pop up.  The activation occurs by
releasing a mouse button
or by typing the mnemonic associated with the widget.  The specific mouse
button depends on information in the RowColumn parent.  The reason
sent by the callback is \*LXmCR_ACTIVATE\*O.
.LI "\*LXmNcascadePixmap\*O"
Specifies the cascade pixmap displayed on one end of the widget when
a CascadeButton is used within a Popup or Pulldown MenuPane and a submenu
is attached.
The Label class resources \*LXmNmarginBottom\*O, \*LXmNmarginLeft\*O,
\*LXmNmarginRight\*O, and \*LXmNmarginTop\*O may be modified to ensure
that room is left for the cascade pixmap.
The default cascade pixmap is an arrow pointing to the side of the menu
where the submenu will appear.
.LI "\*LXmNcascadingCallback\*O"
Specifies the list of callbacks that is called
just prior to the mapping of the submenu associated with
CascadeButton.  The reason sent by the callback is \*LXmCR_CASCADING\*O.
.LI "\*LXmNmappingDelay\*O"
Specifies the amount of time, in milliseconds, between when a CascadeButton
becomes armed and when it maps its submenu.  This delay is used only when
the widget is within a Popup or Pulldown MenuPane.
The value must not be negative.
.LI "\*LXmNsubMenuId\*O"
Specifies the widget ID for the Pulldown MenuPane to be associated with
this CascadeButton.  The specified MenuPane is displayed
when the CascadeButton becomes armed.  The MenuPane must have been created
with the appropriate parentage depending on the type of menu used.  See
\*LXmCreateMenuBar(3X)\*O, \*LXmCreatePulldownMenu(3X)\*O, and
\*LXmCreatePopupMenu(3X)\*O for more information on the menu systems.
.LE
.SS "Inherited Resources"
CascadeButton inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.PP
.wH .in 0 
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmLabel Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaccelerator	NULL	N/A
\ \ \ \ \ \ XmCAccelerator	\ \ \ \ \ \ \ String
_
XmNacceleratorText	NULL	N/A
\ \ \ \ \ \ XmCAcceleratorText	\ \ \ \ \ \ \ XmString
_
XmNalignment	dynamic	CSG
\ \ \ \ \ \ XmCAlignment	\ \ \ \ \ \ \ unsigned char
_
XmNfontList	dynamic	CSG
\ \ \ \ \ \ XmCFontList	\ \ \ \ \ \ \ XmFontList
_
XmNlabelInsensitivePixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCLabelInsensitivePixmap	\ \ \ \ \ \ \ Pixmap
_
XmNlabelPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCLabelPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNlabelString	dynamic	CSG
\ \ \ \ \ \ XmCXmString	\ \ \ \ \ \ \ XmString
_
XmNlabelType	XmSTRING	CSG
\ \ \ \ \ \ XmCLabelType	\ \ \ \ \ \ \ unsigned char
_
XmNmarginBottom	dynamic	CSG
\ \ \ \ \ \ XmCMarginBottom	\ \ \ \ \ \ \ Dimension
_
XmNmarginHeight	2	CSG
\ \ \ \ \ \ XmCMarginHeight	\ \ \ \ \ \ \ Dimension
_
XmNmarginLeft	0	CSG
\ \ \ \ \ \ XmCMarginLeft	\ \ \ \ \ \ \ Dimension
_
XmNmarginRight	dynamic	CSG
\ \ \ \ \ \ XmCMarginRight	\ \ \ \ \ \ \ Dimension
_
XmNmarginTop	dynamic	CSG
\ \ \ \ \ \ XmCMarginTop	\ \ \ \ \ \ \ Dimension
_
XmNmarginWidth	dynamic	CSG
\ \ \ \ \ \ XmCMarginWidth	\ \ \ \ \ \ \ Dimension
_
.wH .tH
XmNmnemonic	NULL	CSG
\ \ \ \ \ \ XmCMnemonic	\ \ \ \ \ \ \ KeySym
_
XmNmnemonicCharSet	XmFONTLIST_DEFAULT_TAG	CSG
\ \ \ \ \ \ XmCMnemonicCharSet	\ \ \ \ \ \ \ String
_
XmNrecomputeSize	True	CSG
\ \ \ \ \ \ XmCRecomputeSize	\ \ \ \ \ \ \ Boolean
_
XmNstringDirection	dynamic	CSG
\ \ \ \ \ \ XmCStringDirection	\ \ \ \ \ \ \ XmStringDirection
_
.TE
.\" NROFF HACK END
.wH .in  
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmPrimitive Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNbottomShadowColor	dynamic	CSG
\ \ \ \ \ \ XmCBottomShadowColor	\ \ \ \ \ \ \ Pixel
_
XmNbottomShadowPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCBottomShadowPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNforeground	dynamic	CSG
\ \ \ \ \ \ XmCForeground	\ \ \ \ \ \ \ Pixel
_
XmNhelpCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNhighlightColor	dynamic	CSG
\ \ \ \ \ \ XmCHighlightColor	\ \ \ \ \ \ \ Pixel
_
XmNhighlightOnEnter	False	CSG
\ \ \ \ \ \ XmCHighlightOnEnter	\ \ \ \ \ \ \ Boolean
_
XmNhighlightPixmap	dynamic	CSG
\ \ \ \ \ \ XmCHighlightPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNhighlightThickness	0	CSG
\ \ \ \ \ \ XmCHighlightThickness	\ \ \ \ \ \ \ Dimension
_
.wH .tH
XmNnavigationType	XmNONE	CSG
\ \ \ \ \ \ XmCNavigationType	\ \ \ \ \ \ \ XmNavigationType
_
XmNshadowThickness	2	CSG
\ \ \ \ \ \ XmCShadowThickness	\ \ \ \ \ \ \ Dimension
_
XmNtopShadowColor	dynamic	CSG
\ \ \ \ \ \ XmCTopShadowColor	\ \ \ \ \ \ \ Pixel
_
XmNtopShadowPixmap	dynamic	CSG
\ \ \ \ \ \ XmCTopShadowPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNtraversalOn	dynamic	G
\ \ \ \ \ \ XmCTraversalOn	\ \ \ \ \ \ \ Boolean
_
XmNunitType	dynamic	CSG
\ \ \ \ \ \ XmCUnitType	\ \ \ \ \ \ \ unsigned char
_
XmNuserData	NULL	CSG
\ \ \ \ \ \ XmCUserData	\ \ \ \ \ \ \ XtPointer
_
.TE
.\" NROFF HACK END
.PP
.wH .in 0 
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Core Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaccelerators	dynamic	CSG
\ \ \ \ \ \ XmCAccelerators	\ \ \ \ \ \ \ XtAccelerators
_
XmNancestorSensitive	dynamic	G
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNbackground	dynamic	CSG
\ \ \ \ \ \ XmCBackground	\ \ \ \ \ \ \ Pixel
_
XmNbackgroundPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderColor	XtDefaultForeground	CSG
\ \ \ \ \ \ XmCBorderColor	\ \ \ \ \ \ \ Pixel
_
XmNborderPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderWidth	0	CSG
\ \ \ \ \ \ XmCBorderWidth	\ \ \ \ \ \ \ Dimension
_
XmNcolormap	dynamic	CG
\ \ \ \ \ \ XmCColormap	\ \ \ \ \ \ \ Colormap
_
XmNdepth	dynamic	CG
\ \ \ \ \ \ XmCDepth	\ \ \ \ \ \ \ int
_
XmNdestroyCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNheight	dynamic	CSG
\ \ \ \ \ \ XmCHeight	\ \ \ \ \ \ \ Dimension
_
XmNinitialResourcesPersistent	True	C
\ \ \ \ \ \ XmCInitialResourcesPersistent	\ \ \ \ \ \ \ Boolean
_
XmNmappedWhenManaged	True	CSG
\ \ \ \ \ \ XmCMappedWhenManaged	\ \ \ \ \ \ \ Boolean
_
XmNscreen	dynamic	CG
\ \ \ \ \ \ XmCScreen	\ \ \ \ \ \ \ Screen *
_
.wH .tH
XmNsensitive	True	CSG
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNtranslations	dynamic	CSG
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNwidth	dynamic	CSG
\ \ \ \ \ \ XmCWidth	\ \ \ \ \ \ \ Dimension
_
XmNx	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
XmNy	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
.TE
.\" NROFF HACK END
.wH .in  
.SS "Callback Information"
A pointer to the following structure is passed to each callback:
.sS
.iS
.ta .25i 1.1i
typedef struct
{
	int	\*Vreason\*L;
	\*LXEvent	\*V* event\*L;
} XmAnyCallbackStruct;
.iE
.sE
.wH .fi
.VL .75i 
.LI "\*Vreason\*O"
Indicates why the callback was invoked.
.LI "\*Vevent\*O"
Points to the \*LXEvent\*O that triggered the callback or is NULL
if this callback was not triggered due to an \*LXEvent\*O.
.LE 
.SS "Translations"
XmCascadeButton includes translations from Primitive.
XmCascadeButton includes the menu traversal translations from XmLabel.
These translations may not directly correspond to a
translation table.
.PP 
.ne 2i
Note that altering translations in \*L#override\*O
or \*L#augment\*O mode is undefined.
.PP 
The translations for a CascadeButton in a MenuBar are listed below.
These translations may not directly correspond to a
translation table.
.iS
.ta 1.5i
BSelect Press:	MenuBarSelect()
BSelect Release:	DoSelect()
KActivate:	KeySelect()
KSelect:	KeySelect()
KHelp:	Help()
MAny KCancel:	CleanupMenuBar()
.wH .fi
.iE
.PP 
The translations for a CascadeButton in a PullDown or Popup
MenuPane are listed below.
In a Popup menu system, \*LBMenu\*O also performs the \*LBSelect\*O
actions.
These translations may not directly correspond to a
translation table.
.iS
.ta 1.5i
BSelect Press:	StartDrag()
BSelect Release:	DoSelect()
KActivate:	KeySelect()
KSelect:	KeySelect()
KHelp:	Help()
MAny KCancel:	CleanupMenuBar()
.wH .fi
.iE
.SS "Action Routines"
The XmCascadeButton action routines are described below:
.VL  
.LI "\*LCleanupMenuBar()\*O:"
In a MenuBar, disarms the CascadeButton and the menu and,
when the shell's keyboard focus policy is \*LXmEXPLICT\*O,
restores
keyboard focus to the widget that had the focus before the menu was
entered.
.PP
.ne 3.5i
In a toplevel Pulldown MenuPane from a MenuBar, unposts the menu,
disarms the MenuBar CascadeButton and the MenuBar, and,
when the shell's keyboard focus policy is \*LXmEXPLICT\*O,
restores keyboard
focus to the widget that had the focus before the MenuBar was
entered.
In other Pulldown MenuPanes, unposts the menu.
.PP
In a Popup MenuPane, unposts the menu and,
when the shell's keyboard focus policy is \*LXmEXPLICT\*O,
restores keyboard focus to the
widget from which the menu was posted.
.LI "\*LDoSelect()\*O:"
Calls the callbacks in \*LXmNcascadingCallback\*O,
posts the submenu attached to the CascadeButton and
enables keyboard traversal within the menu.
If the CascadeButton does not have a submenu attached,
calls the callbacks in \*LXmNactivateCallback\*O,
the CascadeButton is activated and all posted menus in the cascade are
unposted.
.LI "\*LHelp()\*O:"
Unposts all menus in the menu hierarchy and,
when the shell's keyboard focus policy is \*LXmEXPLICT\*O,
restores keyboard focus to
the widget that had the focus before the menu system was entered.
Calls the callbacks for \*LXmNhelpCallback\*O if any exist.
If there are no help callbacks for this widget, this action calls the
help callbacks for the nearest ancestor that has them.
.LI "\*LKeySelect()\*O:"
Calls the callbacks in \*LXmNcascadingCallback\*O,
and posts the submenu attached to the CascadeButton if keyboard
traversal is enabled in the menu.
If the CascadeButton does not have a submenu attached,
calls the callbacks in \*LXmNactivateCallback\*O,
the CascadeButton is activated and all posted menus in the cascade are
unposted.
.LI "\*LMenuBarSelect()\*O:"
Unposts any menus posted by the parent menu.
Arms both the CascadeButton and the MenuBar,
posts the associated submenu, and enables mouse traversal.
If the menu is already active, this event
disables keyboard traversal for the menu and returns
the menu to mouse traversal mode.
.LI "\*LStartDrag()\*O:"
Arms the CascadeButton, posts the associated submenu, and enables mouse
traversal.
If the menu is already active, this event
disables keyboard traversal for the menu and returns
the menu to mouse traversal mode.
.LE
.nL
.ne 5
.SS "Additional Behavior"
Posting a submenu calls the \*LXmNcascadingCallback\*O callbacks.
This widget has the additional behavior described below:
.VL  
.LI "\*L<EnterWindow>\*O:"
If keyboard traversal is enabled does nothing.
Otherwise, in a MenuBar that is armed,
unposts any MenuPanes associated with another MenuBar entry,
arms the CascadeButton, and posts the associated submenu.
In other menus,
arms the CascadeButton and posts the associated submenu after
the delay specified by \*LXmNmappingDelay\*O.
.LI "\*L<LeaveWindow>\*O:"
If keyboard traversal is enabled does nothing.
Otherwise, in a MenuBar that is armed,
disarms the CascadeButton
if the submenu associated with the CascadeButton is not currently
posted or if there is no submenu associated with the CascadeButton.
.PP
In other menus,
if the pointer moves anywhere except into a submenu associated with the
CascadeButton, the CascadeButton is disarmed and its submenu is unposted.
.LE
.SS "Virtual Bindings"
The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see \*LVirtualBindings(3X)\*O.
.SH RELATED INFORMATION
.na
\*LCore(3X)\*O, \*LXmCascadeButtonHighlight(3X)\*O,
\*LXmCreateCascadeButton(3X),XmCreateMenuBar(3X)\*O, \*LXmCreatePulldownMenu(3X)\*O,
\*LXmCreatePopupMenu(3X)\*O,
\*LXmLabel(3X)\*O, \*LXmPrimitive(3X)\*O, and \*LXmRowColumn(3X)\*O.
.ad
.EQ
delim off
.EN
