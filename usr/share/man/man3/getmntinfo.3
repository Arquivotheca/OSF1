.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: getmntinfo.3,v $ $Revision: 1.1.6.3 $ (DEC) $Date: 1994/01/14 19:06:23 $
.\"
.\"
.\" (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.1
.\" Copyright (c) 1989 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"
.\"
.TH getmntinfo 3
.SH NAME
.PP
\*Lgetmntinfo\*O, \*Lgetmntinfo_r\*O \- Get information about mounted file systems
.SH SYNOPSIS
.PP
.iX "getmntinfo function"
.iX "mount" "get information on"
.iX "filesystems" "get information on mounts"
.sS
\*L#include <sys/types.h>\*O
.nL
\*L#include <sys/mount.h>\*O
.PP
\*Lint getmntinfo(
.nL
        \*Lstruct statfs **\*Vmntbufp\*L,
.nL
        \*Lint \*Vflags\*L);
.PP
\*Lint getmntinfo_r(
.nL
        \*Lstruct statfs **\*Vmntbufp\*L,
.nL
        \*Lint \*Vflags\*L,
.nL
        \*Lint *\*Vmntsizep\*L,
.nL
        \*Lint *\*Vbufsizep\*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vmntbufp\*O"
Points to a location to which the \*Lgetmntinfo\*O function returns an
array of \*Lstatfs\*O structures that describe each
currently mounted file system. If you specify an invalid address,
\*L[EFAULT]\*O status is returned.  If you specify NULL, an invalid memory
access occurs.
.LI "\*Vflags\*O"
Specifies one of the following flags to be passed transparently to the
\*Lgetfsstat(\|)\*O function:
.VL
.LI "\*LMNT_WAIT\*O"
Waits for an update from each file system before returning information.
.LI "\*LMNT_NOWAIT\*O"
Information is returned without requesting
an update from each file system.
Thus, some of the information will be out of date, but the
\*Lgetfsstat(\|)\*O
function
will not block waiting for information from a file system that is
unable to respond.
.LE
.LI "\*Vmntsizep\*O"
Points to the location where the number of mounted file systems is stored.
.LI "\*Vbufsizep\*O"
Points to the size of the buffer containing the array of \*Lstatfs\*O
structures for all mounted file systems.
.LE
.SH DESCRIPTION
.PP
The \*Lgetmntinfo(\|)\*O function
returns an array of
\*Lstatfs\*O
structures describing each currently mounted file system (see the
\*Lstatfs(\|)\*O reference page).  The \*Lgetmntinfo(\|)\*O function takes a
\*Lstruct statfs\*O **\*Vmntbufp\*O, which it
sets to a \*Lmalloc(\|) ed\*O buffer.
.PP
The \*Lgetmntinfo(\|)\*O function
passes its
\*Vflags\*O
parameter transparently to \*Lgetfsstat(\|)\*O.
.PP
The \*Lgetmntinfo_r(\|)\*O function is the reentrant version of
\*Lgetmntinfo(\|)\*O.
.SH EXAMPLES
.PP
The following example shows a suggested way to use the \*Lgetmntinfo_r(\|)\*O
function.
.oS
struct statfs *mntbuf;
int mntsize, bufsize, flags;

        mntsize = bufsize = 0;
        mntbuf = NULL;
        while (keep_on) {
                flags = MNT_WAIT;
                getmntinfo_r(&mntbuf, flags, &mntsize, &bufsize);
                /* Use the data accessible via mntbuf... */
                ....
        }
        free(mntbuf);
.oE
.SS NOTES
For the \*Lgetmntinfo(\|)\*O function, all information is contained in
a static area,
so it must be copied if it is to be saved.
.PP
Before the
first call to \*Lgetmntinfo_r(\|)\*O, you should set the
*\*Vmntbufp\*O parameter to NULL.  This is to prevent the
\*Lfree(\|)\*O function
from being called on whatever *\*Vmntbufp\*O already contains by the
first \*Lgetmntinfo_r(\|)\*O call.  The \*Vmntsizep\*O and
\*Vbufsizep\*O parameters must also be set to 0 (zero).  This is
illustrated in the \*LEXAMPLES\*O section.
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lgetmntinfo(\|)\*O function
returns a count of the number of elements in the array.
Otherwise, a value of 0 (zero) is returned and
\*Vmntbufp\*O
is unmodified.
.PP
Upon successful completion, the \*Lgetmntinfo_r(\|)\*O function stores
the count of
the number of elements in the array into the \*Lint\*O pointed to by
\*Vmntsizep\*O, and returns a value of 0 (zero).  Otherwise, a value
of -1 is returned.
.SH ERRORS
.PP
If the \*Lgetmntinfo(\|)\*O or \*Lgetmntinfo_r(\|)\*O function fails,
\*Lerrno\*O may be set to the following:
.VL
.LI "[EFAULT]"
The \*Vmntbufp\*O parameter points to a non-NULL invalid address.
.LI "[EIO]"
An I/O error occurred while reading from or writing to the file
system.
.LI "[EINVAL]"
If the \*Vbufsizep\*O parameter is invalid.
.LI "[ENOMEM]"
If there is not enough storage memory in the system.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lgetfsstat\*O(2), \*Lstatfs\*O(2), \*Lmount\*O(2),
\*Lmalloc\*O(3)
.PP
Commands:
\*Lmount\*O(8)
.EQ
delim off
.EN
