.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XtPopdown.3Xt,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:54:02 $
.\" 
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ny0
.TH XtPopdown 3Xt "" "" "" "X11R5"
.SH NAME
XtPopdown, XtCallbackPopdown, MenuPopdown \- unmap a pop-up
.SH SYNTAX
.NX R "XtCallbackPopdown routine"
.NX R "MenuPopdown routine"
void XtPopdown(\f2popup_shell\fP)
.br
      Widget \f2popup_shell\fP;
.PP
void XtCallbackPopdown(\f2w\fP, \f2client_data\fP, \f2call_data\fP)
.br
      Widget \f2w\fP;
.br
      XtPointer \f2client_data\fP;
.br
      XtPointer \f2call_data\fP;
.PP
void MenuPopdown(\f2shell_name\fP)
.br
      String \f2shell_name\fP;
.SH ARGUMENTS
.IP \f2call_data\fP 1i
Specifies the callback data,
which is not used by this procedure.
.IP \f2client_data\fP 1i
Specifies a pointer to the
.PN XtPopdownID
structure.
.ds Ps \ to pop down
.IP \f2popup_shell\fP 1i
Specifies the widget shell\*(Ps.
.ds Sn down
.IP \f2shell_name\fP 1i
Specifies the name of the widget shell to pop \*(Sn.
.IP \f2w\fP 1i
Specifies the widget.
.SH DESCRIPTION
The
.PN XtPopdown
function performs the following:
.IP \(bu 5
Calls
.PN XtCheckSubclass
.\".ZN XtCheckSubclass(popup_shell, popupShellWidgetClass)
to ensure popup_shell is a subclass of
.PN Shell .
.IP \(bu 5
Checks that popup_shell is currently popped_up;
otherwise, it generates an error.
.IP \(bu 5
Unmaps popup_shell's window.
.IP \(bu 5
If popup_shell's grab_kind is either
.PN XtGrabNonexclusive
or
.PN XtGrabExclusive ,
it calls
.PN XtRemoveGrab .
.\".ZN XtRemoveGrab(popup_shell)
.IP \(bu 5
Sets pop-up shell's popped_up field to
.PN False .
.IP \(bu 5
Calls the callback procedures on the shell's popdown_callback list.
.PP
The
.PN XtCallbackPopdown
function casts the client data parameter to an
.PN XtPopdownID
pointer:
.PP
\f(CWtypedef struct {
        Widget shell_widget;
        Widget enable_widget;
} XtPopdownIDRec, *XtPopdownID;\fP
.PP
The shell_widget is the pop-up shell to pop down,
and the enable_widget is the widget that was used to pop it up.
.PP
.PN XtCallbackPopdown
calls
.PN XtPopdown
with the specified shell_widget
and then calls
.PN XtSetSensitive
to resensitize the enable_widget.
.PP
If a shell name is not given,
.PN MenuPopdown
calls
.PN XtPopdown
with the widget for which the translation is specified.
If a shell_name is specified in the translation table,
.PN MenuPopdown
tries to find the shell by looking up the widget tree starting at the
parent of the widget in which it is invoked.
If it finds a shell with the specified name in the pop-up children
of that parent,
it pops down the shell;
otherwise, it moves up the parent chain as needed.
If
.PN MenuPopdown
gets to the application top-level shell widget
and cannot find a matching shell,
it generates an error.
.SH "SEE ALSO"
XtCreatePopupShell(3Xt),
XtPopup(3Xt)
.br
\f2\*(xT\fP
.br
\f2\*(xL\fP
.EQ
delim off
.EN
