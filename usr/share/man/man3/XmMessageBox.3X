.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XmMessageBox.3X,v $ $Revision: 3.2.4.5 $ (DEC) $Date: 1993/12/14 21:21:14 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH XmMessageBox 3X "" "" "" "OSF/Motif"
.SH NAME
\*LXmMessageBox\*O \- The MessageBox widget class
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/MessageB.h>
.iE
.sE
.SH DESCRIPTION
.iX "XmMessageBox"
.iX "widget class" "MessageBox"
MessageBox is a dialog class used for creating simple message dialogs.
Convenience dialogs based on MessageBox are provided for several common
interaction tasks, which include giving information, asking questions, and
reporting errors.
.PP 
A MessageBox dialog is typically transient in nature, displayed for the
duration of a single interaction.
MessageBox is a subclass of XmBulletinBoard and
depends on it for much of its general dialog behavior.
.PP
The default value for \*LXmNinitialFocus\*O 
is the value of \*LXmNdefaultButton\*O.
.PP 
A typical MessageBox contains a message symbol, a message, and up to
three standard default PushButtons:  \*LOK, Cancel\*O, and \*LHelp\*O.
It is laid out with the symbol and message on top and the
PushButtons on the bottom.  The help button is positioned to the side
of the other push buttons.
You can localize the default symbols and button labels for MessageBox
convenience dialogs.
.PP
The user can specify resources in a resource file for the gadgets
created automatically that contain the MessageBox symbol pixmap
and separator.  The gadget names are "Symbol" and "Separator".
.PP
A MessageBox can also be customized by creating and managing new
children that are added to the MessageBox children created
automatically by the convenience dialogs.
In the case of
TemplateDialog, only the separator child is created by default.
If the callback, string, or pixmap symbol resources are specified,
the appropriate child will be created.
.PP
Additional children are laid out in the following manner:
.ML
.LI
The first MenuBar child is placed at the top of the window.
.LI
All \*LXmPushButton\*O
widgets or gadgets, and their subclasses are
placed after the \*LOK\*O button in the order of their creation.
.LI
A child that is not in the above categories is placed above
the row of buttons.  If a message label exists, the child is placed below
the label.  If a message pixmap exists, but a message label is absent, the
child is placed on the same row as the pixmap.  The child behaves as a
work area and grows or shrinks to fill the space above the
row of buttons.  The layout of multiple work area children is
undefined.
.LE
.PP 
.ne 15
At initialization, MessageBox looks for the following bitmap files:
.wH .rS 
.ML
.LI
xm_error
.LI
xm_information
.LI
xm_question
.LI
xm_working
.LI
xm_warning
.LE 
.wH .rE
.PP 
See \*LXmGetPixmap(3X)\*O for a list of the paths that are searched for
these files.
.SS "Classes"
MessageBox inherits behavior and resources from \*LCore\*O,
\*LComposite\*O, \*LConstraint\*O,
\*LXmManager\*O, and \*LXmBulletinBoard\*O.
.PP 
The class pointer is \*LxmMessageBoxWidgetClass\*O.
.PP 
The class name is \*LXmMessageBox\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmMessageBox Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNcancelCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNcancelLabelString	dynamic	CSG
\ \ \ \ \ \ XmCCancelLabelString	\ \ \ \ \ \ \ XmString
_
XmNdefaultButtonType	XmDIALOG_OK_BUTTON	CSG
\ \ \ \ \ \ XmCDefaultButtonType	\ \ \ \ \ \ \ unsigned char
_
XmNdialogType	XmDIALOG_MESSAGE	CSG
\ \ \ \ \ \ XmCDialogType	\ \ \ \ \ \ \ unsigned char
_
XmNhelpLabelString	dynamic	CSG
\ \ \ \ \ \ XmCHelpLabelString	\ \ \ \ \ \ \ XmString
_
XmNmessageAlignment	XmALIGNMENT_BEGINNING	CSG
\ \ \ \ \ \ XmCAlignment	\ \ \ \ \ \ \ unsigned char
_
XmNmessageString	""	CSG
\ \ \ \ \ \ XmCMessageString	\ \ \ \ \ \ \ XmString
_
XmNminimizeButtons	False	CSG
\ \ \ \ \ \ XmCMinimizeButtons	\ \ \ \ \ \ \ Boolean
_
XmNokCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNokLabelString	dynamic	CSG
\ \ \ \ \ \ XmCOkLabelString	\ \ \ \ \ \ \ XmString
_
XmNsymbolPixmap	dynamic	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
.TE
.\" NROFF HACK END
.nL
.ne 20
.VL  
.LI "\*LXmNcancelCallback\*O"
Specifies the list of callbacks that is called when
the user clicks on the cancel button.
The reason sent by the callback is \*LXmCR_CANCEL\*O.
.LI "\*LXmNcancelLabelString\*O"
Specifies the string label for the cancel button.
The default for this resource depends on the locale.
In the C locale the default is "Cancel".
.LI "\*LXmNdefaultButtonType\*O"
Specifies the default PushButton.
A value of \*LXmDIALOG_NONE\*O means that there should be no default
PushButton.
The following are valid types:
.wH .rS 
.ML
.LI
\*LXmDIALOG_CANCEL_BUTTON\*O
.LI
\*LXmDIALOG_OK_BUTTON\*O
.LI
\*LXmDIALOG_HELP_BUTTON\*O
.LI
\*LXmDIALOG_NONE\*O
.LE
.wH .rE
.LI "\*LXmNdialogType\*O"
Specifies the type of MessageBox dialog, which determines
the default message symbol.
The following are the possible values for this resource:
.wH .rS 
.ML
.LI
\*LXmDIALOG_ERROR\*O\(emindicates an ErrorDialog
.LI
\*LXmDIALOG_INFORMATION\*O\(emindicates an InformationDialog
.LI
\*LXmDIALOG_MESSAGE\*O\(emindicates a MessageDialog.
This is the default MessageBox dialog type.
It does not have an associated message symbol.
.LI
\*LXmDIALOG_QUESTION\*O\(emindicates a QuestionDialog
.LI
\*LXmDIALOG_TEMPLATE\*O\(emindicates a TemplateDialog.
The TemplateDialog contains only a separator child.  It does not
have an associated message symbol.
.LI
\*LXmDIALOG_WARNING\*O\(emindicates a WarningDialog
.LI
\*LXmDIALOG_WORKING\*O\(emindicates a WorkingDialog
.LE
.wH .rE
.sp
If this resource is changed via \*LXtSetValues\*O, the symbol bitmap is
modified to the new \*LXmNdialogType\*O bitmap unless
\*LXmNsymbolPixmap\*O is also being set in the call to
\*LXtSetValues\*O.
If the dialog type does not have an associated message symbol, then no
bitmap will be displayed.
.nL
.LI "\*LXmNhelpLabelString\*O"
Specifies the string label for the help button.
The default for this resource depends on the locale.
In the C locale the default is "Help".
.nL
.ne 12
.LI "\*LXmNmessageAlignment\*O"
Controls the alignment of the message Label.
Possible values include the following:
.wH .rS 
.ML
.LI
\*LXmALIGNMENT_BEGINNING\*O\(emthe default
.LI
\*LXmALIGNMENT_CENTER\*O
.LI
\*LXmALIGNMENT_END\*O
.LE 
.wH .rE
.LI "\*LXmNmessageString\*O"
Specifies the string to be used as the message.
.LI "\*LXmNminimizeButtons\*O"
Sets the buttons to the width of the widest button and height of the
tallest button if False.  If True, button width and height are
set to the preferred size of each button.
.LI "\*LXmNokCallback\*O"
Specifies the list of callbacks that is called when
the user clicks on the OK button.
The reason sent by the callback is \*LXmCR_OK\*O.
.LI "\*LXmNokLabelString\*O"
Specifies the string label for the OK button.
The default for this resource depends on the locale.
In the C locale the default is "OK".
.LI "\*LXmNsymbolPixmap\*O"
Specifies the pixmap label to be used as the message symbol.
.LE 
.SS "Inherited Resources"
MessageBox inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmBulletinBoard Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNallowOverlap	True	CSG
\ \ \ \ \ \ XmCAllowOverlap	\ \ \ \ \ \ \ Boolean
_
XmNautoUnmanage	True	CG
\ \ \ \ \ \ XmCAutoUnmanage	\ \ \ \ \ \ \ Boolean
_
XmNbuttonFontList	dynamic	CSG
\ \ \ \ \ \ XmCButtonFontList	\ \ \ \ \ \ \ XmFontList
_
XmNcancelButton	Cancel button	SG
\ \ \ \ \ \ XmCWidget	\ \ \ \ \ \ \ Widget
_
XmNdefaultButton	dynamic	SG
\ \ \ \ \ \ XmCWidget	\ \ \ \ \ \ \ Widget
_
XmNdefaultPosition	True	CSG
\ \ \ \ \ \ XmCDefaultPosition	\ \ \ \ \ \ \ Boolean
_
XmNdialogStyle	dynamic	CSG
\ \ \ \ \ \ XmCDialogStyle	\ \ \ \ \ \ \ unsigned char
_
XmNdialogTitle	NULL	CSG
\ \ \ \ \ \ XmCDialogTitle	\ \ \ \ \ \ \ XmString
_
XmNfocusCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNlabelFontList	dynamic	CSG
\ \ \ \ \ \ XmCLabelFontList	\ \ \ \ \ \ \ XmFontList
_
XmNmapCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNmarginHeight	10	CSG
\ \ \ \ \ \ XmCMarginHeight	\ \ \ \ \ \ \ Dimension
_
XmNmarginWidth	10 	CSG
\ \ \ \ \ \ XmCMarginWidth	\ \ \ \ \ \ \ Dimension
_
XmNnoResize	False	CSG
\ \ \ \ \ \ XmCNoResize	\ \ \ \ \ \ \ Boolean
_
.wH .tH
XmNresizePolicy	XmRESIZE_ANY	CSG
\ \ \ \ \ \ XmCResizePolicy	\ \ \ \ \ \ \ unsigned char
_
XmNshadowType	XmSHADOW_OUT	CSG
\ \ \ \ \ \ XmCShadowType	\ \ \ \ \ \ \ unsigned char
_
XmNtextFontList	dynamic	CSG
\ \ \ \ \ \ XmCTextFontList	\ \ \ \ \ \ \ XmFontList
_
XmNtextTranslations	NULL	C
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNunmapCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmManager Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNbottomShadowColor	dynamic	CSG
\ \ \ \ \ \ XmCBottomShadowColor	\ \ \ \ \ \ \ Pixel
_
XmNbottomShadowPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCBottomShadowPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNforeground	dynamic	CSG
\ \ \ \ \ \ XmCForeground	\ \ \ \ \ \ \ Pixel
_
XmNhelpCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNhighlightColor	dynamic	CSG
\ \ \ \ \ \ XmCHighlightColor	\ \ \ \ \ \ \ Pixel
_
XmNhighlightPixmap	dynamic	CSG
\ \ \ \ \ \ XmCHighlightPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNinitialFocus	dynamic	CSG
\ \ \ \ \ \ XmCInitialFocus	\ \ \ \ \ \ \ Widget
_
XmNnavigationType	XmTAB_GROUP	CSG
\ \ \ \ \ \ XmCNavigationType	\ \ \ \ \ \ \ XmNavigationType
_
XmNshadowThickness	dynamic	CSG
\ \ \ \ \ \ XmCShadowThickness	\ \ \ \ \ \ \ Dimension
_
XmNstringDirection	dynamic	CG
\ \ \ \ \ \ XmCStringDirection	\ \ \ \ \ \ \ XmStringDirection
_
XmNtopShadowColor	dynamic	CSG
\ \ \ \ \ \ XmCTopShadowColor	\ \ \ \ \ \ \ Pixel
_
XmNtopShadowPixmap	dynamic	CSG
\ \ \ \ \ \ XmCTopShadowPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNtraversalOn	True	CSG
\ \ \ \ \ \ XmCTraversalOn	\ \ \ \ \ \ \ Boolean
_
XmNunitType	dynamic	CSG
\ \ \ \ \ \ XmCUnitType	\ \ \ \ \ \ \ unsigned char
_
XmNuserData	NULL	CSG
\ \ \ \ \ \ XmCUserData	\ \ \ \ \ \ \ XtPointer
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Composite Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNchildren	NULL	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ WidgetList
_
XmNinsertPosition	NULL	CSG
\ \ \ \ \ \ XmCInsertPosition	\ \ \ \ \ \ \ XtOrderProc
_
XmNnumChildren	0	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ Cardinal
_
.TE
.\" NROFF HACK END
.PP
.wH .in 0 
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Core Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaccelerators	dynamic	N/A
\ \ \ \ \ \ XmCAccelerators	\ \ \ \ \ \ \ XtAccelerators
_
XmNancestorSensitive	dynamic	G
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNbackground	dynamic	CSG
\ \ \ \ \ \ XmCBackground	\ \ \ \ \ \ \ Pixel
_
XmNbackgroundPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderColor	XtDefaultForeground	CSG
\ \ \ \ \ \ XmCBorderColor	\ \ \ \ \ \ \ Pixel
_
XmNborderPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderWidth	0	CSG
\ \ \ \ \ \ XmCBorderWidth	\ \ \ \ \ \ \ Dimension
_
XmNcolormap	dynamic	CG
\ \ \ \ \ \ XmCColormap	\ \ \ \ \ \ \ Colormap
_
XmNdepth	dynamic	CG
\ \ \ \ \ \ XmCDepth	\ \ \ \ \ \ \ int
_
XmNdestroyCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNheight	dynamic	CSG
\ \ \ \ \ \ XmCHeight	\ \ \ \ \ \ \ Dimension
_
XmNinitialResourcesPersistent	True	C
\ \ \ \ \ \ XmCInitialResourcesPersistent	\ \ \ \ \ \ \ Boolean
_
XmNmappedWhenManaged	True	CSG
\ \ \ \ \ \ XmCMappedWhenManaged	\ \ \ \ \ \ \ Boolean
_
XmNscreen	dynamic	CG
\ \ \ \ \ \ XmCScreen	\ \ \ \ \ \ \ Screen *
_
.wH .tH
XmNsensitive	True	CSG
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNtranslations	dynamic	CSG
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNwidth	dynamic	CSG
\ \ \ \ \ \ XmCWidth	\ \ \ \ \ \ \ Dimension
_
XmNx	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
XmNy	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
.TE
.\" NROFF HACK END
.wH .in  
.SS "Callback Information"
A pointer to the following structure is passed to each callback:
.sS
.iS
.ta .25i 1.50i
typedef struct
{
	int	\*Vreason\*L;
	\*LXEvent	\*V* event\*L;
} XmAnyCallbackStruct;
.iE
.sE
.wH .fi
.VL .75i 
.LI "\*Vreason\*O"
Indicates why the callback was invoked
.LI "\*Vevent\*O"
Points to the \*LXEvent\*O that triggered the callback
.LE 
.SS "Translations"
.ne 20
XmMessageBox includes the translations from XmManager.
.SS "Additional Behavior"
The XmMessageBox widget has the additional behavior described below:
.VL  
.LI "\*LMAny\ KCancel\*O:"
Calls the activate callbacks for the cancel button if it is sensitive.
.LI "\*LKActivate\*O:"
Calls the activate callbacks for the button with the keyboard focus.
If no button has the keyboard focus, calls the activate callbacks
for the default button if it is sensitive.
.LI "\*L<Ok\ Button\ Activated>\*O:"
Calls the callbacks for \*LXmNokCallback\*O.
.LI "\*L<Cancel\ Button\ Activated>\*O:"
Calls the callbacks for \*LXmNcancelCallback\*O.
.LI "\*L<Help\ Button\ Activated>\*O:"
Calls the callbacks for \*LXmNhelpCallback\*O.
.LI "\*L<FocusIn>\*O:"
Calls the callbacks for \*LXmNfocusCallback\*O.
.LI "\*L<Map>\*O:"
Calls the callbacks for \*LXmNmapCallback\*O if the parent is a
DialogShell.
.LI "\*L<Unmap>\*O:"
Calls the callbacks for \*LXmNunmapCallback\*O if the parent is a
DialogShell.
.LE
.SS "Virtual Bindings"
The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see \*LVirtualBindings(3X)\*O.
.nL
.ne 20
.SH RELATED INFORMATION
.na
\*LComposite(3X)\*O,
\*LConstraint(3X)\*O,
\*LCore(3X)\*O,
\*LXmBulletinBoard(3X)\*O,
\*LXmCreateErrorDialog(3X)\*O,
\*LXmCreateInformationDialog(3X)\*O,
\*LXmCreateMessageBox(3X)\*O,
\*LXmCreateMessageDialog(3X)\*O,
\*LXmCreateQuestionDialog(3X)\*O,
\*LXmCreateTemplateDialog(3X)\*O,
\*LXmCreateWarningDialog(3X)\*O,
\*LXmCreateWorkingDialog(3X)\*O,
\*LXmManager(3X)\*O, and
\*LXmMessageBoxGetChild(3X)\*O.
.ad
.EQ
delim off
.EN
