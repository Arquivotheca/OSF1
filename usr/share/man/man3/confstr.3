.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: confstr.3,v $ $Revision: 1.1.3.3 $ (DEC) $Date: 1993/06/21 19:12:32 $
.\"
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH confstr 3
.SH NAME
.PP
\*Lconfstr\*O \- Determines the current value of a specified system variable defined by a string value
.SH LIBRARY
.PP
Standard C library \*L(libc.a)\*O
.SH SYNOPSIS
.PP
.sS
\*L#include\ <unistd.h>
.sp 0.4v
size_t confstr(
.nL
	\*Lint \*Vname\*L,
.nL
	char *\*Vbuf\*L,
.nL
	size_t\ \*Vlen\*L);
.sE
.SH PARAMETERS
.PP
.VL 1i
.LI "\*Vname\*O"
Specifies the system variable setting to be returned. Valid values for the
\*Vname\*O parameter are defined in the \*Lunistd.h\*O header file.
.LI "\*Vbuf\*O"
Points to the buffer into which the \*Lconfstr\*O
function copies the \*Vname\*O value.
.LI "\*Vlen\*O"
Specifies the size of the buffer storing the \*Vname\*O value.
.LE
.SH DESCRIPTION
.PP
.iX "confstr function"
.iX "system variable" "finding current value"
The \*Lconfstr(\|)\*O function allows an application to determine
the current setting of certain system parameters, limits, or options
that are defined by a string value. The function is mainly used by applications
to find the system default value for the \*LPATH\*O environment
variable.
.PP
If the following conditions are true, then the \*Lconfstr(\|)\*O function
copies that value into a \*Vlen\*O-byte buffer pointed to by the \*Vbuf\*O
parameter:
.ML
.LI
The \*Vlen\*O parameter is not 0 (zero)
.LI
The \*Vname\*O parameter has a system-defined value
.LI
The \*Vbuf\*O parameter is not a null pointer
.LE
.PP
If the
string to be returned is longer than \*Vlen\*O bytes, including the
terminating null,
then the \*Lconfstr(\|)\*O function truncates the string to \*Vlen\*O-1 bytes
and adds a terminating null to the result. The application can detect that
the string was truncated by comparing the value returned by the
\*Lconfstr(\|)\*O function with the value of the \*Vlen\*O parameter.
.SH EXAMPLES
.PP
To find out how big a buffer is needed to store the string value
of \*Vname\*O, enter:
.PP
.iS
confstr(_CS_PATH,\ NULL,\ (size_t)\ 0)
.iE
.PP
The \*Lconfstr(\|)\*O function returns the size of the buffer necessary.
.SH FILES
.PP
.VL 1i
.LI "\*Llimits.h\*O"
Contains system-defined limits.
.LI "\*Lunistd.h\*O"
Contains system-defined environment variables.
.LE
.SH RETURN VALUES
.PP
If the value specified by the \*Vname\*O parameter is system-defined, the
\*Lconfstr(\|)\*O function returns the size of the buffer needed
to hold the entire value.  If this return value is greater than the specified
\*Vlen\*O value, the string returned as the \*Vbuf\*O value is truncated.
.PP
If the value of the \*Vlen\*O parameter is set to 0 (zero) or the
\*Vbuf\*O value
is \*LNULL\*O, the \*Lconfstr(\|)\*O function returns the size of the buffer
needed to hold the entire system-defined value,
but does not copy the string value.
.SH ERRORS
.PP
If the specified \*Vname\*O value does not have a system-defined
value, the \*Lconfstr(\|)\*O function returns a value of 0 (zero) and leaves
the \*Lerrno\*O
global variable unchanged.
.PP
If the specified \*Vname\*O value is invalid, a value of 0 (zero) is returned,
and the \*Lerrno\*O global variable is set to EINVAL.
.SH RELATED INFORMATION
.PP
Functions: \*Lpathconf(3)\*O, \*Lsysconf(3)\*O.
.EQ
delim off
.EN
