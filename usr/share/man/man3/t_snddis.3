.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: t_snddis.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/07/27 13:34:07 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.TH t_snddis 3
.SH NAME
.PP
t_snddis \- Sends user-initiated disconnect request
.SH LIBRARY
.PP
XTI Library (\f3libxti.a\f1)
.SH SYNOPSIS
.PP
.nf
\f3#include <xti.h>\fP
.PP
\f3int t_snddis(
.ti +0.2i
\f3int \f2fd\fP,
.ti +0.2i
\f3struct t_call *\f2call\f1) ;
.fi
.SH "PARAMETERS"
.PP
The \f3t_snddis\f1(\|) function can be called in the following
transport provider states: T_DATAXFER, T_OUTCON, T_OUTREL, T_INREL,
and T_INCON (when the number of outstanding connections is greater
than zero). The following table summarizes the relevance of input and
output parameters before and after \f3t_snddis\f1(\|) is called:
.sp
.TS
center, tab(@); 
lb  lb lb 
l  c  c.
Parameter@Before Call@After Call
_
.sp 3p
fd@y@n
call->\f3addr.maxlen\fP@n@n
call->\f3addr.len\fP@n@n
call->\f3addr.buf\fP@n@n
call->\f3opt.maxlen\fP@n@n
call->\f3opt.len\fP@n@n
call->\f3opt.buf\fP@n@n
call->\f3udata.maxlen\fP@n@n
call->\f3udata.len\fP@y@n
call->\f3udata.buf\fP@o(o)@n
call->\f3sequence\fP@o@n
.TE
\f3Notes to Table:\f1
.RS
.nf
.ta 5
y	This is a meaningful parameter.
n	This is not a meaningful parameter.
o	This an optional parameter.
(o)	The content of the object pointed to by \f2y\f1 is optional.
.RE
.fi
.TP
.I fd
Specifies a file descriptor returned by the \f3t_open\f1(\|) function
that identifies the transport endpoint at which the disconnect 
is wanted. 
.TP
.I call
Points to a type \f3t_call\f1 structure 
used to specify information associated with the disconnect 
at the transport endpoint specified by file descriptor \f2fd\f1. 
When the \f2call\f1 parameter is set to the null pointer value, no
data is sent to the remote transport provider user. The \f3t_call\f1 
structure has the following two members:
.RS
.TP .5i
\f3struct netbuf\ \ \  udata\f1
Specifies a buffer for user data
that may be optionally sent to the remote transport user. The
type \f3netbuf\f1 structure referenced by this member is defined in
the \f3xti.h\f1 include file. This structure, which is used to
explicitly define buffer parameters, has the following members:
.RS .5i
.TP .5i
\f3unsigned int\ \ \ maxlen\f1
Specifies the maximum byte length of the data buffer.
.TP .5i
\f3unsigned int\ \ \ len\f1
Specifies the actual byte length of data written to the buffer.
.TP .5i
\f3char\ \ \ *buf\f1
Points to the buffer location.
.RE
.TP .5i
\f3int\ \ \ sequence\f1
Specifies the identity of the connection for which 
this disconnect request is intended and has meaning only  
when the transport provider is in the T_INCON state and is
rejecting an incoming rejection request.
.RE
.TP
\0
The \f3udata\f1 parameters pointed to by the \f2call\f1 parameter need
only be used
when data is sent with a disconnect request.
.TP
\0
When data is sent with the disconnect request, the size of the data
written to the buffer pointed to by \%\f2call\f1->\f3udata.buf\f1 must
not exceed the limits specified by \f2info\f1->\f3discon\f1, which is
returned by the \f3t_open\f1(\|) or \f3t_getinfo\f1(\|) functions.
Failure to comply
with the specified size constraints may result in return of a [T_SYSERR]
protocol error.
.TP
\0
The \f3sequence\f1 parameter is meaningful only if the transport user
is rejecting an incoming connection request and needs to identify
which incoming connection request to reject.
.\".SH "EXAMPLES"
.\".P
.\".SH "NOTES"
.\".P
.\".sp
.sp
.ne 3i
.SH "DESCRIPTION"
.PP
.iX "t_snddis function"
.iX "XTI" "t_snddis function"
The \f3t_snddis(\|)\f1 XTI connection-oriented function is used to
initiate an abortive
disconnect at an established transport endpoint. The
transport endpoint is specified by a file descriptor returned by the
\f3t_open\f1(\|) function. The \f3t_snddis\f1(\|) function uses
type \f3t_call\f1 and \f3netbuf\f1 structures, which are defined in the
\f3xti.h\f1 include file.
.SH "RETURN VALUE"
.PP
Upon successful completion, a value of 0 (zero) is returned. Otherwise, a
value of -1 is returned and \f3t_errno\fP is set to indicate the error.
.SH ERRORS
.PP
If the \f3t_snddis(\|)\f1 function fails, 
\f3t_errno\fP may be set to one of the following values:
.TP 1i
[TBADF]
File descriptor \f2fd\f1 does not refer to a valid transport endpoint.
.TP
[TBADDATA]
The amount of user data specified was not within the bounds allowed by
the transport provider. Some outbound data queued for this endpoint
may be lost.
.TP
[TBADSEQ]
An invalid sequence number was specified, or a null value was used 
for the \f2call\f1 parameter when the connect request was rejected.
Some outbound data 
queued for this endpoint may be lost.
.TP
[TNOTSUPPORT]
This function is not supported by the underlying transport provider.
.TP
[TOUTSTATE]
This function was issued in the wrong sequence at the transport
endpoint referenced by the \f2fd\fP parameter.
.TP
[TSYSERR]
A system error occurred during execution of this function.
.SH "RELATED INFORMATION"
.PP
Functions:
.BR t_connect (3),
.BR t_getinfo (3),
.BR t_listen (3),
.BR t_open (3)
.EQ
delim off
.EN
