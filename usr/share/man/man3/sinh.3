.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: sinh.3,v $ $Revision: 1.1.4.2 $ (DEC) $Date: 1993/05/20 15:24:25 $
.\"
.\"
.\" (c) Copyright 1992, OPEN PROVENCHER FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.\" sinh.alphaman
.\"
.TH sinh 3
.SH NAME
.PP
\*Lsinh\*O, \*Lcosh\*O, \*Ltanh\*O, \*Lsinhcosh\*O \- Hyperbolic functions
.SH LIBRARY
.PP
\*OMath Library (\*Llibm.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <math.h>
.PP
\*Ldouble sinh  (\*Ldouble \*Vx\*L);
.nL
\*Lfloat  sinhf (\*Lfloat  \*Vx\*L);
.nL
\*Ldouble cosh  (\*Ldouble \*Vx\*L);
.nL
\*Lfloat  coshf (\*Lfloat  \*Vx\*L);
.nL
\*Ldouble tanh  (\*Ldouble \*Vx\*L);
.nL
\*Lfloat  tanhf (\*Lfloat  \*Vx\*L);
.nL
\*Ldouble sinhcosh  (\*Ldouble \*Vx\*L);
.nL
\*Lfloat  sinhcoshf (\*Lfloat  \*Vx\*L);\*O
.sE
.SH DESCRIPTION
.PP
.iX "hyperbolic functions" "sinh"
.iX "hyperbolic functions" "cosh"
.iX "hyperbolic functions" "tanh"
.iX "hyperbolic functions" "sinhcosh"
.iX "sinh function"
.iX "cosh function"
.iX "tanh function"
.iX "sinhcosh function"
.iX "max_float"
\*Lsinh(\|)\*O and \*Lsinhf(\|)\*O
compute the hyperbolic sine of \*Vx\*O.
sinh(\*Vx\*O) and sinhf(\*Vx\*O) are equivalent to
(exp(\*Vx\*O) - exp(-\*Vx\*O))/2.
.PP
\*Lcosh(\|)\*O  and \*Lcoshf(\|)\*O
compute the hyperbolic cosine of \*Vx\*O.
cosh(\*Vx\*O) and coshf(\*Vx\*O) are equivalent to
(e**\*Vx\*O + e**(-\*Vx\*O))/2.
.PP
\*Ltanh(\|)\*O and \*Ltanhf(\|)\*O
compute the hyperbolic tangent of \*Vx\*O.
tanh(\*Vx\*O) and tanhf(\*Vx\*O) are equivalent to
(e**\*Vx\*O - e**(-\*Vx\*O))/(e**\*Vx\*O + e**(-\*Vx\*O)).
.PP
\*Lsinhcosh(\|)\*O  and \*Lsinhcoshf(\|)\*O
compute both the hyperbolic sine
and hyperbolic cosine of \*Vx\*O.
sinhcosh(\*Vx\*O) and sinhcoshf(\*Vx\*O) are equivalent to
(sinh \*Vx\*O + icosh \*Vx\*O).
.\".iS
.\"EXCEPTIONAL CASES
.\"
.\"
.\"        Function                Exceptional Argument    Routine Behavior
.\"        ----------------------- ----------------------  ----------------
.\"        sinh(), sinhf()         x >  ln(2 * max_float)  overflow
.\"        sinh(), sinhf()         x < -ln(2 * max_float)  overflow
.\"
.\"        cosh(), coshf()         |x| > ln(2 * max_float) overflow
.\"
.\"        sinhcosh(), sinhcoshf() |x| > ln(2 * max_float) overflow
.\"        sinhcosh(), sinhcoshf() x >  ln(2 * max_float)  overflow
.\"        sinhcosh(), sinhcoshf() x < -ln(2 * max_float)  overflow
.\".iE
.PP
.TS
tab(@);
lfHB lfHB lfHB
l l l .
_
.sp 4p
Function@Exceptional Argument@Routine Behavior
.sp 4p
_
.sp 6p
sinh(), sinhf()@|x|>ln(2 * max_float)@overflow
.sp
cosh(), coshf()@|x|>ln(2 * max_float)@overflow
.sp
sinhcosh(), sinhcoshf()@|x|>ln(2 * max_float)@overflow
.sp 6p
_
.TE
.PP
.TS
tab(@);
lfHB lfHB lfHB lfHB
l l l l .
_
.sp 4p
Value Name@Data Type@Hexadecimal Value@Decimal Value
.sp 4p
_
.sp 6p
ln(2 * max_float)@F_FLOAT@721843B1@88.72284
.sp
@G_FLOAT@39EFFEFA2E4240A6@709.782712893384
.sp
@S_FLOAT@42B2D4FC@89.41599
.sp
@T_FLOAT@408633CE8FB9F87E@710.475860073943
.sp 6p
_
.TE
.EQ
delim off
.EN
