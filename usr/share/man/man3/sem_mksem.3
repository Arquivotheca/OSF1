.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: sem_mksem.3,v $ $Revision: 1.2.2.3 $ (DEC) $Date: 1992/11/25 13:56:22 $
.\"
.\" SCCSID: @(#)sem_mksem.3     6.5 1/2/92
.TH sem_mksem 3
.SH NAME
\*Lsem_mksem\*O \- Create a new binary semaphore set (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<sys/stat.h>\*O
.br
#include \*L<sys/types.h>\*O
.br
#include \*L<binsem.h>\*O
.PP
int \*Lsem_mksem\*O (
.br
const char \*V*name\*O,
.br
size_t \*Vnsems\*O,
.br
int \*Vflags\*O);
.SH PARAMETERS
.PP
.TP 8
.I *name
A pointer to the pathname  naming the binary semaphore object.
.TP 8
.I nsems
The number of semaphores to be created.
.TP 8
.I flags
A set of flags that control whether the binary semaphores created are
locked or not. The flags are specified
in the \*L<binsem.h>\*O header file.
.PP
If SEM_LOCKED is specified, each binary semaphore in the set is
initialized to the locked state.  Otherwise,
each new binary semaphore is initialized to the unlocked (SEM_UNLOCKED) state.
.SH DESCRIPTION
.PP
.iX "sem_mksem function"
.iX "semaphores" "creating"
The \*Lsem_mksem\*O function creates a new binary semaphore set of
\*Vnsem\*O binary semaphores.
A binary semaphore set is used to limit access to a critical resource.
When a process requires access to the resource without interference from other
processes, it locks the associated semaphore.  Then, other processes attempting
to access the resource must wait for the semaphore to become unlocked.
.PP
Once the binary semaphore set has been created, the
\*Lsem_open\*O
function  establishes a connection between the set of binary semaphores
and a binary semaphore set descriptor; the \*Lsem_wait\*O and \*Lsem_ifwait\*O
functions lock the semaphore; and the \*Lsem_post\*O
function unlocks binary semaphores in the set.
Use the \*Lsem_close\*O function to deallocate the binary semaphore set
descriptor and
the \*Lsem_destroy\*O function to remove the it. You can use the
\*Lsem_getnsems\*O function to get the number of binary semaphores in the
binary semaphore set.
.PP
The name of the binary semaphore set created by a call to the \*Lsem_mksem\*O
function remains valid until the semaphore set is removed by a call to the
\*Lsem_destroy\*O function. The name and the state of the binary semaphore
set is persistent across a system reboot or system crash. All the binary
semaphore sets should be removed by a call to the \*Lsem_destroy\*O
function prior to calling the \*Lsem_mksem\*O function after the
system reboot.
.SH RETURN VALUES
.PP
On successful completion, the \*Lsem_mksem\*O function returns the value 0 and
creates the binary semaphore;
otherwise, the function returns the value \-1 and sets \*Lerrno\*O to
indicate the error.
.SH ERRORS
.PP
The \*Lsem_mksem\*O function fails under the following conditions:
.TP 20
[EAGAIN]
\*Vnsems\*O was greater than SEM_NSEMS_MAX.
.TP 20
[EEXIST]
The binary semaphore set \*Vname\*O already exists.
.TP 20
[EINVAL]
Operation not supported for the given \*Vname\*O.
.TP 20
[ENAMETOOLONG]
The length of the null-terminated string \*Vname\*O exceeds SEM_NAME_MAX.
.TP 20
[ENOSPC]
There is not enough space for new binary semaphores.
.TP 20
[ENOSYS]
The function \*Lsem_mksem\*O is not supported by this implementation.
.TP 20
[EPERM]
The process lacks the appropriate privilege to create the named binary
semaphore set.
.SH RELATED INFORMATION
.PP
Functions:
\*Lfork\*O(2), \*Lsem_close\*O(3), \*Lsem_destroy\*O(3),
\*Lsem_open\*O(3)
.EQ
delim off
.EN
