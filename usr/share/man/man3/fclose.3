.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: fclose.3,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1994/01/13 17:32:08 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH fclose 3
.SH NAME
.PP
\*Lfclose\*O, \*Lfflush\*O, \*Lfclose_unlocked\*O, \*Lfflush_unlocked\*O \- Closes or flushes a stream
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <stdio.h>
.PP
\*Lint fclose (
.nL
        FILE *\*Vstream\*L);
.PP
\*Lint fclose_unlocked(
.nL
        FILE *\*Vstream\*L);
.PP
\*Lint fflush(
.nL
        FILE *\*Vstream\*L);
.PP
\*Lint fflush_unlocked(
.nL
        FILE *\*Vstream\*L);\*O
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vstream\*O"
Specifies the output or update stream.
.LE
.SH DESCRIPTION
.PP
.iX "fclose function"
.iX "fflush function"
.iX "fclose_unlocked function"
.iX "fflush_unlocked function"
.iX "stream" "closing"
.iX "stream" "flushing"
The \*Lfclose(\|)\*O function writes buffered data to the stream
specified by the \*Vstream\*O parameter, and then closes the
associated file.
The function is automatically called for all
open files when the \*Lexit(\|)\*O function is invoked.
Any unwritten buffered data for the stream is delivered to the
host environment to be written to the file; any unread buffered
data is discarded.
The stream is disassociated from the file.
If the associated buffer was automatically allocated, it is
deallocated.  Any further use of the stream specified by the
\*Vstream\*O parameter causes undefined behavior.
.PP
The \*Lfclose(\|)\*O function performs the \*Lclose(\|)\*O function
on the file descriptor associated with the \*Vstream\*O
parameter.  If the stream was writable and
buffered data was not yet written to the file, it marks the
\*Lst_ctime\*O and \*Lst_mtime\*O fields of the underlying file for update.
If the file is not already at EOF and is capable of
seeking, the file pointer of the underlying open file descriptor
is adjusted so that the next operation on the open
file descriptor deals with the byte after the last one read from
or written to the stream being closed.
.PP
The \*Lfflush(\|)\*O function writes any buffered data for the
stream specified by the \*Vstream\*O parameter and leaves the stream
open.  If \*Vstream\*O is a null pointer,
the \*Lfflush(\|)\*O function performs this flushing action on all streams
for which the behavior was previously defined.
The \*Lst_ctime\*O and \*Lst_mtime\*O
fields of the underlying file are marked for update.
.PP
The \*Lfclose_unlocked(\|)\*O and \*Lfflush_unlocked(\|)\*O
functions are functionally identical to the \*Lfclose(\|)\*O
and \*Lfflush(\|)\*O functions, except that \*Lfclose_unlocked(\|)\*O
and \*Lfflush_unlocked(\|)\*O
may be safely used only within a scope that is protected by the
\*Lflockfile(\|)\*O and \*Lfunlockfile(\|)\*O functions used as a
pair. The caller must ensure that the stream is locked before these
functions are used.
.SH NOTES
.PP
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use.
.LE
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lfclose(\|)\*O, \*Lfflush(\|)\*O,
\*Lfclose_unlocked(\|)\*O, and \*Lfflush_unlocked(\|)\*O
functions return a value of 0 (zero). Otherwise, EOF
is returned, and \*Lerrno\*O is set to indicate the error.
.SH ERRORS
.PP
If any of the following conditions occurs, the \*Lfclose(\|)\*O
or \*Lfclose_unlocked(\|)\*O function sets
\*Lerrno\*O to the value that corresponds to the condition.
.VL 1i
.LI "[EBADF]"
The file descriptor underlying the \*Vstream\*O parameter is not valid.
.LI "[EINTR]"
The \*Lfclose(\|)\*O or \*Lfclose_unlocked(\|)\*O
function was interrupted by a signal that was caught.
.LI "[EAGAIN]"
The \*LO_NONBLOCK\*O
flag is set for the file descriptor underlying the \*Vstream\*O
parameter and the process would be delayed in the write operation.
.LI "[EFBIG]"
An attempt was made to write a file that exceeds the process's file size
limit or the maximum file size.  (See the \*Lulimit\*O(3)
reference page).
.LI "[EIO]"
The TOSTOP \*Ltty\*O local mode causes a background process to get a SIGTTOU
signal if it attempts to write to the controlling terminal.  The
SIGTTOU signal, if it is not caught or ignored, will cause the
process to block in a stopped state.  A process in an orphaned
process group is not allowed to become stopped, since there is
no unprivileged process to unblock it.  This condition only applies
to operations on \*Lstdio\*O streams associated with \*Ltty\*Os.
.IP
[EIO] is also associated with driver errors.
.LI "[ENOSPC]"
There was no free space remaining on the device containing
the file.
.LI "[EPIPE]"
An attempt was made to write to a pipe or FIFO that is not open
for reading by any process. A SIGPIPE
signal will also be sent to the process.
.LE
.PP
If any of the following conditions occurs, the \*Lfflush(\|)\*O or
\*Lfflush_unlocked(\|)\*O function sets
\*Lerrno\*O to the value that corresponds to the condition.
.VL 1i
.LI "[EAGAIN]"
The \*LO_NONBLOCK\*O flag is set for the file descriptor underlying
\*Vstream \*O and the process would be delayed in the write operation.
.LI "[EBADF]"
The file descriptor underlying the \*Vstream\*O parameter
is not valid.
.LI "[EFBIG]"
An attempt was made to write a file that exceeds the process's file size
limit or the maximum file size.  (See the
\*Lulimit\*O(3) reference page.)
.LI "[EINTR]"
The \*Lfflush(\|)\*O or \*Lfflush_unlocked(\|)\*O
function was interrupted by a signal that was caught.
.LI "[EIO]"
The TOSTOP \*Ltty\*O local mode causes a background process to get a SIGTTOU
signal if it attempts to write to the controlling terminal.  The
SIGTTOU signal, if it is not caught or ignored, will cause the
process to block in a stopped state.  A process in an orphaned
process group is not allowed to become stopped, since there is
no unprivileged process to unblock it.  This condition only applies
to operations on \*Lstdio\*O streams associated with \*Ltty\*Os.
.IP
[EIO] is also associated with driver errors.
.LI "[ENOSPC]"
There was no free space remaining on the device containing
the file.
.LI "[EPIPE]"
An attempt is made to write to a pipe or FIFO that is not open
for reading by any process.
A SIGPIPE signal will also be sent to the process.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lclose\*O(2),
\*Lexit\*O(2),
\*Lfopen\*O(3),
\*Lsetbuf\*O(3).
.EQ
delim off
.EN
