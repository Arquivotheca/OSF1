.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: ldr_next_module.3,v $ $Revision: 3.2.2.2 $ (DEC) $Date: 1992/05/18 13:20:07 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\"
.TH ldr_next_module 3
.SH NAME
\*Lldr_next_module\*O \- Returns the next module ID for a process
.SH LIBRARY
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS 
.sS
\*L#include <sys/types.h>\*O
.nL
\*L#include <loader.h>\*O
.nL
\*Lint\*O
\*Lldr_next_module(\|)\*O(
.nL
	\*Lldr_process_t\*O\*Vprocess\*O,
.nL
	\*Lldr_module_t\*O \*V*mod_id_ptr\*O);
.sE 
.SH PARAMETERS
.PP 
.\"from TP .5i"  
.VL 
.LI "\*Vprocess\*O"
Specifies the process for which the next module ID is required.
.\"from TP "  
.LI "\*Vmod_id_ptr\*O" 
Points to a buffer in which the module ID of a loaded module will
be returned.
.LE 
.PP 
.SH DESCRIPTION
.iX "ldr_next_module function"
.iX "loaded module" "returning next for a process"
.iX "loader" "returning next module ID for a process"
.iX "process" "returning ID of next loaded module"
.PP 
The
\*Lldr_next_module(\|)\*O
function returns the next module ID
for the specified process, given a specified module ID.
It iterates through the module IDs of all modules currently loaded in
a specified process.
.PP 
To get the first module ID for the process, specify LDR_NULL_MODULE
for the initial module ID.  Repeated calls to the
\*Lldr_next_module(\|)\*O
function
will return all the module IDs for the process.  The function returns
LDR_NULL_MODULE after returning the last module ID.
.PP 
To obtain the unique identifier for the current process, use the following
call:
.rS 
	\*Lldr_process_t ldr_my_process(\|);\*O
.rE 
To obtain the unique identifier for the kernel, use the following call:
.rS 
	\*Lldr_process_t ldr_kernel_process(\|);\*O
.rE 
To return the IDs for kernel modules, specify
the returned identifier for the
\*Vprocess\*O
parameter.
.SH RETURN VALUES
.PP 
Upon successful completion, the function returns a value of 0
(zero).  If the operation fails, the function returns a negative value
and
\*Lerrno\*O
is set to indicate the error.
.SH ERRORS
.PP 
If the
\*Lldr_next_module(\|)\*O
function fails,
\*Lerrno\*O
may be set to the following value:
.\"from TP 1i"  
.VL 1i
.LI "[EINVAL]"
The module ID specified by
\*Vmod_id_ptr\*O
is not valid.
.LE 
.SH RELATED INFORMATION
.PP 
Functions:
\*Lldr_inq_module\*O(3),
\*Lldr_inq_region\*O(3)
.iX "ldr_next_module function"
.EQ
delim off
.EN
