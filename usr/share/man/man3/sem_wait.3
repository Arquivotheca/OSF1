.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: sem_wait.3,v $ $Revision: 1.2.2.3 $ (DEC) $Date: 1992/11/25 13:56:48 $
.\"
.\" SCCSID: @(#)sem_wait.3 6.5 1/2/92
.TH sem_wait 3
.SH NAME
\*Lsem_wait\*O, \*Lsem_ifwait\*O \- Perform (or conditionally perform) a semaphore  lock on a binary semaphore (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<binsem.h>\*O
.PP
int \*Lsem_wait\*O (
.br
binsemset_t \*Vbinsemdes\*O,
.br
size_t \*Vbinsemnum\*O);
.PP
int \*Lsem_ifwait\*O (
.br
binsemset_t \*Vbinsemdes\*O,
.br
size_t \*Vbinsemnum\*O);
.SH PARAMETERS
.PP
.TP 10
.I binsemdes
A binary semaphore set descriptor.
The \*Vbinsemdes\*O argument must be a valid binary semaphore set
obtained by using the \*Lsem_open\*O function.
.TP 10
.I binsemnum
The index of a binary semaphore in the set referenced by \*Vbinsemdes\*O.
The number must be in the
range 0 to n\-1, where n is the number of semaphores created with a
call to the \*Lsem_mksem\*O function.
.SH DESCRIPTION
.PP
.iX "sem_ifwait function"
.iX "binary semaphores" "locking"
.iX "sem_wait function"
The \*Lsem_wait\*O function locks the specified semaphore by performing a
semaphore lock operation on it. If the semaphore is currently
locked, the \*Lsem_wait\*O function blocks until it either locks the
semaphore or is interrupted by a signal.
.PP
The \*Lsem_ifwait\*O is the same as the \*Lsem_wait\*O function in that
it locks the specified semaphore, but it is different in that
\*Lsem_ifwait\*O does not sleep. The \*Lsem_ifwait\*O
function locks a binary semaphore if and only if
it can be locked without waiting for another process to unlock the binary
semaphore. If the semaphore is locked, the \*Lsem_ifawit\*O function
returns without locking the semaphore.
.PP
These functions help ensure that the resource associated with the binary
semaphore cannot be accessed by other processes.
The binary semaphore remains locked until the process unlocks it with
a call to the \*Lsem_post\*O function.
.PP
Use the \*Lsem_wait\*O function instead of the
\*Lsem_ifwait\*O function if the process should wait for access to
the semaphore.
.SH RETURN VALUES
.PP
If the \*Lsem_wait\*O or \*Lsem_ifwait\*O
function returns successfully, a value of 0
is returned and the function executes the semaphore lock operation.
.PP
On an unsuccessful call,
a value of \-1 is returned and \*Lerrno\*O
is set to indicate that an error occurred. The state of the binary
semaphore remains unchanged.
.SH ERRORS
.PP
The \*sem_wait\*O and \*Lsem_ifwait\*O
functions fail under the following conditions:
.TP 15
[EAGAIN]
Process would be delayed in the \*Lsem_ifwait\*O operation
(\*Lsem_ifwait\*O only).
.TP 15
[EDEADLK]
A deadlock condition was detected.
.TP 15
[EINTR]
A signal interrupted this function.
.TP 15
[EINVAL]
The \*Vbinsemdes\*O and \*Vbinsemnum\*O arguments together do not refer
to a valid binary semaphore.
.TP 15
[ENOSYS]
The functions \*Lsem_wait\*O and \*Lsem_ifwait\*O are not supported by this
implementation.
.SH RELATED INFORMATION
.PP
Functions:
\*Lsem_close\*O(3), \*Lsem_open\*O(3), \*Lsem_post\*O(3)
.EQ
delim off
.EN
