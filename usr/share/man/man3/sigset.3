.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: sigset.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1994/01/15 01:23:44 $
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\"
.TH sigset 3
.SH NAME
.PP
\*Lsigset\*O, \*Lsighold\*O, \*Lsigrelse\*O, \*Lsigignore\*O \- Compatibility interfaces for signal management
.SH LIBRARY
.PP
\*OStandard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include<signal.h>
.sp .4v
\*Lvoid (*sigset(
.nL
	int \*Vsignal\*L,
.nL
	void (*\*Vfunction\*L) ( int ) ) ) ( int )
.sp .4v
\*Lint sighold(
.nL
	int \*Vsignal \*L);
.sp .4v
int sigrelse(
.nL
	int \*Vsignal \*L);
.sp .4v
int sigignore(
.nL
	int \*Vsignal \*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vsignal"
\*OSpecifies the signal. The \*Vsignal\*O parameter
can be assigned any of the signals defined in the
\*Lsignal.h\*O
header file.
.LI "\*Vfunction"
\*OSpecifies one of four values: SIG_DFL, SIG_IGN,
SIG_HOLD, or an address of a signal-catching function.
The \*Vfunction\*O parameter is declared as type pointer to a function
returning
void. The following actions are prescribed by these values:
.VL
.LI "SIG_DFL"
System default handling of the signal.
.LI "SIG_IGN"
Ignore signal.
.P
\*OAny pending signal specified by the \*Vsignal\*O parameter
is discarded. A pending signal is a signal that has occurred but for
which no action has been taken. The system signal action is set to
ignore future occurrences of this signal type.
.LI "SIG_HOLD"
Hold signal.
.P
\*OThe signal specified by the \*Vsignal\*O parameter is to be held. Any
pending signal of this type remains held. Only one signal of each
type is held.
.LI "\*V(Address of signal-catching function.)\*O"
\*OCatch signal.
.P
\*OUpon receipt of the signal specified by the \*Vsignal\*O parameter,
the receiving process is to execute the signal catching function pointed
to by the \*Vfunction\*O parameter. Any pending signal of this type is
released.
This address is retained across calls to the other signal management
functions, \*Lsighold(\|)\*O and \*Lsigrelse(\|)\*O.
The signal number \*Vsignal\*O
will be passed as the only argument to the signal-catching function.
.P
Before entering the signal-catching function, the value of \*Vfunction\*O for
the caught signal will be set to SIG_HOLD. During normal
return from the signal-catching handler, the system signal action
is restored to \*Vfunction\*O and any held signal of this type
is released. If a nonlocal goto (see the \*Lsetjmp(\|)\*O function) is taken,
the \*Lsigrelse(\|)\*O
function must be invoked to restore the system signal action and
to release any held signal of this type.
.P
\*OUpon return from the signal-catching function, the receiving process
will resume execution at the point at which it was interrupted, except
for implementation-defined signals where this may not be true.
.P
The signal-catching
function will be executed and then the interrupted routine may return
a value of -1 to the calling process with \*Lerrno\*O set to [EINTR]
under the following conditions:
.ML
.LI
\*OA signal to be caught occurs during a nonatomic operation
such as a call to the \*Lread(\|)\*O, \*Lwrite(\|)\*O, \*Lopen(\|)\*O,
or \*Lioctl(\|)\*O function on a slow device (such as a terminal).
.LI
A signal to be caught occurs during a \*Lpause(\|)\*O or
\*Lsigsuspend(\|)\*O
function.
.LI
A signal to be caught occurs during a
wait function that does not return immediately.
.LE
.LE
.LE
.SH DESCRIPTION
.PP
.iX "sigset function"
.iX "sighold function"
.iX "sigrelse function"
.iX "sigignore function"
.iX "signal management" "compatibility interfaces"
.iX "compatibility interfaces for signals"
.iX "managing signals"
The \*Lsigset(\|)\*O, \*Lsighold(\|)\*O, \*Lsigrelse(\|)\*O, and \*Lsigignore(\|)\*O
functions enhance the signal facility and provide signal management
for application processes.
.PP
The \*Lsigset(\|)\*O function specifies the system signal action
to be taken upon receipt of \*Vsignal\*O.
.PP
The \*Lsighold(\|)\*O and \*Lsigrelse(\|)\*O functions establish
critical regions of code.  A call to the \*Lsighold(\|)\*O function
has the effect of deferring or holding
a signal until a subsequent call to the \*Lsigrelse(\|)\*O function.
The \*Lsigrelse(\|)
\*Ofunction restores the system signal action to the action that
was previously specified by \*Lsigset(\|)\*O.
.PP
The \*Lsigignore(\|)\*O function sets the action for \*Vsignal\*O
to SIG_IGN.
.PP
The \*Lsignal(\|)\*O routine should not
be used in conjunction with these routines for a particular signal
type.
.SH NOTES
.PP
These interfaces are provided for compatibility only.  New programs
should use
\*Lsigaction(\|)\*O
and
\*Lsigprocmask(\|)\*O
to control the disposition of signals.
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lsigset(\|)\*O function returns
the previous value of the system signal action for the specified \*Vsignal.
\*OOtherwise, it returns SIG_ERR and \*Lerrno\*O
is set to indicate the error.
.PP
For the \*Lsighold(\|)\*O, \*Lsigrelse(\|)\*O, and \*Lsigignore(\|)\*O
functions, a value of 0 (zero) is returned upon success. Otherwise, a value
of -1 is returned and \*Lerrno\*O is set to
indicate the error.
.SH ERRORS
.PP
If the \*Lsigset(\|)\*O, \*Lsighold(\|)\*O, \*Lsigrelse(\|)\*O, or
\*Lsigignore(\|)\*O function fails,
\*Lerrno\*O
is set to the following value:
.VL 1i
.LI "[EINVAL]"
The \*Vsignal\*O parameter is either an illegal signal
number or SIGKILL, or the default handling of \*Vsignal\*O
cannot be changed.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lkill\*O(2),
\*Lsetjmp\*O(3),
\*Lsigaction\*O(2),
\*Lsigprocmask\*O(2),
\*Lwait\*O(2)
.PP
Files:
\*Lsignal\*O(4)
.iX "sigset function"
.iX "sighold function"
.iX "sigrelse function"
.iX "sigignore function"
.EQ
delim off
.EN
