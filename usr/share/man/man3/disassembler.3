.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: disassembler.3,v $ $Revision: 3.2.2.4 $ (DEC) $Date: 1993/02/09 11:55:41 $
.\"
.\" ------------------------------------------------------------------
.\" | Copyright Unpublished, MIPS Computer Systems, Inc.  All Rights |
.\" | Reserved.  This software contains proprietary and confidential |
.\" | information of MIPS and its suppliers.  Use, disclosure or     |
.\" | reproduction is prohibited without the prior express written   |
.\" | consent of MIPS.                                               |
.\" ------------------------------------------------------------------
.\"  disassembler.3 3.1
.TH disassembler 3
.SH NAME
disassembler \- disassemble a machine instruction and print the results
.SH SYNOPSIS
.PP
.iX "disassembler"
.sS
\*Lint disassembler (iadr, regstyle, get_symname, get_regvalue, \e\*O
.br
\*Lget_bytes, print_header)\*O
.br
\*Lunsigned long iadr;\*O
.br
\*Lint regstyle;\*O
.br
\*Lchar *(*get_symname)();\*O
.br
\*Lint (*get_regvalue)();\*O
.br
\*Llong (*get_bytes)();\*O
.br
\*Lvoid (*print_header)();\*O
.sE
.PP
The backslash (\|\e\|) indicates line continuation and need not be
included in actual use.
.SH DESCRIPTION
.PP
The
\*Ldisassembler\*O
disassembles and prints a machine instruction on
\*Vstdout\*O.
.PP
\*VIadr\*O
is the instruction address to be disassembled.
\*VRegstyle\*O
specifies how registers are named in the disassembly;
if the value is 0, compiler names are used;
otherwise, hardware names are used.
.PP
The next four arguments are function pointers,
most of which give the caller
some flexibility in the appearance of the disassembly.
The only function that
\*Vmust\*O
be provided is
\*Vget_bytes\*O.
All other functions are optional.
\*VGet_bytes\*O
is called with no arguments and returns the next byte(s) to disassemble.
.PP
\*VGet_symname\*O
is passed an address, which is the target of a
\*Ljal\*O
instruction.
If
\*LNULL\*O
is returned or if
\*Vget_symname\*O
is
\*LNULL\*O,
the
\*Ldisassembler\*O
prints the address; otherwise,
the string name is printed as returned from
\*Vget_symname.\*O
If
\*Vget_regvalue\*O
is not
\*LNULL\*O,
it is passed a register number
and returns the current contents of the specified register.
\*Ldisassembler\*O
prints this information along with the instruction disassembly.
If
\*Vprint_header\*O
is not
\*LNULL\*O,
it is passed the instruction address
\*Viadr\*O
and the current instruction to be disassembled,
which is the return value from
\*Vget_bytes\*O.
\*VPrint_header\*O
can use these parameters to print any desired information before
the actual instruction disassembly is printed.
.PP
If
\*Vget_bytes\*O
is
\*LNULL\*O,
the
\*Ldisassembler\*O
returns -1 and errno is set to
\*L\%EINVAL\*O;
otherwise, the number of bytes that were disassembled is returned.
If the disassembled word is a jump or branch instruction,
the instruction in the delay slot is also disassembled.
.PP
The program must be loaded with the object file access routine library
.ie '\*p'' \{\
\*Llibmld.a\*O.
\}
.el \{\
\*LLIBDIR/libmld.a\*O
\}
.\" .if !'\*p'' \{
.\" .PP
.\" \*LIntro\*O(4) describes
.\" \*LINCDIR\*O  and  \*LLIBDIR\*O.
.\" \}
.SH RELATED INFORMATION
.PP
.\" Why is this conditionalized?  The results are the same in either
.\" case.  Conditionalization commented out 9302.09 rfb
.\" .ie '\*p'' \{
.\" \*Lldfcn\*O(4).
.\" \}
.\" .el \{
\*Lldfcn\*O(4).
.\" \}
.EQ
delim off
.EN
