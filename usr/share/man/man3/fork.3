.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: fork.3,v $ $Revision: 3.2.2.2 $ (DEC) $Date: 1992/05/27 10:43:52 $
.\"
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\" @(#)fork.3f 6.2 (Berkeley) 5/27/86
.\"
.TH fork 3
.SH NAME
fork \- create a copy of this process
.SH SYNOPSIS
.PP
.B integer function fork()
.SH DESCRIPTION
.PP
\*VFork\*O
creates a copy of the calling process.
The only distinction between the 2 processes is that the value
returned to one of them (referred to as the `parent' process)
will be the process id of the copy.
The copy is usually referred to as the `child' process.
The value returned to the `child' process will be zero.
.PP
All logical units open for writing are flushed before the fork to avoid
duplication of the contents of I/O buffers in the external file(s).
.PP
If the returned value is negative, it indicates an error and will be
the negation of the system error code.
See \*Lperror\*O(3).
.PP
A corresponding
\*Vexec\*O
routine has not been provided because there is no satisfactory way to
retain open logical units across the exec.
However, the usual function of
\*Vfork/exec\*O
can be performed using \*Lsystem\*O(3).
.if 0 \{
A pipe can be opened to another process using the f77
.B open
statement with
.sp 1
.ti +5
.B "file=\(fm\f2process\f3\(fm, status=\(fmpipe\(fm, access=\(fmread\(fm"
.br
or
.br
.ti +5
.B "file=\(fm\f2process\f3\(fm, status=\(fmpipe\(fm, access=\(fmwrite\(fm"
\}
.SH FILES
.PP
.ie \nM /usr/ucb/lib/libU77.a
.el /usr/lib/libU77.a
.SH RELATED INFORMATION
.PP
\*Lfork\*O(2), \*Lwait\*O(3), \*Lkill\*O(3), \*Lsystem\*O(3),
\*Lperror\*O(3)
.EQ
delim off
.EN
