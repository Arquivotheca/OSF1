.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: sem_post.3,v $ $Revision: 1.2.2.4 $ (DEC) $Date: 1992/12/23 06:25:48 $
.\"
.\" SCCSID: @(#)sem_post.3   6.3   1/2/92
.TH sem_post 3
.SH NAME
\*Lsem_post\*O \- Release a locked binary semaphore (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<binsem.h>\*O
.PP
int \*Lsem_post\*O (
.br
binsemset_t \*Vbinsemdes\*O,
.br
size_t \*Vbinsemnum\*O);
.SH PARAMETERS
.PP
.TP 10
.I binsemdes
Describes the binary semaphore set that is to be unlocked.
The \*Vbinsemdes\*O argument must be a valid
descriptor of a binary semaphore set that has been obtained with a call to
the \*Lsem_open\*O function.
.TP 10
.I binsemnum
The index of the binary semaphore in the set referenced by
\*Vbinsemdes\*O. The number must be in the
range 0 to n\-1, where n is the number of semaphores created with a
call to the \*Lsem_mksem\*O  function.
.SH DESCRIPTION
.PP
The \*Lsem_post\*O function  unlocks the specified binary semaphore by
performing the semaphore unlock operation on that binary semaphore. The
\*Lsem_open\*O function must be called for a binary semaphore set before you
can call the locking and unlocking functions, \*Lsem_wait\*O, \*Lsem_ifwait\*O,
and \*Lsem_post\*O.
.PP
If more than one process is blocked while waiting for the binary semaphore,
only one process is unblocked and the state of the binary semaphore remains
unchanged when the \*Lsem_post\*O function returns. The process to be
unblocked is selected according to the scheduling policies and priorities
of all blocked processes. If the scheduling policy is SCHED_FIFO or SCHED_RR,
the highest priority waiting process is unblocked. If more than one process
of that priority is blocked, then the process that has waited the longest
amount of time is unblocked.
.PP
The \*Lsem_post\*O function can be called from a signal-catching function.
.iX "semaphore" "releasing"
.iX "semaphore" "unlocking"
.iX "sem_post function"
.SH RETURN VALUES
.PP
On successful completion, the \*Lsem_post\*O function returns the value 0 and
performs a semaphore unlock operation, unblocking a process.
.PP
Otherwise, the function returns the value \-1 and sets \*Lerrno\*O to
indicate the error.  The state of the binary semaphore remains unchanged.
.SH ERRORS
.PP
The \*Lsem_post\*O function fails under the following conditions:
.TP 15
[EAGAIN]
The specified binary semaphore is already locked.
.TP 15
[EINVAL]
The \*Vbinsemdes\*O and \*Vbinsemnum\*O arguments do not refer to a
valid binary semaphore.
.TP 15
[ENOSYS]
The function \*Lsem_post\*O is not supported by this implementation.
.SH RELATED INFORMATION
.PP
Functions:
\*Lsem_close\*O(3),
\*Lsem_ifwait\*O(3),
\*Lsem_open\*O(3),
\*Lsem_wait\*O(3)
.EQ
delim off
.EN
