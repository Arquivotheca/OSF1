.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: wcsncat.3,v $ $Revision: 1.1.3.4 $ (DEC) $Date: 1993/11/19 16:39:07 $
.\"
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH wcsncat 3
.SH NAME
.PP
\*Lwcsncat\*O, \*Lwcsncmp\*O, \*Lwcsncpy\*O \- Perform operations on wide-character strings with a character count
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <wchar.h>
.PP
\*Lwchar_t *wcsncat(
.nL
	wchar_t *\*Vwcstring1\*L,
.nL
	\*Lconst wchar_t *\*Vwcstring2\*L,
.nL
	\*Lsize_t \*Vnumber\*L);
.PP
\*Lint wcsncmp(
.nL
	const wchar_t *\*Vwcstring1\*L,
.nL
	const wchar_t *\*Vwcstring2\*L,
.nL
	size_t \*Vnumber\*L);
.PP
\*Lwchar_t *wcsncpy(
.nL
	wchar_t *\*Vwcstring1\*L,
.nL
	const wchar_t *\*Vwcstring2\*L,
.nL
	size_t \*Vnumber\*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vwcstring1\*O"
Points to a location containing the first wide-character string.
.LI "\*Vwcstring2\*O"
Points to a location containing the second wide-character string.
.LI "\*Vnumber\*O"
Specifies the number of wide characters in the string operation.
In \*Lwcsncat(\|)\*O, specifies the maximum number of wide characters
to append; in \*Lwcsncmp(\|)\*O, specifies the maximum number of wide
characters to compare; and, in \*Lwcsncpy\*O, specifies the number of
wide characters to copy.
.LE
.SH DESCRIPTION
.PP
.iX "wcsncat function"
.iX "wcsncmp function"
.iX "wcsncpy function"
.iX "wide-characters" "appending"
.iX "wide-characters" "comparing"
.iX "wide-characters" "copying"
The \*Lwcsncat(\|)\*O, \*Lwcsncmp(\|)\*O, and \*Lwcsncpy(\|)\*O functions
operate on null-terminated, wide-character strings.
.PP
The \*Lwcsncat(\|)\*O function appends characters from the
\*Vwcstring2\*O parameter to the end of the \*Vwcstring1\*O parameter.
The initial character of the \*Lwcstring2\*O parameter overwrites the
terminating null wide character of the \*Lwcstring1\*O parameter.
The \*Lwcsncat(\|)\*O function appends at most the
number of characters specified by the value of
the \*Vnumber\*O parameter minus 1.  The function then appends a null wide
character to the result, and returns \*Vwcstring1\*O.
When operating on overlapping strings, the behavior of this
function is unreliable.
.PP
The \*Lwcsncmp(\|)\*O function compares the wide characters in the
\*Vwcstring1\*O parameter to the \*Vwcstring2\*O parameter.  The
\*Lwcsncmp(\|)\*O function compares wide characters until it has
compared \*Vnumber\*O wide characters or until it has reached a
terminating null wide character.  The function compares at most the number of
wide characters specified by the value of the \*Vnumber\*O parameter.
.PP
The \*Lwcsncmp(\|)\*O function compares strings based on the machine
collating order. It does not use the locale-dependent sorting order.
Use the \*Lwcscol(\|)\*O function for
locale-dependent sorting.
.PP
The \*Lwcsncpy(\|)\*O function copies wide characters from the
\*Vwcstring2\*O parameter to the \*Vwcstring1\*O parameter and returns
\*Vwcstring1\*O.  The function copies the number of
wide characters specified by the value of the \*Vnumber \*O parameter.
If \*Vwcstring2\*O is shorter than \*Vnumber\*O characters,
\*Vwcstring1\*O is padded out to \*Vnumber\*O characters with null
wide characters.
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lwcsncat(\|)\*O and \*Lwcsncpy(\|)\*O
functions return a pointer to the
resulting string. Otherwise, these functions return a null pointer.
.PP
Upon successful completion, the \*Lwcsncmp(\|)\*O
function returns an integer whose value is greater than 0 (zero) if
\*Vwcstring1\*O is greater than \*Vwcstring2\*O,
returns 0 (zero) if the strings are
equivalent, and returns an integer whose value is less than 0 (zero)
if \*Vwcstring1\*O is less than \*Vwcstring2\*O.
When a successful comparison cannot be made,
these functions return a value of 0 (zero).
.SH RELATED INFORMATION
.PP
Functions:
\*Lstrncat\*O(3),
\*Lwcschr\*O(3),
\*Lwcscmp\*O(3), \*Lwcscpy\*O(3), \*Lwcscspn\*O(3).
.EQ
delim off
.EN
