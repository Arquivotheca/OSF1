.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XFocusChangeEvent.3X11,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:24:59 $
.\" 
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"     choose appropriate monospace font
.\"     the imagen conditional, 480,
.\"     may be changed to L if LB is too
.\"     heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.               \" Note End -- doug kraft 3/85
.ny0
.TH XFocusChangeEvent 3X11 "" "" "" "X11R5"
.SH NAME
XFocusChangeEvent \- FocusIn and FocusOut event structure
.SH STRUCTURES
The structure for
.PN FocusIn  
and
.PN FocusOut
events contains:
.LP
.PP
.ft CW
.nf
.ps -4
typedef struct {
        int type;       /* FocusIn or FocusOut */
        unsigned long serial;   /* # of last request processed by server */
        Bool send_event;        /* true if this came from a SendEvent request */
        Display *display;       /* Display the event was read from */
        Window window;  /* window of event */
        int mode;       /* NotifyNormal, NotifyGrab, NotifyUngrab */
        int detail;
                /*
                * NotifyAncestor, NotifyVirtual, NotifyInferior, 
                * NotifyNonlinear,NotifyNonlinearVirtual, NotifyPointer,
                * NotifyPointerRoot, NotifyDetailNone 
                */
} XFocusChangeEvent;
typedef XFocusChangeEvent XFocusInEvent;
typedef XFocusChangeEvent XFocusOutEvent;
.ps +4
.fi
.ft P
.PP
.LP
When you receive these events,
the structure members are set as follows.
.LP
The type member is set to the event type constant name that uniquely identifies
it.
For example, when the X server reports a
.PN GraphicsExpose
event to a client application, it sends an
.PN XGraphicsExposeEvent
structure with the type member set to
.PN GraphicsExpose .
The display member is set to a pointer to the display the event was read on.
The send_event member is set to
.PN True
if the event came from a
.PN SendEvent
protocol request.
The serial member is set from the serial number reported in the protocol
but expanded from the 16-bit least-significant bits to a full 32-bit value.
The window member is set to the window that is most useful to toolkit
dispatchers.
.LP
The window member is set to the window on which the
.PN FocusIn
or
.PN FocusOut
event was generated.
This is the window used by the X server to report the event. 
The mode member is set to indicate whether the focus events 
are normal focus events, 
focus events while grabbed,
focus events
when a grab activates, or focus events when a grab deactivates.
The X server can set the mode member to 
.PN NotifyNormal ,
.PN NotifyWhileGrabbed ,
.PN NotifyGrab ,
or
.PN NotifyUngrab .
.LP
All 
.PN FocusOut
events caused by a window unmap are generated after any
.PN UnmapNotify
event; however, the X protocol does not constrain the ordering of 
.PN FocusOut
events with respect to
generated 
.PN EnterNotify ,
.PN LeaveNotify ,
.PN VisibilityNotify ,
and
.PN Expose
events.
.LP
Depending on the event mode,
the detail member is set to indicate the notify detail and can be
.PN NotifyAncestor ,
.PN NotifyVirtual ,
.PN NotifyInferior ,
.PN NotifyNonlinear ,
.PN NotifyNonlinearVirtual ,
.PN NotifyPointer ,
.PN NotifyPointerRoot ,
or
.PN NotifyDetailNone .
.SH "SEE ALSO"
XAnyEvent(3X11),
XButtonEvent(3X11),
XCreateWindowEvent(3X11),
XCirculateEvent(3X11),
XCirculateRequestEvent(3X11),
XColormapEvent(3X11),
XConfigureEvent(3X11),
XConfigureRequestEvent(3X11),
XCrossingEvent(3X11),
XDestroyWindowEvent(3X11),
XErrorEvent(3X11),
XExposeEvent(3X11),
XGraphicsExposeEvent(3X11),
XGravityEvent(3X11),
XKeymapEvent(3X11),
XMapEvent(3X11),
XMapRequestEvent(3X11),
XPropertyEvent(3X11),
XReparentEvent(3X11),
XResizeRequestEvent(3X11),
XSelectionClearEvent(3X11),
XSelectionEvent(3X11),
XSelectionRequestEvent(3X11),
XUnmapEvent(3X11),
XVisibilityEvent(3X11)
.br
\f2\*(xL\fP
.EQ
delim off
.EN
