.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: setbuf.3,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1993/10/05 14:56:53 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.\"
.TH setbuf 3
.SH NAME
.PP
\*Lsetbuf\*O, \*Lsetvbuf\*O, \*Lsetvbuf_unlocked\*O, \*Lsetbuffer\*O, \*Lsetlinebuf\*O \- Assign buffering to a stream
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <stdio.h>\*O
.PP
\*Lvoid setbuf(
.nL
        \*LFILE *\*Vstream\*L,
.nL
        char *\*Vbuffer\*L);\*O
.PP
\*Lint setvbuf(
.nL
        FILE *\*Vstream\*L,
.nL
        char *\*Vbuffer\*L,
.nL
        int \*Vmode\*L,
.nL
        size_t \*Vsize\*L);\*O
.PP
\*Lint setvbuf_unlocked(
.nL
        FILE *\*Vstream\*L,
.nL
        char *\*Vbuffer\*L,
.nL
        int \*Vmode\*L,
.nL
        size_t \*Vsize\*L);\*O
.PP
\*Lvoid setbuffer(
.nL
        FILE *\*Vstream\*L,
.nL
        char *\*Vbuffer\*L,
.nL
        int \*Vsize\*L);\*O
.PP
\*Lvoid setlinebuf(
.nL
        FILE *\*Vstream\*L);\*O
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vstream\*O"
Specifies the input/output stream.
.LI "\*Vbuffer\*O"
Points to a character array.
.LI "\*Vmode\*O"
Determines how the \*Vstream\*O parameter is buffered.
.LI "\*Vsize\*O"
Specifies the size of the buffer to be used.
.LE
.SH DESCRIPTION
.PP
.iX "setbuf function"
.iX "setvbuf function"
.iX "setvbuf_unlocked function"
.iX "setbuffer function"
.iX "setlinebuf function"
.iX "buffer" "assigning"
.iX "assigning buffers"
The \*Lsetbuf(\|)\*O function causes the character array pointed
to by the \*Vbuffer\*O parameter to be used instead of an automatically
allocated buffer.  Use the \*Lsetbuf(\|)\*O function after a stream
has been opened but before it is read or written.
.PP
If the \*Vbuffer\*O parameter is a null-character pointer,
input/output is unbuffered.
.PP
A constant, \*LBUFSIZ\*O, defined in the \*Lstdio.h\*O header
file, tells how large an array is needed:
.PP
.oS
\*Lchar buf[BUFSIZ];\*O
.oE
.PP
For the \*Lsetvbuf(\|)\*O function, the \*Vmode\*O parameter
determines how the \*Vstream\*O parameter is buffered:
.VL
.LI "\*L_IOFBF\*O"
Causes input/output to be fully buffered.
.LI "\*L_IOLBF\*O"
Causes output to be line buffered.  The buffer
is flushed when a new line is written, the buffer is full, or input
is requested.
.LI "\*L_IONBF\*O"
Causes input/output to be completely unbuffered.
.LE
.PP
If the \*Vbuffer\*O parameter is not a null-character pointer,
the array that the parameter points to is used for buffering instead of a
buffer that is automatically allocated.
The \*Vsize\*O parameter specifies the size
of the buffer to be used.  The constant \*LBUFSIZ\*O in the \*Lstdio.h\*O
header file is one buffer
size.  If input/output is unbuffered, the \*Vbuffer\*O and \*Vsize\*O
parameters are ignored. The \*Lsetbuffer(\|)\*O function, an
alternate form of the \*Lsetbuf(\|)\*O function, is used after \*Vstream\*O
has been opened but before it is read or written.  The character
array \*Vbuffer\*O, whose size is determined by the \*Vsize\*O
parameter, is used instead of an automatically allocated buffer. If
the \*Vbuffer\*O parameter is a null-character pointer, input/output
is completely unbuffered.
.PP
The \*Lsetbuffer(\|)\*O function is not needed under normal circumstances,
since the default file I/O buffer size is optimal.
.PP
The \*Lsetlinebuf(\|)\*O function is used to change \*Lstdout\*O
or \*Lstderr\*O from block buffered or unbuffered to line buffered.
Unlike the \*Lsetbuf(\|)\*O and \*Lsetbuffer(\|)\*O functions, the \*Lsetlinebuf(\|)\*O
function can be used any time the file descriptor is active.
.PP
A buffer is normally obtained from the \*Lmalloc(\|)\*O function
at the time of the first \*Lgetc(\|)\*O or \*Lputc(\|)\*O
function on the file, except that the standard error stream, \*Lstderr\*O,
is normally not buffered.
.PP
Output streams directed to terminals are always either line buffered
or unbuffered.
.PP
The \*Lsetvbuf_unlocked(\|)\*O function is functionally identical to the
\*Lsetvbuf(\|)\*O function, except that \*Lsetvbuf_unlocked(\|)\*O
may be safely used only within a scope that is protected by the
\*Lflockfile(\|)\*O and \*Lfunlockfile(\|)\*O functions used as a
pair.  The caller must ensure that the stream is locked before these
functions are used.
.SH RETURN VALUES
.PP
The \*Lsetvbuf(\|)\*O and \*Lsetvbuf_unlocked(\|)\*O functions return
zero when successful.  If they cannot honor the request, or if you give
an invalid value in the \*Vmode\*O argument, they return a
nonzero value.
.SH NOTES
.PP
A common source of error is allocating buffer
space as an automatic variable in a code block, and then failing to
close the stream in the same block.
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use (\*Lsetbuf(\|)\*O, \*Lsetvbuf(\|)\*O).
.LE
.SH ERRORS
.PP
If the following condition occurs, the \*Lsetvbuf(\|)\*O function sets
\*Lerrno\*O to the corresponding value.
.VL
.LI "[EBADF]"
The file descriptor that underlies \*Vstream\*O is invalid.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lfopen\*O(3),
\*Lfread\*O(3),
\*Lgetc\*O(3),
\*Lgetwc\*O(3),
\*Lmalloc\*O(3),
\*Lputc\*O(3),
\*Lputwc\*O(3).
.EQ
delim off
.EN
