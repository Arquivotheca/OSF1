.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pthread_setasynccancel.3,v $ $Revision: 3.2.2.3 $ (DEC) $Date: 1992/07/22 12:24:50 $
.\" 
...\" Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED.
.wH ********************************************************************
.wH                                                                    *
.wH COPYRIGHT (c) 1990 BY DIGITAL EQUIPMENT CORPORATION,               *
.wH Maynard, Mass.                                                     *
.wH                                                                    *
.wH This document is furnished under a license and may be used and     *
.wH copied only in accordance with the terms of such license and with  *
.wH the inclusion of the above copyright notice. This document or any  *
.wH other copies thereof may not be provided or otherwise made         *
.wH available to any other person. No title to or ownership of the     *
.wH document is hereby transferred.                                    *
.wH                                                                    *
.wH The information in this document is subject to change without      *
.wH notice and should not be construed as a commitment by DIGITAL      *
.wH Equipment Corporation.                                             *
.wH                                                                    *
.wH ********************************************************************
.wH "<routine_section>"
.TH pthread_setasynccancel 3
.iX "Cancel" "enabling and disabling asynchronous delivery of"
.iX "Cancel" "asynchronous delivery and exception handlers"
.iX "Cancelability" "asynchronous"
.iX "Enabling asynchronous delivery of cancels"
.iX "Disabling asynchronous delivery of cancels"
.iX "Delivery of cancels" "enabling and disabling asynchronous delivery of"
.SH NAME
.PP
\*Lpthread_setasynccancel\*O \- Enables or disables the current thread's asynchronous cancelability.
.wH "<endosf_overview>"
.SH SYNOPSIS
.PP
.sS
\*L#include <pthread.h>
.fS "int pthread_setasynccancel"
.dS "int"
\*Vstate\*O
.dE
.fE
.sE
.wH "<endformat>"
.SH PARAMETERS
.PP
.VL 5m
.LI "\*Vstate\*O"
State of asynchronous cancelability set for the calling thread. On return,
receives the prior state of asynchronous cancelability. Valid values are as
follows:
.VL 8m
.LI "\*LCANCEL_ON\*O"
Asynchronous cancelability is enabled.
.LI "\*LCANCEL_OFF\*O"
Asynchronous cancelability is disabled.
.LE
.LE
.wH "<endparameters>"
.SH DESCRIPTION
.PP
This routine enables or disables the current thread's asynchronous
cancelability and returns the previous cancelability state to the
\*Vstate\*O parameter.
.PP
When general cancelability is set to \*LCANCEL_OFF\*O, a cancel cannot
be delivered to the thread, even if a cancelable routine is called or
asynchronous cancelability is enabled. When general cancelability is
set to \*LCANCEL_ON\*O, cancelability depends on the state of the
thread's asynchronous cancelability.
.PP
When general cancelability is set to \*LCANCEL_ON\*O and asynchronous
cancelability is set to \*LCANCEL_OFF\*O, the thread can only receive
a cancel at specific cancelation points (for example, condition waits,
thread joins and calls to \*Lpthread_testcancel\*O). If both general
cancelability and asynchronous cancelability are set to
\*LCANCEL_ON\*O, the thread can be canceled at any point in its
execution.
.PP
When a thread is created, the default asynchronous cancelability state is
\*LCANCEL_OFF\*O.
.PP

.wH "<mark>"
If you call this routine to enable asynchronous cancels, call it in a region
of code where asynchronous delivery of cancels has been disabled by a
previous call to this routine. Threads routines should not be called in
regions of code where asynchronous delivery of cancels is enabled.
.wH "<endmark>"
The previous state of asynchronous delivery can be restored later by another
call to this routine.
.SH RETURN VALUES
.PP
If an error condition occurs, this routine returns \-1 and sets
\*Eerrno\*O to the corresponding error value. Possible return values
are as follows:
.sp
.TS
center, tab(@);
l l lw(2.5i).
\*LReturn@Error@Description\*O
_
\00@@Successful completion.
\&\-1@[\*LEINVAL\*O]@T{
The specified state is not \*LCANCEL_ON\*O or \*LCANCEL_OFF\*O.
T}
.TE
.wH "<endnas_return>"
.cS
.SH EXAMPLES
.PP
.oS
int pthread_setasynccancel (int *state);
.oE
.cE
.wH "<endnas_examples>"
.SH RELATED INFORMATION
.PP
\*Lpthread_cancel\*O(3),
\*Lpthread_setcancel\*O(3),
\*Lpthread_testcancel\*O(3)
.EQ
delim off
.EN
