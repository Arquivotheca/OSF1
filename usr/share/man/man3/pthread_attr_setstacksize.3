.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pthread_attr_setstacksize.3,v $ $Revision: 3.3.4.2 $ (DEC) $Date: 1994/01/13 15:25:07 $
.\" 
...\" Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED.
.wH "<routine_section>"
.TH pthread_attr_setstacksize 3
.SH NAME
\*Lpthread_attr_setstacksize\*O \- Changes the stacksize attribute of thread creation.
.SH SYNOPSIS
.iX "Attribute" "stacksize"
.iX "Stacksize attribute"
.iX "Creating a thread" "stacksize attribute"
.iX "Thread creation" "stacksize attribute"
.iX "Stack" "changing minimum size of"
.sS
\*L#include <pthread.h>
.fS "int pthread_attr_setstacksize"
.dS "pthread_attr_t"
\*V*attr\*L
.dE
.dS "long"
\*Vstacksize\*O
.dE
.fE
.sE
.wH "<endformat>"
.SH PARAMETERS
.PP
.VL 5m
.LI "\*Vattr\*O"
Threads attributes object modified.
.LI "\*Vstacksize\*O"
New value for the stacksize attribute. The \*Vstacksize\*O parameter
specifies the minimum size (in bytes) of stack needed for a thread.
.LE
.wH "<endparameters>"
.SH DESCRIPTION
.PP
This routine sets the minimum size (in bytes) of the stack needed for a thread created using the attributes object specified by the \*Vattr\*O parameter. Use this routine to adjust the size of the writable area of the stack. The default stacksize value is available by calling pthread_attr_getstacksize on a newly created attributes object.
.PP
A thread's stack is fixed at the time of thread creation. Only the main or
initial thread can dynamically extend its stack.
.PP
Most compilers do not check for stack overflow.
Ensure that your thread stack is large enough for anything that you call
from the thread.
.SH RETURN VALUES
.PP
If an error condition occurs, this routine returns \-1 and sets
\*Eerrno\*O to the corresponding error value. Possible return values
are as follows:
.sp
.TS
center, tab(@);
l l l.
\*LReturn@Error@Description\*O
_
\00@@Successful completion.
\-1@[\*LEINVAL\*O]@T{
The value specified by \*Vattr\*O is invalid.
T}
\-1@[\*LESRCH\*O]@T{
The value specified by \*Vattr\*O does not refer to an existing thread
attributes object.
T}
.TE
.wH "<endnas_return>"
.cS
.SH EXAMPLES
.PP
.oS
int pthread_attr_setstacksize (pthread_attr_t *attr,
	long stacksize);
.oE
.cE
.wH "<endnas_examples>"
.SH RELATED INFORMATION
.PP
\*Lpthread_attr_create\*O(3),
\*Lpthread_attr_getstacksize\*O(3),
\*Lpthread_create\*O(3)
.EQ
delim off
.EN
