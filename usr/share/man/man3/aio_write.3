.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: aio_write.3,v $ $Revision: 1.2.2.6 $ (DEC) $Date: 1993/01/11 16:29:40 $
.\" 
.\" SCCSID: @(#)aio_write.3	6.5	3/19/91
.\" SCCSID: @(#)aio_write.3	6.5	1/7/92
.TH aio_write 3
.SH NAME
.PP
\*Laio_write\*O \- Queue an asynchronous write request to the specified file descriptor (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<aio.h>\*O
.PP
int \*Laio_write\*O (
.br
struct \*Laiocb\*O \*V*aiocbp\*O);
.SH PARAMETERS
.PP
.TP 8
.I *aiocbp
A pointer to an \*Laiocb\*O structure.
.SH DESCRIPTION
.PP
.iX "aio_write function"
.iX "input/output" "asynchronous write"
The \*Laio_write\*O
function issues a write request and returns,
even when the data cannot be written immediately. If the request cannot be
initiated, the function returns with an error status. If an
error condition occurs during queuing, the function call returns without
initiating the queue request.
.PP
The \*Vaiocbp\*O argument points to an asynchronous control block
structure, \*Laiocb\*O, used in the asynchronous I/O interfaces.
The \*Laiocbp\*O structure contains asynchronous operation
information, such as  the number of bytes for the write operation as well as
the buffer containing the data to be written to the file descriptor
specified in the \*Vaio_fildes\*O member of the \*Laiocbp\*O structure.
.PP
The \*Laiocb\*O structure has the following members:
.TP 15
int
.I aio_fildes;
.TP 15
off_t
.I aio_offset;
.TP 15
volatile char
.I *aio_buf;
.TP 15
size_t
.I aio_nbytes;
.TP 15
int
.I aio_reqprio;
.TP 15
struct sigevent
.I aio_sigevent;
.PP
The \*Vaio_fildes\*O member is the file descriptor on which the asynchronous
operation is to be performed. If O_APPEND is set for the file descriptor,
write operations append to the file in the same order as the calls were made.
If O_APPEND is not set, then the requested operation takes place at the
position in the file as given by \*Vaio_offset\*O (as if the \*Llseek\*O
function were called prior to the operation with an \*Voffset\*O equal to
\*Vaio_offset\*O and a \*Vwhence\*O set to SEEK_SET.)
After any asynchronous I/O operation
\*Vaio_offset\*O member is undefined and must be set explicitly for every
asynchronous I/O request.
.PP
The \*Vaio_nbytes\*O and \*Vaio_buf\*O members are the same as the \*Vnbyte\*O
and \*Vbuf\*O arguments defined by POSIX.1 \*Lread\*O and \*Lwrite\*O
functions.
.PP
Prioritized asynchronous I/O is not supported. For portability reasons,
the \*Vaio_reqprio\*O member should be specified
as AIO_PRIO_DFL, the default priority, as defined in the \*L<limits.h>\*O
header file.
.PP
The \*Vaio_sigevent\*O member defines the signal generated once the I/O operation
is complete. If \*Vaio_sigevent.sevt_signo\*O is zero, no signal is
posted on completion.
.PP
Pending I/O operations are handled as follows:
.RS 3
.IP \(bu 3
On close, outstanding I/O operations can be canceled.
.IP \(bu
On \*L_exit\*O and \*Lexec\*O,
outstanding asynchronous I/O operations can be canceled.
.IP \(bu
On \*Lfork\*O, no asynchronous I/O is inherited.
.RE
.SH RETURN VALUES
.PP
On a successful call, a value of 0 is returned and the I/O operation is
successfully queued.
.PP
On an unsuccessful call,
a value of \-1 is returned and \*Lerrno\*O is
set to indicate that an error occurred.
.SH ERRORS
.PP
The \*Laio_write\*O function fails under the following conditions:
.TP 15
[EAGAIN]
The requested asynchronous I/O operation was not queued due to system
resource limitations.
.TP 15
[EBADF]
The \*Vaiocbp\->aio_fildes\*O argument is not a valid file descriptor open
for writing.
.SH RELATED INFORMATION
.PP
Functions:
\*Lclose\*O(2), \*Lexec\*O(2), \*L_exit\*O(2), \*Lfork\*O(2),
\*Llseek\*O(2), \*Lread\*O(2), \*Lwrite\*O(2),
\*Laio_cancel\*O(3), \*Laio_error\*O(3), \*Laio_read\*O(3),
\*Laio_return\*O(3), \*Llio_listio\*O(3)
.EQ
delim off
.EN
