.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XmbTextListToTextProperty.3X11,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:45:31 $
.\" 
'\" t
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"     choose appropriate monospace font
.\"     the imagen conditional, 480,
.\"     may be changed to L if LB is too
.\"     heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.               \" Note End -- doug kraft 3/85
.ny0
'\" t
.TH XmbTextListToTextProperty 3X11 "" "" "" "X11R5"
.SH NAME
XmbTextListToTextProperty, XwcTextListToTextProperty, XmbTextPropertyToTextList, XwcTextPropertyToTextList, XwcFreeStringList, XDefaultString \- convert text lists and text property structures
.SH SYNTAX
int XmbTextListToTextProperty\^(\^\f2display\fP\^, \f2list\fP\^, \f2count\fP\^, \f2style\fP\^, \f2text_prop_return\fP\^)
.br
      Display *\f2display\fP\^;
.br
      char **\f2list\fP\^;
.br
      int \f2count\fP\^;
.br
      XICCEncodingStyle \f2style\fP\^;
.br
      XTextProperty *\f2text_prop_return\fP\^;
.LP
int XwcTextListToTextProperty\^(\^\f2display\fP\^, \f2list\fP\^, \f2count\fP\^, \f2style\fP\^, \f2text_prop_return\fP\^)
.br
      Display *\f2display\fP\^;
.br
      wchar_t **\f2list\fP\^;
.br
      int \f2count\fP\^;
.br
      XICCEncodingStyle \f2style\fP\^;
.br
      XTextProperty *\f2text_prop_return\fP\^;
.LP
int XmbTextPropertyToTextList\^(\^\f2display\fP\^, \f2text_prop\fP\^, \f2list_return\fP\^, \f2count_return\fP\^)
.br
      Display *\f2display\fP\^;
.br
      XTextProperty *\f2text_prop\fP\^;
.br
      char ***\f2list_return\fP\^;
.br
      int *\f2count_return\fP\^;
.LP
int XwcTextPropertyToTextList\^(\^\f2display\fP\^, \f2text_prop\fP\^, \f2list_return\fP\^, \f2count_return\fP\^)
.br
      Display *\f2display\fP\^;
.br
      XTextProperty *\f2text_prop\fP\^;
.br
      wchar_t ***\f2list_return\fP\^;
.br
      int *\f2count_return\fP\^;
.LP
void XwcFreeStringList\^(\^\f2list\fP\^)
.br
      wchar_t **\f2list\fP\^;
.LP
char *XDefaultString\^(\|)
.SH ARGUMENTS
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XmbTextListToTextProperty.3X11,v 1.2.4.2 1993/05/03 16:45:31 Joyce_Demers Exp $
.IP \f2display\fP 1i
Specifies the connection to the X server.
.IP \f2list\fP 1i
Specifies a list of null-terminated character strings.
.IP \f2count\fP 1i
Specifies the number of strings specified.
.IP \f2style\fP 1i
Specifies the manner in which the property is encoded.
.IP \f2text_prop_return\fP 1i
Returns the
.PN XTextProperty
structure.
.IP \f2text_prop\fP 1i
Specifies the
.PN XTextProperty
structure to be used.
.IP \f2list_return\fP 1i
Returns a list of null-terminated character strings.
.ds Cn strings
.IP \f2count_return\fP 1i
Returns the number of \*(Cn.
.IP \f2list\fP 1i
Specifies the list of strings to be freed.
.SH DESCRIPTION
The
.PN XmbTextListToTextProperty
and
.PN XwcTextListToTextProperty
functions set the specified 
.PN XTextProperty
value to a set of null-separated elements representing the concatenation
of the specified list of null-terminated text strings.
A final terminating null is stored at the end of the value field 
of text_prop_return but is not included in the nitems member.
.LP
The functions set the encoding field of text_prop_return to an Atom 
for the specified display 
naming the encoding determined by the specified style, 
and convert the specified text list to this encoding for storage in
the text_prop_return value field.
If the style 
.PN XStringStyle
or 
.PN XCompoundTextStyle
is specified,
this encoding is ``STRING'' or ``COMPOUND_TEXT'', respectively.
If the style 
.PN XTextStyle
is specified,
this encoding is the encoding of the current locale.
If the style 
.PN XStdICCTextStyle
is specified,
this encoding is ``STRING'' if the text is fully convertible to STRING,
else ``COMPOUND_TEXT''.
.LP
If insufficient memory is available for the new value string,
the functions return 
.PN XNoMemory .
If the current locale is not supported,
the functions return 
.PN XLocaleNotSupported .
In both of these error cases,
the functions do not set text_prop_return.
.LP
To determine if the functions are guaranteed not to return
.PN XLocaleNotSupported ,
use
.PN XSupportsLocale .
.LP
If the supplied text is not fully convertible to the specified encoding,
the functions return the number of unconvertible characters.
Each unconvertible character is converted to an implementation-defined and
encoding-specific default string.
Otherwise, the functions return 
.PN Success .
Note that full convertibility to all styles except 
.PN XStringStyle
is guaranteed.
.LP
To free the storage for the value field, use
.PN XFree .
.LP
The 
.PN XmbTextPropertyToTextList
and 
.PN XwcTextPropertyToTextList
functions return a list of text strings in the current locale representing the
null-separated elements of the specified
.PN XTextProperty
structure.
The data in text_prop must be format 8.
.LP
Multiple elements of the property (for example, the strings in a disjoint
text selection) are separated by a null byte.
The contents of the property are not required to be null-terminated;
any terminating null should not be included in text_prop.nitems.
.LP
If insufficient memory is available for the list and its elements,
.PN XmbTextPropertyToTextList
and
.PN XwcTextPropertyToTextList
return 
.PN XNoMemory .
If the current locale is not supported,
the functions return
.PN XLocaleNotSupported .
Otherwise, if the encoding field of text_prop is not convertible 
to the encoding of the current locale,
the functions return
.PN XConverterNotFound .
For supported locales,
existence of a converter from COMPOUND_TEXT, STRING,
or the encoding of the current locale is guaranteed if
.PN XSupportsLocale 
returns 
.PN True
for the current locale (but the actual text may contain unconvertible characters.)
Conversion of other encodings is implementation-dependent.
In all of these error cases,
the functions do not set any return values.
.LP
Otherwise, 
.PN XmbTextPropertyToTextList
and
.PN XwcTextPropertyToTextList
return the list of null-terminated text strings to list_return,
and the number of text strings to count_return.
.LP
If the value field of text_prop is not fully convertible to the encoding of
the current locale,
the functions return the number of unconvertible characters.
Each unconvertible character is converted to a string in the
current locale that is specific to the current locale.
To obtain the value of this string, 
use
.PN XDefaultString .
Otherwise,
.PN XmbTextPropertyToTextList
and
.PN XwcTextPropertyToTextList
return 
.PN Success .
.LP
To free the storage for the list and its contents returned by
.PN XmbTextPropertyToTextList ,
use
.PN XFreeStringList .
To free the storage for the list and its contents returned by
.PN XwcTextPropertyToTextList ,
use
.PN XwcFreeStringList .
.LP
The
.PN XwcFreeStringList
function frees memory allocated by
.PN XwcTextPropertyToTextList .
.LP
The
.PN XDefaultString
function returns the default string used by Xlib for text conversion
(for example, in 
.PN XmbTextListToTextProperty ).
The default string is the string in the current locale which is output 
when an unconvertible character is found during text conversion.
If the string returned by
.PN XDefaultString
is the empty string (""),
no character is output in the converted text.
.PN XDefaultString
does not return NULL.
.LP
The string returned by 
.PN XDefaultString
is independent of the default string for text drawing;
see 
.PN XCreateFontSet
to obtain the default string for an
.PN XFontSet .
.LP
The behavior when an invalid codepoint is supplied to any Xlib function is
undefined.
.LP
The returned string is null-terminated.
It is owned by Xlib and should not be modified or freed by the client.
It may be freed after the current locale is changed.
Until freed, it will not be modified by Xlib.
.SH STRUCTURES
The
.PN XTextProperty
structure contains:
.LP
.PP
.ft CW
.nf
.ps -4
typedef struct          {
        unsigned char *value;   /* property data */
        Atom encoding;  /* type of property */
        int format;     /* 8, 16, or 32 */
        unsigned long nitems;   /* number of items in value */
} XTextProperty;
.ps +4
.fi
.ft P
.PP
.LP
The
.PN XICCEncodingStyle
structure contains:
.LP
.TS
tab();
l l l.
T{
#define
T}T{
.PN XNoMemory
T}T{
\-1
T}
T{
#define
T}T{
.PN XLocaleNotSupported
T}T{
\-2
T}
T{
#define
T}T{
.PN XConverterNotFound
T}T{
\-3
T}
.TE
.PP
.ft CW
.nf
.ps -4
typedef enum {
        XStringStyle,           /* STRING */
        XCompoundTextStyle,     /* COMPOUND_TEXT */
        XTextStyle,             /* text in owner's encoding (current locale) */
        XStdICCTextStyle        /* STRING, else COMPOUND_TEXT */
} XICCEncodingStyle;
.ps +4
.fi
.ft P
.PP
.SH "SEE ALSO"
XSetTextProperty(3X11),
XStringListToTextProperty(3X11)
.br
\f2\*(xL\fP
.EQ
delim off
.EN
