.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: ldr_xentry.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/06/16 16:34:58 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\"
.TH ldr_xentry 3
.SH NAME
\*Lldr_xentry \- \*OReturns the entry point for a module loaded in another process
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <sys/types.h>\*O
.nL
\*L#include <loader.h>\*O
.nL
\*Lint\*O
\*Lldr_xentry\*O(
.nL
	\*Lldr_process_t\*O\*Vprocess\*O,
.nL
\*Lldr_module_t\*O
\*Vmod_id\*O,
.nL
\*Lldr_entry_pt_t\*O
\*V*entry_pt\*O);
.sE
.SH PARAMETERS
.PP
.\"from TP .5i"  
.VL
.LI "\*Vprocess\*O"
Specifies the process whose address space contains the
module for which the entry point is required.
.\"from TP "  
.LI "\*Vmod_id\*O"
Identifies the loaded module.  The module ID
is returned when the module is first loaded.
.\"from TP "  
.LI "\*Ventry_pt\*O"
Points to a buffer in which the entry point will be returned.
.LE
.SH DESCRIPTION
.PP
.iX "ldr_xentry function"
.iX "loaded module" "returning entry point for in another process"
.iX "loader" "returning entry point for loaded module in another process"
.PP
The
\*Lldr_xentry(\|)\*O
function returns the entry point for the specified
module in the address space of the specified process.
.PP
To obtain the unique identifier for the current process, use the following
call:
.rS
	\*Lldr_process_t ldr_my_process(\|);\*O
.rE
To obtain the unique identifier for the kernel, use the following call:
.rS
	\*Lldr_process_t ldr_kernel_process(\|);\*O
.rE
.SH NOTES
.PP
This function currently works only for the current process and the
kernel process.
.SH RETURN VALUES
.PP
Upon successful completion, the function returns a value of 0
(zero).  If the operation fails, the function returns a negative value
and
\*Lerrno\*O
is set to indicate the error.
.SH ERRORS
.PP
If the
\*Lldr_xentry(\|)\*O
function fails,
\*Lerrno\*O
may be set to one of the following values:
.\"from TP 1i"  
.VL 1i
.LI "[EINVAL]"
The specified module ID is not valid.
.\"from TP 1i"  
.LI "[EINVAL]"
There is no entry point for the loaded module.
.\"from TP 1i"  
.LI "[ESRCH]"
The process identifier is invalid.
.LE
.PP
Additional errors may occur due to the underlying IPC mechanism.
.SH RELATED INFORMATION
.PP
Functions:
\*Lldr_xload\*O(3),
.iX "ldr_xentry function"
.EQ
delim off
.EN
