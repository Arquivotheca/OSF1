.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: VendorShell.3X,v $ $Revision: 3.3.4.4 $ (DEC) $Date: 1993/10/25 18:48:47 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH VendorShell 3X "" "" "" "OSF/Motif"
.SH NAME
\*LVendorShell\*O \- The VendorShell widget class
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/Xm.h>
\&#include <X11/Shell.h>
.iE
.sE
.SH DESCRIPTION
.iX "VendorShell"
.iX "widget class" "VendorShell"
VendorShell is a Motif widget class used as a supporting superclass for
all shell classes that are visible to the window manager and that are
not override redirect.
It contains resources that describe the MWM-specific look and feel.
It also manages the MWM-specific communication needed by all VendorShell
subclasses.
See the \*Lmwm\*O(1X) man page for more information.
.PP
If an application uses the \*LXmNmwmDecorations\*O,
\*LXmNmwmFunctions\*O, or \*LXmNmwmInputMode\*O resource, it should
include the file \*L<Xm/MwmUtil.h>\*O.
.PP
Setting \*LXmNheight\*O, \*LXmNwidth\*O, or \*LXmNborderWidth\*O for
either a VendorShell or its managed child usually sets that resource to the
same value in both the parent and the child.  When an off-the-spot input
method exists, the height and width of the shell may be greater than
those of the managed child in order to accommodate the input method.
In this case setting \*LXmNheight\*O or \*LXmNwidth\*O for the 
shell does not necessarily set that resource to the same value in 
the managed child, and setting \*LXmNheight\*O or \*LXmNwidth\*O
for the child does not necessarily set that resource to the same
value in the shell.
.PP 
For the managed child of a VendorShell, regardless of the value
of the shell's \*LXmNallowShellResize\*O, setting \*LXmNx\*O or
\*LXmNy\*O sets the corresponding resource of the parent but does
not change the child's position relative to the parent.
\*LXtGetValues\*O for the child's \*LXmNx\*O or \*LXmNy\*O yields the
value of the corresponding resource in the parent.
The \*Vx\*O and \*Vy\*O coordinates of the child's upper left outside
corner relative to the parent's upper left inside corner are both zero
minus the value of \*LXmNborderWidth\*O.
.PP 
Note that the \*VInter-Client Communication Conventions Manual\*O allows
a window manager to change or control the border width of a reparented
top-level window.
.SS "Classes"
VendorShell inherits behavior and resources from \*LCore\*O,
\*LComposite\*O, \*LShell\*O, and
\*LWMShell\*O classes.
.PP
The class pointer is \*LvendorShellWidgetClass\*O.
.PP
The class name is \*LVendorShell\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
subresource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a subresource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given subresource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
VendorShell Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaudibleWarning	XmBELL	CSG
\ \ \ \ \ \ XmCAudibleWarning	\ \ \ \ \ \ \ unsigned char
_
XmNbuttonFontList	dynamic	CSG
\ \ \ \ \ \ XmCButtonFontList	\ \ \ \ \ \ \ XmFontList
_
XmNdefaultFontList	dynamic	CG
\ \ \ \ \ \ XmCDefaultFontList	\ \ \ \ \ \ \ XmFontList
_
XmNdeleteResponse	XmDESTROY	CSG
\ \ \ \ \ \ XmCDeleteResponse	\ \ \ \ \ \ \ unsigned char
_
XmNinputMethod	NULL	CSG
\ \ \ \ \ \ XmCInputMethod	\ \ \ \ \ \ \ String
_
XmNkeyboardFocusPolicy	XmEXPLICIT	CSG
\ \ \ \ \ \ XmCKeyboardFocusPolicy	\ \ \ \ \ \ \ unsigned char
_
XmNlabelFontList	dynamic	CSG
\ \ \ \ \ \ XmCLabelFontList	\ \ \ \ \ \ \ XmFontList
_
XmNmwmDecorations	-1	CSG
\ \ \ \ \ \ XmCMwmDecorations	\ \ \ \ \ \ \ int
_
XmNmwmFunctions	-1	CSG
\ \ \ \ \ \ XmCMwmFunctions	\ \ \ \ \ \ \ int
_
XmNmwmInputMode	-1	CSG
\ \ \ \ \ \ XmCMwmInputMode	\ \ \ \ \ \ \ int
_
XmNmwmMenu	NULL	CSG
\ \ \ \ \ \ XmCMwmMenu	\ \ \ \ \ \ \ String
_
XmNpreeditType	dynamic	CSG
\ \ \ \ \ \ XmCPreeditType	\ \ \ \ \ \ \ String
_
XmNshellUnitType	XmPIXELS	CSG
\ \ \ \ \ \ XmCShellUnitType	\ \ \ \ \ \ \ unsigned char
_
XmNtextFontList	dynamic	CSG
\ \ \ \ \ \ XmCTextFontList	\ \ \ \ \ \ \ XmFontList
_
XmNuseAsyncGeometry	False	CSG
\ \ \ \ \ \ XmCUseAsyncGeometry	\ \ \ \ \ \ \ Boolean
_
.TE
.\" NROFF HACK END
.VL  
.LI "\*LXmNaudibleWarning\*O"
Determines whether an action activates its associated audible cue.
The possible values are: \*LXmBELL\*O and \*LXmNONE\*O.
.LI "\*LXmNbuttonFontList\*O"
Specifies the font list used for VendorShell's button descendants.
If this value is NULL at initialization and if the value of
\*LXmNdefaultFontList\*O is not NULL, \*LXmNbuttonFontList\*O
is initialized to the value of \*LXmNdefaultFontList\*O.  If
the value of \*LXmNdefaultFontList\*O is NULL, \*LXmNbuttonFontList\*O
is initialized by looking up the parent hierarchy of the widget for 
an ancestor that is a subclass of the XmBulletinBoard, VendorShell,
or XmMenuShell widget class.  If such an ancestor is found,
\*LXmNbuttonFontList\*O is initialized to the \*LXmNbuttonFontList\*O
of the ancestor  widget.  If no such ancestor is found, the default
is implementation dependent.
.LI "\*LXmNdefaultFontList\*O"
Specifies a default font list for VendorShell's descendants.
This resource is obsolete and exists for compatibility with 
earlier releases.  It has been replaced by \*LXmNbuttonFontList\*O,
\*LXmNlabelFontList\*O, and \*LXmNtextFontList\*O.
.LI "\*LXmNdeleteResponse\*O"
Determines what action the shell takes in response to a
\*LWM_DELETE_WINDOW\*O message.
The setting can be one of three values: \*LXmDESTROY\*O, \*LXmUNMAP\*O,
and \*LXmDO_NOTHING\*O.
The resource is scanned, and the appropriate action is taken, after the
\*LWM_DELETE_WINDOW\*O callback list (if any) that is registered with
the Protocol manager has been called.
.LI "\*LXmNinputMethod\*O"
Specifies the string that sets the locale modifier for the input
method.
.LI "\*LXmNkeyboardFocusPolicy\*O"
Determines allocation of keyboard focus within the widget hierarchy rooted
at this shell.  The X keyboard focus must be directed to somewhere in the
hierarchy for this client-side focus management to take effect.
Possible values are \*LXmEXPLICIT\*O, specifying a click-to-type policy,
and \*LXmPOINTER\*O, specifying a pointer-driven policy.
.LI "\*LXmNlabelFontList\*O"
Specifies the font list used for VendorShell's label descendants
(Labels and LabelGadgets).  If this value is NULL at initialization
and if the value of \*LXmNdefaultFontList\*O is not NULL,
\*LXmNlabelFontList\*O is initialized to the value of
\*LXmNdefaultFontList\*O.  If the value of \*LXmNdefaultFontList\*O is
NULL, \*LXmNlabelFontList\*O is initialized by looking up the parent
hierarchy of the widget for an ancestor that is a subclass of the
XmBulletinBoard, VendorShell, or XmMenuShell widget class.  If such
an ancestor is found, \*LXmNlabelFontList\*O is initialized to the
\*LXmNlabelFontList\*O of the ancestor widget.  If no such ancestor
is found, the default is implementation dependent.
.LI "\*LXmNmwmDecorations\*O"
Specifies the decoration flags (specific decorations to add or remove
from the window manager frame) for the \*L_MOTIF_WM_HINTS\*O property.
If any decoration flags are specified by the \*L_MOTIF_WM_HINTS\*O
property, only decorations indicated by both that property and the MWM
\*LclientDecoration\*O and \*LtransientDecoration\*O resources are
displayed.
If no decoration flags are specified by the \*L_MOTIF_WM_HINTS\*O
property, decorations indicated by the MWM \*LclientDecoration\*O and
\*LtransientDecoration\*O resources are displayed.
The default for the \*LXmNmwmDecorations\*O resource is not to specify
any decoration flags for the \*L_MOTIF_WM_HINTS\*O property.
.PP
The value of this resource is the bitwise inclusive OR of one or more
flag bits.
Following are the possible flag bit constants, defined in the include
file \*L<Xm/MwmUtil.h>\*O:
.ML
.LI
\*LMWM_DECOR_ALL\*O\(emAll decorations \*Eexcept\*O those specified by
other flag bits that are set
.LI
\*LMWM_DECOR_BORDER\*O\(emClient window border
.LI
\*LMWM_DECOR_RESIZEH\*O\(emResize frame handles
.LI
\*LMWM_DECOR_TITLE\*O\(emTitle bar
.LI
\*LMWM_DECOR_MENU\*O\(emWindow menu button
.LI
\*LMWM_DECOR_MINIMIZE\*O\(emMinimize window button
.LI
\*LMWM_DECOR_MAXIMIZE\*O\(emMaximize window button
.LE
.LI "\*LXmNmwmFunctions\*O"
Specifies the function flags (specific window manager functions to
apply or not apply to the client window) for the \*L_MOTIF_WM_HINTS\*O
property.
If any function flags are specified by the \*L_MOTIF_WM_HINTS\*O
property, only functions indicated by both that property and the MWM
\*LclientFunctions\*O and \*LtransientFunctions\*O resources are
applied.
If no function flags are specified by the \*L_MOTIF_WM_HINTS\*O
property, functions indicated by the MWM \*LclientFunctions\*O and
\*LtransientFunctions\*O resources are applied.
The default for the \*LXmNmwmFunctions\*O resource is not to specify any
function flags for the \*L_MOTIF_WM_HINTS\*O property.
.PP
The value of this resource is the bitwise inclusive OR of one or more
flag bits.
Following are the possible flag bit constants, defined in the include
file \*L<Xm/MwmUtil.h>\*O:
.ML
.LI
\*LMWM_FUNC_ALL\*O\(emAll functions \*Eexcept\*O those specified by
other flag bits that are set
.LI
\*LMWM_FUNC_RESIZE\*O\(em\*Lf.resize\*O
.LI
\*LMWM_FUNC_MOVE\*O\(em\*Lf.move\*O
.LI
\*LMWM_FUNC_MINIMIZE\*O\(em\*Lf.minimize\*O
.LI
\*LMWM_FUNC_MAXIMIZE\*O\(em\*Lf.maximize\*O
.LI
\*LMWM_FUNC_CLOSE\*O\(em\*Lf.kill\*O
.LE
.LI "\*LXmNmwmInputMode\*O"
Specifies the input mode flag (application modal or system modal input
constraints) for the \*L_MOTIF_WM_HINTS\*O property.
If no input mode flag is specified by the \*L_MOTIF_WM_HINTS\*O
property, no input constraints are applied, and input goes to any
window.
The default for the \*LXmNmwmInputMode\*O resource is not to specify any
input mode flag for the \*L_MOTIF_WM_HINTS\*O property.
.PP
An application that sets input constraints on a dialog usually uses the
BulletinBoard's \*LXmNdialogStyle\*O resource rather than the parent
DialogShell's \*LXmNmwmInputMode\*O resource.
.PP
Following are the possible values for this resource, defined in the
include file \*L<Xm/MwmUtil.h>\*O:
.ML
.LI
\*LMWM_INPUT_MODELESS\*O\(emInput goes to any window
.LI
\*LMWM_INPUT_PRIMARY_APPLICATION_MODAL\*O\(emInput does not
go to ancestors of this window
.LI
\*LMWM_INPUT_SYSTEM_MODAL\*O\(emInput goes only to this window
.LI
\*LMWM_INPUT_FULL_APPLICATION_MODAL\*O\(emInput does not go to other
windows in this application
.LE
.LI "\*LXmNmwmMenu\*O"
Specifies the menu items that the Motif window manager should add to the end
of the window menu.  The string contains a list of items separated
by \*C\en\*O with the following format:
.PP
\*Vlabel [mnemonic] [accelerator] function\*O
.PP
If more than one item is specified, the items should be separated by a
newline character.
.LI "\*LXmNpreeditType\*O"
Specifies the input method style or styles available to the input
manager.
The syntax, possible values, and default value are implementation
dependent.
.cS
If more than one style is specified, the list is in priority
order. The input manager uses the first style if it is available; if
not, it uses the second style, and so on.
The supported input method styles are:
.VL 1.25i
.LI "OverTheSpot"
The pre-edit window is located over the point of insertion.
.LI "OffTheSpot"
The pre-edit window is not located over the point of insertion.
In this case, the pre-edit window is often located at the bottom
of the application window.
.LI "Root"
The pre-edit window is a child of the root window.
.LE
.PP
If no input method style in this list is available, the input
manager can support another input style method, but only if it
does not require geometry management or any additional supporting
information.
.PP
The Xlib XIMStyles data structure stores preedit information that
describes the requirements for a given input method style.  
The three styles identified by \*LXmNpreeditType\*O are related to the
preedit settings in an XIMStyles structure.  The input styles,
"OverTheSpot", "OffTheSpot" and "Root", correspond
respectively to the settings XIMPreEditPosition, XIMPreEditArea,
and XIMPreEditNothing.
.cE
.LI "\*LXmNshellUnitType\*O"
Determines geometric resource interpretation.
The following values are allowed:
.wH .rS 
.ML
.LI
\*LXmPIXELS\*O\(emall values provided to the widget are treated as normal
pixel values.
.LI
\*LXm100TH_MILLIMETERS\*O\(emall values provided to the widget are treated
as 1/100 millimeter.
.LI
\*LXm1000TH_INCHES\*O\(emall values provided to the widget are treated as
1/1000 inch.
.LI
\*LXm100TH_POINTS\*O\(emall values provided to the widget are treated as
1/100 point.  A point is a unit used in text processing
applications and is defined as 1/72 inch.
.LI
\*LXm100TH_FONT_UNITS\*O\(emall values provided to the widget are
treated as 1/100 of a font unit.
A font unit has horizontal and vertical components.
These are the values of the XmScreen resources \*LXmNhorizontalFontUnit\*O
and \*LXmNverticalFontUnit\*O.
.LE 
.LI "\*LXmNtextFontList\*O"
Specifies the font list used for VendorShell's Text and List 
descendants.  If this value is NULL at initialization
and if the value of \*LXmNdefaultFontList\*O is not NULL,
\*LXmNtextFontList\*O is initialized to the value of
\*LXmNdefaultFontList\*O.  If the value of \*LXmNdefaultFontList\*O is
NULL, \*LXmNtextFontList\*O is initialized by looking up the parent
hierarchy of the widget for an ancestor that is a subclass of the
XmBulletinBoard or VendorShell widget class.  If such
an ancestor is found, \*LXmNtextFontList\*O is initialized to the
\*LXmNtextFontList\*O of the ancestor widget.  If no such ancestor
is found, the default is implementation dependent.  
.LI "\*LXmNuseAsyncGeometry\*O"
Specifies whether the geometry manager should wait for confirmation of a
geometry request to the window manager.
When the value of this resource is True, the geometry manager forces
\*LXmNwaitForWm\*O to False and \*LXmNwmTimeout\*O to 0, and it relies
on asynchronous notification.
When the value of this resource is False, \*LXmNwaitForWm\*O and
\*LXmNwmTimeout\*O are unaffected.
The default is False.
.LE
.SS "Inherited Resources"
VendorShell inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
WMShell Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNbaseHeight	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCBaseHeight	\ \ \ \ \ \ \ int
_
XmNbaseWidth	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCBaseWidth	\ \ \ \ \ \ \ int
_
XmNheightInc	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCHeightInc	\ \ \ \ \ \ \ int
_
XmNiconMask	NULL	CSG
\ \ \ \ \ \ XmCIconMask	\ \ \ \ \ \ \ Pixmap
_
XmNiconPixmap	NULL	CSG
\ \ \ \ \ \ XmCIconPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNiconWindow	NULL	CSG
\ \ \ \ \ \ XmCIconWindow	\ \ \ \ \ \ \ Window
_
XmNiconX	\-1	CSG
\ \ \ \ \ \ XmCIconX	\ \ \ \ \ \ \ int
_
XmNiconY	\-1	CSG
\ \ \ \ \ \ XmCIconY	\ \ \ \ \ \ \ int
_
XmNinitialState	NormalState	CSG
\ \ \ \ \ \ XmCInitialState	\ \ \ \ \ \ \ int
_
XmNinput	True	CSG
\ \ \ \ \ \ XmCInput	\ \ \ \ \ \ \ Boolean
_
XmNmaxAspectX	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMaxAspectX	\ \ \ \ \ \ \ int
_
XmNmaxAspectY	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMaxAspectY	\ \ \ \ \ \ \ int
_
XmNmaxHeight	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMaxHeight	\ \ \ \ \ \ \ int
_
XmNmaxWidth	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMaxWidth	\ \ \ \ \ \ \ int
_
.wH .tH
XmNminAspectX	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMinAspectX	\ \ \ \ \ \ \ int
_
XmNminAspectY	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMinAspectY	\ \ \ \ \ \ \ int
_
XmNminHeight	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMinHeight	\ \ \ \ \ \ \ int
_
XmNminWidth	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMinWidth	\ \ \ \ \ \ \ int
_
XmNtitle	dynamic	CSG
\ \ \ \ \ \ XmCTitle	\ \ \ \ \ \ \ String
_
XmNtitleEncoding	dynamic	CSG
\ \ \ \ \ \ XmCTitleEncoding	\ \ \ \ \ \ \ Atom
_
XmNtransient	False	CSG
\ \ \ \ \ \ XmCTransient	\ \ \ \ \ \ \ Boolean
_
XmNwaitForWm	True	CSG
\ \ \ \ \ \ XmCWaitForWm	\ \ \ \ \ \ \ Boolean
_
XmNwidthInc	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCWidthInc	\ \ \ \ \ \ \ int
_
XmNwindowGroup	dynamic	CSG
\ \ \ \ \ \ XmCWindowGroup	\ \ \ \ \ \ \ Window
_
XmNwinGravity	dynamic	CSG
\ \ \ \ \ \ XmCWinGravity	\ \ \ \ \ \ \ int
_
XmNwmTimeout	5000 ms	CSG
\ \ \ \ \ \ XmCWmTimeout	\ \ \ \ \ \ \ int
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Shell Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNallowShellResize	False	CG
\ \ \ \ \ \ XmCAllowShellResize	\ \ \ \ \ \ \ Boolean
_
XmNcreatePopupChildProc	NULL	CSG
\ \ \ \ \ \ XmCCreatePopupChildProc	\ \ \ \ \ \ \ XtCreatePopupChildProc
_
XmNgeometry	NULL	CSG
\ \ \ \ \ \ XmCGeometry	\ \ \ \ \ \ \ String
_
XmNoverrideRedirect	False	CSG
\ \ \ \ \ \ XmCOverrideRedirect	\ \ \ \ \ \ \ Boolean
_
XmNpopdownCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNpopupCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNsaveUnder	False	CSG
\ \ \ \ \ \ XmCSaveUnder	\ \ \ \ \ \ \ Boolean
_
XmNvisual	CopyFromParent	CSG
\ \ \ \ \ \ XmCVisual	\ \ \ \ \ \ \ Visual *
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Composite Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNchildren	NULL	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ WidgetList
_
XmNinsertPosition	NULL	CSG
\ \ \ \ \ \ XmCInsertPosition	\ \ \ \ \ \ \ XtOrderProc
_
XmNnumChildren	0	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ Cardinal
_
.TE
.\" NROFF HACK END
.PP
.wH .in 0 
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Core Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaccelerators	dynamic	CSG
\ \ \ \ \ \ XmCAccelerators	\ \ \ \ \ \ \ XtAccelerators
_
XmNancestorSensitive	dynamic	G
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNbackground	dynamic	CSG
\ \ \ \ \ \ XmCBackground	\ \ \ \ \ \ \ Pixel
_
XmNbackgroundPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderColor	XtDefaultForeground	CSG
\ \ \ \ \ \ XmCBorderColor	\ \ \ \ \ \ \ Pixel
_
XmNborderPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderWidth	1	CSG
\ \ \ \ \ \ XmCBorderWidth	\ \ \ \ \ \ \ Dimension
_
XmNcolormap	dynamic	CG
\ \ \ \ \ \ XmCColormap	\ \ \ \ \ \ \ Colormap
_
XmNdepth	dynamic	CG
\ \ \ \ \ \ XmCDepth	\ \ \ \ \ \ \ int
_
XmNdestroyCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNheight	dynamic	CSG
\ \ \ \ \ \ XmCHeight	\ \ \ \ \ \ \ Dimension
_
XmNinitialResourcesPersistent	True	C
\ \ \ \ \ \ XmCInitialResourcesPersistent	\ \ \ \ \ \ \ Boolean
_
XmNmappedWhenManaged	True	CSG
\ \ \ \ \ \ XmCMappedWhenManaged	\ \ \ \ \ \ \ Boolean
_
XmNscreen	dynamic	CG
\ \ \ \ \ \ XmCScreen	\ \ \ \ \ \ \ Screen *
_
.wH .tH
XmNsensitive	True	CSG
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNtranslations	dynamic	CSG
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNwidth	dynamic	CSG
\ \ \ \ \ \ XmCWidth	\ \ \ \ \ \ \ Dimension
_
XmNx	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
XmNy	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
.TE
.\" NROFF HACK END
.wH .in  
.SS "Translations"
There are no translations for VendorShell.
.SH RELATED INFORMATION
.na
\*LComposite(3X)\*O,
\*LCore(3X)\*O,
\*Lmwm(1X)\*O,
\*LShell(3X)\*O,
\*LWMShell(3X)\*O,
\*LXmActivateProtocol(3X)\*O,
\*LXmActivateWMProtocol(3X)\*O,
\*LXmAddProtocolCallback(3X)\*O,
\*LXmAddWMProtocolCallback(3X)\*O,
\*LXmAddProtocols(3X)\*O,
\*LXmAddWMProtocols(3X)\*O,
\*LXmDeactivateProtocol(3X)\*O,
\*LXmDeactivateWMProtocol(3X)\*O,
\*LXmGetAtomName(3X)\*O,
\*LXmInternAtom(3X)\*O,
\*LXmIsMotifWMRunning(3X)\*O,
\*LXmRemoveProtocolCallback(3X)\*O,
\*LXmRemoveWMProtocolCallback(3X)\*O,
\*LXmRemoveProtocols(3X)\*O,
\*LXmRemoveWMProtocols(3X)\*O,
\*LXmScreen(3X)\*O,
\*LXmSetProtocolHooks(3X)\*O,
and \*LXmSetWMProtocolHooks(3X)\*O.
.ad
.EQ
delim off
.EN
