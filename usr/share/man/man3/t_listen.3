.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: t_listen.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/07/27 13:24:04 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.TH t_listen 3
.SH NAME
.PP
t_listen \- Listens for a connect request
.SH LIBRARY
.PP
XTI Library (\f3libxti.a\f1)
.SH SYNOPSIS
.PP
.nf
\f3#include <xti.h>\fP
.PP
\f3int t_listen(
.ti +0.2i
\f3int \f2fd\fP,
.ti +0.2i
\f3struct t_call *\f2call\fP) ;
.fi
.SH "PARAMETERS"
.PP
The \f3t_listen\f1(\|) function can only be called in the T_IDLE
and T_INCON transport provider states. The following table
summarizes the relevance of input and output parameters before and
after \f3t_listen\f1(\|) is called:
.sp
.TS
center, tab(@);
lb  lb lb
l  c  c.
Parameters@Before Call@\f3After Call
_
\f2fd\fP@y@n
\f2call\fP->\f3addr.maxlen\fP@y@n
\f2call\fP->\f3addr.len\fP@n@y
\f2call\fP->\f3addr.buf\fP@y@(y)
\f2call\fP->\f3opt.maxlen\fP@y@n
\f2call\fP->\f3opt.len\fP@n@y
\f2call\fP->\f3opt.buf\fP@y@(y)
\f2call\fP->\f3udata.maxlen\fP@y@n
\f2call\fP->\f3udata.len\fP@n@y
\f2call\fP->\f3udata.buf\fP@y@(o)
\f2call\fP->\f3sequence\fP@n@y
.TE
\f3Notes to Table\f1
.RS
.nf
.ta 5
y	This is a meaningful parameter.
n	This is not a meaningful parameter.
(y)	The content of the object pointed to by \f2y\f1 is meaningful.
(o)	The content of the object pointed to by \f2o\f1 is optional.
.fi
.RE
.TP
\f2fd\f1
Specifies a file descriptor returned by the \f3t_open\f1(\|) function that
identifies the local transport endpoint where connect
indication may arrive.
.sp
.\".ne 3i
.TP
\f2call\f1
Points to a type \f3t_call\f1 structure used to
specify information that describes the connect indication. The
\f3t_call\f1  structure has the following four members:
.RS
.TP 0.5i
\f3struct netbuf\ \ \ addr\f1
Specifies a buffer for protocol address information sent by the
calling transport user. The type \f3netbuf\f1 structure referenced by
this member is defined in the \f3xti.h\f1 include file. This
structure, which is used to define buffer parameters, has the
following members:
.RS 0.5i
.TP 0.5i
\f3unsigned int\ \ \ maxlen\f1
Specifies the maximum byte length of the data buffer.
.TP
\f3unsigned int\ \ \ len\f1
Specifies the actual byte length of data written to the buffer.
char\ \ \ *buf
Points to the buffer location.
.RE
.TP
\f3struct netbuf\ \ \ opt
Specifies a buffer for protocol-specific
parameters associated with the connect request.
.TP
\f3struct netbuf\ \ \ udata
Specifies a buffer for
user data sent by the caller.
.TP
\f3int\ \ \ sequence
Specifies a unique identification number used to identify the returned
connect indication.
.RE
.ig ++
.TP
\0
The \f3addr\f1 parameters pointed to by the \f2call\f1 parameter
specify protocol
address information associated with the calling transport user.
The \f3addr.maxlen\f1 parameter defines the calling transport user
protocol-address buffer maximum byte-length. The \f3addr.len\f1 parameter
specifies the calling transport user actual protocol address length.
The \f3addr.buf\f1 parameter is a pointer to the protocol address buffer of
the calling transport user.
.TP
\0
The \f3opt\f1 parameters pointed to by \f2call\f1 specify calling
transport user protocol-specific information associated with the
connect request. Parameter \f3opt.maxlen\f1 specifies the calling
transport user options buffer maximum byte-length. Parameter
\f3opt.len\f1 specifies the actual calling transport user options
parameter byte length. Parameter \f3opt.buf\f1 is a pointer to the
calling transport user options buffer.
.TP
\0
The \f3udata\f1 parameters pointed to by \f2call\f1 specify a calling
transport user data buffer.  Parameter \f3udata.maxlen\f1 defines the maximum
byte-length of the calling transport user data buffer used to hold any
data that may be exchanged. Parameter \f3udata.len\f1 specifies the
actual calling transport user data-buffer byte length. Parameter
\f3udata.buf\f1 is a pointer to the calling transport user data
buffer.
.++
.TP
\0
The \f3sequence\f1 parameter pointed to by the \f2call\f1 parameter is used to
uniquely identify the returned connection indication. Values greater
than 1 for this parameter enable the transport user to listen
for more than a single connect indication before responding to any of
those returned.
.TP
\0
Each \f3maxlen\f1 parameter must be set before calling this function to
indicate the maximum size of the buffer associated with values sent
by the caller.
.SH "DESCRIPTION"
.PP
.iX "t_listen function"
.iX "XTI" "t_listen function"
The \f3t_listen(\|)\f1 function is an XTI connection-oriented service
function that listens for a
connect request from a calling transport user. The transport endpoint
where the connect indications arrive is specified by a file descriptor
previously returned by the \f3t_open\f1(\|) function. By default,
the \f3t_listen\f1(\|) function
executes in the synchronous operating mode. In the synchronous
operating mode, \f3t_listen\f1(\|) waits for a connect indication to
arrive before returning control to the transport user who called this
function.
.PP
.\".ne 3i
When the transport endpoint specified by the \f2fd\f1 file descriptor
has been opened with the O_NONBLOCK flag set when the
\f3t_open\f1(\|) or \f3fcntl\f1(\|) function is called, the \f3t_listen\f1(\|)
function executes in asynchronous mode.
.PP
When the \f3t_listen\f1(\|) function executes in asynchronous mode, it
does not wait for
a connect indication before returning control to the caller, but
returns a [TNODATA] error if a connection
request has not yet been received.
.PP
The \f3t_listen\f1(\|) function returns a pointer to a type
\f3t_call\f1 structure, which defines information associated with the
arriving connect request. The \f3t_call\f1 structure also references a
type \f3netbuf\f1 structure. Both structures are defined in the
\f3xti.h\f1 include file.
.SH "RETURN VALUE"
.PP
Upon successful completion, a value of 0 (zero) is returned. Otherwise, a
value of -1 is returned and \f3t_errno\fP is set to indicate the error.
.SH ERRORS
.PP
If the \f3t_listen(\|)\f1 function fails, \f3t_errno\fP may be set to one
of the following values:
.TP 1i
[TBADF]
The specified file descriptor does not refer to a transport endpoint.
.TP
[TBADQLEN]
The \f3qlen\fP argument of the endpoint referenced by the \f2fd\fP
parameter is
zero.
.TP
[TBUFOVFLW]
The number of bytes allocated for an incoming argument (\f2maxlen\fP)
is greater than 0 but not sufficient to store the value of that argument.
The provider's state, as seen by the user, changes to T_INCON,
and the connect indication information to be returned in \f2call\fP
is discarded.  The value of \f2sequence\fP returned can be used to do a
\f3t_snddis(\|)\f1.
.TP
[TLOOK]
An asynchronous event has occurred on this transport endpoint and
requires immediate attention.
.TP
[TNODATA]
The O_NONBLOCK flag was set, but no connect indications had been queued.
.TP
[TNOTSUPPORT]
This function is not supported by the underlying transport provider.
.TP
[TOUTSTATE]
The function was issued in the wrong sequence on the transport
endpoint referenced by the \f2fd\fP parameter.
.TP
[TSYSERR]
A system error has occurred during execution of this function.
.SH NOTES
.PP
When operation is set for the asynchronous mode, and no connect
indications are available, the \f3t_listen\f1(\|) function fails, the
value -1 is returned,
and \f3t_errno\f1 is set to [TNODATA].
.SH "RELATED INFORMATION"
.PP
Functions:
.BR fcntl (2),
.BR t_accept (3),
.BR t_alloc (3),
.BR t_bind (3),
.BR t_connect (3),
.BR t_open (3),
.BR t_optmgmt (3),
.BR t_rcvconnect (3),
.BR t_snddis (3)
.EQ
delim off
.EN
