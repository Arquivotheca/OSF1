.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: t_connect.3,v $ $Revision: 3.2.8.2 $ (DEC) $Date: 1993/07/27 13:19:16 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.TH t_connect 3
.SH NAME
.PP
t_connect \- Establishes a connection with another transport user
.SH LIBRARY
.PP
XTI Library (\f3libxti.a\f1)
.SH SYNOPSIS
.PP
.B #include <xti.h>
.PP
.B int t_connect(
.ti +0.2i
.B int \f2fd\fP,
.ti +0.2i
\f3struct t_call\f1 *\f2sndcall\fP,
.ti +0.2i
\f3struct t_call\f1 *\f2rcvcall\fP) ;
.SH "PARAMETERS"
.PP
The \f3t_connect\f1(\|) function can only be called in the
T_IDLE transport provider state. The following table summarizes
the relevance of input and output parameters before and after
\f3t_connect\f1(\|) is called.
.sp
.TS
center, tab (@);
lb  lb  lb
l   l   l.
Parameters@Before Call@After Call
_
\f2fd\fP@y@n
\f2sndcall\fP->\f3addr.maxlen\fP@n@n
\f2sndcall\fP->\f3addr.len\fP@n@n
\f2sndcall\fP->\f3addr.buf\fP@n@n
\f2sndcall\fP->\f3opt.maxlen\fP@n@n
\f2sndcall\fP->\f3opt.len\fP@y@n
\f2sndcall\fP->\f3opt.buf\fP@o(o)@n
\f2sndcall\fP->\f3udata.maxlen\fP@n@n
\f2sndcall\fP->\f3udata.len\fP@y@n
\f2sndcall\fP->\f3udata.buf\fP@o(o)@n
\f2sndcall\fP->\f3sequence\fP@n@n
\f2rcvcall\fP->\f3addr.maxlen\fP@y@n
\f2rcvcall\fP->\f3addr.len\fP@n@y
\f2rcvcall\fP->\f3addr.buf\fP@y@(y)
\f2rcvcall\fP->\f3opt.maxlen\fP@y@n
\f2rcvcall\fP->\f3opt.len\fP@n@y
\f2rcvcall\fP->\f3opt.buf\fP@y@(y)
\f2rcvcall\fP->\f3udata.maxlen\fP@y@n
\f2rcvcall\fP->\f3udata.len\fP@n@y
\f2rcvcall\fP->\f3udata.buf\fP@y@(y)
\f2rcvcall\fP->\f3sequence\fP@n@n
.TE
.sp
\f3Notes to table:\f1
.RS
.ta 5
.nf
y	This is a meaningful parameter.
n	This is not a meaningful parameter.
o	This is an optional parameter.
(o)	The content of the object pointed to by \f2o\f1 is optional.
.RE
.fi
.TP 1i
\f2fd\f1
Specifies a file descriptor returned by the \f3t_open\f1(\|) function
that identifies the
local transport endpoint where the connection will be established.
.sp
.ne 3i
.TP
\f2sndcall\f1
Points to a type \f3t_call\f1 structure. The \f3t_call\f1 structure
pointed to by the \f2sndcall\f1 parameter provides information required
by the transport provider to establish a connection at the transport
endpoint specified by the \f2fd\f1 parameter. 
The \f3t_call\f1 structure
has the following four members:
.RS 
.ta 5
.TP .5i
\f3struct netbuf\ \ \ addr\f1
Specifies protocol address parameters of the destination
transport user needed by the transport provider. The type \f3netbuf\f1
structure referenced by this member is defined in the \f3xti.h\f1
include file. This structure, which is used to define buffer
parameters explicitly, has the following members:
.RS .5i
.TP .5i
\f3unsigned int\ \ \ maxlen\f1
Specifies the maximum byte length of the data buffer.
.TP .5i
\f3unsigned int\ \ \ len\f1
Specifies the actual byte length of the data written to the buffer.
.TP .5i
\f3char\ \ \ *buf\f1
Points to the buffer location.
.RE
.TP .5i
\f3struct netbuf\ \ \ opt\f1
\f1Specifies protocol-specific  
information needed by the transport provider.
.TP .5i
\f3struct netbuf\ \ \ udata\f1
Specifies user-data parameters 
passed to the destination transport user.
.TP .5i
\f3int\ \ \ sequence\f1
This parameter is not meaningful.
.RE
.TP
\0
The \%\f2sndcall\f1->\f3addr.maxlen\fP, \%\f2sndcall\f1->\f3opt.maxlen\fP, 
and \%\f2sndcall\f1->\f3udata.maxlen\fP parameters have no meaning when the
\f3t_connect\f1(\|) function is called. 
.TP
\0
When options are used, the \%\f2sndcall\f1->\f3opt.buf\f1 parameter must
specify the established options structure (such as
isoco_options, isocl_options or tcp_options). A transport user may
choose not to negotiate protocol options by setting the
\%\f2sndcall\f1->\f3opt.len\fP parameter to 0 (zero). When options are
not specified by the transport user, the transport provider has the
option of returning default option values.
.sp
.ne 3i
.TP
\0
The amount of transport user data passed to the destination transport user 
must not exceed the limits specified by the transport provider as returned to 
the \f2info\f1->\f3connect\f1 parameter of the \f3t_open\f1(\|) or 
\f3t_getinfo\f1(\|) function.
.TP
\0
The \f2sndcall\f1->\f3opt.len\f1 and \f2sndcall\f1->\f3udata.len\f1
parameters
must be set before the \f3t_connect\f1(\|) function is called.
.TP
\f2rcvcall\f1
Points to a type \f3t_call\f1 structure. The \f3t_call\f1 structure
pointed to by the \f2rcvcall\f1 parameter reserves storage for information
associated with the connection established at the transport endpoint
specified by the \f2fd\f1 parameter. When \f2rcvcall\f1 is a null pointer, no
data is returned to the caller. The structure pointed to by
\f2rcvcall\f1 has the following members:
.RS
.TP .5i
\f3struct netbuf\ \ \ addr\f1
Specifies protocol address parameters associated with the
responding transport endpoint.
.TP .5i
\f3struct netbuf\ \ \ opt\f1
\f1Specifies protocol-specific information associated with the
transport provider.
.TP .5i
\f3struct netbuf\ \ \ udata\f1
Specifies parameters for user data that may be optionally
returned to the caller from the destination transport user.
.TP .5i
\f3int\ \ \ sequence
\f1This parameter is not meaningful.
.RE
.TP
\0
The \%\f2rcvcall\f1->\f3addr.maxlen\fP, \%\f2rcvcall\f1->\f3opt.maxlen\fP, 
and \%\f2rcvcall\f1->\f3udata.maxlen\fP parameters must be set before the
\f3t_connect\f1(\|) function is called. 
.TP
\0
When it is provided, the \%\f2rcvcall\f1->\f3udata.len\f1 parameter 
specifies the actual destination user user-data byte length and the
data buffer pointed to by \%\f2rcvcall\f1->\f3udata.buf\f1 contains
destination transport user data.
.\".SH "EXAMPLES"
.\"
.\".SH "NOTES"
.\".P
.\".sp
.SH DESCRIPTION
.PP
.iX "t_connect function"
.iX "XTI" "t_connect"
.iX "networking" "t_connect"
.iX "connect"
The \f3t_connect(\|)\f1 XTI function is a connection-oriented service
function issued by a
transport user to request connection to the specified destination
transport user. By default, this function executes in the
synchronous operating mode.  In this mode, the \f3t_connect\f1(\|)
function waits
for the destination user to respond and the connection to be set up
before returning control to the transport user who called this
function.
.PP
.ne 3i
When the transport endpoint, specified by the file
descriptor, has been previously opened with the O_NONBLOCK flag set
in the \f3t_open\f1(\|) or \f3fcntl\f1(\|) function, the
\f3t_connect\f1(\|) function
executes in asynchronous mode and does not wait for
the transport user at the specified endpoint to respond before
returning control to the caller, but returns a [TNODATA] error, which
indicates that the connection has 
not yet been established.
In asynchronous mode, use the \f3t_rcvconnect\f1(\|) function to
determine the status of a connect request.
.PP
The \f3t_connect\f1(\|) function uses
type \f3t_call\f1 and \f3netbuf\f1 structures, which are defined
in the \f3xti.h\f1 include file.
.SH "RETURN VALUE"
.PP
Upon successful completion, a value of 0 (zero) is returned. Otherwise, a
value of -1 is returned and \f3t_errno\fP is set to indicate an error.
.SH ERRORS
.PP
.br
If the \f3t_connect(\|)\f1 function fails, \f3t_errno\fP may be set to
one of the following values:
.TP 1i
[TBADF]
File descriptor \f2fd\f1 does not refer to a valid transport endpoint.
.TP
[TOUTSTATE]
The \f3t_connect\f1(\|) function was issued in the wrong sequence.
.TP
[TNODATA]
Asynchronous mode is indicated because O_NONBLOCK was set, but no 
data is currently available from the transport provider.
.TP
[TBADADDR]
The specified protocol address was in an incorrect format or contained
illegal information.
.TP
[TBADOPT]
The specified protocol options were in an incorrect format or
contained illegal information
.TP
[TBADDATA]
The amount of user data specified was not within the bounds allowed by
the transport provider.
.sp
.ne 3i
.TP
[TACCESS]
The user does not have permission to use the specified protocol address or 
options.
.TP
[TBUFOVFLW]
The number of bytes allocated for incoming data is not sufficient for
storage of that data. In asynchronous mode only, the connect
information normally returned to the
\f2rcvcall\f1 function was discarded. The transport provider state was 
changed to T_DATAXFER.
.TP
[TLOOK]
An asynchronous event that requires immediate attention has occurred 
on the transport endpoint specified by the \f2fd\f1 parameter.
.TP
[TSYSERR]
A system error occurred during execution of this function.
.TP
[TNOTSUPPORT]
This function is not supported by the underlying transport provider.
.SH "RELATED INFORMATION"
.PP
Functions:
.BR fcntl (2),
.BR t_accept (3),
.BR t_alloc (3),
.BR t_getinfo (3),
.BR t_listen (3),
.BR t_open (3),
.BR t_optmgmt (3),
.BR t_rcvconnect (3)
.iX "t_connect function"
.EQ
delim off
.EN
