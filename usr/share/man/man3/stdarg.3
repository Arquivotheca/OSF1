.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: stdarg.3,v $ $Revision: 1.1.3.2 $ (DEC) $Date: 1993/10/15 19:08:43 $
.\"
.TH stdarg 3
.iX "stdarg function"
.SH NAME
\*Lstdarg\*O - 
Handles a variable-length parameter list
.iX "variable length parameters"
.iX "parameters" "variable length"
.SH LIBRARY
Standard C Library (\*Llibc.so\*O, \*Llibc.a\*O)  
.SH SYNOPSIS
.PP
.sS
\*L#include <stdarg.h>
.sp
\*Lva_alist 
.nL
\*Lvoid va_start ( 
.nL
	\*Lva_alist \*Vargp\*O, \*VparmN\*O );
.nL
\*Ltype va_arg ( 
.nL
	\*Lva_alist \*Vargp\*O,  
.nL
	\*Vtype\*O );
.nL
\*Lvoid va_end ( 
.nL
	\*Lva_alist \*Vargp\*O );
.sE
.\" End Digital-specific information CORRECTION
.SH PARAMETERS
.TP
\*Vargp\*O
Specifies a variable that the \*Lstdarg\*O macros 
use to keep track of the current location in the parameter list.
Do not modify this variable.
.TP
\*VparmN\*O
Specifies the last named parameter (the one just before the
.\" ***FORCE LINE BREAK:
.br
"..." in the \*Lexecl(\|)\*O definition in the Example section).
There must be at least one named parameter.
.TP
\*Vtype\*O
Specifies the type to which the expected argument will be converted
when passed as an argument. In C, arguments that are \*Lchar\*O or
\*Lshort\*O should be accessed as \*Lint\*O; unsigned \*Lchar\*O or
\*Lshort\*O are converted to unsigned \*Lint\*O, and \*Lfloat\*O
arguments are converted to \*Ldouble\*O. Different types can be mixed,
but it is up to the routine to know what type of argument is expected,
since it cannot be determined at runtime.
.br
.ne 3i
.SH DESCRIPTION
.PP
The \*Lstdarg\*O set of macros allows you to write portable 
functions that accept a variable number of parameters. Subroutines 
that have variable\(hylength parameter lists (such as the
\*Lprintf(\|)\*O function), but that do not use the \*Lstdarg\*O
macros, are inherently nonportable because different systems use
different parameter-passing conventions.
.PP
The \*Lstdarg\*O macros are as follows:
.TP
\*Lva_alist\*O
Defines the type of the variable used to traverse the list.
.TP
\*Lva_start(\|)\*O
Initializes \*Vargp\*O to point to the first unnamed argument. 
The \*Lva_start(\|)\*O macro will be invoked before any access
to the unnamed arguments.
.\" ***REMOVE PER NEIL O
.\" .TP
.\" \f3va_argp(\|)
.\" \f1A variable that the \f3stdarg\f1 macros use 
.\" to keep track of the current location in the parameter list.
.\" Do not modify this variable.
.TP
\*Lva_arg(\|)\*O
Returns the next parameter in the list pointed to by \*Vargp\*O.
.TP
\*Lva_end(\|)\*O
Cleans up at the end.
.PP
Your function can traverse, or scan, the parameter list more 
than once. Start each traversal with a call to \*Lva_start(\|)\*O
and end it with \*Lva_end(\|)\*O.
.SH EXAMPLE
The following example is a possible implementation of the
\*Lexecl(\|)\*O function:
.oS
#include <stdarg.h>
#define MAXargS 100
/*
**  execl is called by
**  execl(file, arg1, arg2, . . . , (char *) 0);
*/
execl(char * file, . . .)
{  va_list ap;
   char *file;
   char *args[MAXargS];
   int argno = 0;
   va_start(ap, file);
   while ((args[argno++] = va_arg(ap, char *)) != (char *) 0)
      ;   /* Empty loop body */
   va_end(ap);
   return (execv(file, args));
}
.oE
.sp
.ne 3i
.SH NOTES
.PP
The calling routine is responsible for specifying the number of
parameters because it is not always possible to determine this from
the stack frame. For example, the \*Lexecl(\|)\*O function is passed
a null pointer to signal the end of the list. The \*Lprintf(\|)\*O
function determines the number of parameters from its \*Vfmt\*O parameter.
.PP
.BR "AES Support Level:"
Temporary use
.SH RELATED INFORMATION
.PP
Functions: 
\*Lexec(2)\*O, \*Lprintf(3)\*O, \*Lvarargs(3)\*O, \*Lvprintf(3)\*O
.iX "stdarg function"
.EQ
delim off
.EN
