.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: t_getinfo.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/07/27 13:22:19 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.TH t_getinfo 3
.SH NAME
.PP
t_getinfo \- Gets protocol-specific information
.SH LIBRARY
.PP
XTI Library (\f3libxti.a\f1)
.SH SYNOPSIS
.PP
.nf
\f3#include <xti.h>\fP
.PP
\f3#include <fcntl.h>\fP
.PP
\f3int t_getinfo\f1(
.ti +0.2i
\f3int \f2fd\f1,
.ti +0.2i
\f3struct t_info *\f2info\f1) ;
.fi
.SH "PARAMETERS" 
.PP
The \f3t_getinfo\f1(\|) function can be called in any transport provider
state except T_UNINIT. The following table summarizes the
relevance of input and output parameter data before and after
\f3t_info\f1(\|) is called:
.sp
.TS
center, tab (@);
lb  lb  lb
l  c  c.
Parameter@Before Call@After Call
_
\f2fd@\fPy@n
\f2info\fP->\f3addr\fP@n@y
\f2info\fP->\f3options\fP@n@y
\f2info\fP->\f3tsdu\fP@n@y
\f2info\fP->\f3etsdu\fP@n@y
\f2info\fP->\f3connect\fP@n@y
\f2info\fP->\f3discon\fP@n@y
\f2info\fP->\f3servtype\fP@n@y
.TE
\f3Notes to table:\f1
.RS
.nf
.ta 5
y	This a meaningful parameter.
n	This is not a meaningful parameter.
.fi
.RE
.TP 1i
\f2fd\f1
Specifies a file descriptor returned by the \f3t_open(\|)\f1 function
that identifies the local transport endpoint.
.TP
\f2info\f1
Points to a type \f3t_info\f1 structure that is
returned when \f3t_getinfo\f1(\|) executes. Parameters defined by the
\f3t_info\f1 structure specify characteristics of the
underlying transport protocol associated with 
the \f2fd\f1 file descriptor.
.sp
.ne 3i
.TP
\0
When the \f2info\f1 parameter is set to the null pointer value by a transport
user, no protocol information is returned by the \f3t_getinfo\f1(\|) function.
.TP
\0
When a transport user must preserve protocol independence, data length
information defined by members of the \f3t_info\f1 structure 
pointed to by the \f2info\f1 parameter may be accessed to determine
how large data
buffers must be to hold exchanged data. Alternatively, 
the \f3t_alloc(\|)\fP function may be used to allocate necessary data
buffers. An error results when a transport user exceeds the allowed
data length during any data exchange.
.PP
Values associated with parameters of the \f3t_info\f1 structure
may change as the result of protocol option negotiations during
initialization of a connection.  The \f3t_info\f1 structure has the
following seven members:
.TP
\f3addr\f1
Specifies the permitted number of bytes in the protocol address. A
value greater
than or equal to zero indicates the maximum number of permitted bytes
in a protocol address. A value of -1 specifies that there is no limit
on the protocol address size. A value of -2 specifies that the
transport provider does not permit the transport user access to the
protocol addresses.
.TP
\f3options\f1
Specifies the permitted number of bytes of options. A value greater
than or equal to
zero indicates the maximum number of bytes of protocol-specific 
options supported by the transport provider. A value of -1 specifies 
that there is no limit to the number of options bytes. A value of -2 
specifies that the transport provider does not permit a transport user 
to set options.
.TP
\f3tsdu\f1
Specifies the permitted number of bytes in a Transport Service
Data Unit (TSDU). A
value greater than zero specifies the maximum number of bytes in a
TSDU message. A value of zero specifies that the transport provider
does not support TSDU data exchanges, although it does support the
sending of a data stream with no logical boundaries preserved across a
connection.  A value of -1 specifies that there is no limit to the
number of bytes in a TSDU data exchange. A value of -2 specifies that
the transfer of normal data is not supported by the transport
provider.
.sp
.ne 3i
.TP
\f3etsdu\f1
Specifies the permitted number of bytes in an Expedited
Transport Service
Data Unit (ETSDU). A value greater than zero specifies the maximum number of
bytes in an ETSDU data exchange. A value of zero specifies that the
transport provider does not support ETSDU data exchanges, although it
does support the sending of an expedited data stream with no logical
boundaries preserved across a connection. A value of -1 specifies that
there is no limit on the number of bytes in an ETSDU data exchange. A
value of -2 specifies that the transfer of expedited data is not
supported by the transport provider.
.TP
\f3connect\f1
Specifies the permitted number of bytes of data in a connect request.
A value greater than or
equal to zero specifies the maximum number of data bytes that may be
exchanged using the \f3t_connect\f1(\|) or \f3t_rcvconnect\f1(\|) function.  A
value of -2 specifies that there is no limit to the number of data
bytes that may be sent when a connection is requested. A value of -2
specifies that the transport provider does not permit data to be sent
when a connection is established.
.TP
\f3discon\f1
Specifies the permitted number of bytes of data in a disconnect
request. A value greater than
or equal to zero specifies the maximum number of data bytes that may
be exchanged using the \f3t_snddis(\|)\fP or \f3t_rcvdis(\|)\fP
function.  A value
of -1 specifies that there is no limit to the number of data bytes
that may be sent when a connection is closed using these abortive release
functions. A value of -2 specifies that the transport provider does
not permit data to be sent with an abortive release function.
.TP
\f3servtype\f1
Specifies only one of the following types of service supported 
by the transport provider:
.RS
.TP .5i
T_COTS
The transport provider supports connection-mode service but does not 
support the optional orderly release facility.
.TP .5i
T_COTS_ORD
The transport provider supports connection-mode service with the
optional orderly release facility.
.TP .5i
T_CLTS
The transport provider supports connectionless 
mode service. For this service type, this function returns 
the value -2 for the \f3etsdu\f1, \f3connect\f1, and \f3discon\f1 parameters.
.RE
.SH "DESCRIPTION"
.PP
.iX "t_getinfo function"
.iX "XTI" "t_getinfo function"
The \f3t_getinfo(\|)\f1 function is an XTI general utility function
that provides information
about the underlying transport protocol associated with a file
descriptor previously returned by
the \f3t_open\f1(\|) function. The \f3t_getinfo\f1(\|) function returns 
the same protocol-specific information as does \f3t_open\f1(\) in the
\f2info\f1 parameter.
.SH "RETURN VALUE"
.PP
Upon successful completion, a value of 0 (zero) is returned.
Otherwise, a value of -1 is returned and \f3t_errno\fP is set to
indicate the error.
.SH ERRORS
.PP
If the \f3t_getinfo(\|)\f1 function fails, \f3t_errno\fP may be set to one
of the following values:
.TP 1i
[TBADF]
File descriptor \f2fd\f1 does not refer to a valid  transport endpoint.
.TP 1i
[TNOTSUPPORT]
This function is not supported by the current implementation of XTI.
.TP 1i
[TSYSERR]
A system error occurred during execution of this function.
.SH "RELATED INFORMATION"
.PP
Functions: 
.BR t_alloc (3),
.BR t_open (3)
.EQ
delim off
.EN
