.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: timer_create.3,v $ $Revision: 1.2.2.4 $ (DEC) $Date: 1993/01/11 16:52:10 $
.\"
.\" SCCSID: @(#)timer_create.3 6.5 1/10/92
.TH timer_create 3
.SH NAME
\*Ltimer_create\*O \- Allocate a per-process timer (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<time.h>\*O
.PP
timer_t \*Ltimer_create\*O (
.br
int \*Vclock_id\*O,
.br
struct \*Lsigevent\*O \*V*evp\*O);
.SH PARAMETERS
.PP
.TP 12
.I clock_id
The type of clock on which the timer is based. The
CLOCK_REALTIME clock is supported.
.TP
.I *evp
A pointer to a \*Lsigevent\*O structure, which defines the signal
sent to the process on timer expiration.
.SH DESCRIPTION
.PP
.iX "timer_create function"
.iX "timers" "making timers"
The \*Ltimer_create\*O function allocates a per-process timer
using the specified clock as the timing base. The \*Ltimer_create\*O
function returns a timer ID, which is used to identify the timer in timer
requests. The timer ID is unique within the calling process until the
timer is deleted. The timer is unarmed when first returned from a call to
\*Ltimer_create\*O. To arm the timer, use the \*Ltimer_settime\*O function.
.PP
The \*Vevp\*O argument specifies the signal that is sent to the calling process
when the timer expires. The signal is specified in the \*Lsigevent\*O
structure, which is defined in the \*L<signal.h>\*O header file.
.PP
SIGALRM is the default signal for CLOCK_REALTIME and a
NULL \*Vevp\*O argument.
.PP
The maximum number of timers
supported per process (TIMER_MAX) is defined in the \*L<limits.h>\*O header file.
.PP
Timers are not inherited across \*Lfork\*O or \*Lexec\*O calls.
.SH RETURN VALUES
.PP
On a successful call to the \*Ltimer_create\*O function, a timer ID
is returned. This timer ID can be passed to other realtime timer functions.
.PP
On an unsuccessful call,
a value of \-1 is returned and \*Lerrno\*O is
set to indicate that an error occurred.
.SH ERRORS
.PP
The \*Ltimer_create\*O function fails under the following conditions:
.TP 15
[EAGAIN]
The system lacks sufficient signal queuing resources to honor the request.
.TP 15
[EINVAL]
The specified clock type is not defined.
.TP 15
[EMTIMERS]
The calling process has already allocated all of the timers it is allowed
by this implementation.
.TP 15
[ENOSYS]
The function \*Ltimer_create\*O is not supported by this implementation.
.SH RELATED INFORMATION
.PP
Functions:
\*Lclock_getres\*O(3), \*Lclock_gettime\*O(3), \*Lclock_settime\*O(3),
\*Ltimer_delete\*O(3), \*Ltimer_gettime\*O(3),
\*Ltimer_settime\*O(3)
.EQ
delim off
.EN
