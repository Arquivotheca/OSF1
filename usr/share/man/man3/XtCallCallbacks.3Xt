.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XtCallCallbacks.3Xt,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:49:59 $
.\" 
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtMake-Geometry-Request XtQuery-Geometry wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .2i 2i
.ta .2i 2i
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.		\" Note End -- doug kraft 3/85
.ny0
.TH XtCallCallbacks 3Xt "" "" "" "X11R5"
.SH NAME
XtCallCallbacks, XtHasCallbacks \- process callbacks
.SH SYNTAX
void XtCallCallbacks(\f2w\fP, \f2callback_name\fP, \f2call_data\fP)
.br
      Widget \f2w\fP;
.br
      String \f2callback_name\fP;
.br
      XtPointer \f2call_data\fP;
.LP
typedef enum {XtCallbackNoList, XtCallbackHasNone, XtCallbackHasSome} \
XtCallbackStatus;
.sp
XtCallbackStatus XtHasCallbacks(\f2w\fP, \f2callback_name\fP)
.br
      Widget \f2w\fP;
.br
      String \f2callback_name\fP;
.SH ARGUMENTS
.ds Cn \ to be executed or checked
.IP \f2callback_name\fP 1i
Specifies the callback list\*(Cn.
.IP \f2call_data\fP 1i
Specifies a callback-list specific data value to pass to each of the callback
procedure in the list.
.IP \f2w\fP 1i
Specifies the widget.
.SH DESCRIPTION
The
.PN XtCallCallbacks
function calls each procedure that is registered in the specified widget's
callback list.
.LP
The
.PN XtHasCallbacks
function first checks to see if the widget has a callback list identified 
by callback_name.
If the callback list does not exist,
.PN XtHasCallbacks
returns
.PN XtCallbackNoList .
If the callback list exists but is empty,
it returns
.PN XtCallbackHasNone .
If the callback list exists and has at least one callback registered,
it returns
.PN XtCallbackHasSome .
.SH "SEE ALSO"
XtAddCallback(3Xt)
.br
\f2\*(xT\fP
.br
\f2\*(xL\fP
.EQ
delim off
.EN
