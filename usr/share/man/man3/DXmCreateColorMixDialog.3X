.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: DXmCreateColorMixDialog.3X,v $ $Revision: 3.3.5.3 $ (DEC) $Date: 1993/07/14 19:41:53 $
.\"
.TH DXmCreateColorMixDialog 3X
.SH NAME
\*LDXmCreateColorMixDialog\*O \- Creates a color mixing widget with a dialog box.
.SH SYNOPSIS
.PP
.iX "DXmCreateColorMixDialog"
.sS
\*LWidget DXmCreateColorMixDialog(\*Vparent\*L, \*Vname\*L, \*Varglist\*L, \*Vargcount\*L)
        Widget    \*Vparent\*L;
        String    \*Vname\*L;
        ArgList   \*Varglist\*L;
        Cardinal  \*Vargcount\*L;\*O
.sE
.SH PARAMETERS
.PP
.VL 4m
.LI "\*Vparent\*O"
The identifier (widget ID) of the parent widget.
.LI "\*Vname\*O"
The name of the created widget.
.LI "\*Varglist\*O"
The application argument list.
.LI "\*Vargcount\*O"
The number of arguments in the application argument list.
.LE
.SH DESCRIPTION
.PP
\*LDXmCreateColorMixDialog\*O allows your DECwindows Motif applications to
query users for a color.  The color mixing widget provides users
with immediate feedback, displaying each new color as it is selected.
This widget uses a pop-up dialog box (or nonpop-up dialog box if you use the
\*LDXmCreateColorMix\*O routine) that is preconfigured to contain the
following subwidgets:
.PP
.TS
tab(@);
lfHB lfHB
l l .
_
.sp
Subwidget@Description
.sp
_
.sp
Scratch pad@T{
Stores intermediate colors for later use in color mixing.
T}
.sp
Color display subwidget@T{
Displays the original color and the new color.
T}
.sp
Color model option menu subwidget@T{
Implements choice of color model.
T}
.sp
Color mixer subwidget@T{
Provides graphic tools users can use to define new colors.
T}
.sp
Push button subwidgets@T{
Activate color mixing widget functions.
T}
.sp
Label subwidgets@T{
Provide descriptive information.
T}
.sp
_
.TE
.PP
The color mixing widget allows a user to choose from up to five different
color models:
.VL 4m
.LI "Color Picker"
The default color model for the color mixing widget on color systems (it
does not display on non-color systems or on systems with too few resources).
.IP
The color picker consists of a"-color color spectrum and a color palette
option menu, a color interpolator and its title, a smear button, and undo
button, two paint bucket buttons, and arrow buttons to control the warmth
and lightness of interpolator colors.
.LI "HLS (Hue, Lightness, Saturation)"
In the HLS color model, a color is specified by three characteristics:
hue, lightness, and saturation.  Hue is color.  Lightness describes the
intensity of the color (the amount of the color).  Saturation describes
the purity of the color or how much the color is diluted by white.
.IP
To support the HLS color model, the color mixer subwidget contains three
scales that represent the ranges of hue, lightness, and saturation.
The hue scale presents color values as a range between 0 and 360.
The lightness and saturation scales present their values as a range of
percentages between 0 and 100.
.LI "RGB (Red, Green, Blue)"
The default color model for the color mixing widget on monochrome systems.
.IP
In the RGB color model, a color is specified as a mixture of different
intensities of red, green, and blue.  In the X Window System, Version 11, you
specify the intensity of red, green, or blue as a value between 0 and 65,535.
Zero is the lowest intensity.  Black is defined as a zero-intensity
value for all three colors; white is"0 percent intensity for all three colors.
.IP
To support the RGB color model, the color mixer subwidget contains three
scales that represent the ranges of intensity of red, green, and blue.  Each
scale presents these color values as a percentage between 0 and 100.  In
addition, the color mixer subwidget contains text widgets in which users
of your application can enter RGB values directly as text.  The text widgets
and the scales are linked: a change in one effects a corresponding change
in the other.
.LI "Browser (X11 named colors)"
A scrolled window that presents the user with a list of X11 named colors.
Each button in the scrolled window shows the name of an X11 color.
If enough resources are available, the background is set to that color.
(If the new color is not further modified by other color models, the X11
name of this color is also returned to the application as part of the
color mixing widget's callback structure.)  You can use the scroll bar
to scroll through this color list.  Clicking MB1 on a color in the list
causes the color display subwidget to become filled with that color.
The color browser is available on all systems.
.IP
A complete list of all the X color values available to you is located
on your system.  To find it, type the following command:
.IP
.iS
% find / \-name '*rgb*' \-print
.iE
.LI "Greyscale Mixer"
A scale widget that allows generation of gray shades ranging from black
to white.  When the Greyscale mixer is selected, the current new color
is converted to an appropriate shade of gray, which can then be adjusted
with the scale widget.  All shades of gray generated by this model
are a mixture of equal portions of red, green, and blue, which means that
they appear identically on both color and gray scale systems.
.IP
The Greyscale mixer is available on all systems.
.IP
NOTE:  When considering whether to use a pop-up or nonpop-up
color mixing widget, the following conditions are in effect:
.ML
.LI
The pop-up color mixing widget (which you create with the
\*LDXmCreateColorMixDialog\*O routine) allocates the necessary color cells
each time it is mapped and then releases them each time the widget is unmapped.
.LI
The nonpop-up color mixing widget (which you create with the
\*LDXmCreateColorMix\*O routine) allocates the necessary color cells at
creation time but does not release them until the widget is destroyed.
As such, if color resources are limited, your application should use
the pop-up color mixing widget instead of the nonpop-up version.
.LE
.LE
.SS Resource Information
You can set the following widget-specific resources in the
\*Varglist\*O when using any combination of default or
application-provided color display and color mixer subwidgets:
.PP
.oS
XmString        DXmNclearLabel;
XmString        DXmNdisplayLabel;
Widget          DXmNdisplayWindow;
XmString        DXmNhelpLabel;
XmString        DXmNmainLabel;
XmString        DXmNmixerLabel;
Widget          DXmNmixerWindow;
unsigned short  DXmNnewBlueValue;
unsigned short  DXmNnewGreenValue;
unsigned short  DXmNnewRedValue;
unsigned short  DXmNorigBlueValue;
unsigned short  DXmNorigGreenValue;
unsigned short  DXmNorigRedValue;
XmString        DXmNresetLabelString;
XmString        DXmNscratchPadInfoLabel;
XmString        DXmNscratchPadLabel;
void proc       DXmNsetMixerColorProc;
void proc       DXmNsetNewColorProc;
XtCallbackList  XmNapplyCallback;
XmString        XmNapplyLabelString;
XtCallbackList  XmNcancelCallback;
XmString        XmNcancelLabelString;
XtCallbackList  XmNokCallback;
XmString        XmNokLabelString;
Widget          XmNworkWindow;
.oE
.PP
You can set the following widget-specific resources in the
\*Varglist\*O only when using the default color display subwidget:
.PP
.oS
unsigned short  DXmNbackBlueValue;
unsigned short  DXmNbackGreenValue;
unsigned short  DXmNbackRedValue;
Dimension       DXmNdisplayColWinHeight;
Dimension       DXmNdisplayColWinWidth;
Dimension       DXmNdispWinMargin;
Boolean         DXmNmatchColors;
.oE
.PP
You can set the following widget-specific resources in the
\*Varglist\*O only when using the default color mixer subwidget:
.PP
.oS
XmString        DXmNblackLabel;
XmString        DXmNblueLabel;
short           DXmNbrowserItemCount;
XmString        DXmNbrowserLabel;
unsigned char   DXmNcolorModel;
XmString        DXmNcoolerLabel;
XmString        DXmNdarkerLabel;
XmString        DXmNearthtoneLabel;
XmString        DXmNfullLabel;
XmString        DXmNgrayLabel;
XmString        DXmNgreenLabel;
XmString        DXmNgreyscaleLabel;
Boolean         DXmNgreyscaleOnGreyscale;
XmString        DXmNhlsLabel;
XmString        DXmNhueLabel;
short           DXmNinterpTileCount;
short           DXmNinterpTileHeight;
short           DXmNinterpTileWidth;
XmString        DXmNinterpTitleLabel;
XmString        DXmNlighterLabel;
XmString        DXmNlightLabel;
short           DXmNlightnessIncrement;
XmString        DXmNoptionLabel;
XmString        DXmNpastelLabel;
unsigned short  DXmNpickerColors;
XmString        DXmNpickerLabel;
short           DXmNpickerTileHeight;
short           DXmNpickerTileWidth;
XmString        DXmNpickerTitleLabel;
XmString        DXmNredLabel;
XmString        DXmNrgbLabel;
XmString        DXmNsatLabel;
XmString        DXmNsliderLabel;
XmString        DXmNsmearLabel;
XmString        DXmNspectrumLabel;
XmString        DXmNundoLabel;
XmString        DXmNuserPaletteLabel;
XmString        DXmNvalueLabel;
XmString        DXmNvividLabel;
XmString        DXmNwarmerLabel;
unsigned short  DXmNwarmthIncrement;
XmString        DXmNwhiteLabel;
.oE
.SS Resources
(Default or Application-Provided Color Display/Mixer Subwidgets)
.VL 4m
.LI "\*LDXmNclearLabel\*O"
Specifies the text that appears as the label of the scratch pad clear
push button.  The default text is "Clear".  Access is CSG.
.LI "\*LDXmNdisplayLabel\*O"
Specifies the text that appears above the color display subwidget,
centered between the left and right borders.  There is no default.
Access is CSG.
.LI "\*LDXmNdisplayWindow\*O"
The color display subwidget.  The default is the color mixing widget's
color display subwidget.  Access is CSG.
.IP
Note the following:
.ML
.LI
Setting this resource to Null at widget creation time prevents the
color display subwidget from being displayed.
.LI
If an application substitutes its own color display subwidget for the default
color display subwidget, the application is completely responsible for
managing the subwidget (making it visible and controlling its geometry
management).  An application can return to the default color display
subwidget by using the Intrinsic routine \*LXtSetValues\*O to set the
\*LDXmNdisplayWindow\*O resource to Null.
.LE
.LI "\*LDXmNhelpLabel\*O"
Specifies the text that appears inside the Help push button.  The
default text is "Help".  Access is CSG.
.LI "\*LDXmNmainLabel\*O"
Specifies the text that appears at the top of the color mixing widget,
centered between the left and right borders.  There is no default.
Access is CSG.
.LI "\*LDXmNmixerLabel\*O"
Specifies the text that appears above the color mixer subwidget, centered
between the left and right borders.  There is no default.  Access is CSG.
.LI "\*LDXmNmixerWindow\*O"
The color mixer subwidget.  The default color mixer subwidget supports
the Hue Lightness Saturation (HLS), Red, Green, Blue (RGB), Color Picker,
Browser, and Greyscale Mixer color models.  Setting this resource to Null
at widget creation time prevents the color mixer subwidget from being
displayed.  Access is CSG.
.IP
Note the following:
.ML
.LI
If an application substitutes its own color mixer subwidget for the default
color mixer subwidget, the application is completely responsible for managing
the subwidget (making it visible and controlling its geometry management).
An application can later return to the default color mixer subwidget by
using the Intrinsic routine \*LXtSetValues\*O to set the
\*LDXmNmixerWindow\*O resource to Null.
.LI
Applications that use the default color mixer subwidget are not required
to update the new color value.  However, applications that provide their
own color  mixer subwidget must update the new color value, by
using either the Intrinsic routine \*LXtSetValues\*O or the
\*LDXmColorMixSetNewColor\*O routine (which is faster).
.LE
.LI "\*LDXmNnewBlueValue\*O"
The new blue color value for the color mixing widget.  The default is
0 unless \*LDXmNmatchColors\*O is True.  If \*LDXmNmatchColors\*O is
True, then \*LDXmNnewBlueValue\*O is always set by default to match
\*LDXmNorigBlueValue\*O whenever the widget is created or made visible.
Access is CSG.
.LI "\*LDXmNnewGreenValue\*O"
The new green color value for the color mixing widget.  The default is
0 unless \*LDXmNmatchColors\*O is True.  If \*LDXmNmatchColors\*O is
True, then \*LDXmNnewGreenValue\*O is always set by default to match
\*LDXmNorigGreenValue\*O whenever the widget is created or made visible.
Access is CSG.
.LI "\*LDXmNnewRedValue\*O"
The new red color value for the color mixing widget.  The default is
0 unless \*LDXmNmatchColors\*O is True.  If \*LDXmNmatchColors\*O is
True, then \*LDXmNnewRedValue\*O is always set by default to match
\*LDXmNorigRedValue\*O whenever the widget is created or made visible.
Access is CSG.
.LI "\*LDXmNorigBlueValue\*O"
The original blue color value for the color mixing widget.  The default
is 0; however, applications should set the original blue value.  Access is CSG.
.LI "\*LDXmNorigGreenValue\*O"
The original green color value for the color mixing widget.  The default
is 0; however, applications should set the original green value.
Access is CSG.
.LI "\*LDXmNorigRedValue\*O"
The original red color value for the color mixing widget.  The default
is 0; however, applications should set the original red value.  Access is CSG.
.LI "\*LDXmNresetLabelString\*O"
Specifies the text that appears inside the Reset push button.  The default
is "Reset".  Access is CSG.
.LI "\*LDXmNscratchPadInfoLabel\*O"
Specifies the text that appears as the label centered at the top of the
scratch pad pop-up. The default text is "Save colors here...".  Access is CSG.
.LI "\*LDXmNscratchPadLabel\*O"
Specifies the text that appears as the label of the scratch pad push button.
The default text is "Scratch Pad...".  Access is CSG.
.LI "\*LDXmNsetMixerColorProc\*O"
The resource used by the color mixing widget to update the current color
mixer controls when the application sets a new color.  (It is intended
for applications that use a non-default color mixer subwidget.)
The default is a procedure (specific to the color mixing widget) that
updates the appropriate default color model (Picker, HLS, RGB, Browser,
or Greyscale).  Access is CSG.
.LI "\*LDXmNsetNewColorProc\*O"
The resource used by the color mixing widget to update the new color
values displayed in the color display subwidget.  If the application replaces
the default color display subwidget and requires that the color mixing
widget update the new color, the application must set this resource.
Otherwise, replacing the default color display subwidget sets this resource
to Null.  Access is CSG.
.IP
If this resource is set and the application manages this subwidget, the work
window is placed below the color display and color mixer subwidgets
(if present) and above the color mixing widget push buttons.
.LI "\*LXmNapplyCallback\*O"
Callback (or callbacks) made when the user clicks the Apply push button
widget in the color mixing widget.  The reason for this callback is
\*LXmCR_APPLY\*O.  The default is Null.  Access is CSG.
.LI "\*LXmNapplyLabelString\*O"
Specifies the text that appears inside the Apply push button.  The default
is "Apply".  Access is CSG.
.LI "\*LXmNcancelCallback\*O"
Callback (or callbacks) made when the user clicks the Cancel push button
widget in the color mixing widget.  The reason for this callback is
\*LXmCR_CANCEL\*O.  The default is Null.  Access is CSG.
.LI "\*LXmNcancelLabelString\*O"
Specifies the text that appears inside the Cancel push button.  The default
is "Cancel".  Access is CSG.
.LI "\*LXmNokCallback\*O"
Callback (or callbacks) made when the user clicks the OK push button
widget in the color mixing widget.  The reason for this callback is
\*LXmCR_ACTIVATE\*O.  The default is Null. Access is CSG.
.LI "\*LXmNokLabelString\*O"
Specifies the text that appears inside the OK push button.  The default
is "OK".  Access is CSG.
.LI "\*LXmNworkWindow\*O"
An optional work area subwidget.  The default is Null.  Access is CSG.
.LE
.SS Resources
(Default Color Display Subwidget Only)
.VL 4m
.LI "\*LDXmNbackBlueValue\*O"
The value of the default color display subwidget's blue background color.
The  default value is  32767 (gray). Access is CSG.
.IP
This resource is valid only if the default color display subwidget is
used; otherwise, the resource is ignored.
.LI "\*LDXmNbackGreenValue\*O"
The value of the default color display subwidget's green background color.
The default value is 32767 (gray).  Access is CSG.
.IP
This resource is valid only if the default color display subwidget is
used; otherwise, the resource is ignored.
.LI "\*LDXmNbackRedValue\*O"
The value of the default color display subwidget's red background
color.  The default value is 32767 (gray). Access is CSG.
.IP
This resource is valid only if the default color display subwidget is
used; otherwise, the resource is ignored.
.LI "\*LDXmNdisplayColWinHeight\*O"
The height of the original and new color display windows.  The default
is 80 pixels.  Access is CSG.
.IP
This resource is valid only if the default color display subwidget is
used; otherwise, the resource is ignored.
.LI "\*LDXmNdisplayColWinWidth\*O"
The width of the original and new color display windows.  The default is
80 pixels.  Access is CSG.
.IP
This resource is valid only if the default color display subwidget is
used; otherwise, the resource is ignored.
.LI "\*LDXmNdispWinMargin\*O"
The margin between the original and the new color display windows and
the outsides edges of the color display subwidget.  The margin is the
area affected by the  background resources (set gray by default).
The default width is 20 pixels.  Access is CSG.
.IP
This resource is valid only if the default color display subwidget is
used; otherwise, the resource is ignored.
.LI "\*LDXmNmatchColors\*O"
A Boolean resource that specifies whether new color values are matched
to original color values whenever the color mixing widget is created and
made visible.  When True, new color values are matched to original color
values.  When False, new color values are not matched to original color
values.  The default is True.  Access is CSG.
.IP
This resource is valid only if the default color display subwidget is
used; otherwise, the resource is ignored.
.LE
.SS Resources
(Default Color Mixer Subwidget Only)
.VL 4m
.LI "\*LDXmNblackLabel\*O"
Specifies the text that appears below the left end of the middle scale
subwidget.  The default is "Black".  Access is CSG.
.IP
This resource is used in the HLS mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNblueLabel\*O"
Specifies the text that appears below the left end of the bottom scale
subwidget.  The default is "Blue".  Access is CSG.
.IP
This resource is used in the RGB mixer if the default color mixer
subwidget is used; otherwise, the resource is ignored.
.LI "\*LDXmNbrowserItemCount\*O"
The number of visible items in the browser's color list.  You can set
this resource only at widget creation time. Each visible item requires
that the color mix widget allocate its own color cell.  The default is 5.
Access is CG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNbrowserLabel\*O"
Specifies the text that appears as the fourth item in the color model
option menu.  The default text is "Browser".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNcolorModel\*O"
The color model currently being used.  The values for this resource are
as follows:
.IP
.TS
tab(@);
lfHB lfHB lfHB
l l l .
_
.sp
Color Model@Value@When Default
.sp
_
.sp
Color Picker@DXmColorModelPicker@T{
Color systems
T}
.sp
HLS@DXmColorModelHLS@T{
Not used as default
T}
.sp
RGB@DXmColorModelRGB@T{
Monochrome systems
T}
.sp
Browser@DXmColorModelBrowser@T{
Not used as default
T}
.sp
Greyscale@DXmColorModelGreyscale@T{
Gray scale systems
T}
.sp
_
.TE
.IP
Applications should set this resource before the widget is managed (if
at all), and allow users to switch color models by using the option menu.
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNcoolerLabel\*O"
Specifies the text of the Cooler arrow button.  The default text is
"Cooler".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNdarkerLabel\*O"
Specifies the text of the Darker arrow button.  The default text is
"Darker".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNearthtoneLabel\*O"
The label used to represent the earthtones palette in the picker spectrum
option menu.  The default text is "Earthtones".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNfullLabel\*O"
Specifies the text that appears below the right end of the bottom scale
subwidget.  The default is "Full".  Access is CSG.
.IP
This resource is used in the HLS mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNgrayLabel\*O"
Specifies the text that appears below the left of the bottom scale subwidget.
The default is "Gray".  Access is CSG.
.IP
This resource is used in the HLS mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNgreenLabel\*O"
Specifies the text that appears below the left end of the middle scale
subwidget.  The default is "Green".  Access is CSG.
.IP
This resource is used in the RGB mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNgreyscaleLabel\*O"
Specifies the text that appears as the bottom item in the color model
option menu.  The default text is "Grayscale".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNgreyscaleOnGreyscale\*O"
A Boolean resource that, when True, specifies that the greyscale mixing
color model is to be the default on greyscale systems.  The default is True.
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNhlsLabel\*O"
Specifies the text that appears as the second item in the color model
option menu.  The default is "HLS".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNhueLabel\*O"
Specifies the text that appears to the left of the top scale subwidget.
The default is "Hue:".  Access is CSG.
.IP
This resource is used in the HLS mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNinterpTileCount\*O"
The number of interpolator tiles used.  (The color mixing widget must
allocate a color cell for each interpolator tile.)  You can set this
resource only at widget creation time.  The default is 10.  Access is CG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNinterpTileHeight\*O"
The height of each interpolator tile, in pixels.  The default is 30.
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNinterpTileWidth\*O"
The width of each interpolator tile, in pixels.  The default is 30.
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNinterpTitleLabel\*O"
Specifies the text that appears centered above the interpolator widget.
The default text is "Interpolator".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNlighterLabel\*O"
Specifies the text of the Lighter arrow button.  The default text is
"Lighter".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNlightLabel\*O"
Specifies the text that appears to the left of the bottom scale subwidget.
The default is "Lightness:".  Access is CSG.
.IP
This resource is used in the HLS mixer if the default color mixer
subwidget is used; otherwise, the resource is ignored.
.LI "\*LDXmNlightnessIncrement\*O"
The percentage by which to increase or decrease the lightness of the
color of each interpolator tile when the lighter or darker buttons are
pressed.  The default is 5.  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNoptionLabel\*O"
Specifies the text that appears inside the color model option menu subwidget.
The default is "Color Model:".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNpastelLabel\*O"
The label used to represent the pastels palette in the picker spectrum
option menu.  The default text is "Pastels".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNpickerColors\*O"
A palette of ten colors that will be available through the user palette
menu option.  If not specified, no user palette will appear in the menu;
otherwise, the user palette will become the default picker palette.
You can set this resource only at widget creation time.  Access is CG.
.IP
Note that the first item in the array is the red value of the first
spectrum tile, the second item is its green value, the third item is its
blue value, the fourth item is the second tile's red value, and so on.  Thus,
this array must contain thirty elements if it is set.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNpickerLabel\*O"
Specifies the text that appears as the top item in the color model option
menu.  The default text is "Picker".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNpickerTileHeight\*O"
The height of each individual spectrum tile, in pixels.  The default is 30.
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNpickerTileWidth\*O"
The width of each individual spectrum tile, in pixels.  The default is 30.
Access is CSG.
.IP
This resource is valid only if the default
color mixer subwidget is used; otherwise, the resource is ignored.
.LI "\*LDXmNpickerTitleLabel\*O"
Specifies the text that appears centered above the picker widget. The
default text is "Spectrum".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNredLabel\*O"
Specifies the text that appears below the left end of the top scale subwidget.
The default is "Red".  Access is CSG.
.IP
This resource is used in the RGB mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNrgbLabel\*O"
Specifies the text that appears as the third item in the color model
option menu.  The default is "RGB".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNsatLabel\*O"
Specifies the text that appears to the left of the middle scale subwidget.
The default is "Saturation:".  Access is CSG.
.IP
This resource is used in the HLS mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNsliderLabel\*O"
Specifies the text that appears above the left end of the top scale subwidget.
The default is "Percentage".  Access is CSG.
.IP
This resource is used in the RGB mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNsmearLabel\*O"
Specifies the text of the Smear push button.  The default text is "Smear".
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNspectrumLabel\*O"
The label used to represent the "rainbow" palette in the picker spectrum
option menu.  The default text is "Spectrum".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNundoLabel\*O"
Specifies the text of the Undo push button.  The default text is "Undo".
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNuserPaletteLabel\*O"
The label used to represent the application-defined user palette in the
spectrum option menu.  The default text is "User palette".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNvalueLabel\*O"
Specifies the text that appears above the column of text subwidgets.
The default is "Value".  Access is CSG.
.IP
This resource is used in the RGB mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LI "\*LDXmNvividLabel\*O"
The label used to represent the vivids palette in the picker spectrum
option menu.  The default text is "Vivids".  Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNwarmerLabel\*O"
Specifies the text of the Warmer arrow button.  The default text is "Warmer".
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNwarmthIncrement\*O"
The amount of red or blue added to the color of each interpolator tile
when the warmer or cooler buttons are pressed.  The default is 5000.
Access is CSG.
.IP
This resource is valid only if the default color mixer subwidget is used;
otherwise, the resource is ignored.
.LI "\*LDXmNwhiteLabel\*O"
Specifies the text that appears below the right end of the middle scale
subwidget.  The default is "White".  Access is CSG.
.IP
This resource is used in the HLS mixer if the default color mixer subwidget
is used; otherwise, the resource is ignored.
.LE
.SS Resource Information
The following resources inherited from \*LXmBulletinBoard\*O
are supported differently:
.ML
.LI
The default for \*LXmNdialogStyle\*O is \*VXmDIALOG_MODELESS\*O.
.LI
The default for \*LXmNdialogTitle\*O is "Color Mixing".
.LI
The default for \*LXmNresizePolicy\*O is \*VXmRESIZE_NONE\*O.
.LE
.SS Resource Information
.oS
\*Ltypedef struct
{
      int             \*Vreason\*L;
      XEvent          *\*Vevent\*L;
      unsigned short  \*Vnewred\*L;
      unsigned short  \*Vnewgrn\*L;
      unsigned short  \*Vnewblu\*L;
      char            *\*Vnewname\*L;
      unsigned short  \*Vorigred\*L;
      unsigned short  \*Voriggrn\*L;
      unsigned short  \*Vorigblu*L;
} DXmColorMixCallbackStruct;\*O
.oE
.PP
\*LCallback Field Descriptions\*O
.PP
.VL rm
.LI "\*Vreason\*O"
An integer set to the callback reason. See the Callback Reasons section
for the values that are valid for this widget.
.LI "\*Vevent\*O"
A pointer to the X event structure describing the event that generated
this callback.
.LI "\*Vnewred\*O"
The new red color value for the color mixing widget.
.LI "\*Vnewgrn\*O"
The new green color value for the color mixing widget.
.LI "\*Vnewblu\*O"
The new blue color value for the color mixing widget.
.LI "\*Vnewname\*O"
Passes a color name to an application.  If the user selects a named
color from the Browser and then triggers a callback to the application
without modifying the new color, the \*Vnewname\*O field of the callback
data structure is filled in with a pointer to an ASCII, null-terminated
string that contains the color's X11 name.  This string is read-only, and
should not be freed or modified.
.IP
If a color is generated in one of the other color models, or generated
in the browser and subsequently modified, the \*Vnewname\*O field in the
callback structure is set to Null.
.LI "\*Vorigred\*O"
The original red color value for the color mixing widget.
.LI "\*Voriggrn\*O"
The original green color value for the color mixing widget.
.LI "\*Vorigblu\*O"
The original blue color value for the color mixing widget.
.LE
.SS Callback Reasons
.VL 4m
.LI "\*LXmCR_ACTIVATE\*O"
The user has activated the OK push button.
.LI "\*LXmCR_APPLY\*O"
The user has activated the Apply push button.
.LI "\*LXmCR_CANCEL\*O"
The user has activated the Cancel push button.
.LE
.SS Resource Information
The color mixing widget completely controls the layout of its children.
.SS Resizing
The color mixing widget computes the smallest possible size
required to enclose all of its children, including any of the
variably sized color mixing subwidgets. The size remains fixed while
the user selects different color models from the option menu.
.SS Inherited Resources
\*LDXmCreateColorMixDialog\*O inherits behaviour and resources
from the following superclasses:
.PP
.oS
Core Resource Set
Composite Resource Set
Constraint Resource Set
XmManager Resource Set
XmBulletinBoard Resource Set
.oE
.SH RETURN VALUES
.PP
The identifier (widget ID) of the created color mixing widget.
.SH RELATED INFORMATION
.PP
\*LDXmCreateColorMix\*O(3X),
\*LDXmColorMixGetNewColor\*O(3X),
\*LDXmColorMixSetNewColor\*O(3X)
.EQ
delim off
.EN
