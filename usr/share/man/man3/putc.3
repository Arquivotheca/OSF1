.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: putc.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/06/25 15:41:24 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.\"
.TH putc 3
.SH NAME
.PP
\*Lputc\*O, \*Lfputc\*O, \*Lputc_unlocked\*O, \*Lputchar\*O, \*Lputchar_unlocked\*O, \*Lputw\*O \-  Write a character or a word to a stream
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <stdio.h>\*O
.PP
\*Lint putc(
.nL
        \*Lint \*Vc\*L,
.nL
        FILE *\*Vstream\*L);\*O
.PP
\*Lint fputc(
.nL
        int \*Vc\*L,
.nL
        FILE *\*Vstream\*L);\*O
.PP
\*Lint putc_unlocked(
.nL
        \*Lint \*Vc\*L,
.nL
        \*LFILE * \*Vfile\*L);\*O
.PP
\*Lint putchar(
.nL
        int \*Vc\*L);\*O
.PP
\*Lint putchar_unlocked(
.nL
        \*Lint \*Vc\*L);\*O
.PP
\*Lint putw(
.nL
        int \*Vw\*L,
.nL
        FILE *\*Vstream\*L);\*O
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vc\*O"
Specifies the character to be written.
.LI "\*Vstream\*O"
Points to the file structure of an open file.
.LI "\*Vw\*O"
Specifies the word to be written.
.LE
.SH DESCRIPTION
.PP
.iX "putc function"
.iX "fputc function"
.iX "putchar function"
.iX "fputc  function"
.iX "putw function"
.iX "putc_unlocked function"
.iX "putchar_unlocked function"
.iX "IO functions" "standard"
.iX "standard IO functions"
.iX "writing out characters"
.iX "characters" "writing out"
The \*Lputc(\|)\*O function writes the character \*Vc\*O to the
output specified by the \*Vstream\*O parameter.  The character is
written at the position at which the file pointer is currently pointing,
if defined. The \*Lputc(\|)\*O function may be
a macro (depending on compile-time definitions). See the
\*LNOTES\*O section for more information.
.PP
The \*Lfputc(\|)\*O function performs the same operation as
\*Lputc(\|)\*O, but \*Lfputc(\|)\*O is never a
macro. The \*Lfputc(\|)\*O function runs
more slowly than \*Lputc(\|)\*O, but requires less space per invocation.
.PP
The \*Lputchar(\|)\*O function is the same as the \*Lputc(\|)\*O function
except that \*Lputchar(\|)\*O writes to the standard output. Note that
\*Lputchar(\|)\*O can also be a macro.
.PP
The reentrant versions of these functions are locked against simultaneous
calls from multiple threads. This locking incurs overhead to
ensure integrity of the stream.  To avoid locking overhead, use the
unlocked versions of these calls,
the \*Lputc_unlocked(\|)\*O and \*Lputchar_unlocked(\|)\*O functions.
The \*Lputc_unlocked(\|)\*O and \*Lputchar_unlocked(\|)\*O
functions are functionally identical to the
\*Lputc(\|)\*O and \*Lputchar(\|)\*O functions, except that
\*Lputc_unlocked(\|)\*O and \*Lputchar_unlocked(\|)\*O
may be safely used only within a scope that is protected by the
\*Lflockfile(\|)\*O and \*Lfunlockfile(\|)\*O functions used as a
pair.
The caller must ensure that the stream is locked before these
functions are used.
.PP
The \*Lputw(\|)\*O function writes the word (\*Lint\*O) specified by
the \*Vw\*O parameter to the output specified by the \*Vstream\*O
parameter. The word is written at the position at which the file pointer,
if defined, is pointing. The size of a word is the size of an integer
and varies from one processor architecture to another.
The \*Lputw(\|)\*O function does
not assume or cause special alignment of the data in the file.
.PP
Because of possible differences in word length and byte ordering,
files written using the \*Lputw(\|)\*O function are machine dependent,
and may not be readable using the \*Lgetw(\|)\*O function on a different
processor.
.PP
With the exception of \*Lstderr\*O, output streams are, by
default, buffered if they refer to files, or line buffered if they
refer to terminals. The standard error output stream, \*Lstderr\*O,
is unbuffered by default, but using the \*Lfreopen(\|)\*O function
causes \*Lstderr\*O to become buffered or line buffered.
Use the \*Lsetbuf(\|)\*O function to change the stream buffering strategy.
.PP
When an output stream is unbuffered, information is queued for
writing on the destination file or terminal as soon as the
information is written.
When an output stream is buffered, many characters are saved and written
as a block. When an output stream is line-buffered, each line of output
is queued for writing on the destination terminal as soon as the line
is completed (that is, as soon as a newline character is written
or terminal input is requested).
.PP
The \*Lst_ctime\*O and \*Lst_mtime\*O
fields of the file are marked for update between the successful
execution of the \*Lputc(\|)\*O, \*Lputw(\|)\*O, \*Lputchar(\|)\*O,
or \*Lfputc(\|)\*O function
and the next successful completion of a call to one of the
following:
.ML
.LI
The \*Lfflush(\|)\*O or \*Lfclose(\|)\*O function on the same stream
.LI
The \*Lexit(\|)\*O or \*Labort(\|)\*O function
.LE
.SH NOTES
.PP
The \*Lputc(\|)\*O and \*Lputchar(\|)\*O functions may be macros
(depending on the compile-time definitions used in the source).
Consequently, you cannot use these interfaces where a function is
necessary; for example, a subroutine
pointer cannot point to one of these interfaces.
In addition, \*Lputc(\|)\*O does not work
correctly with a \*Vstream\*O parameter that has side effects.
In particular, the following does not work:
.PP
.oS
putc(*f++)
.oE
.PP
In cases like this one, use the \*Lfputc(\|)\*O function instead.
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use (\*Lputc(\|)\*O,
\*Lfputc(\|)\*O,
\*Lputchar(\|)\*O).
.IP
Trial use (\*Lputw(\|)\*O).
.LE
.SH RETURN VALUES
.PP
The \*Lputc(\|)\*O, \*Lputc_unlocked(\|)\*O, \*Lputchar(\|)\*O,
\*Lputchar_unlocked(\|)\*O, and \*Lfputc(\|)\*O
functions, upon successful completion, return the value
written. If these functions fail, they return the constant \*LEOF\*O.
They fail if the \*Vstream\*O parameter is not open for writing,
or if the size of the output file cannot be increased.
The \*Lputw(\|)\*O function, upon successful completion, returns a
value of 0 (zero). Otherwise, the function returns a nonzero value.
.SH ERRORS
.PP
The \*Lputc(\|)\*O, \*Lputc_unlocked(\|)\*O, \*Lputw(\|)\*O,
\*Lputchar(\|)\*O, \*Lputchar_unlocked(\|)\*O, and \*Lfputc(\|)\*O
functions fail under either of the following conditions:
.ML
.LI
The \*Vstream\*O is unbuffered.
.LI
The \*Vstream\*O's buffer needed to be flushed and the function call
caused an underlying \*Lwrite(\|)\*O or \*Llseek(\|)\*O operation
to be invoked and this underlying operation fails.
.LE
.PP
In addition, if any of the following conditions occur, the
\*Lputc(\|)\*O, \*Lputw(\|)\*O, \*Lputchar(\|)\*O, and \*Lfputc(\|)\*O
functions set \*Lerrno\*O to the corresponding value.
.VL 1i
.LI "[EAGAIN]"
The \*LO_NONBLOCK\*O flag is set for the file descriptor
underlying \*Vstream\*O
and the process would be delayed in the write operation.
.LI "[EBADF]"
The file descriptor underlying \*Vstream\*O
is not a valid file descriptor open for writing.
.LI "[EFBIG]"
An attempt was made to write to a file that exceeds the
process's file size limit or the maximum file size.
.LI "[EINTR]"
The write operation was interrupted by a signal that was caught,
and no data was transferred.
.LI "[EIO]"
The implementation supports job control; the process is a member
of a background process group attempting to write to its
controlling terminal; \*LTOSTOP\*O is set; the process is neither ignoring nor
blocking \*LSIGTTOU\*O; and the process group of the process is
orphaned.
This error may also be returned under implementation-defined conditions.
.LI "[ENOSPC]"
There was no free space remaining on the device containing the file.
.LI "[EPIPE]"
An attempt was made to write to a pipe or FIFO that is not open
for reading by any process.
A \*LSIGPIPE\*O signal will also be sent to the process.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lferror\*O(3),
\*Lfgetws\*O(3),
\*Lflockfile\*O(3),
\*Lfputws\*O(3),
\*Lfunlockfile\*O(3),
\*Lgetc\*O(3),
\*Lgetwc\*O(3),
\*Lprintf\*O(3),
\*Lputs\*O(3),
\*Lputwc\*O(3).
.EQ
delim off
.EN
