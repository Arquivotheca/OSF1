.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: aio_return.3,v $ $Revision: 1.2.2.6 $ (DEC) $Date: 1993/01/11 16:24:26 $
.\" 
.\" SCCSID: @(#)aio_return.3	6.5	3/19/91
.\" SCCSID: @(#)aio_return.3	6.5	1/7/92
.TH aio_return 3
.SH NAME
.PP
\*Laio_return\*O \- Return the status of an asynchronous I/O operation (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<aio.h>\*O
.PP
size_t \*Laio_return\*O (
.br
aiocb_t \*V*aiocbp\*O);
.SH PARAMETERS
.PP
.TP 8
.I *aiocbp
A pointer to the address of the \*Laiocb\*O structure.
.SH DESCRIPTION
.PP
.iX "aio_return function"
.iX "input/output" "returning errors"
The \*Laio_return\*O function
returns the number of bytes read or written by the corresponding
asynchronous I/O function.
The return status for an asynchronous I/O operation is the
value that would be returned by the corresponding synchronous \*Lread\*O or
\*Lwrite\*O function call. The \*Laio_error\*O function
returns the error status for an asynchronous I/O operation.
.PP
The \*Laio_error\*O function returns the error status associated
with the specified \*Vaiocbp\*O.
If the \*Laio_error\*O function returns anything but EINPROGRESS, the
asynchronous I/O operation is complete. Once the operation is complete, a
call to the \*Laio_return\*O function will show if the operation is successful.
.PP
Once you call the \*Laio_return\*O function, the
\*Laiocb\*O structure is marked for reuse, thus destroying
your ability to reuse the structure for that particular asynchronous I/O
request. To avoid losing data,
use the \*Laio_error\*O function to poll
for completion before you call the \*Laio_return\*O function. Then
use the \*Laio_return\*O function to retrieve the
number of bytes read or written during the asynchronous I/O operation.
.PP
If you do not call the \*Laio_return\*O function, the structure is not
marked for reuse. In this situation, the number of asynchronous I/O operations
available for use in your application is reduced by one for every completed
asynchronous I/O operation that does not return data through a
call to the \*Laio_return\*O function.
.SH RETURN VALUES
.PP
If the asynchronous I/O operation has completed, then the return value
is any of the return values normally associated with a synchronous
\*Lread\*O or \*Lwrite\*O function (the number of bytes transferred or
\-1).
If the asynchronous I/O operation has not yet completed, the results
of \*Laio_return\*O are undefined.
On an unsuccessful call, the value of \-1 is returned and \*Lerrno\*O is
set to indicate the error.
.SH ERRORS
.PP
The \*Laio_return\*O function fails under the following conditions:
.TP 15
[EINVAL]
The \*Vaiocbp\*O argument does not refer to an asynchronous operation whose
return status has not yet been retrieved.
.SH RELATED INFORMATION
.PP
Functions:
\*Lclose\*O(2), \*Lexec\*O(2), \*L_exit\*O(2), \*Lfork\*O(2), \*Llseek\*O(2),
\*Lread\*O(2), \*Lwrite\*O(2),
\*Laio_cancel\*O(3), \*Laio_error\*O(3), \*Laio_read\*O(3), \*Laio_write\*O(3),
\*Llio_listio\*O(3)
.EQ
delim off
.EN
