.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\" 
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\" 
.\" 
.\" HISTORY
.\" 
.\" @(#)$RCSfile: floor.3,v $ $Revision: 1.1.6.2 $ (DEC) $Date: 1994/01/13 00:19:22 $
.\"
.\"
.\" (c) Copyright 1992, OPEN PROVENCHER FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.\"
.TH floor 3
.SH NAME
.PP
\*Lfloor\*O, \*Lceil\*O, \*Lmodf\*O, \*Lrint\*O, \*Lnint\*O,  \*Ltrunc\*O \- Rounds floating-point numbers to floating-point integers, returns the nearest integral value, and truncates a floating-point number
.SH LIBRARY
.PP
\*OMath Library (\*Llibm.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <math.h>
.PP
\*Ldouble floor   (\*Ldouble \*Vx\*L);
.br
\*Lfloat  floorf  (\*Lfloat  \*Vx\*L);
.br
\*Ldouble ceil    (\*Ldouble \*Vx\*L);
.br
\*Lfloat  ceilf   (\*Lfloat  \*Vx\*L);
.br
\*Ldouble modf    (\*Ldouble \*Vx\*L, \*Ldouble \*V*n\*L);
.br
\*Lfloat  modff   (\*Lfloat  \*Vx\*L, \*Lfloat  \*V*n\*L);
.br
\*Ldouble nint    (\*Ldouble \*Vx\*L);
.br
\*Lfloat  nintf   (\*Lfloat  \*Vx\*L);
.br
\*Ldouble rint    (\*Ldouble \*Vx\*L);
.br
\*Lfloat  rintf   (\*Lfloat  \*Vx\*L);
.br
\*Ldouble trunc   (\*Ldouble \*Vx\*L);
.br
\*Lfloat  truncf  (\*Lfloat  \*Vx\*L);
.sE
.SH DESCRIPTION
.PP
.iX "floor function"
.iX "ceil function"
.iX "trunc function"
.iX "modf function"
.iX "rint function"
.iX "nint function"
\*Lfloor(\|)\*O and \*Lfloorf(\|)\*O
return the largest floating-point integer
value less than or equal to  \*Vx\*O.
.PP
\*Lceil(\|)\*O and \*Lceilf(\|)\*O
return the smallest floating-point integer
value greater than or equal to  \*Vx\*O.
.PP
\*Lmodf(\|)\*O and \*Lmodff(\|)\*O
split a floating-point number \*Vx\*O
into a fractional part f and an
integer part i such that |f| < 1.0 and (f + i) = x.
Both f and i have the same sign as \*Vx\*O.
\*Lmodf(\|)\*O and \*Lmodff(\|)\*O
return f and store i into the location pointed to by n.
.PP
\*Lnint(\|)\*O and \*Lnintf(\|)\*O
return the nearest integral value to \*Vx\*O, except halfway cases are
rounded to the integral value larger in magnitude. This corresponds
to the Fortran generic intrinsic function \*Lnint(\|)\*O.
.PP
\*Lrint(\|)\*O and \*Lrintf(\|)\*O
round \*Vx\*O to an integral value
according to the current IEEE rounding
direction specified by the user.
.PP
\*Ltrunc(\|)\*O and \*Ltruncf(\|)\*O
truncate \*Vx\*O to an integral value.
.EQ
delim off
.EN
