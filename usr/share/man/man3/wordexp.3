.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: wordexp.3,v $ $Revision: 1.1.3.5 $ (DEC) $Date: 1993/12/15 00:05:19 $
.\"
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH wordexp 3
.SH NAME
.PP
\*Lwordexp\*O \- Expands tokens from a stream of words
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a)
.SH SYNOPSIS
.PP
.sS
\*L#include <wordexp.h>
.sp 0.4v
\*Lint\ wordexp(
.nL
	const char *\*Vwords\*L,
.nL
	wordexp_t *\*Vpwordexp\*L,
.nL
	int \*Vflags\*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vflags\*O"
Contains a bit flag specifying the configurable
aspects of the \*Lwordexp(\|)\*O function.
.LI "\*Vpwordexp\*O"
Contains a pointer to a \*Lwordexp_t\*O structure.
.LI "\*Vwords\*O"
Specifies the string containing the tokens to be expanded.
.LE
.PP
The value of the \*Vflags\*O parameter is the bitwise inclusive
OR of the following constants, which are defined in the
\*Lwordexp.h\*O file:
.VL
.LI "\*LWRDE_APPEND\*O"
Appends words generated to those generated
by a previous call to the \*Lwordexp(\|)\*O function.
.LI "\*LWRDE_DOOFFS\*O"
Makes use of the \*Lwe_offs\*O structure. If the \*LWRDE_DOOFFS\*O flag is set,
the \*Lwe_offs\*O structure is used to specify the number of null pointers
to add to the beginning of the \*Lwe_words\*O structure. If the
\*LWRDE_DOOFFS\*O flag is not set in the first call to the \*Lwordexp(\|)\*O
function with the \*Vpwordexp\*O parameter, it should not be set in subsequent
calls to the \*Lwordexp(\|)\*O function with the \*Vpwordexp\*O parameter.
.LI "\*LWRDE_NOCMD\*O"
Fails if command substitution is requested.
.LI "\*LWRDE_REUSE\*O"
The \*Vpwordexp\*O parameter was passed to a previous successful call to the
\*Lwordexp(\|)\*O function.
Therefore, the memory previously allocated may be reused.
.LI "\*LWRDE_SHOWERR\*O"
Does not redirect standard error to \*L/dev/null\*O.
.LI "\*LWRDE_UNDEF\*O"
Reports error on an attempt to expand an undefined shell variable.
.LE
.PP
The \*LWRDE_APPEND\*O flag can be used to append a new set of words to those
generated by a previous call to the \*Lwordexp(\|)\*O function. The
following rules
apply when two or more calls to the \*Lwordexp(\|)\*O function are
made with the
same value of the \*Vpwordexp\*O
parameter and without intervening calls to the \*Lwordfree(\|)\*O function:
.ML
.LI
The first such call does not set the \*LWRDE_APPEND\*O flag.
All subsequent calls set it.
.LI
For a single invocation of the \*Lwordexp(\|)\*O function, all calls either set the
\*LWRDE_DOOFFS\*O flag, or do not set it.
.LI
After the second and each subsequent call, the \*Vpwordexp\*O parameter points
to a list containing the following:
.ML
.LI
Zero or more null characters, as specified by the \*LWRDE_DOOFFS\*O
flag and the
\*Vwe_offs\*O field of the \*Lwordexp_t\*O structure.
.LI
Pointers to the words that were in the \*Vpwordexp\*O
parameter before the call, in the same order as before.
.LI
Pointers to the new words generated by the latest call, in the specified order.
.LE
.LI
The count returned in the \*Vpwordexp \*Oparameter
is the total number of words from all of the calls.
.LI
The application should not modify the \*Vpwordexp \*Oparameter
between the calls.
.LE
.PP
The \*LWRDE_NOCMD\*O flag is provided for applications that, for security or
other reasons, want to prevent a user from executing shell commands. Disallowing
unquoted shell special characters also prevents unwanted side effects such as
executing a command or writing to a file.
.PP
Unless the \*LWRDE_SHOWERR\*O flag is set in the \*Vflags\*O parameter, the
\*Lwordexp(\|)\*O function redirects standard error to \*L/dev/null\*O for any
utilities executed as a result of command substitution while expanding the
\*Vwords\*O parameter. If the \*LWRDE_SHOWERR\*O flag is set, the
\*Lwordexp(\|)\*O function can write messages to standard error if
syntax errors
are detected while expanding the \*Vwords\*O parameter.
.PP
The \*Vpwordexp\*O structure is allocated by the caller, but
memory to contain the expanded tokens is allocated by the \*Lwordexp(\|)\*O
function and added to the structure as needed.
.PP
The \*Vwords\*O parameter cannot contain any newline characters, or any of the
unquoted shell special characters \*L|\*O, \*L&\*O, \*L;\*O, \*L( )\*O,
\*L{}\*O, \*L<\*O, or \*L>\*O, except in the context of command substitution.
.SH DESCRIPTION
.PP
.iX "wordexp function"
The \*Lwordexp(\|)\*O function performs word expansions equivalent to the word
expansion that would be performed by the shell if the contents of the
\*Vwords\*O parameter were arguments on the command line. The list of expanded
words are placed in the\*V pwordexp\*O parameter. The expansions are the same as
that which would be performed by the shell if the \*Vwords\*O
parameter were the
part of a command line representing the parameters to a command. Therefore, the
\*Vwords \*Oparameter cannot contain an unquoted newline character or
any of the
unquoted shell special characters \*L|\*O, \*L&\*O, \*L;\*O, \*L<\*O, or
\*L>\*O, except in the case of command substitution. The \*Vwords\*O parameter
also cannot contain unquoted parentheses or braces, except in the case of
command or variable substitution. If the \*Vwords\*O parameter contains an
unquoted # (number sign) comment character that is the beginning of a
token, the
\*Lwordexp(\|)\*O function may treat the comment character as a
regular character, or may interpret it as a comment indicator
and ignore the remainder of the expression in the \*Vwords\*O parameter.
.PP
The \*Lwordexp(\|)\*O function allows an application to perform all of the
shell's expansions on a word or words obtained from a user. For example, if the
application prompts for a filename (or a list of file names) and then uses the
\*Lwordexp(\|)\*O function to process the input, the user could respond with
anything that would be valid as input to the shell.
.PP
The \*Lwordexp(\|)\*O function stores the number of generated words
and a pointer
to a list of pointers to words in the \*Vpwordexp\*O parameter. Each individual
field created during the field splitting or pathname expansion is a separate
word in the list specified by the \*Vpwordexp \*Oparameter. The first pointer
after the last token in the list is a null pointer. The expansion
of special parameters \*L*\*O, \*L@\*O, \*L#\*O, \*L?\*O, \*L-\*O, \*L$\*O,
\*L!\*O, and \*L0\*O is unspecified.
The words are expanded in the following order:
.AL
.LI
Tilde expansion is performed first.
.LI
Parameter expansion, command substitution, and
arithmetic expansion are performed next, from beginning to end.
.LI
Field splitting is then performed on fields generated
by step 2, unless the IFS (Input Field Separators) is full.
.LI
Pathname expansion is performed, unless the \*Lset -f\*O command is in effect.
.LI
Quote removal is always performed last.
.LE
.SH FILES
.PP
.VL
.LI "\*L/usr/include/wordexp.h\*O"
Defines word expansion macros, data types, and functions.
.LE
.SH RETURN VALUES
.PP
If no errors are encountered while expanding the \*Vwords\*O
parameter, the \*Lwordexp(\|)\*O function returns a value of 0 (zero).
If an error occurs, the function returns a nonzero value indicating the error.
.SH ERRORS
.PP
If any of the following conditions occurs, the \*Lgetfh(\|)\*O
function returns the corresponding nonzero constant, which is defined in the
\*Lwordexp.h\*O file.
.VL
.LI "[WRDE_BADCHAR]"
One of the unquoted characters \*L|\*O, \*L& \*O, \*L;\*O, \*L<\*O, \*L>\*O,
parenthesis, or braces
appears in the \*Vwords\*O parameter in an inappropriate context.
.LI "[WRDE_BADVAL]"
Reference to undefined shell variable when
the \*LWRDE_UNDEF\*O flag is set in the \*Vflags\*O parameter.
.LI "[WRDE_CMDSUB]"
Command substitution requested when the \*LWRDE_NOCMD\*O flag is set in the
\*Vflags\*O parameter.
.LI "[WRDE_NOSPACE]"
An attempt to allocate memory was unsuccessful.
.LI "[WRDE_SYNTAX]"
Shell syntax error, such as unbalanced parentheses or unterminated string.
.LE
.PP
If the \*Lwordexp(\|)\*O function returns the error value
[WRDE_SPACE], then
the expression in the \*Vpwordexp\*O parameter is updated to reflect any words
that were successfully expanded. In other cases,
the \*Vpwordexp\*O parameter is not modified.
.SH RELATED INFORMATION
.PP
Functions: \*Lglob\*O(3), \*Lwordfree\*O(3).
.EQ
delim off
.EN
