.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pthread_attr_setsched.3,v $ $Revision: 3.3.4.2 $ (DEC) $Date: 1994/01/13 21:19:01 $
.\"
...\" Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED.
.wH "<routine_section>"
.TH pthread_attr_setsched 3
.SH NAME
\*Lpthread_attr_setsched\*O \- Changes the scheduling policy attribute of thread creation.
.SH SYNOPSIS
.iX "Attribute" "scheduling policy"
.iX "Scheduling policy attribute"
.iX "Creating a thread" "scheduling policy attribute"
.iX "Thread creation" "scheduling policy attribute"
.PP
.sS
\*L#include <pthread.h>
.fS "int pthread_attr_setsched"
.dS "pthread_attr_t"
\*V*attr\*L
.dE
.dS "int"
\*Vscheduler\*O
.dE
.fE
.sE
.wH "<endformat>"
.SH PARAMETERS
.PP
.VL 9m
.LI "\*Vattr\*O"
Threads attributes object modified.
.LI "\*Vscheduler\*O"
New value for the scheduling policy attribute. Valid values are as follows:
.LE
.VL 9m
.LI "SCHED_FIFO"
(First In, First Out) The highest priority thread
runs until it blocks. If there is more than one thread with the same
priority, and that priority is the highest among other threads, the first
thread to begin running continues until it blocks.
.LI "SCHED_RR"
(Round Robin) The highest priority thread runs until it
blocks; however, threads of equal priority, if that priority is the highest
among other threads, are timesliced. Timeslicing is a process in which
threads alternate using available processors.
.LI "SCHED_OTHER"
(Default)
.wH "<mark>"
All threads are timesliced. \*LSCHED_OTHER\*O ensures that all
threads, regardless of priority, receive some scheduling so no thread
is completely denied execution time. (However, \*LSCHED_OTHER\*O
threads can be denied execution time by \*LSCHED_FIFO\*O or
\*LSCHED_RR\*O threads.)
.wH "<endmark>"
.LE
.wH "<endparameters>"
.SH DESCRIPTION
.PP
This routine sets the scheduling policy of a thread that is created using
the attributes object specified by the \*Vattr\*O parameter. The
default value of the scheduling attribute is \*LSCHED_OTHER\*O.
.SH RETURN VALUES
.PP
If an error condition occurs, this routine returns \-1 and sets
\*Eerrno\*O to the corresponding error value. Possible return values
are as follows:
.sp
.TS
center, tab(@);
l l l.
\*LReturn@Error@Description\*O
_
\00@@Successful completion.
\&\-1@[\*LEINVAL\*O]@The value specified by \*Vscheduler\*O is invalid.
\&\-1@[\*LESRCH\*O]@T{
The value specified by \*Vattr\*O does not refer to an existing thread attributes object.
T}
.TE
.wH "<endnas_return>"
.cS
.SH EXAMPLES
.PP
.oS
int pthread_attr_setsched (pthread_attr_t *attr,
 int scheduler);
.oE
.cE
.wH "<endnas_examples>"
.SH RELATED INFORMATION
.PP
\*Lpthread_attr_create\*O(3),
\*Lpthread_attr_getsched\*O(3),
\*Lpthread_attr_setinheritsched\*O(3),
\*Lpthread_create\*O(3)
.EQ
delim off
.EN
