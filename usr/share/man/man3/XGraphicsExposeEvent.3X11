.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XGraphicsExposeEvent.3X11,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:27:07 $
.\" 
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"     choose appropriate monospace font
.\"     the imagen conditional, 480,
.\"     may be changed to L if LB is too
.\"     heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.               \" Note End -- doug kraft 3/85
.ny0
.TH XGraphicsExposeEvent 3X11 "" "" "" "X11R5"
.SH NAME
XGraphicsExposeEvent, XNoExposeEvent \- GraphicsExpose and NoExpose event structures
.SH STRUCTURES
The structures for
.PN GraphicsExpose
and
.PN NoExpose
events contain:
.LP
.PP
.ft CW
.nf
.ps -4
typedef struct {
        int type;       /* GraphicsExpose */
        unsigned long serial;   /* # of last request processed by server */
        Bool send_event;        /* true if this came from a SendEvent request */
        Display *display;       /* Display the event was read from */
        Drawable drawable;
        int x, y;
        int width, height;
        int count;      /* if nonzero, at least this many more */
        int major_code; /* core is CopyArea or CopyPlane */
        int minor_code; /* not defined in the core */
} XGraphicsExposeEvent;
.ps +4
.fi
.ft P
.PP
.LP
.PP
.ft CW
.nf
.ps -4
typedef struct {
        int type;       /* NoExpose */
        unsigned long serial;   /* # of last request processed by server */
        Bool send_event;        /* true if this came from a SendEvent request */
        Display *display;       /* Display the event was read from */
        Drawable drawable;
        int major_code; /* core is CopyArea or CopyPlane */
        int minor_code; /* not defined in the core */
} XNoExposeEvent;
.ps +4
.fi
.ft P
.PP
.LP
When you receive these events,
their structure members are set as follows.
.LP
The type member is set to the event type constant name that uniquely identifies
it.
For example, when the X server reports a
.PN GraphicsExpose
event to a client application, it sends an
.PN XGraphicsExposeEvent
structure with the type member set to
.PN GraphicsExpose .
The display member is set to a pointer to the display the event was read on.
The send_event member is set to
.PN True
if the event came from a
.PN SendEvent
protocol request.
The serial member is set from the serial number reported in the protocol
but expanded from the 16-bit least-significant bits to a full 32-bit value.
The window member is set to the window that is most useful to toolkit
dispatchers.
.LP
Both structures have these common members: drawable, major_code, and minor_code.
The drawable member is set to the drawable of the destination region on 
which the graphics request was to be performed.
The major_code member is set to the graphics request initiated by the client
and can be either
.PN X_CopyArea
or
.PN X_CopyPlane .
If it is
.PN X_CopyArea ,
a call to
.PN XCopyArea
initiated the request.
If it is
.PN X_CopyPlane ,
a call to
.PN XCopyPlane
initiated the request.
These constants are defined in 
.Pn < X11/Xproto.h >.
The minor_code member,
like the major_code member, 
indicates which graphics request was initiated by
the client. 
However, the minor_code member is not defined by the core
X protocol and will be zero in these cases, 
although it may be used by an extension.
.LP
The 
.PN XGraphicsExposeEvent
structure has these additional members: x, y, width, height, and count. 
The x and y members are set to the coordinates relative to the drawable's origin
and indicate the upper-left corner of the rectangle.
The width and height members are set to the size (extent) of the rectangle.
The count member is set to the number of
.PN GraphicsExpose
events to follow.
If count is zero, no more
.PN GraphicsExpose
events follow for this window.
However, if count is nonzero, at least that number of
.PN GraphicsExpose
events (and possibly more) are to follow for this window.
.SH "SEE ALSO"
XAnyEvent(3X11),
XButtonEvent(3X11),
XCreateWindowEvent(3X11),
XCirculateEvent(3X11),
XCirculateRequestEvent(3X11),
XColormapEvent(3X11),
XConfigureEvent(3X11),
XConfigureRequestEvent(3X11),
XCopyArea(3X11),
XCrossingEvent(3X11),
XDestroyWindowEvent(3X11),
XErrorEvent(3X11),
XExposeEvent(3X11),
XFocusChangeEvent(3X11),
XGravityEvent(3X11),
XKeymapEvent(3X11),
XMapEvent(3X11),
XMapRequestEvent(3X11),
XPropertyEvent(3X11),
XReparentEvent(3X11),
XResizeRequestEvent(3X11),
XSelectionClearEvent(3X11),
XSelectionEvent(3X11),
XSelectionRequestEvent(3X11),
XUnmapEvent(3X11),
XVisibilityEvent(3X11)
.br
\f2\*(xL\fP
.EQ
delim off
.EN
