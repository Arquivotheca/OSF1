.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: mlock.3,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/06/21 14:09:24 $
.\"
.\" SCCSID: @(#)mlock.3 6.5 1/9/92
.TH mlock 3
.SH NAME
\*Lmlock\*O, \*Lmunlock\*O \- Lock or unlock a specified region in memory (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<sys/mman.h>\*O
.PP
int \*Lmlock\*O (
.br
void \*V*addr\*O,
.br
size_t \*Vlen\*O);
.sp
int \*Lmunlock\*O (
.br
void \*V*addr\*O,
.br
size_t \*Vlen\*O);
.SH PARAMETERS
.PP
.TP 8
.I *addr
A pointer to the starting address of the region to lock or unlock.
The \*Vaddr\*O argument must be a multiple of the page size returned
by the \*Lsysconf\*O system call.
.TP
.I len
The size of the memory region to lock or unlock.
The value of \*Vlen\*O is rounded up to a multiple of the page size
before decrementing by 1.
.SH DESCRIPTION
.PP
.iX "mlock function"
.iX "munlock function"
.iX "memory" "unlocking"
.iX "memory" "locking"
The \*Lmlock\*O function guarantees all pages mapped by the range
\*Vaddr\*O to \*Vaddr+len-1\*O (inclusive) to be memory resident.
(The area locked is the same  as if the \*Vlen\*O argument were rounded
up to a multiple of the page size before decrementing by 1.)
.PP
The locked area remains locked until unlocked with a call to the
\*Lmunlock\*O function, the process calls the \*Lexec\*O function,
an address space associated with the lock is unmapped, or
the process terminates.
A lock is not inherited across a \*Lfork\*O or an \*Lexec\*O.
.PP
The \*Lmunlock\*O function unlocks pages previously mapped by the range
\*Vaddr\*O to \*Vaddr+len-1\*O (inclusive), regardless of how many times
the \*Lmlock\*O function was called by the process for any pages within the
specified range.
.PP
A call to the \*Lmunlock\*O function does not affect pages that may be
mapped into another process's address space or locked by another process.
.PP
You must have \*Lsuperuser\*O privileges to call the \*Lmlock\*O or
\*Lmunlock\*O functions.
.SH RETURN VALUES
.PP
On a successful call to the \*Lmlock\*O function,
a value of 0 is returned and the region becomes locked and memory resident.
On an unsuccessful call,
a value of \-1 is returned, and \*Lerrno\*O is set to indicate that
an error occurred.
.PP
On a successful call to the \*Lmunlock\*O function,
a value of 0 is returned and the memory is unlocked with respect to the
process's address space. On an unsuccessful call,
a value of \-1 is returned, none of the memory is unlocked, and \*Lerrno\*O
is set to indicate that an error occurred.
.SH ERRORS
.PP
The \*Lmlock\*O and \*Lmunlock\*O functions fail under
the following conditions:
.TP 15
[EINVAL]
The \*Vaddr\*O argument is not a multiple of the page size returned by
\*Lsysconf\*O.
.TP 15
[ENOMEM]
The address range specified by the \*Vaddr\*O and \*Vlen\*O arguments does
not all correspond to valid mapped pages in the process's address space.
.TP 15
[ENOSYS]
The implementation does not support this memory locking interface.
.PP
If any of the following conditions occur, the \*Lmlock\*O function shall
fail:
.TP 15
[EAGAIN]
Some or all of the memory identified by the operation could not be locked
when the call was made.
.TP 15
[ENOMEM]
Locking the pages mapped by the specified range would exceed an
implementation-defined limit on the amount of memory that the process may lock.
.TP 15
[ENOSYS]
The functions \*Lmlock\*O and \*Lmunlock\*O are not supported by
this implementation.
.TP 15
[EPERM]
The calling process does not have the appropriate privileges to
perform the requested operation.
.SH RELATED INFORMATION
.PP
Functions:
\*Lexec\*O(2), \*L_exit\*O(2), \*Lfork\*O(2),
.\" munmap is in Section 2
.\" \*Lmunmap\*O(3), 
\*Lmunmap\*O(2),
\*Lsysconf\*O(3)
.EQ
delim off
.EN
