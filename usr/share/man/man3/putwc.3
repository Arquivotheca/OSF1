.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: putwc.3,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1993/06/21 19:26:44 $
.\"
.\" 
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH putwc 3
.SH NAME
.PP
\*Lputwc\*O, \*Lputwchar\*O, \*Lfputwc\*O \- Write a character to a stream
.SH LIBRARY
.PP
\*OStandard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <wchar.h>
.nL
wint_t putwc(
.nL
	wint_t \*Vc\*L,
.nL
	FILE *\*Vstream\*L);
.nL
wint_t putwchar(
.nL
	wint_t \*Vc \*L);
.nL
wint_t fputwc(
.nL
	wint_t \*Vc\*L;
.nL
	FILE *\*Vstream\*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vc\*O"
Specifies the wide character to be written.
.LI "\*Vstream\*O"
Points to the output data.
.LE
.SH DESCRIPTION
.PP
.iX "putwc function"
.iX "putwchar function"
.iX "fputc function"
.iX "IO functions" "standard"
.iX "writing out wide characters"
The \*Lputwc(\|)\*O function converts the \*Lwchar_t\*O specified
by the \*Vc\*O parameter to its equivalent multibyte character and
then writes the multibyte character to the \*Vstream\*O parameter.
.PP
The \*Lputwchar(\|)\*O macro works like the \*Lputwc(\|)\*O function,
except that \*Lputwchar(\|)\*O writes the character
to the standard output.
.PP
The \*Lfputwc(\|)\*O function works the same as \*Lputwc(\|)\*O.
.PP
With the exception of \*Lstderr\*O, output streams are, by
default, buffered if they refer to files, or line buffered if they
refer to terminals. The standard error output stream, \*Lstderr\*O,
is unbuffered by default, but using the \*Lfreopen(\|)\*O function
causes it to become buffered or line buffered. Use the \*Lsetbuf(\|)\*O
function to change the stream's buffering strategy.
.SH RETURN VALUES
.PP
Upon successful completion, these functions each return the value
written. If these functions fail, they return the constant \*LWEOF\*O.
.SH ERRORS
.PP
If any of the following conditions occur, the \*Lputwc(\|)\*O,
\*Lfputwc(\|)\*O, and \*Lputwchar(\|)\*O functions set \*Lerrno\*O to
the corresponding value.
.VL
.LI "[EAGAIN]"
The \*LO_NONBLOCK\*O flag is set for the file descriptor
underlying \*Vstream\*O
and the process would be delayed in the write operation.
.LI "[EBADF]"
The file descriptor underlying \*Vstream\*O
is not a valid file descriptor open for writing.
.LI "[EFBIG]"
An attempt was made to write to a file that exceeds the
process's file size limit or the maximum file size.
.LI "[EINTR]"
The read operation was interrupted by a signal that was caught,
and no data was transferred.
.LI "[EIO]"
The implementation supports job control; the process is a member
of a background process group attempting to write to its
controlling terminal; \*LTOSTOP\*O is set; the process is neither ignoring nor
blocking \*LSIGTTOU\*O; and the process group of the process is
orphaned.
.LI "[ENOSPC]"
There was no free space remaining on the device containing
the file.
.LI "[EPIPE]"
An attempt was made to write to a pipe or FIFO that is not open
for reading by any process.
A \*LSIGPIPE\*O signal will also be sent to the process.
.LI "[EILSEQ]"
The wide character code specified by the \*Vc\*O parameter does not
correspond to a valid character.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lgetc\*O(3),
\*Lgetwc\*O(3),
\*Lprintf\*O(3),
\*Lputc\*O(3),
\*Lputs\*O(3),
\*Lwctomb\*O(3).
.EQ
delim off
.EN
