.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: stio.3,v $ $Revision: 3.2.2.3 $ (DEC) $Date: 1993/02/01 18:31:52 $
.\"
.\" ---------------------------------------------------
.\" | Copyright (c) 1986, MIPS Computer Systems, Inc. |
.\" | All Rights Reserved.                            |
.\" ---------------------------------------------------
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/./BASE/DEC/man3/stio.3,v 3.2.2.3 1993/02/01 18:31:52 Margaret_Barham Exp $
.TH stio 3
.SH NAME
\*Lstio\*O \- Routines that provide a binary read/write interface to the symbol table
.SH SYNOPSIS
.PP
.iX "stio routine"
.iX "symbol table" "stio routine"
.nf
\*L#include <syms.h>\*O
.PP
\*Llong st_readbinary (filename, how)\*O
\*Lchar *filename;\*O
\*Lchar how;\*O
.PP
\*Llong st_readst (fn, how, filebase, pchdr, flags)\*O
\*Llong fn;\*O
\*Lchar how;\*O
\*Llong filebase;\*O
\*LpCHDRR pchdr;\*O
\*Llong flags;\*O
.PP
\*Lvoid st_writebinary (filename, flags)\*O
\*Lchar *filename;\*O
\*Llong flags;\*O
.PP
\*Lvoid st_writest (fn, flags)\*O
\*Llong fn;\*O
\*Llong flags;\*O
.fi
.SH DESCRIPTION
.PP
The CHDRR structure (see \*Lstcu\*O(3)) represents a symbol table in memory.
A new CHDRR can be created by reading a symbol table in from disk.
The \*VSt_readbinary\*O and \*Vst_readst\*O routines
read a symbol table in from disk.
.PP
The \*VSt_readbinary\*O routine
takes the file name of the symbol table and assumes the symbol table header
HDRR occurs at the beginning of the file.  The \*VSt_readst\*O routine
assumes that its file number references a file positioned at the
beginning of the symbol table header and that the \*Vfilebase\*O
parameter specifies where the object or symbol table file is based (for
example, non-zero for archives).
.PP
The second parameter to the read routines can be `r' for read only or `a'
for appending to the symbol table. Existing local symbol, line,
procedure, auxiliary, optimization, and local string tables
can not be appended. If they
did not exist on disk, they can be created. This restriction stems from the
allocation algorithm for those symbol table sections when read in from disk
and follows the standard pattern for building the symbol table.
.PP
The symbol table can be read incrementally.  If \*Vpchdr\*O is zero,
\*Vst_readst\*O assumes that no symbol table has been read yet; therefore,
it reads in the symbol table header and file descriptors.  The \*Vflags\*O
argument is a bit mask that defines what other tables should be read.
\*VSt_p*\*O constants for each table can be ORed.
If \*Vflags\*O equals `-1', all tables are read.  If \*Vpchdr\*O is set,
the tables specified by \*Vflags\*O are added to the tables that
have already been read.  The value of \*Vpchdr\*O can be gotten from
\*Vst_current_pchdr\*O (see \*Lstcu\*O(3)).
.PP
Line number entries are encoded on disk, and the read routines expand them
to longs.
.PP
If the version stamp is out of date,
a warning message is issued to \*Lstderr\*O.
If the magic number in the HDRR is incorrect, \*Vst_error\*O is called.
All other errors cause the read routines to read non-zero; otherwise, a
zero is returned.
.PP
The \*VSt_writebinary\*O and \*Vst_writest\*O routines
are symmetric to the read routines, excluding the \*Vhow\*O and \*Vpchdr\*O
parameters.
The \*Vflags\*O parameter is a bit mask that defines what table should
be written. \*VSt_p*\*O constants for each table
can be ORed. If \*Vflags\*O equals `-1', all tables are written.
.PP
The write routines write sections of the table in the approved
order, as specified in the link editor (\*Vld\*O) specification.
.PP
Line numbers are compressed on disk.
.PP
The write routines start all sections of the symbol
table on four-byte boundaries.
.PP
If the write routines encounter an error, \*Vst_error\*O is called. After
writing the symbol table, further access to the table by other routines
is undefined.
.SH RELATED INFORMATION
.PP
\*Lstcu\*O(3), \*Lstfe\*O(3), \*Lstfd\*O(3)
.EQ
delim off
.EN
