.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: identity.3,v $ $Revision: 3.6.4.8 $ (DEC) $Date: 1994/01/20 02:17:38 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" OSF/1 1.2
.\"
.\" Copyright (c) 1988 SecureWare, Inc.
.\" All rights reserved
.\" @(#)identity.3	1.2 17:48:48 3/28/90 SecureWare
.\" #ifdef SEC_BASE
.\"
.TH identity 3
.SH NAME
.PP
\*Lstarting_luid\*O, \*Lstarting_ruid\*O, \*Lstarting_euid\*O, \*Lstarting_rgid\*O, \*Lstarting_egid\*O, \*Lis_starting_luid\*O, \*Lis_starting_ruid\*O, \*Lis_starting_euid\*O, \*Lis_starting_rgid\*O, \*Lis_starting_egid\*O \- Get or check user or group IDs (Enhanced Security)
.SH LIBRARY
.PP
Security Library (\*Llibsecurity.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <sys/types.h>
.nL
#include <sys/security.h>
.nL
#include <prot.h>
.\" NON_SILVER
.\" .sp 0.4v
.\" ushort starting_luid(void);
.sp 0.4v
uid_t starting_ruid(void);
.sp 0.4v
uid_t starting_euid(void);
.sp 0.4v
uid_t starting_rgid(void);
.sp 0.4v
uid_t starting_egid(void);
.\" NON_SILVER
.\" .sp 0.4v
.\" int is_starting_luid(
.\" .nL
.\"	ushort \*Vuid\*L);
.sp 0.4v
int is_starting_ruid(
.nL
	uid_t \*Vuid\*L);
.sp 0.4v
int is_starting_euid(
.nL
	uid_t \*Vuid\*L);
.sp 0.4v
int is_starting_rgid(
.nL
	uid_t \*Vgid\*L);
.sp 0.4v
int is_starting_egid(
.nL
	uid_t \*Vgid\*L);
.\" NON_SILVER
.\" .sp 0.4v
.\" void set_auth_parameters(
.\" .nL
.\"	int \*Vargc\*L,
.\" .nL
.\"	char *\*Vargv\*L[]);
.\" .sp 0.4v
.\" void check_auth_parameters(void);
.\" .P
.sE
.SS Parameters
.VL
.LI "\*Vuid\*O"
Specifies the process's user ID.
.LI "\*Vgid\*O"
Specifies the process's group ID.
.LI "\*Vargc\*O"
Specifies the argument count.
.LE
.SH DESCRIPTION
.PP
.iX "process" "checking starting group and user IDs"
.iX "group ID" "checking starting for a process"
.iX "user ID" "checking starting for a process"
.iX "identity functions"
.\" .iX "starting_luid function"
.iX "starting_ruid function"
.iX "starting_euid function"
.iX "starting_rgid function"
.iX "starting_egid function"
.\" .iX "is_starting_luid function"
.iX "is_starting_ruid function"
.iX "is_starting_euid function"
.iX "is_starting_rgid function"
.iX "is_starting_egid function"
.\" .iX "set_auth_parameters function"
.\" .iX "check_auth_parameters function"
These routines provide a way to recall the IDs of a process at the time the
program started.
They are useful when interrogating the invoking environment of a program
after any
\*Lsetuid(\|)\*O
or
\*Lsetgid(\|)\*O
calls have been made so that the original environment can be captured.
.PP
.\" NON_SILVER
.\" The
.\" \*Lstarting_luid(\|)\*O
.\" function
.\" returns the login UID for the process.
.\" The login UID is the immutable stamp for the process and accurately denotes
.\" the account under which the session is being run, regardless of subsequent
.\" \*Lsetuid(\|)\*O
.\" calls.
The
\*Lstarting_ruid(\|)\*O
function
returns the real UID for the process as it was set in the beginning
of the program.
Similarly,
\*Lstarting_euid(\|)\*O
returns the effective UID,
\*Lstarting_rgid(\|)\*O
returns the real GID, and
\*Lstarting_egid(\|)\*O
returns the effective GID.
These IDs may not be the same as those returned by
\*Lgetuid(\|)\*O,
\*Lgeteuid(\|)\*O,
\*Lgetgid(\|)\*O,
or
\*Lgetegid(\|)\*O,
respectively, because intervening calls to
\*Lsetuid(\|)\*O
or
\*Lsetgid(\|)\*O
can change them depending on the process's privileges.
.PP
.\" NON_SILVER
.\" The
.\" \*Lis_starting_luid(\|)\*O
.\" function
.\" returns a value of 1 if the argument is the same as the login UID at
.\" the time when
.\" \*Lset_auth_parameters(\|)\*O
.\" was invoked; otherwise, it returns a value of 0 (zero).
.\" Similarly,
The
\*Lis_starting_ruid(\|)\*O
function
returns 1 if the argument is the same as the real UID at the time when
\*Lset_auth_parameters(\|)\*O
was invoked, and 0 otherwise.
The
\*Lis_starting_euid(\|)\*O
function
returns 1 if the argument is the same as the effective UID at the time when
\*Lset_auth_parameters(\|)\*O
was invoked, and 0 otherwise.
The
\*Lis_starting_rgid(\|)\*O
function
returns 1 if the argument is the same as the real GID at the time when
\*Lset_auth_parameters(\|)\*O
was invoked, and 0 otherwise.  And
the
\*Lis_starting_egid(\|)\*O
function
returns 1 if the argument is the same as the effective GID at the time when
\*Lset_auth_parameters(\|)\*O
was invoked, and 0 otherwise.
.\" NON_SILVER
.\" .P
.\" The
.\" \*Lset_auth_parameters(\|)\*O
.\" function is used to retain the IDs for future lookup.
.\" It also tests the kernel to see if the security features have been
.\" loaded.
.\" If not, the program exists with an error message.
.\" It should be called first in a program or there is a chance that
.\" it will capture an environment different from the conditions
.\" at the program start.
.\" The two arguments are the argument count
.\" and vector with which the program was called.
.\" The
.\" \*Lcheck_auth_parameters(\|)\*O
.\" function
.\" verifies that
.\" \*Lset_auth_parameters(\|)\*O
.\" has been previously invoked.
.\" If not, the program exits.
.SH NOTES
.PP
.\" NON_SILVER
.\" Programs must call
.\" \*Lset_auth_parameters(\|)\*O
.\" before any other action in
.\" \*Lmain\*O(\|).
.PP
Programs using these routines must be compiled with \%\*L-lsecurity\*O.
.SH RELATED INFORMATION
.PP
Functions:
\*Lgetuid\*O(2),
\*Lgetgid\*O(2),
.\" NON_SILVER
.\" \*Lgetluid\*O(3),
\*Lsetuid\*O(2),
\*Lsetgid\*O(2).
.iX "identity functions"
.iX "starting_luid function"
.iX "starting_ruid function"
.iX "starting_euid function"
.iX "starting_rgid function"
.iX "starting_egid function"
.iX "is_starting_luid function"
.iX "is_starting_ruid function"
.iX "is_starting_euid function"
.iX "is_starting_rgid function"
.iX "is_starting_egid function"
.iX "set_auth_parameters function"
.iX "check_auth_parameters function"
.\" #endif /* SEC_BASE */
.EQ
delim off
.EN
