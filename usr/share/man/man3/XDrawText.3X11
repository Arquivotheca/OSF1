.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XDrawText.3X11,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:23:37 $
.\" 
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"     choose appropriate monospace font
.\"     the imagen conditional, 480,
.\"     may be changed to L if LB is too
.\"     heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.               \" Note End -- doug kraft 3/85
.ny0
.TH XDrawText 3X11 "" "" "" "X11R5"
.SH NAME
XDrawText, XDrawText16, XTextItem, XTextItem16 \- draw polytext text and text drawing structures
.SH SYNTAX
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
XDrawText\^(\^\f2display\fP, \f2d\fP\^, \f2gc\fP\^, \f2x\fP\^, \f2y\fP\^, \f2items\fP\^, \f2nitems\fP\^)
.br
      Display *\f2display\fP\^;
.br
      Drawable \f2d\fP\^;
.br
      GC \f2gc\fP\^;
.br
      int \f2x\fP\^, \f2y\fP\^;
.br
      XTextItem *\f2items\fP\^;
.br
      int \f2nitems\fP\^;
.LP
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
XDrawText16\^(\^\f2display\fP, \f2d\fP\^, \f2gc\fP\^, \f2x\fP\^, \f2y\fP\^, \f2items\fP\^, \f2nitems\fP\^)
.br
      Display *\f2display\fP\^;
.br
      Drawable \f2d\fP\^;
.br
      GC \f2gc\fP\^;
.br
      int \f2x\fP\^, \f2y\fP\^;
.br
      XTextItem16 *\f2items\fP\^;
.br
      int \f2nitems\fP\^;
.SH ARGUMENTS
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.IP \f2d\fP 1i
Specifies the drawable. 
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.IP \f2display\fP 1i
Specifies the connection to the X server.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.IP \f2gc\fP 1i
Specifies the GC.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.IP \f2items\fP 1i
Specifies an array of text items.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.IP \f2nitems\fP 1i
Specifies the number of text items in the array.
.ds Xy , which are relative to the origin of the specified drawable \
and define the origin of the first character
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.IP \f2x\fP 1i
.br
.ns
.IP \f2y\fP 1i
Specify the x and y coordinates\*(Xy.
.SH DESCRIPTION
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
The
.PN XDrawText16
function is similar to
.PN XDrawText 
except that it uses 2-byte or 16-bit characters.
Both functions allow complex spacing and font shifts between counted strings.
.LP
Each text item is processed in turn.
A font member other than 
.PN None
in an item causes the font to be stored in the GC
and used for subsequent text.  
A text element delta specifies an additional change
in the position along the x axis before the string is drawn. 
The delta is always added to the character origin
and is not dependent on any characteristics of the font.
Each character image, as defined by the font in the GC, is treated as an
additional mask for a fill operation on the drawable.
The drawable is modified only where the font character has a bit set to 1.
If a text item generates a
.PN BadFont
error, the previous text items may have been drawn.
.LP
For fonts defined with linear indexing rather than 2-byte matrix indexing,
each 
.PN XChar2b
structure is interpreted as a 16-bit number with byte1 as the 
most-significant byte.
.LP
Both functions use these GC components:
function, plane-mask, fill-style, font, subwindow-mode, 
clip-x-origin, clip-y-origin, and clip-mask.
They also use these GC mode-dependent components: 
foreground, background, tile, stipple, tile-stipple-x-origin, 
and tile-stipple-y-origin.
.LP
.PN XDrawText
and
.PN XDrawText16
can generate
.PN BadDrawable ,
.PN BadFont ,
.PN BadGC ,
and
.PN BadMatch 
errors.
.SH STRUCTURES
The
.PN XTextItem
and
.PN XTextItem16
structures contain:
.LP
.PP
.ft CW
.nf
.ps -4
typedef struct {
        char *chars;    /* pointer to string */
        int nchars;     /* number of characters */
        int delta;      /* delta between strings */
        Font font;      /* Font to print it in, None don't change */
} XTextItem;
.ps +4
.fi
.ft P
.PP
.LP
.PP
.ft CW
.nf
.ps -4
typedef struct {
        XChar2b *chars; /* pointer to two-byte characters */
        int nchars;     /* number of characters */
        int delta;      /* delta between strings */
        Font font;      /* font to print it in, None don't change */
} XTextItem16;
.ps +4
.fi
.ft P
.PP
.LP
If the font member is not
.PN None ,
the font is changed before printing and also is stored in the GC.
If an error was generated during text drawing,
the previous items may have been drawn.
The baseline of the characters are drawn starting at the x and y
coordinates that you pass in the text drawing functions.
.LP
For example, consider the background rectangle drawn by
.PN XDrawImageString .
If you want the upper-left corner of the background rectangle
to be at pixel coordinate (x,y), pass the (x,y + ascent)
as the baseline origin coordinates to the text functions.
The ascent is the font ascent, as given in the
.PN XFontStruct
structure.
If you want the lower-left corner of the background rectangle
to be at pixel coordinate (x,y), pass the (x,y \- descent + 1)
as the baseline origin coordinates to the text functions.
The descent is the font descent, as given in the
.PN XFontStruct
structure.
.SH DIAGNOSTICS
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.TP 1i
.PN BadDrawable
A value for a Drawable argument does not name a defined Window or Pixmap.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.TP 1i
.PN BadFont
A value for a Font or GContext argument does not name a defined Font.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.TP 1i
.PN BadGC
A value for a GContext argument does not name a defined GContext.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XDrawText.3X11,v 1.2.4.2 1993/05/03 16:23:37 Joyce_Demers Exp $
.TP 1i
.PN BadMatch
An
.PN InputOnly
window is used as a Drawable.
.SH "SEE ALSO"
XDrawImageString(3X11),
XDrawString(3X11),
XLoadFont(3X11)
.br
\f2\*(xL\fP
.EQ
delim off
.EN
