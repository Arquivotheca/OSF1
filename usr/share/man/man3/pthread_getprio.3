.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pthread_getprio.3,v $ $Revision: 3.3.4.2 $ (DEC) $Date: 1994/01/14 20:53:26 $
.\"
...\" Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED.
.wH "<routine_section>"
.TH pthread_getprio 3
.SH NAME
\*Lpthread_getprio\*O \- Obtains the current priority of a thread.
.SH SYNOPSIS
.iX "Thread" "obtaining current priority of"
.iX "Priority" "obtaining for thread"
.PP
.sS
\*L#include <pthread.h>
.fS "int pthread_getprio"
.dS "pthread_t"
\*Vthread\*O
.dE
.fE
.sE
.wH "<endformat>"
.SH PARAMETERS
.PP
.VL 10m
.LI "\*Vthread\*O"
Thread whose priority is obtained.
.LE
.wH "<endparameters>"
.SH DESCRIPTION
.PP
This routine obtains the current priority of a thread. The current priority
is different from the initial priority of the thread if the
\*Lpthread_setprio\*O routine is called.
.PP
The exact effect of different priority values depends upon the scheduling
policy assigned to the thread.
.SH RETURN VALUES
.PP
The current priority value of the thread specified in
\*Vthread\*O is returned. See the description of
\*Lpthread_setprio\*O for valid values.
.PP

If an error condition occurs, this routine returns \-1 and sets
\*Eerrno\*O to the corresponding error value. Possible return values are as
follows:
.sp
.TS
center, tab(@);
l l lw(2.5i).
\*LReturn@Error@Description\*O
_
\Priority value @@Successful completion.
\&\-1@[\*LEINVAL\*O]@T{
The value specified by \*Vthread\*O is invalid.
T}
\&\-1@[\*LESRCH\*O]@T{
The value specified by \*Vthread\*O does not refer to an existing thread.
T}
.TE
.wH "<endnas_return>"
.cS
.SH EXAMPLES
.PP
.oS
int pthread_getprio (pthread_t *thread);
.oE
.cE
.wH "<endnas_examples>"
.SH RELATED INFORMATION
.PP
\*Lpthread_attr_setprio\*O(3),
\*Lpthread_setprio\*O(3),
\*Lpthread_setscheduler\*O(3)
.EQ
delim off
.EN
