.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: getprtcent.3,v $ $Revision: 3.5.4.9 $ (DEC) $Date: 1994/01/15 02:07:21 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" OSF/1 1.2
.\"
.\" Copyright (c) 1988 SecureWare, Inc.
.\" All rights reserved
.\" @(#)getprtcent.3	1.2 17:51:09 3/28/90 SecureWare
.\" #ifdef SEC_BASE
.TH getprtcent 3
.SH NAME
.PP
\*Lgetprtcent\*O, \*Lgetprtcnam\*O, \*Lsetprtcent\*O, \*Lendprtcent\*O, \*Lputprtcnam\*O \- Manipulate terminal control database entry (Enhanced Security)
.SH LIBRARY
.PP
Security Library (\*Llibsecurity.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <sys/types.h>
.nL
#include <sys/security.h>
.nL
#include <prot.h>
.sp 0.4v
struct pr_term *getprtcent(void);
.sp 0.4v
struct pr_term *getprtcnam(
.nL
	char *\*Vname\*L);
.sp 0.4v
void setprtcent(void);
.sp 0.4v
void endprtcent(void);
.sp 0.4v
int putprtcnam(
.nL
	char *\*Vname\*L,
.nL
	struct pr_term *\*Vpr\*L);
.sE
.SH PARAMETERS
.PP
.PP
.VL
.LI "\*Vname\*O"
Specifies a terminal control database entry name.
.LI "\*Vpr\*O"
Specifies a terminal control database control entry structure.
.LE
.SH DESCRIPTION
.PP
.iX "database" "manipulating entry in terminal control"
.iX "terminal control database" "defined"
.iX "terminal control database" "manipulating entry in"
.iX "getprtcent function"
.iX "getprtcnam function"
.iX "setprtcent function"
.iX "endprtcent function"
.iX "putprtcnam function"
The
\*Lgetprtcent(\|)\*O
and
\*Lgetprtcnam(\|)\*O
functions
both return a pointer to
an object with the following structure containing the
separated-out fields of an entry in the terminal control database.
Each entry in the database contains a \*Lpr_term\*O structure, declared
in the
\*Lprot.h\*O
header file:
.oS
struct   t_field  {
        char    fd_devname[14]; /* terminal (or host) name */
        uid_t   fd_uid;         /* uid of last successful login */
        time_t  fd_slogin;      /* time stamp of successful login */
        uid_t   fd_uuid;        /* uid of last unsuccessful login */
        time_t  fd_ulogin;      /* time stamp of unsuccessful login */
        uid_t   fd_loutuid;     /* uid of last logout */
        time_t  fd_louttime;    /* time stamp of logout */
        ushort  fd_nlogins;     /* consecutive failed attempts */
        ushort  fd_max_tries;   /* max unsuc login tries allowed */
        time_t  fd_logdelay;    /* delay between login tries */
        time_t  fd_unlockint;   /* delay before clearing t_failures */
        char    fd_lock;        /* terminal locked? */
        char    fd_xdisp;       /* entry for an X display (xdm) */
        ushort  fd_login_timeout;      /* login timeout in seconds */
};

struct  t_flag  {
        unsigned short
                fg_devname:1,           /* Is fd_devname set? */
                fg_uid:1,               /* Is fd_uid set? */
                fg_slogin:1,            /* Is fd_stime set? */
                fg_uuid:1,              /* Is fd_uuid set? */
                fg_ulogin:1,            /* Is fd_ftime set? */
                fg_loutuid:1,           /* Is fd_loutuid set? */
                fg_louttime:1,          /* Is fd_louttime set? */
                fg_nlogins:1,           /* Is fd_nlogins set? */
                fg_max_tries:1,         /* Is fd_max_tries set? */
                fg_logdelay:1,          /* Is fd_logdelay set? */
                fg_lock:1,              /* Is fd_lock set? */
                fg_login_timeout:1      /* fd_login_timeout valid? */
                ;
};

struct  pr_term  {
        struct t_field ufld;
        struct t_flag uflg;
        struct t_field sfld;
        struct t_flag sflg;
};
.oE
.P
Note that \*Lufld\*O and \*Luflg\*O refer to user-specific entries,
and \*Lsfld\*O and \*Lsflg\*O refer to the system default values (see
the files reference page for \*Lauthcap\*O).
.P
The value returned by the \*Lgetprtcent(\|)\*O or \*Lgetprtcnam(\|)\*O
function
refers to a structure that is overwritten by calls to these
routines. To retrieve an entry, modify it, and replace it in the
database, you must copy the entry using structure assignment and
supply the modified buffer to \*Lputprtcnam(\|)\*O.
.P
The
\*Lgetprtcent(\|)\*O
function
returns a pointer to the first
terminal \*Lpr_term\*O structure in the database when first
called. Thereafter, it returns a
pointer to the next \*Lpr_term\*O structure in the database, so
successive calls can be used to search the database.
The
\*Lgetprtcnam(\|)\*O
function
searches from the beginning of the database until a
terminal name matching \*Vname\*O is found, and returns a pointer to
the particular structure in which it was found.
If an End-of-File or an error is encountered on reading, these
functions return a
null
pointer.
.P
A call to
\*Lsetprtcent(\|)\*O
has the effect of rewinding the terminal control
database to allow repeated searches.
The
\*Lendprtcent(\|)\*O
function
can be called to
close the terminal control database when processing is complete.
.P
The
\*Lputprtcnam(\|)\*O
function
puts a new or replaced terminal control entry
\*Vpr\*O
with key
\*Vname\*O
into the database.
If the \*Lfg_devname\*O field is 0 (zero), the
requested entry is deleted from the
terminal control database.
The
\*Lputprtcnam(\|)\*O
function
locks the database for all update operations,
and performs an
\*Lendprtcent(\|)\*O
after the update or failed attempt.
.SH NOTES
.PP
The \*Lfd_devname\*O field, on systems supporting connections,
may refer to the ASCII representation of a hostname. This may
be determined by using the \*Lgetdvagnam(\|)\*O
function to interrogate the
device assignment database as to the type of the device, passing
in the \*Lfd_devname\*O field of the terminal control structure
as an argument. This allows lockout by machine, instead of the
device (typically, a pseudo tty) on which the session originated.
.PP
Programs using these routines must be compiled with
\*L-lsecurity\*O.
.PP
The \*Lsfld\*O and \*Lsflg\*O structures are filled from
corresponding fields in the system default database.  Thus, a
program can easily extract the user-specific or system-wide
parameters for each database field (see the \*Lgetprpwent(\|)\*O and
\*Lgetdvagent(\|)\*O reference pages).
.SH RETURN VALUES
.PP
The
\*Lgetprtcent(\|)\*O and \*Lgetprtcnam(\|)\*O
functions return null
pointers on EOF or an error.
The \*Lputprtcnam(\|)\*O function returns a value of 0 (zero) if it
cannot add or update the entry.
.ne 5
.SH FILES
.PP
...\"from TP "
...\" Bold under TP !"
.VL 2i
.LI "\*L/etc/auth/system/ttys\*O"
Terminal control database.
...\"from TP "
...\" Bold under TP !"
.LI "\*L/etc/auth/system/default\*O"
System defaults database.
.LI "\*L/usr/include/prot.h\*O"
General security databases file.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lgetprdfent\*O(3).
.PP
Files:
\*Lauthcap\*O(4), \*Lttys\*O(4).
.\" #endif /* SEC_BASE */
.EQ
delim off
.EN
