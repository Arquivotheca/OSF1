.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XtGetSelectionValue.3Xt,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:52:03 $
.\" 
.ds tk X Toolkit
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xI Intrinsics
.ds xW X Toolkit Athena Widgets \- C Language Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.ds Rn 3
.ds Vn 2.2
.hw XtMake-Geometry-Request XtQuery-Geometry wid-get
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .2i 2i
.ta .2i 2i
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.		\" Note End -- doug kraft 3/85
.ny0
.TH XtGetSelectionValue 3Xt "" "" "" "X11R5"
.SH NAME
XtGetSelectionValue, XtGetSelectionValues \- obtain selection values
.SH SYNTAX
void XtGetSelectionValue(\f2w\fP, \f2selection\fP, \f2target\fP, \
\f2callback\fP, \f2client_data\fP, \f2time\fP)
.br
      Widget \f2w\fP;
.br
      Atom \f2selection\fP;
.br
      Atom \f2target\fP;
.br
      XtSelectionCallbackProc \f2callback\fP;
.br
      XtPointer \f2client_data\fP;
.br
      Time \f2time\fP;
.LP
void XtGetSelectionValues(\f2w\fP, \f2selection\fP, \f2targets\fP, \
\f2count\fP, \f2callback\fP, \f2client_data\fP, \f2time\fP)
.br
      Widget \f2w\fP;
.br
      Atom \f2selection\fP;
.br
      Atom *\f2targets\fP;
.br
      int \f2count\fP;
.br
      XtSelectionCallbackProc \f2callback\fP;
.br
      XtPointer \f2client_data\fP;
.br
      Time \f2time\fP;
.SH ARGUMENTS
.ds Cb \ that is to be called when the selection value has been obtained
.IP \f2callback\fP 1i
Specifies the callback procedure\*(Cb.
.ds Cd it is called
.IP \f2client_data\fP 1i
Specifies the argument that is to be passed to the specified procedure
when \*(Cd.
.IP \f2client_data\fP 1i
Specifies the client data (one for each target type)
that is passed to the callback procedure when it is called for that target.
.IP \f2count\fP 1i
Specifies the length of the targets and client_data lists.
.IP \f2selection\fP 1i
Specifies the particular selection desired (that is, primary or secondary).
.IP \f2target\fP 1i
Specifies the type of the information that is needed about the selection.
.IP \f2targets\fP 1i
Specifies the types of information that is needed about the selection.
.ds Ti value is desired
.IP \f2time\fP 1i
Specifies the timestamp that indicates when the selection \*(Ti.
.ds Wi that is making the request
.IP \f2w\fP 1i
Specifies the widget \*(Wi.
.SH DESCRIPTION
The
.PN XtGetSelectionValue
function requests the value of the selection that has been converted to 
the target type. 
The specified callback will be called some time after 
.PN XtGetSelectionValue 
is called;
in fact, it may be called before or after 
.PN XtGetSelectionValue 
returns.
.LP
The
.PN XtGetSelectionValues
function is similar to
.PN XtGetSelectionValue 
except that it takes a list of target types and a list of client data 
and obtains the current value of the selection converted to each of the targets.
The effect is as if each target were specified in a separate call to
.PN XtGetSelectionValue .
The callback is called once with the corresponding client data for each target.
.PN XtGetSelectionValues
does guarantee that all the conversions will use the same selection value
because the ownership of the selection cannot change in the middle of the list,
as would be when calling
.PN XtGetSelectionValue
repeatedly.
.SH "SEE ALSO"
XtAppGetSelectionTimeout(3Xt),
XtOwnSelection(3Xt)
.br
\f2\*(xT\fP
.br
\f2\*(xL\fP
.EQ
delim off
.EN
