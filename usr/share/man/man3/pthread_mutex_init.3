.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pthread_mutex_init.3,v $ $Revision: 3.2.4.2 $ (DEC) $Date: 1994/01/13 15:20:10 $
.\"
...\" Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED.
.wH "<routine_section>"
.TH pthread_mutex_init 3
.SH NAME
\*Lpthread_mutex_init\*O \- Creates a mutex.
.SH SYNOPSIS
.iX "Mutex" "creating"
.iX "Mutex" "definition of"
.iX "Creating a mutex"
.iX "Synchronization" "mutex"
.PP
.sS
\*L#include <pthread.h>\*O
.fS "int pthread_mutex_init"
.dS "pthread_mutex_t"
\*V*mutex\*L
.dE
.dS "pthread_mutexattr_t"
\*Vattr\*O
.dE
.fE
.sE
.wH "<endformat>"
.SH PARAMETERS
.PP
.VL 5m
.LI "\*Vmutex\*O"
Mutex created.
.LI "\*Vattr\*O"
Mutex attributes object that defines the characteristics of the created
mutex. If you specify \*Lpthread_mutexattr_default\*O,
default attributes are used.
.LE
.wH "<endparameters>"
.SH DESCRIPTION
.PP
This routine creates a mutex and initializes it to the unlocked state.
.PP
The created mutex is not automatically deallocated because it is considered
shared among multiple threads if the thread that called this routine
terminates.
.SH RETURN VALUES
.PP
If an error condition occurs, this routine returns \-1, the
mutex is not initialized, and the contents of \*Vmutex\*O are
undefined. This routine sets \*Eerrno\*O to the corresponding error
value. Possible return values are as follows:
.sp
.TS
center, tab(@);
l l l.
\*LReturn@Error@Description\*O
_
\00@@Successful completion.
\&\-1@[\*LEAGAIN\*O]@T{
The system lacks the necessary resources to initialize another mutex.
T}
@@T{
The system-imposed limit on the total number of mutexes under
execution by a single user is exceeded.
T}
\&\-1@[\*LENOMEM\*O]@Insufficient memory exists to initialize the mutex.
.TE
.wH "<endnas_return>"
.cS
.SH EXAMPLES
.PP
.oS
int pthread_mutex_init (pthread_mutex_t *mutex,
 pthread_mutexattr_t attr);
.oE
.cE
.wH "<endnas_examples>"
.SH RELATED INFORMATION
.PP
\*Lpthread_mutexattr_create\*O(3),
\*Lpthread_mutexattr_getkind_np\*O(3),
\*Lpthread_mutexattr_setkind_np\*O(3),
\*Lpthread_mutex_lock\*O(3),
\*Lpthread_mutex_trylock\*O(3),
\*Lpthread_mutex_unlock\*O(3)
.EQ
delim off
.EN
