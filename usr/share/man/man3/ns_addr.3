.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: ns_addr.3,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1994/01/15 00:14:10 $
.\"
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.\" Copyright (c) 1986 The Regents of the University of California.
.\" All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\" 
.\" @(#)ns.3	6.4 (Berkeley) 6/23/90
.\" 
.TH ns_addr 3
.SH NAME
.PP
\*Lns_addr\*O, \*Lns_ntoa\*O, \*Lns_ntoa_r\*O \- Xerox NS address conversion routines
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <sys/types.h>\*O
.nL
\*L#include <netns/ns.h>\*O
.sp 0.4v
\*Lstruct ns_addr ns_addr(\*O
.nL
	\*Lchar *\*Vcp\*L);
.nL
\*Lchar *ns_ntoa(\*O
.nL
	\*Lstruct ns_addr \*Vns\*L);
.nL
\*Lint ns_ntoa_r(\*O
.nL
	\*Lstruct ns_addr \*Vns\*L,
.nL
	\*Lchar *\*Vbuf\*L,
.nL
	\*Lint \*Vbuf_len\*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vcp\*O"
Points to a character string representing an XNS address.
.LI "\*Vns\*O"
Specifies an XNS address.
.LI "\*Vbuf\*O"
Points to the buffer that will contain the returned ASCII strings.
.LI "\*Vbuf_len\*O"
Specifies the size of the buffer \*Vbuf\*O.  This must be at
least 40 characters.
.LE
.SH DESCRIPTION
.PP
.iX "ns_addr function"
.iX "ns_ntoa function"
.iX "ns_ntoa_r function"
.iX "Xerox NS address" "converting character strings to binary"
.iX "Xerox NS address" "converting to ASCII"
.iX "NS address" "converting character strings to binary"
.iX "NS address" "converting to ASCII"
The
\*Lns_addr(\|)\*O
function
interprets character strings representing
Xerox NS addresses, and returns binary information suitable
for use in functions.
The
\*Lns_ntoa(\|)\*O
function
takes XNS addresses and returns ASCII
strings representing the address in a
notation in common use in the Xerox development environment:
.oS
<\*Vnetwork number\*C>.<\*Vhost number\*C>.<\*Vport number\*C>
.oE
.PP
Trailing zero fields are suppressed, and each number is printed in hexadecimal,
in a format suitable for input to the
\*Lns_addr(\|)\*O
function.
Any fields lacking superdecimal digits will have a
trailing \*LH\*O appended.
.PP
Unfortunately, no universal standard exists for representing XNS addresses.
An effort has been made to ensure that the
\*Lns_addr(\|)\*O
function
be compatible with most formats in common use.
.PP
The
\*Lns_addr(\|)\*O
function
first separates an address into one to three fields using a \*L.\*O (dot),
a \*L:\*O (colon), or a \*L#\*O (number sign) single delimiter.
Each field is then examined for byte separators (colon or period).
If there are byte separators, each subfield separated is taken to be
a small hexadecimal number, and the entire
component is taken as a network-byte-ordered
quantity to be zero extended in the high-network-order bytes.
.PP
Next, the field is inspected for dashes.  If there are dashes,
the field is assumed to be a number in decimal notation
with dashes separating the millenia.
Next, the field is assumed to be a number.
It is interpreted
as hexadecimal if there is a leading \*L0x\*O (as in C),
a trailing \*LH\*O
(as in Mesa), or if there are any superdecimal digits present.
It is interpreted as octal if there is a leading 0 (zero)
and there are no superoctal digits.
Otherwise, it is converted as a decimal number.
.PP
The \*Lns_ntoa_r(\|)\*O function is a reentrant version of
\*Lns_ntoa(\|)\*O.  Upon successful completion, the converted string
is in the buffer pointed at by \*Vbuf\*O.
.SH RETURN VALUES
.PP
The \*Lns_ntoa_r(\|)\*O function returns a value of 0 (zero) for success or
a value of -1
for failure.
.SH ERRORS
.PP
If any of the following conditions occurs,
\*Lns_ntoa_r(\|)\*O sets \*Lerrno\*O to the corresponding
value:
.VL 1i
.LI "[EINVAL]"
The buffer pointed to by \*Vbuf\*O is invalid, or \*Vbuf_len\*O is less
than
40 characters.
.LE
.SH RELATED INFORMATION
.PP
Files:
\*Lhosts\*O(4),
\*Lnetworks\*O(4).
.iX "ns_addr function"
.iX "ns_ntoa function"
.iX "ns_ntoa_r function"
.EQ
delim off
.EN
