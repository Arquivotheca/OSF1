.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: cvt_ftof.3,v $ $Revision: 1.1.2.3 $ (DEC) $Date: 1993/12/17 17:15:30 $
.\"
.\"
.TH cvt_ftof 3
.SH NAME
.PP
\*Lcvt_ftof\*O  \- Converts a floating-point data type to another supported floating-point data type.
.SH LIBRARY
.PP
\*OMath Library (\*Llibm.a\*O)
.SH SYNOPSIS
.iX "cvt_ftof function"
.iX "Floating-point data type converter"
.iX "Converting floating-point data types"
.iX "VAX F floating-point data type, conversion to"
.iX "VAX D floating-point data type, conversion to"
.iX "VAX G floating-point data type, conversion to"
.iX "VAX H floating-point data type, conversion to"
.iX "IEEE little endian S floating-point data type, conversion to"
.iX "IEEE little endian T floating-point data type, conversion to"
.iX "IEEE little endian X floating-point data type, conversion to"
.iX "IEEE big endian S floating-point data type, conversion to"
.iX "IEEE big endian T floating-point data type, conversion to"
.iX "IEEE big endian X floating-point data type, conversion to"
.PP
.sS
\*L#include <cvt.h>
.PP
\*Lint cvt_ftof(
                 void \*V*input_val\*L,
                 int  \*Vinput_type\*L,
                 void \*V*output_val\*L,
                 int  \*Voutput_type\*L,
                 int  \*Voptions\*L);
.nL
.sE
.SH DESCRIPTION
.PP
\*Lcvt_ftof(\|)\*O converts  one floating-point data type to another. \*VInput_val\*O points to the input value to be converted and \*Voutput_val\*O points to the converted result.
.PP
\*VInput_type\*O and \*Voutput_type\*O identify the floating-point data type of \*Vinput_val\*O and  \*Voutput_val\*O as follows:
.PP
.TS
tab(@);
lfHB lfHB lfHB
l l l .
_
.sp 4p
\*VInput_type\*O/\*VOutput_type\*O@Data Type@Size
.sp 4p
_
.sp 6p
CVT_VAX_F@VAX F Floating@ 4 bytes
CVT_VAX_D@VAX D Floating@ 8 bytes
CVT_VAX_G@VAX G Floating@ 8 bytes
CVT_VAX_H@VAX H Floating@16 bytes
CVT_IEEE_S@IEEE Little Endian S Floating@ 4 bytes
CVT_IEEE_T@IEEE Little Endian T Floating@ 8 bytes
CVT_IEEE_X@IEEE Little Endian X Floating@16 bytes
CVT_BIG_ENDIAN_IEEE_S@IEEE Big Endian S Floating@ 4 bytes
CVT_BIG_ENDIAN_IEEE_T@IEEE Big Endian T Floating@ 8 bytes
CVT_BIG_ENDIAN_IEEE_X@IEEE Big Endian X Floating@16 bytes
.\"
.\"
.\"
.\"   Input_type / Output_type Values Floating-Point Data Type
.\"  ------------------------------- ----------------------------------------
.\"  CVT_VAX_F                       VAX  F Floating               ( 4 bytes)
.\"  CVT_VAX_D                       VAX  D Floating               ( 8 bytes)
.\"  CVT_VAX_G                       VAX  G Floating               ( 8 bytes)
.\"  CVT_VAX_H                       VAX  H Floating               (16 bytes)
.\"  CVT_IEEE_S                      IEEE Little Endian S Floating ( 4 bytes)
.\"  CVT_IEEE_T                      IEEE Little Endian T Floating ( 8 bytes)
.\"  CVT_IEEE_X                      IEEE Little Endian X Floating (16 bytes)
.\"  CVT_BIG_ENDIAN_IEEE_S           IEEE Big Endian S Floating    ( 4 bytes)
.\"  CVT_BIG_ENDIAN_IEEE_T           IEEE Big Endian T Floating    ( 8 bytes)
.\"  CVT_BIG_ENDIAN_IEEE_X           IEEE Big Endian X Floating    (16 bytes)
.\"
.\"
.\"
.sp 6p
_
_
.TE
.PP
\*Voptions\*O must be 0 (zero) and is reserved for future use.
.PP
\*Lcvt_ftof(\|)\*O returns 0 (zero) for a successful conversion, and nonzero for a failed conversion. Failed conditions include: \*Vinput_type\*O and \*Voutput_type\*O are invalid, and \*Voptions\*O  is not 0 (zero).
.PP
.\" .TS
.\" tab(@);
.\" lfHB lfHB lfHB
.\" l l l .
.\" _
.\" .sp 4p
.\" Data Type@      max_float Value@
.\" .sp 4p
.\" _
.\" .sp 6p
.\" F_FLOAT @Hexadecimal: FFFF7FFF@
.\" G_FLOAT @Hexadecimal: FFFFFFFFFFFF7FFF@
.\" S_FLOAT @Hexadecimal: 7F7FFFFF@
.\" T_FLOAT @Hexadecimal: 7FEFFFFFFFFFFFFF@
.\" X_FLOAT @Hexadecimal: 7FFEFFFFFFFFFFFFFFFFFFFFFFFFFFFF@
.\"         @                           @
.\" F_FLOAT @Decimal: 1.701411e38@
.\" G_FLOAT @Decimal: 8.988465674311579e307@
.\" S_FLOAT @Decimal: 3.402823e38@
.\" T_FLOAT @Decimal: 1.797693134862316e308@
.\" X_FLOAT @Decimal: 1.189731495357231765085759326628007016196477e4932@
.\" .sp 6p
.\" _
.\" _
.\" .TE
.\" .PP
.\" .TS
.\" tab(@);
.\" lfHB lfHB lfHB
.\" l l l .
.\" _
.\" .sp 4p
.\" Data Type@      min_float Value@
.\" .sp 4p
.\" _
.\" .sp 6p
.\" F_FLOAT @Hexadecimal: 00000080@
.\" G_FLOAT @Hexadecimal: 0000000000000010@
.\" S_FLOAT @Hexadecimal: 00000001@
.\" T_FLOAT @Hexadecimal: 0000000000000001@
.\" X_FLOAT @Hexadecimal: 00000000000000000000000000000001@
.\"         @                             @
.\" F_FLOAT @Decimal: 2.9387359e-39@
.\" G_FLOAT @Decimal: 5.562684646268003e-309@
.\" S_FLOAT @Decimal: 1.4012985e-45@
.\" T_FLOAT @Decimal: 4.940656458412465e-324@
.\" X_FLOAT @Decimal: 6.4751751194380251109244389582276465524996e-4966@
.\" .sp 6p
.\" _
.\" _
.\" .TE
.\" .PP
The default mode of rounding is determined by the destination data type.  Conversions to VAX data types default to VAX style rounding.  Conversions to IEEE data types use the "round to nearest" mode as described in IEEE Std. 754.
.PP
.nL
.SH EXAMPLES
.PP
This  example converts the value pointed to by x which is of type VAX D Floating, to the IEEE Little Endian T Floating data type and stores the result in the location pointed to by y.
.PP
  status = cvt_ftof(&x, CVT_VAX_D, &y, CVT_IEEE_T, 0 );
.PP
This example converts the value pointed to by big_x which is of type IEEE Big Endian T Floating, to the IEEE Little Endian T Floating data type and stores the result in the location pointed to by little_x.
.PP
  status = cvt_ftof( &big_x, CVT_BIG_ENDIAN_IEEE_T,
                       &little_x, CVT_IEEE_T, 0 );
.PP
.SH RELATED INFORMATION
.PP
ANSII/IEEE Std 754-1985, IEEE Standard for Binary Floating-Point
Arithmetic
.EQ
delim off
.EN
