.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: getfsent.3,v $ $Revision: 3.2.5.4 $ (DEC) $Date: 1994/01/13 20:21:01 $
.\"
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH getfsent 3
.SH NAME
.PP
\*Lgetfsent\*O, \*Lgetfsent_r\*O, \*Lgetfsspec\*O, \*Lgetfsspec_r\*O, \*Lgetfsfile\*O, \*Lgetfsfile_r\*O, \*Lsetfsent\*O, \*Lsetfsent_r\*O, \*Lendfsent\*O, \*Lendfsent_r\*O \- Get information about a file system
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
.\" Digital correction.  For some reason, the len's in the following syntax 
.\" descriptions were coded as pointers to ints.  I removed the *s as directed
.\" by QAR 15550.
\*L#include <fstab.h>
.PP
\*Lstruct fstab *getfsent(void);
.PP
\*Lint getfsent_r(
.nL
	struct fstab *\*Vfsent\*L,
.nL
	char *\*Vbuf\*O\*L,
.nL
	int \*Vlen\*L,
.nL
	\*LFILE **\*Vfs_fp\*L);
.PP
\*Lstruct fstab *getfsspec(
.nL
	const char *\*Vspec_file\*L);
.PP
\*Lint getfsspec_r(
.nL
	const char *\*Vspec_file\*O
.nL
	\*Lstruct fstab *\*Vfsent\*L,
.nL
	char *\*Vbuf\*O\*L,
.nL
	int \*Vlen\*L,
.nL
	\*LFILE **\*Vfs_fp\*L);
.PP
\*Lstruct fstab *getfsfile(
.nL
	const char *\*Vfs_file\*L);
.PP
\*Lint getfsfile_r(
.nL
	const char *\*Vfs_file\*O
.nL
	\*Lstruct fstab *\*Vfsent\*L,
.nL
	char *\*Vbuf\*O\*L,
.nL
	int \*Vlen\*L,
.nL
	\*LFILE **\*Vfs_fp\*L);\*L
.PP
\*Lint setfsent(void);
.PP
\*Lint setfsent_r(
.nL
	\*LFILE **\*Vfs_fp\*L);\*L
.PP
\*Lvoid endfsent(void);
.PP
\*Lvoid endfsent_r(
.nL
	\*LFILE **\*Vfs_fp\*L);\*L
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vspec_file"
\*OSpecifies the block special device name to look for.
.LI "\*Vfs_file"
\*OSpecifies the file system filename to look for.
.LI "\*Vfsent\*O"
Specifies the file system table entry found.
.LI "\*Vbuf\*O"
Specifies a working buffer that can hold the
longest \*Lfstab\*O file line for the reentrant functions.
.LI "\*Vlen\*O"
Specifies the length of \*Vbuf\*O.  This length should be sufficient
for \*Vbuf\*O to hold the longest \*L/etc/fstab\*O line.
.LI "\*Vfs_fp\*O"
Specifies the file that contains the next file system entry
(initialized by the user).
.LE
.SH DESCRIPTION
.PP
.iX "getfsent function"
.iX "getfsent_r function"
.iX "getfsspec function"
.iX "getfsspec_r function"
.iX "getfsfile function"
.iX "getfsfile_r function"
.iX "setfsent function"
.iX "endfsent function"
.iX "setfsent_r function"
.iX "endfsent_r function"
.iX "file system" "returning information about"
.iX "file" "reading next line of"
.iX "file" "opening and positioning on first record"
.iX "file" "searching for special filename"
.iX "file" "searching for system filename"
.iX "file" "searching for file system type"
For the following functions, entries are read from the \*L/etc/fstab\*O file.
.PP
The \*Lgetfsent(\|)\*O function reads the next line of the file,
opening the file if necessary.
.PP
The \*Lsetfsent(\|)\*O function opens the file or rewinds
to the first record.
.PP
The \*Lendfsent(\|)\*O function closes the file.  If there is no file
to close, the \*Lendfsent(\|)\*O function returns.
.PP
\*OThe \*Lgetfsspec(\|)\*O function sequentially searches from the
beginning of the file until a matching \*Vspec_file\*O name is found,
or the end of the file is encountered.
.PP
The \*Lgetfsfile(\|)\*O function sequentially
searches from the beginning of the file until a matching
file system filename is found, or the end of the file is encountered.
.PP
The \*Lgetfsent_r(\|)\*O, \*Lgetfsspec_r(\|)\*O,
\*Lgetfsfile_r(\|)\*O, \*Lsetfsent_r(\|)\*O,
and \*Lendfsent_r(\|)\*O functions are the reentrant versions of the
.\".zA "defect, 7077, R1.1.2, Added comma"
\*Lgetfsent(\|)\*O,
\*Lgetfsspec(\|)\*O, \*Lgetfsfile(\|)\*O,
\*Lsetfsent(\|)\*O,
and \*Lendfsent(\|)\*O functions.
.\".zZ "defect, 7077, R1.1.2, Added comma"
Upon
successful completion, the \*Lgetfsent_r(\|)\*O, \*Lgetfsspec_r(\|)\*O,
and \*Lgetfsfile_r(\|)\*O functions store
the file system table structure in
the area pointed at by \*Vfsent\*O.  Note that the caller is expected
to initialize \*V*fs_fp\*O to NULL before calling the
\*Lsetfsent_r(\|)\*O function for the first time.
.SH NOTES
.PP
.\".zA "defect, 7077, R1.1.2, Added comma"
For the \*Lgetfsent(\|)\*O,
\*Lgetfsspec(\|)\*O, \*Lgetfsfile(\|)\*O,
\*Lsetfsent(\|)\*O,
and \*Lendfsent(\|)\*O functions, all information is contained in a static
area, so it must be copied if it is to be saved.
.\".zZ "defect, 7077, R1.1.2, Added comma"
.SH RETURN VALUES
.PP
Upon successful completion,
.\".zA "defect, 7077, R1.1.2, Removed two commas"
the \*Lgetfsent(\|)\*O and \*Lgetfsspec(\|)\*O
.\".zZ "defect, 7077, R1.1.2, Removed two commas"
functions return a pointer to a file system table entry, defined in
the \*Lfstab.h\*O file.  Upon successful completion, the
\*Lsetfsent(\|)\*O function returns a value of 1.
Upon failure or \*LEOF\*O (End-of-File), the \*Lgetfsent(\|)\*O,
.\".zA "defect, 7077, R1.1.2, Added getfsfile"
\*Lgetfsfile(\|)\*O,
.\".zZ "defect, 7077, R1.1.2, Added getfsfile"
and \*Lgetfsspec(\|)\*O
functions return a NULL pointer, and the
\*Lsetfsent(\|)\*O function returns a value of 0 (zero).
.PP
Upon
successful completion, the \*Lgetfsent_r(\|)\*O, \*Lgetfsspec_r(\|)\*O,
\*Lgetfsfile_r(\|)\*O, and \*Lsetfsent_r(\|)\*O
functions return a value of 0 (zero).  Upon error, the \*Lgetfsent_r(\|)\*O,
\*Lgetfsspec_r(\|)\*O,
\*Lgetfsfile_r(\|)\*O, and \*Lsetfsent_r(\|)\*O
functions return a value of -1.
.SH ERRORS
.PP
If any of the following conditions occurs, the \*Lgetfsent_r(\|)\*O,
\*Lgetfsspec_r(\|)\*O,
\*Lgetfsfile_r(\|)\*O, and \*Lsetfsent_r(\|)\*O
functions set \*Lerrno\*O to the corresponding value:
.VL
.LI "[EINVAL]"
\*Vfsent\*O, \*Vline\*O, or \*Vfs_fp\*O are invalid, or \*Vlen\*O is
too small.
.LE
.PP
If any of the following conditions occurs, the \*Lgetfsent_r(\|)\*O,
\*Lgetfsspec_r(\|)\*O, and
\*Lgetfsfile_r(\|)\*O,
functions set \*Lerrno\*O to the corresponding value:
.VL
.LI "[ESRCH]"
The search failed.
.LE
.PP
In addition upon failure, the \*Lsetfsent(\|)\*O and \*Lendfsent(\|)\*O
functions
return other \*Lerrno\*Os.
.SH RELATED INFORMATION
.PP
Files:
\*Lfstab\*O(4).
.iX "getfsent function"
.iX "getfsent_r function"
.iX "getfsspec function"
.iX "getfsspec_r function"
.iX "getfsfile function"
.iX "getfsfile_r function"
.iX "setfsent function"
.iX "endfsent function"
.iX "setfsent_r function"
.iX "endfsent_r function"
.EQ
delim off
.EN
