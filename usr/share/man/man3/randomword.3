.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: randomword.3,v $ $Revision: 3.5.4.7 $ (DEC) $Date: 1994/01/14 23:23:19 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" OSF/1 1.2
.\"build rmifdef
.\"
.\"
.\" Copyright (c) 1988 SecureWare, Inc.
.\" All rights reserved
.\" @(#)randomword.3	1.2 17:44:49 3/28/90 SecureWare
.\" #ifdef SEC_BASE
.TH randomword 3
.SH NAME
.PP
\*Lrandomword\*O, \*Lrandomchars\*O, \*Lrandomletters\*O \- Routines that generate random passwords (Enhanced Security)
.SH LIBRARY
.PP
Security Library (\*Llibsecurity.a\*O)
.SH SYNOPSIS
.PP
.sS
\*Lint randomchars(
.nL
	char *\*Vstring\*L,
.nL
	unsigned short int \*Vminlen\*L,
.nL
	unsigned short int \*Vmaxlen\*L,
.nL
	boolean \*Vrestrict\*L,
.nL
	long \*Vseed\*L);
.sp 0.4v
int randomletters(
.nL
	char *\*Vstring\*L,
.nL
	unsigned short int \*Vminlen\*L,
.nL
	unsigned short int \*Vmaxlen\*L,
.nL
	boolean \*Vrestrict\*L,
.nL
	long \*Vseed\*L);
.sp 0.4v
int randomword(
.nL
	char *\*Vword\*L,
.nL
	char *\*Vhyphenated_word\*L,
.nL
	unsigned short int \*Vminlen\*L,
.nL
	unsigned short int \*Vmaxlen\*L,
.nL
	boolean \*Vrestrict\*L,
.nL
	long \*Vseed\*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vstring\*O"
Points at a user-supplied space to contain a null-terminated password.
.LI "\*Vminlen\*O"
Specifies the minimum length that a generated word can have.
.LI "\*Vmaxlen\*O"
Specifies the maximum length that a generated word can have.
.LI "\*Vrestrict\*O"
Specifies whether or not restrictions are to be imposed on the
generated word.  This is a boolean integer where 0 (zero) indicates no
restrictions, and a non-zero integer indications there are
restrictions.
.LI "\*Vseed\*O"
Specifies an initial seed for the random number generator.
.LI "\*Vword\*O"
Points at a user-supplied space to contain a null-terminated random
pronounceable password.
.LI "\*Vhyphenated_word\*O"
Contains the hyphenated version of the generated word.
.LE
.SH DESCRIPTION
.PP
.iX "randomword function"
.iX "randomchars function"
.iX "randomletters function"
.iX "passwords" "generating random"
.iX "generating random passwords"
These routines generate random passwords for use in password selection.
All of them are generated by the system, based on seeds
and set in the routine.
Such seeds can be created with the
\*Ldrand48(\|)\*O, \*Lrand(\|)\*O, or \*Lrandom(\|)\*O
routines.
.P
The
\*Lrandomchars(\|)\*O
function
places a null-terminated
password composed of random printable ASCII characters
into the \*Vstring\*O argument
and returns the length of the generated string.
.ig ++
The
\*Vminlen\*O
and
\*Vmaxlen\*O
arguments denote the minimum and maximum lengths allowed for
\*Vstring\*O\&.
.++
\*Vminlen\*O
can equal
\*Vmaxlen\*O,
but cannot be greater than
\*Vmaxlen\*O,
and neither may be negative.
The user space preallocated is at least
\*Vmaxlen\*O
for
\*Vstring\*O\&.
Of course, the smaller
\*Vminlen\*O
and
\*Vmaxlen\*O
are, the smaller the selection space of random words.
The argument
\*Vrestrict\*O
is 0 (zero) when no restrictions are placed on the generated word.
It is nonzero when the words generated pass the tests of the
\*Lacceptable_password(\|)\*O
function.
.ig ++
The
\*Vseed\*O
argument specifies an initial seed for the random number generator used
by \*Lrandomchars(\|)\*O.
.++
The \*Vseed\*O parameter is used by the routine only on the first time
it is called;  the parameter
is ignored on subsequent calls.
.P
The
\*Lrandomletters(\|)\*O
function
places a null-terminated
password composed of random lower-case letters
into the \*Vstring\*O argument
and returns the length of the generated word.
The
\*Vminlen\*O,
\*Vmaxlen\*O,
\*Vrestrict,\*O
and
\*Vseed\*O
arguments are the same as for the \*Lrandomchars(\|)\*O function.
.P
The
\*Lrandomword(\|)\*O
function
places a null-terminated
random pronounceable password into the \*Vword\*O parameter
and returns the length of the generated word.
.ig ++
The hyphenated version of the word is placed in
\*Vhyphenated_word\*O\&.
.++
The
\*Vminlen\*O,
\*Vmaxlen\*O,
\*Vrestrict\*O,
and
\*Vseed\*O
arguments are the same as for the \*Lrandomchars(\|)\*O and
\*Lrandomletters(\|)\*O functions.
The user space preallocated
is at least
\*O2*\*Vmax\*O-1
for
\*Vhyphenated_word\*O\&.
.SH NOTES
.PP
The password generator relies on a random number generator
that produces uniformly distributed integers.
Because the password generator invokes the random number generator
many times even for one word, the random number generator has to
produce a uniform distribution.
The period (distinct numbers produced given a particular seed) and
number space (range of possible numbers) must both be large. The
\*Ldrand48(\|)\*O routines are used for this purpose.
.P
Programs using these routines must be compiled with \%\*L-lsecurity\*O.
.SH FILES
.PP
.VL
.LI "\*L/etc/passwd\*O"
System password file.
.LI "\*L/etc/group\*O"
System group file.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lacceptable_password(3),
\*Ldrand48(3), \*Lrand(3), \*Lrandom(3)\*O.
.PP
Commands:
\*Llogin(1),
\*Lpasswd(1)\*O.
.iX "randomword function"
.iX "randomchars function"
.iX "randomletters function"
.\" #endif /* SEC_BASE */
.EQ
delim off
.EN
