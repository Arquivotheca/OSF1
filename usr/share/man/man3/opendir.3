.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: opendir.3,v $ $Revision: 3.2.7.2 $ (DEC) $Date: 1993/07/22 17:28:12 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"build rmifdef
.\"
.\"
.\"build rmifdef tbl eqn
.\" Begin Digital-specific information CORRECTION
.\" Added opendir_r and readdir_r to the NAME line per QAR 7913.
.\" Then removed opendir_r per QAR 8809.
.\" End Digital-specific information CORRECTION
.TH opendir 3
.SH NAME
.PP
\*Lopendir\*O, \*Lreaddir\*O, \*Lreaddir_r\*O, \*Ltelldir\*O, \*Lseekdir\*O, \*Lrewinddir\*O, \*Lclosedir\*O \-  Performs operations on directories
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.\" Begin Digital-specific information CORRECTION
.\" In the second include, changed <sys/dirent.h> to <dirent.h> per QAR 4963.
.\" Changed .sp 4v to .sp to pass tman.
.\" End Digital-specific information CORRECTION
.sS
\*L#include <sys/types.h>
.nL
#include <dirent.h>\*L
.sp
\*LDIR *opendir (
.nL
	const char *\*Vdir_name \*L);\*O
.\" Begin Digital-specific information CORRECTION
.\" Removing opendir_r per QAR 8809.
.\" .sp
.\" \*Lint opendir_r (
.\" .nL
.\" 	char *\*Vdir_name\*O,\*L
.\" .nL
.\" 	DIR *\*Vdir_pointer\*O );\*L
.\" End Digital-specific information CORRECTION
.sp
\*Lstruct dirent *readdir (
.nL
	DIR *\*Vdir_pointer \*L);\*O
.sp
\*Lint readdir_r (
.nL
	DIR *\*Vdir_pointer\*O,\*L
.nL
.\" Begin Digital-specific information CORRECTION
.\" Added an asterisk before 'result' per QAR 10753.
	struct dirent **\*Vresult\*O );\*L
.\" End Digital-specific information CORRECTION
.sp
\*Llong telldir (
.nL
	DIR *\*Vdir_pointer \*L);\*O
.sp
.\" Begin Digital-specific information - CORRECTION
\*Lvoid seekdir (
.\" End Digital-specific information - CORRECTION
.nL
	DIR *\*Vdir_pointer\*L,
.nL
	long \*Vlocation \*L);\*O
.sp
.\" Begin Digital-specific information - CORRECTION
\*Lvoid rewinddir (
.\" End Digital-specific information - CORRECTION
.nL
	DIR *\*Vdir_pointer \*L);\*O
.sp
\*Lint closedir (
.nL
        \*LDIR *\*Vdir_pointer \*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vdir_name\*O"
Names the directory.
If the final component of
\*Vdir_name\*O
names a symbolic link, the link will be traversed and pathname
resolution will continue.
.LI "\*Vdir_pointer\*O"
Points to the \*Ldir\*O structure
of an open directory.
.LI "\*Vlocation\*O"
Specifies the number of an entry relative to the start
of the directory.
.LI "result"
Contains the next directory entry on return from the
\*Lreaddir_r(\|)\*O
function.
.LE
.SH DESCRIPTION
.PP
.iX "opendir function"
.iX "readdir function"
.iX "telldir function"
.iX "seekdir function"
.iX "rewinddir function"
.iX "closedir function"
.iX "directory operations"
.iX "operations on directories"
The \*Lopendir(\|)\*O function opens the directory designated
by the \*Vdir_name\*O parameter and associates a directory
stream with it.  The directory stream is positioned at the first entry.
The type
\*LDIR\*O,
which is defined in the
\*Ldirent.h\*O header file,
represents a
directory stream,
which is an ordered sequence of all the directory entries in a
particular directory.
If a file descriptor is used, the FD_CLOEXEC flag will be set on
that file descriptor.
.PP
The \*Lopendir(\|)\*O function also returns a pointer to identify
the directory stream in subsequent operations. The null pointer
is returned when the directory named by the \*Vdir_name\*O
parameter cannot be accessed or when not enough memory is available
to hold the entire stream.
.PP
The type
\*LDIR\*O,
which is defined in the
\*Ldirent.h\*O header file,
represents a
directory stream,
which is an ordered sequence of all the directory entries in a
particular directory.
Directory entries represent files; files may be removed from a
directory or added to a directory asynchronously to the operation of the
\*Lreaddir(\|)\*O function.
.PP
The
\*Lreaddir(\|)\*O
function
returns a pointer to a structure representing
the directory entry at the current position
in the directory stream specified by the
\*Vdir_pointer\*O parameter,
and positions the directory stream at the next entry.
It returns a null pointer upon reaching the end of the directory stream.
The
\*Ldirent\*O structure
defined in the
\*Ldirent.h\*O
header file describes a directory entry.
.PP
The
\*Lreaddir(\|)\*O
function will not return directory entries containing empty
names.
If entries for . (dot) or .\|. (dot-dot) exist, one entry will be returned
for . (dot) and one entry will be returned for .\|. (dot-dot); otherwise,
they will not be returned.
.PP
The pointer returned by the
\*Lreaddir(\|)\*O function
points to data which may be overwritten by another call to
\*Lreaddir(\|)\*O
on the same directory stream.
This data will not be overwritten by another call to
\*Lreaddir(\|)\*O
on a different directory stream.
.PP
If a file is removed from or added to the directory after the most
recent call to the
\*Lopendir(\|)\*O
or
\*Lrewinddir(\|)\*O
function,
whether a subsequent call to the
\*Lreaddir(\|)\*O function
returns an entry for that file is unspecified.
.PP
The
\*Lreaddir(\|)\*O
function may buffer several directory entries per actual read
operation; the
\*Lreaddir(\|)\*O
function marks for update the
\*Lst_atime\*O
field of the directory each time the directory is actually read.
.PP
When it reaches the end of the directory, or when it detects
an invalid \*Lseekdir(\|)\*O operation, the \*Lreaddir(\|)\*O function
returns the null value.
.PP
The \*Ltelldir(\|)\*O function returns the current location associated
with the specified directory stream.
.PP
The
\*Lseekdir(\|)\*O
function sets the position of the next
\*Lreaddir(\|)\*O
operation on the directory stream specified by the
\*Vdir_pointer\*O
parameter
to the position specified by the
\*Vlocation\*O
parameter.
.PP
If the value of the
\*Vlocation\*O
parameter
was not returned by a call to the
\*Ltelldir(\|)\*O
function,
or if there was an intervening call to the
\*Lrewinddir(\|)\*O
function
on this directory stream,
the effect is undefined.
The new position reverts to the one associated with the directory
stream when the
\*Ltelldir(\|)\*O
operation was performed.
.PP
An attempt
to seek to an invalid location causes the \*Lreaddir(\|)\*O function
to return the null value the next time it is called. The
position should be that returned by a previous \*Ltelldir(\|)\*O function
call.
.PP
The \*Lrewinddir(\|)\*O function resets the position of the specified
directory stream to the beginning of the directory.  It also causes
the directory stream to refer to the current
state of the corresponding directory, as a call to the
\*Lopendir(\|)\*O function
would have done.
If the
\*Vdir_pointer\*O parameter
does not refer to a directory stream, the effect is undefined.
.PP
The \*Lclosedir(\|)\*O function closes a directory stream and
frees the structure associated with the \*Vdir_pointer\*O
parameter.  Upon return, the value of
\*Vdir_pointer\*O
may no longer point to an accessible object of the type
\*LDIR\*O.
If a file descriptor is used to implement type
\*LDIR\*O,
that file descriptor will be closed.
.PP
The
.\" Begin Digital-specific information CORRECTION
.\" Removing opendir_r per QAR 8809
.\" \*Lopendir_r(\|)\*O
.\" and
\*Lreaddir_r(\|)\*O
.\" Changed 'functions are' to 'function is' and 'versions' to 'version'.
function is the reentrant version of the
.\" \*Lopendir(\|)\*O
.\" and
\*Lreaddir(\|)\*O
.\" Changed 'functions," to 'function.'.
function.
.\" respectively.
.\" The
.\" \*Lopendir_r(\|)\*O
.\" function stores the new directory stream associated with
.\" \*Vdir_name\*O
.\" at
.\" \*Vdir_pointer\*O.
.\" End Digital-specific information
The
\*Lreaddir_r(\|)\*O
function stores the next directory entry at
\*Vresult\*O.
.SH NOTES
.PP
An open directory must always be closed with
the \*Lclosedir(\|)\*O function to ensure that the next attempt to
open that directory is successful.
.PP
The use of the
\*Lseekdir(\|)\*O
and
\*Ltelldir(\|)\*O
functions is not recommended in OSF/1, as the results can be
unpredictable.
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use (\*Lopendir(\|)\*O,
\*Lclosedir(\|)\*O,
\*Lreaddir(\|)\*O,
\*Lrewinddir(\|)\*O)
.IP
Trial use (\*Lseekdir(\|)\*O,
\*Ltelldir(\|)\*O)
.LE
.SH EXAMPLES
.PP
To search a directory for the entry \*Lname\*O:
.oS
len = strlen(name);
.nL
dir_pointer = opendir(".");
.nL
for (dp = readdir(dir_pointer);\ dp != NULL; dp =
.nL
	readdir(dir_pointer))
.nL
        if (dp->d_namlen == len && !strcmp(dp->d_name, name)) {
.nL
                closedir(dir_pointer);
.nL
                return FOUND;
.nL
        }
.nL
closedir(dir_pointer);
.nL
return NOT_FOUND;
.oE
.SH RETURN VALUES
.PP
Upon successful completion, the
\*Lopendir(\|)\*O function
returns a pointer to an object of type
\*LDIR\*O.
Otherwise, null is returned and
\*Lerrno\*O
set to indicate the error.
.PP
Upon successful completion,
the \*Lreaddir(\|)\*O function
returns a pointer to an object of type
\*Lstruct dirent\*O.
When an error is encountered, a null pointer is returned and
\*Lerrno\*O
is set to indicate the error.
When the end of the directory is encountered, a null pointer is
returned and
\*Lerrno\*O
is not changed.
.PP
Upon successful completion, the
\*Ltelldir(\|)\*O
function returns the current location.
Otherwise,
-1 is returned.
.PP
Upon successful completion, the
\*Lseekdir(\|)\*O function
returns 0 (zero).
Otherwise, \-1 is returned.
.PP
Upon successful completion, the
\*Lrewinddir(\|)\*O function
returns 0 (zero).
Otherwise, \-1 is returned.
.PP
Upon successful completion, the
\*Lclosedir(\|)\*O function
returns 0 (zero).
Otherwise, \-1 is returned.
.\" Begin Digital-specific information
.\" Removing opendir_r per QAR 8809.
.\" .PP
.\" Upon successful completion, the
.\" \*Lopendir_r(\|)\*O
.\" function returns 0 (zero).  Otherwise, -1 is returned.
.\" End Digital-specific information
.PP
Upon successful completion, the
\*Lreaddir_r(\|)\*O
function returns 0 (zero).  Otherwise, -1 is returned.
.SH ERRORS
.PP
If the
\*Lopendir(\|)\*O
function fails,
\*Lerrno\*O
may be set to one of the following values:
.VL 1i
.LI "[EACCES]"
Search permission is denied for any component of
\*Vdir_name\*O
or read permission is denied for
\*Vdir_name.\*O
.LI "[ELOOP]"
Too many links were encountered in translating
\*Vdir_name\*O.
.LI "[ENAMETOOLONG]"
.nL
The length of the
\*Vdir_name\*O
string exceeds PATH_MAX,
or a pathname component is longer than
NAME_MAX.
.LI "[ENOENT]"
The \*Vdir_name\*O parameter points to the name of a file which does not exist,
or the parameter points to an empty string.
.LI "[ENOTDIR]"
A component of
\*Vdir_name\*O
is not a directory.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lclose\*O(2),
\*Llseek\*O(2),
\*Lopen\*O(2),
\*Lread\*O(2),
\*Lscandir\*O(3)
.iX "opendir function"
.iX "readdir function"
.iX "telldir function"
.iX "seekdir function"
.iX "rewinddir function"
.iX "closedir function"
.EQ
delim off
.EN
