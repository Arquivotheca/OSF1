.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: fmtmsg.3,v $ $Revision: 1.1.5.6 $ (DEC) $Date: 1994/01/19 18:09:21 $
.\"
.TH fmtmsg 3
.SH NAME
.PP
\*Lfmtmsg\*O - Displays a message in the standard format
.SH SYNOPSIS
.PP
.sS
\*L#include <fmtmsg.h>\*O
.sp
\*Lint fmtmsg (
.nL
     long\*O \*Vclassification\*L,
.nL
     const char *\*Vlabel\*L,
.nL
     int \*Vseverity\*L,
.nL
     const char *\*Vtext\*L,
.nL
     const char *\*Vaction\*L,
.nL
     const char *\*Vtag\*L );\*O
.sE
.SH PARAMETERS
.PP
.VL 4m
.LI "\*Vclassification\*O"
Defines the origin, type, and status of a message.  This information is not
displayed to the user.   To define the origin, type, and status of a message,
you must select options from the available class and/or subclasses.
More than one option from a subclass can be combined with an
option from a different subclass by ORing the values together.  Using
two or more options from the same subclass is not allowed with the
exception of options from the \*LDisplay Subclass\*O.  The following
class and subclasses are available:
.VL 4m
.LI "\*LMajor Class\*O"
Specifies the source of the condition.  The options are
\*LMM_HARD\*O (hardware), \*LMM_SOFT\*O (software), and \*LMM_FIRM\*O (firmware).
.LI "\*LMessage Source Subclasses\*O"
Specifies the software type that exhibits the problem.  The options
are \*LMM_APPL\*O (application), \*LMM_UTIL\*O (utility), \*LMM_OPSYS\*O, and
(operating system).
.LI "\*LDisplay Subclass\*O"
Specifies where the message is displayed.  The options are \*LMM_PRINT\*O (standard
error) or \*LMM_CONSOLE\*O (system console).  Both options may be specified
together.
.LI "\*LStatus Subclass\*O"
Specifies whether the application will recover from the condition.  The options are
\*LMM_RECOVER\*O (can recover) or \*LMM_NRECOVER\*O (cannot recover).
.LE
.sp
Note that you can specify \*LMM_NULLMC\*O to indicate that a class is not specified
for the message.
.LI "\*Vlabel\*O"
Specifies the message source.  The \*Vlabel\*O format consists of two
fields separated by a colon.  The first field can contain up to 10
characters.  The second field can contain up to 14 characters.  It is
suggested that \*Vlabel\*O contain at least the name of the application.
.LI "\*Vseverity\*O"
Specifies the severity of the condition.  The options are as follows:
.VL 4m
.LI "\*LMM_ERROR\*O"
Specifies that application has encountered an error. Outputs the print
string \*CERROR\*O.
.LI "\*LMM_HALT\*O"
Specifies that the application has stopped running because it has
found a severe error. Outputs the print string \*CHALT\*O.
.LI "\*LMM_INFO\*O"
Displays information about a nonerror condition. Outputs the print
string \*CINFO\*O.
.LI "\*LMM_NOSEV\*O"
Specifies that a severity level has not been provided for the message.
.LI "\*LMM_WARNING\*O"
Specifies a condition that might be a problem and should be monitored.
Outputs the print string \*CWARNING\*O.
.LE
.LI "\*Vtext\*O"
Describes the error that produced the message. The \*Vtext\*O string
has no maximum length.
.LI "\*Vaction\*O"
Describes the first action to be taken to recover from the error condition.
The \*Lfmtmsg(\|)\*O function prefixes every action string with the following:
\*CTO FIX:\*O. The action string has no maximum length.
.LI "\*Vtag\*O"
Points the user to the online documentation for the message. It is
suggested that \*Vtag\*O include the \*Vlabel\*O as well as a unique
identifying number. For example, a sample tag is the following:
\*Cpg:002.
.LE
.SH DESCRIPTION
.PP
.iX "fmtmsg function"
.iX "printing messages"
.iX "standard error" "writing messages"
The \*Lfmtmsg\*O function writes a formatted message to either standard
error, the system console, or both.  Any message typically written to
standard error (\*Lstderr\*O) by \*Lprintf\*O can also be displayed using the
\*Lfmtmsg\*O function.  A formatted message can contain up to
five fields that describe the purpose of the message.  The fields are
defined by the \*Vlabel\*O, \*Vseverity\*O, \*Vtext\*O, \*Vaction\*O,
and \*Vtag\*O parameters.  The \*Lclassification\*O parameter additionally
defines the source of a message and directs the output of a message.
The previous section describes these parameters in detail.  You must
include the \*L<fmtmsg.h>\*O header file in your application to define
the display and format of messages.
.PP
One or more fields may be omitted from messages by using the null value of that
parameter.  The following table specifies the null value for each parameter.
.TS
tab(@);
lfHB lfHB lfHB lfHB
l l l l.
_
.sp 4p
Parameter@Type@Null Value@Identifier
.sp 4p
_
.sp 6p
\*Vlabel\*O@char*@(char*)NULL@MM_NULLBL
\*Vseverity\*O@int@0@MM_NULLSEV
\*Vclassification\*O@long@0L@MM_NULLMC
\*Vtext\*O@char*@(char*)NULL@MM_NULLTXT
\*Vaction\*O@char*@(char*)NULL@MM_NULLACT
\*Vtag\*O@char*@(char*)NULL@MM_NULLTAG
.sp 6p
_
.TE
.SS Customizing Messages
.if n .PP
There are two environment variables, \*LMSGVERB\*O and
\*LSEV_LEVEL\*O that let you optionally define the behavior of the
the \*Lfmtmsg\*O function.  These variables can be globally defined in the system's
\*L\etc\profile\*O by the system administrator.  Likewise, you retain the option
of overriding the system defaults by defining the variables in your \*L.profile\*O file, or
by specifying the option through your command line interface.
.PP
The \*LMSGVERB\*O (message verbose) environment variable defines which parameters are used by
.iX "MSGVERB environment variable" "using with fmtmsg"
.iX "message verbose" "setting"
the \*Lfmtmsg\*O function when writing a message to standard error (\*Lstderr\*O).
Only the parameters that are defined and applicable are displayed.  If this
variable is not set or a parameter is invalid, the \*Lfmtmsg\*O function displays
all of the available parameters by default.  The syntax is:
.PP
.sS
\*LMSGVERB=\*O[\*Vparameter\*O[:\*Vparameter\*O[: ...]]]\*O
\*Lexport MSGVERB\*O
.sE
.PP
The valid parameters are: \*Vlabel\*O, \*Vseverity\*O,
\*Vtext\*O, \*Vaction\*O, and \*Vtag\*O.  These parameters may be specified
in any order.  See the \*LPARAMETERS\*O section for parameter definitions.
.PP
The \*LSEV_LEVEL\*O (severity level) environment variable lets you
.iX "SEV_LEVEL environment variable"
.iX "severity level" "setting for messages"
define, modify, or delete severity levels other than the default.  Each
severity level that you define has a print string associated with it that is used by
the \*Lfmtmsg\*O function.  The syntax is:
.PP
.sS
\*LSEV_LEVEL=\*O[\*Vdescription\*O[:\*Vdescription\*O[: ...]]]
.nL
\*Lexport SEV_LEVEL\*O
.sE
.PP
The \*Vdescription\*O arguments consists of three fields separated
by commas as follows:
.PP
.sS
\*Vdescription\*O=\*Vseverity_level\*O,\*Vlevel\*O,\*Vprintstring\*O
.sE
.PP
The value of each field is:
.VL 4m
.LI "\*Vseverity_level\*O"
Specifies the severity of the level.
.LI "\*Vlevel\*O"
Specifies a severity level with any positive integer except 0 to 4 (the
standard severity levels).
.LI "\*Vprintstring\*O"
Specifies the severity level message used by the \*Lfmtmsg(\|)\*O function
whenever the severity level \*Vlevel\*O is used.
.LE
.PP
If the \*LSEV_LEVEL\*O environment variable is not set, or it has a
null value, the defaults are used. If the \*Vdescription\*O is
not a three-field comma is not a 3-field comma separated list as described
previously or if the
\*Vlevel\*O field specified is not a positive integer, the \*LSEV_LEVEL\*O
environment variable setting is ignored.
.PP
The \*LSEV_LEVEL\*O environment variable can be set in the user's shell
or used in shell scripts.
.SH EXAMPLES
.PP
.AL
.LI
The following \*Lfmtmsg(\|)\*O function example
produces the following message in the standard message format:
.oS
fmtmsg(MM_PRINT, "pg", MM_ERROR, "invalid syntax",
.nL
cat: ERROR: invalid syntax
.nL
TO FIX: refer to manual  pg(1):002
.oE
.LI
When the environment variable \*LMSGVERB\*O is set as follows
and the Example 1 is used, the \*Lfmtmsg(\|)\*O function produces
the following results:
.sp
.iS
MSGVERB=severity:text:action
.iE
.sp
.oS
ERROR: invalid syntax
.nL
TO FIX: refer to manual
.oE
.LI
When the environment variable \*LSEV_LEVEL\*O is set as follows,
the call to the \*Lfmtmsg(\|)\*O function produces the following results:
.sp
.iS
SEV_LEVEL=note, 5, NOTE
.iE
.oS
fmtmsg(MM_PRINT | MM_UTIL, "pg", 5, "cannot open file",
.nL
"specify correct file name", "pg(1):002")
.oE
.oS
cat: NOTE: cannot open file
.nL
TO FIX: specify correct file name pg(1): 002
.oE
.LE
.SH RETURN VALUES
.PP
The \*Lfmtmsg(\|)\*O function returns the following values:
.VL 4m
.LI "MM_NOCON"
Unable to return a console message, but nonetheless succeeded.
.LI "MM_NOMSG"
Unable to return a message on standard error, but nonetheless succeeded.
.LI "MM_NOTOK"
Complete failure.
.LI "MM_OK"
Successful completion.
.LE
.SH RELATED INFORMATION
.PP
Functions:
.\" \*Lgettxt\*O(3),
\*Lprintf(3)\*O.
.EQ
delim off
.EN
