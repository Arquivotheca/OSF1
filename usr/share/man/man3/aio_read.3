.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: aio_read.3,v $ $Revision: 1.2.2.6 $ (DEC) $Date: 1993/01/11 16:12:35 $
.\" 
.\" SCCSID: @(#)aio_read.3	6.5	3/19/91
.\" SCCSID: @(#)aio_read.3	6.5	1/7/92
.TH aio_read 3
.SH NAME
.PP
\*Laio_read\*O \- Queue an asynchronous read request on the specified file descriptor (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<aio.h>\*O
.PP
int \*Laio_read\*O (
.br
struct \*Laiocb\*O \*V*aiocbp\*O);
.SH PARAMETERS
.PP
.TP 8
.I aiocbp
A pointer to an \*Laiocb\*O structure.
.SH DESCRIPTION
.PP
.iX "aio_read function"
.iX "input/output" "asynchronous read"
The \*Laio_read\*O function
issues a read request and returns even when the data cannot
be delivered immediately. If the request cannot be initiated, the
\*Laio_read\*O function returns with an error status. If an
error condition occurs during queuing, the function call returns without
initiating the queue request. The \*Vaiocbp\*O value may be used as an
argument to the \*Laio_error\*O and \*Laio_return\*O functions to determine
the error or return status of the asynchronous read operation.
.PP
The \*Vaiocbp\*O argument points to an asynchronous control block
structure, \*Laiocb\*O, used in the asynchronous I/O interfaces.
The \*Laiocbp\*O structure contains asynchronous operation
information, such as the file offset for the read
operation.
The \*Laiocb\*O structure has the following members:
.TP 15
int
.I aio_fildes;
.TP 15
off_t
.I aio_offset;
.TP 15
volatile char
.I *aio_buf;
.TP 15
size_t
.I aio_nbytes;
.TP 15
int
.I aio_reqprio;
.TP 15
struct sigevent
.I aio_sigevent;
.PP
The \*Vaio_fildes\*O member is the file descriptor on which the asynchronous
operation is to be performed. After any asynchronous I/O operation
the \*Vaio_offset\*O member is undefined and must be set explicitly for every
asynchronous I/O request.
.PP
The \*Vaio_nbytes\*O and \*Vaio_buf\*O members are the same as the \*Vnbyte\*O
and \*Vbuf\*O arguments defined by POSIX.1 \*Lread\*O and \*Lwrite\*O
functions.
.PP
Prioritized asynchronous I/O operations are not supported for this release.
For portability reasons, set the \*Vaio_reqprio\*O member to AIO_PRIO_DFL,
default priority as defined in the \*L<limits.h>\*O header file.
.PP
The \*Vaio_sigevent\*O member defines the signal generated once the I/O operation
is complete. If \*Vaio_sigevent.sevt_signo\*O is zero, no signal is
posted on completion.
.PP
Pending asynchronous I/O operations are handled as follows:
.RS 3
.IP \(bu 3
On close, outstanding asynchronous I/O operations can be canceled.
.IP \(bu
On \*L_exit\*O and \*Lexec\*O,
outstanding asynchronous I/O operations can be canceled.
.IP \(bu
On \*Lfork\*O, no asynchronous I/O is inherited.
.RE
.SH RETURN VALUES
.PP
On a successful call, a value of 0 is returned and the function is queued.
.PP
On an unsuccessful call,
a value of \-1 is returned and \*Lerrno\*O
is set to indicate that an error occurred.
.SH ERRORS
.PP
The \*Laio_read\*O function fails under the following conditions:
.TP 15
[EAGAIN]
The requested asynchronous I/O operation was not queued due to system
resource limitations.
.TP 15
[EBADF]
The \*Vaiocbp\->aio_fildes\*O argument is not a valid file descriptor open
for reading.
.TP 15
[EINVAL]
The file offset value implied by \*Vaiocbp\->aio_offset\*O would be
invalid.
.SH RELATED INFORMATION
.PP
Functions:
\*Lclose\*O(2), \*Lexec\*O(2), \*L_exit\*O(2), \*Lfork\*O(2), \*Llseek\*O(2),
\*Lread\*O(2), \*Lwrite\*O(2),
\*Laio_cancel\*O(3), \*Laio_error\*O(3), \*Laio_return\*O(3),
\*Laio_write\*O(3), \*Llio_listio\*O(3)
.EQ
delim off
.EN
