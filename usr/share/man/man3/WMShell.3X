.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: WMShell.3X,v $ $Revision: 3.3.4.4 $ (DEC) $Date: 1993/10/25 18:49:10 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH WMShell 3X "" "" "" "OSF/Motif"
.SH NAME
\*LWMShell\*O \- The WMShell widget class
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/Xm.h>
\&#include <X11/Shell.h>
.iE
.sE
.SH DESCRIPTION
.iX "WMShell"
.iX "widget class" "WMShell"
WMShell is a top-level widget that encapsulates the interaction with the
window manager.
.nL
.ne 2.5i
.SS "Classes"
WMShell inherits behavior and resources from \*LCore\*O, \*LComposite\*O,
and \*LShell\*O classes.
.PP
The class pointer is \*LwmShellWidgetClass\*O.
.PP
The class name is \*LWMShell\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
WMShell Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNbaseHeight	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCBaseHeight	\ \ \ \ \ \ \ int
_
XmNbaseWidth	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCBaseWidth	\ \ \ \ \ \ \ int
_
XmNheightInc	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCHeightInc	\ \ \ \ \ \ \ int
_
XmNiconMask	NULL	CSG
\ \ \ \ \ \ XmCIconMask	\ \ \ \ \ \ \ Pixmap
_
XmNiconPixmap	NULL	CSG
\ \ \ \ \ \ XmCIconPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNiconWindow	NULL	CSG
\ \ \ \ \ \ XmCIconWindow	\ \ \ \ \ \ \ Window
_
XmNiconX	\-1	CSG
\ \ \ \ \ \ XmCIconX	\ \ \ \ \ \ \ int
_
XmNiconY	\-1	CSG
\ \ \ \ \ \ XmCIconY	\ \ \ \ \ \ \ int
_
XmNinitialState	NormalState	CSG
\ \ \ \ \ \ XmCInitialState	\ \ \ \ \ \ \ int
_
XmNinput	False	CSG
\ \ \ \ \ \ XmCInput	\ \ \ \ \ \ \ Boolean
_
XmNmaxAspectX	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMaxAspectX	\ \ \ \ \ \ \ int
_
XmNmaxAspectY	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMaxAspectY	\ \ \ \ \ \ \ int
_
XmNmaxHeight	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMaxHeight	\ \ \ \ \ \ \ int
_
XmNmaxWidth	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMaxWidth	\ \ \ \ \ \ \ int
_
.wH .tH
XmNminAspectX	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMinAspectX	\ \ \ \ \ \ \ int
_
XmNminAspectY	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMinAspectY	\ \ \ \ \ \ \ int
_
XmNminHeight	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMinHeight	\ \ \ \ \ \ \ int
_
XmNminWidth	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCMinWidth	\ \ \ \ \ \ \ int
_
XmNtitle	dynamic	CSG
\ \ \ \ \ \ XmCTitle	\ \ \ \ \ \ \ String
_
XmNtitleEncoding	dynamic	CSG
\ \ \ \ \ \ XmCTitleEncoding	\ \ \ \ \ \ \ Atom
_
XmNtransient	False	CSG
\ \ \ \ \ \ XmCTransient	\ \ \ \ \ \ \ Boolean
_
XmNwaitForWm	True	CSG
\ \ \ \ \ \ XmCWaitForWm	\ \ \ \ \ \ \ Boolean
_
XmNwidthInc	XtUnspecifiedShellInt	CSG
\ \ \ \ \ \ XmCWidthInc	\ \ \ \ \ \ \ int
_
XmNwindowGroup	dynamic	CSG
\ \ \ \ \ \ XmCWindowGroup	\ \ \ \ \ \ \ Window
_
XmNwinGravity	dynamic	CSG
\ \ \ \ \ \ XmCWinGravity	\ \ \ \ \ \ \ int
_
XmNwmTimeout	5000 ms	CSG
\ \ \ \ \ \ XmCWmTimeout	\ \ \ \ \ \ \ int
_
.TE
.\" NROFF HACK END
.VL  
.LI "\*LXmNbaseHeight\*O"
Specifies the base for a progression of preferred heights for the
window manager to use in sizing the widget.
The preferred heights are \*LXmNbaseHeight\*O plus integral multiples of
\*LXmNheightInc\*O, with a minimum of \*LXmNminHeight\*O and a maximum
of \*LXmNmaxHeight\*O.
If an initial value is not supplied for \*LXmNbaseHeight\*O but is
supplied for \*LXmNbaseWidth\*O, the value of \*LXmNbaseHeight\*O
is set to 0 when the widget is realized.
.nL
.ne 4
.LI "\*LXmNbaseWidth\*O"
Specifies the base for a progression of preferred widths for the
window manager to use in sizing the widget.
The preferred widths are \*LXmNbaseWidth\*O plus integral multiples of
\*LXmNwidthInc\*O, with a minimum of \*LXmNminWidth\*O and a maximum of
\*LXmNmaxWidth\*O.
If an initial value is not supplied for \*LXmNbaseWidth\*O but is
supplied for \*LXmNbaseHeight\*O, the value of \*LXmNbaseWidth\*O
is set to 0 when the widget is realized.
.LI "\*LXmNheightInc\*O"
Specifies the increment for a progression of preferred heights for the
window manager to use in sizing the widget.
The preferred heights are \*LXmNbaseHeight\*O plus integral multiples of
\*LXmNheightInc\*O, with a minimum of \*LXmNminHeight\*O and a maximum
of \*LXmNmaxHeight\*O.
If an initial value is not supplied for \*LXmNheightInc\*O but is
supplied for \*LXmNwidthInc\*O, the value of \*LXmNheightInc\*O
is set to 1 when the widget is realized.
.LI "\*LXmNiconMask\*O"
Specifies a bitmap that could be used by the window manager to clip the
\*LXmNiconPixmap\*O bitmap to make the icon nonrectangular.
.LI "\*LXmNiconPixmap\*O"
Specifies a bitmap that could be used by the window manager as the
application's icon.
.LI "\*LXmNiconWindow\*O"
Specifies the ID of a window that could be used by the window manager
as the application's icon.
.LI "\*LXmNiconX\*O"
Specifies a suitable place to put the application's icon; this is a hint
to the window manager in root window coordinates.  Since the window manager
controls icon placement policy, this may be ignored.
If no initial value is specified, the value is set to \-1 when the
widget is realized.
.LI "\*LXmNiconY\*O"
Specifies a suitable place to put the application's icon; this is a hint
to the window manager in root window coordinates.
Since the window manager
.ne 4
controls icon placement policy, this may be ignored.
If no initial value is specified, the value is set to \-1 when the
widget is realized.
.LI "\*LXmNinitialState\*O"
Specifies the state in which the application wishes the widget instance to
start.
It must be one of the constants \*LNormalState\*O or \*LIconicState\*O.
.LI "\*LXmNinput\*O"
Specifies the application's input model for this widget and its
descendants.
The meaning of a True or False value for this resource depends on the
presence or absence of a \*LWM_TAKE_FOCUS\*O atom in the
\*LWM_PROTOCOLS\*O property:
.PP
.ne 1.5i
.TS
center,tab(@);
lb lb lb
l l l.
Input Model@XmNinput@WM_TAKE_FOCUS
_
No input@False@Absent
Passive@True@Absent
Locally active@True@Present
Globally active@False@Present
.TE
.PP
For more information on input models, see the X Consortium Standard
\*VInter-Client Communication Conventions Manual.\*O
.LI "\*LXmNmaxAspectX\*O"
Specifies the numerator of the maximum aspect ratio (X/Y) that the
application wishes the widget instance to have.
.LI "\*LXmNmaxAspectY\*O"
Specifies the denominator of the maximum aspect ratio (X/Y) that the
application wishes the widget instance to have.
.LI "\*LXmNmaxHeight\*O"
Specifies the maximum height that the application wishes the widget
instance to have.
If an initial value is not supplied for \*LXmNmaxHeight\*O but is
supplied for \*LXmNmaxWidth\*O, the value of \*LXmNmaxHeight\*O
is set to 32767 when the widget is realized.
.nL
.ne 6
.LI "\*LXmNmaxWidth\*O"
Specifies the maximum width that the application wishes the widget
instance to have.
If an initial value is not supplied for \*LXmNmaxWidth\*O but is
supplied for \*LXmNmaxHeight\*O, the value of \*LXmNmaxWidth\*O
is set to 32767 when the widget is realized.
.LI "\*LXmNminAspectX\*O"
Specifies the numerator of the minimum aspect ratio (X/Y) that the
application wishes the widget instance to have.
.LI "\*LXmNminAspectY\*O"
Specifies the denominator of the minimum aspect ratio (X/Y) that the
application wishes the widget instance to have.
.LI "\*LXmNminHeight\*O"
Specifies the minimum height that the application wishes the widget
instance to have.
If an initial value is not supplied for \*LXmNminHeight\*O but is
supplied for \*LXmNminWidth\*O, the value of \*LXmNminHeight\*O
is set to 1 when the widget is realized.
.LI "\*LXmNminWidth\*O"
Specifies the minimum width that the application wishes the widget
instance to have.
If an initial value is not supplied for \*LXmNminWidth\*O but is
supplied for \*LXmNminHeight\*O, the value of \*LXmNminWidth\*O
is set to 1 when the widget is realized.
.LI "\*LXmNtitle\*O"
Specifies the application name to be displayed by the window manager.
The default is the icon name if specified, otherwise the name of the
application.
.LI "\*LXmNtitleEncoding\*O"
Specifies a property type that represents the encoding of the
\*LXmNtitle\*O string.
If a language procedure has been set, the default is None; otherwise,
the default is XA_STRING.  When the widget is realized, if the value
is None, the corresponding name is assumed to be in the current locale.
The name is passed to \*LXmbTextListToTextProperty\*O with an encoding
style of \*LXStdICCTextStyle\*O.  The resulting encoding is "STRING"
if the name is fully convertible to "STRING," otherwise "COMPOUND_TEXT."
The values of the encoding resources are not changed; they remain None.
.LI "\*LXmNtransient\*O"
Specifies a Boolean value that is True if the widget instance is
transient, typically a popup on behalf of another widget.
The window manager may treat a transient widget's window differently
from other windows.
For example, a window manager may
.ne 7
not iconify a transient window
separately from its associated application.
Applications and users should not normally alter this resource.
.LI "\*LXmNwaitForWm\*O"
When True, specifies that the Intrinsics waits the length of time given
by the \*LXmNwmTimeout\*O resource for the window manager to respond to
certain actions before assuming that there is no window manager present.
This resource is altered by the Intrinsics as it receives, or fails
to receive, responses from the window manager.
.LI "\*LXmNwidthInc\*O"
Specifies the base for a progression of preferred widths for the
window manager to use in sizing the widget.
The preferred widths are \*LXmNbaseWidth\*O plus integral multiples of
\*LXmNwidthInc\*O, with a minimum of \*LXmNminWidth\*O and a maximum of
\*LXmNmaxWidth\*O.
If an initial value is not supplied for \*LXmNwidthInc\*O but is
supplied for \*LXmNheightInc\*O, the value of \*LXmNwidthInc\*O
is set to 1 when the widget is realized.
.LI "\*LXmNwindowGroup\*O"
Specifies the ID of a window with which this widget instance is
associated.
By convention, this window is the "leader" of a group of windows.
A window manager may treat all windows in a group in some way; for
example, it may always move or iconify them together.
.PP
If no initial value is specified, the value is set to the window of the
first realized ancestor widget in the parent hierarchy when the widget
is realized.
If a value of \*LXtUnspecifiedWindowGroup\*O is specified, no window
group is set.
.nL
.ne 25
.LI "\*LXmNwinGravity\*O"
Specifies the window gravity for use by the window manager in
positioning the widget.
If no initial value is specified, the value is set when the widget is
realized.
If \*LXmNgeometry\*O is not NULL, \*LXmNwinGravity\*O is set to the
window gravity returned by \*LXWMGeometry\*O.
Otherwise, \*LXmNwinGravity\*O is set to \*LNorthWestGravity\*O.
.LI "\*LXmNwmTimeout\*O"
Specifies the length of time that the Intrinsics waits for the window
manager to respond to certain actions before assuming that there is no
window manager present.
The value is in milliseconds and must not be negative.
.LE 
.SS "Inherited Resources"
WMShell inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Shell Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNallowShellResize	False	CG
\ \ \ \ \ \ XmCAllowShellResize	\ \ \ \ \ \ \ Boolean
_
XmNcreatePopupChildProc	NULL	CSG
\ \ \ \ \ \ XmCCreatePopupChildProc	\ \ \ \ \ \ \ XtCreatePopupChildProc
_
XmNgeometry	NULL	CSG
\ \ \ \ \ \ XmCGeometry	\ \ \ \ \ \ \ String
_
XmNoverrideRedirect	False	CSG
\ \ \ \ \ \ XmCOverrideRedirect	\ \ \ \ \ \ \ Boolean
_
XmNpopdownCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNpopupCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNsaveUnder	False	CSG
\ \ \ \ \ \ XmCSaveUnder	\ \ \ \ \ \ \ Boolean
_
XmNvisual	CopyFromParent	CSG
\ \ \ \ \ \ XmCVisual	\ \ \ \ \ \ \ Visual *
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Composite Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNchildren	NULL	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ WidgetList
_
XmNinsertPosition	NULL	CSG
\ \ \ \ \ \ XmCInsertPosition	\ \ \ \ \ \ \ XtOrderProc
_
XmNnumChildren	0	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ Cardinal
_
.TE
.\" NROFF HACK END
.PP
.wH .in 0 
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Core Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaccelerators	dynamic	CSG
\ \ \ \ \ \ XmCAccelerators	\ \ \ \ \ \ \ XtAccelerators
_
XmNancestorSensitive	dynamic	G
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNbackground	dynamic	CSG
\ \ \ \ \ \ XmCBackground	\ \ \ \ \ \ \ Pixel
_
XmNbackgroundPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderColor	XtDefaultForeground	CSG
\ \ \ \ \ \ XmCBorderColor	\ \ \ \ \ \ \ Pixel
_
XmNborderPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderWidth	1	CSG
\ \ \ \ \ \ XmCBorderWidth	\ \ \ \ \ \ \ Dimension
_
XmNcolormap	dynamic	CG
\ \ \ \ \ \ XmCColormap	\ \ \ \ \ \ \ Colormap
_
XmNdepth	dynamic	CG
\ \ \ \ \ \ XmCDepth	\ \ \ \ \ \ \ int
_
XmNdestroyCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNheight	dynamic	CSG
\ \ \ \ \ \ XmCHeight	\ \ \ \ \ \ \ Dimension
_
XmNinitialResourcesPersistent	True	C
\ \ \ \ \ \ XmCInitialResourcesPersistent	\ \ \ \ \ \ \ Boolean
_
XmNmappedWhenManaged	True	CSG
\ \ \ \ \ \ XmCMappedWhenManaged	\ \ \ \ \ \ \ Boolean
_
XmNscreen	dynamic	CG
\ \ \ \ \ \ XmCScreen	\ \ \ \ \ \ \ Screen *
_
.wH .tH
XmNsensitive	True	CSG
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNtranslations	dynamic	CSG
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNwidth	dynamic	CSG
\ \ \ \ \ \ XmCWidth	\ \ \ \ \ \ \ Dimension
_
XmNx	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
XmNy	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
.TE
.\" NROFF HACK END
.wH .in  
.SS "Translations"
There are no translations for WMShell.
.SH RELATED INFORMATION
.na
\*LComposite(3X)\*O, \*LCore(3X)\*O, and \*LShell(3X)\*O.
.ad
.EQ
delim off
.EN
