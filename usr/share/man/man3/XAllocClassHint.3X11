.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XAllocClassHint.3X11,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:14:26 $
.\" 
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"     choose appropriate monospace font
.\"     the imagen conditional, 480,
.\"     may be changed to L if LB is too
.\"     heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.               \" Note End -- doug kraft 3/85
.ny0
.TH XAllocClassHint 3X11 "" "" "" "X11R5"
.SH NAME
XAllocClassHint, XSetClassHint, XGetClassHint, XClassHint \- allocate class hints structure and set or read a window's WM_CLASS property
.SH SYNTAX
XClassHint *XAllocClassHint\^(\|)
.LP
XSetClassHint\^(\^\f2display\fP, \f2w\fP, \f2class_hints\fP\^)
.br
      Display *\f2display\fP\^;
.br
      Window \f2w\fP\^;
.br
      XClassHint *\f2class_hints\fP\^;
.LP
Status XGetClassHint\^(\^\f2display\fP, \f2w\fP, \f2class_hints_return\fP\^)
.br
      Display *\f2display\fP\^;
.br
      Window \f2w\fP;
.br
      XClassHint *\f2class_hints_return\fP\^;
.SH ARGUMENTS
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XAllocClassHint.3X11,v 1.2.4.2 1993/05/03 16:14:26 Joyce_Demers Exp $
.IP \f2display\fP 1i
Specifies the connection to the X server.
.IP \f2class_hints\fP 1i
Specifies the
.PN XClassHint
structure that is to be used.
.IP \f2class_hints_return\fP 1i
Returns the 
.PN XClassHint
structure.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XAllocClassHint.3X11,v 1.2.4.2 1993/05/03 16:14:26 Joyce_Demers Exp $
.IP \f2w\fP 1i
Specifies the window.
.SH DESCRIPTION
The
.PN XAllocClassHint
function allocates and returns a pointer to a
.PN XClassHint
structure.
Note that the pointer fields in the
.PN XClassHint
structure are initially set to NULL.
If insufficient memory is available, 
.PN XAllocClassHint
returns NULL.
To free the memory allocated to this structure,
use
.PN XFree .
.LP
The
.PN XSetClassHint
function sets the class hint for the specified window.
If the strings are not in the Host Portable Character Encoding
the result is implementation dependent.
.LP
.PN XSetClassHint
can generate
.PN BadAlloc
and
.PN BadWindow
errors.
.LP
The
.PN XGetClassHint
function returns the class hint of the specified window to the members
of the supplied structure.
If the data returned by the server is in the Latin Portable Character Encoding,
then the returned strings are in the Host Portable Character Encoding.
Otherwise, the result is implementation dependent.
It returns nonzero status on success; otherwise it returns a zero status.
To free res_name and res_class when finished with the strings,
use
.PN XFree
on each individually.
.LP
.PN XGetClassHint
can generate a
.PN BadWindow
error.
.SH PROPERTIES
.TP 1i
\s-1WM_CLASS\s+1
Set by application programs to allow window and session
managers to obtain the application's resources from the resource database.
.SH STRUCTURES
The
.PN XClassHint
structure contains:
.LP
.NX R "XClassHint"
.PP
.ft CW
.nf
.ps -4
typedef struct {
        char *res_name;
        char *res_class;
} XClassHint;
.ps +4
.fi
.ft P
.PP
.LP
The res_name member contains the application name, 
and the res_class member contains the application class. 
Note that the name set in this property may differ from the name set as WM_NAME.
That is, WM_NAME specifies what should be displayed in the title bar and,
therefore, can contain temporal information (for example, the name of
a file currently in an editor's buffer).
On the other hand, 
the name specified as part of WM_CLASS is the formal name of the application
that should be used when retrieving the application's resources from the 
resource database.
.SH DIAGNOSTICS
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XAllocClassHint.3X11,v 1.2.4.2 1993/05/03 16:14:26 Joyce_Demers Exp $
.TP 1i
.PN BadAlloc
The server failed to allocate the requested resource or server memory.
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/WS/MITX11R5/man3X11/XAllocClassHint.3X11,v 1.2.4.2 1993/05/03 16:14:26 Joyce_Demers Exp $
.TP 1i
.PN BadWindow
A value for a Window argument does not name a defined Window.
.SH "SEE ALSO"
XAllocIconSize(3X11),
XAllocSizeHints(3X11),
XAllocWMHints(3X11),
XFree(3X11),
XSetCommand(3X11),
XSetTransientForHint(3X11),
XSetTextProperty(3X11),
XSetWMClientMachine(3X11),
XSetWMColormapWindows(3X11),
XSetWMIconName(3X11),
XSetWMName(3X11),
XSetWMProperties(3X11),
XSetWMProtocols(3X11),
XStringListToTextProperty(3X11)
.br
\f2\*(xL\fP
.EQ
delim off
.EN
