.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: getusershell.3,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1994/01/14 20:03:20 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH getusershell 3
.SH NAME
.PP
\*Lgetusershell\*O, \*Lgetusershell_r\*O, \*Lsetusershell\*O, \*Lsetusershell_r\*O, \*Lendusershell\*O, \*Lendusershell_r\*O \- Get the names of legal user shells
.SH LIBRARY
.PP
\*OStandard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*Lchar *getusershell(void);
.PP
\*Lint getusershell_r(
.nL
	\*Lchar *\*Vshell\*L\|,
.nL
	\*Lint \*Vlen\*L\|
.\".zA "defect, 6735, R1.1.1, added parameter"
.nL
	\*Lunsigned int *\*Vstate\*L\|);
.\".zZ "defect, 6735, R1.1.1, added parameter"
.PP
\*Lint setusershell(void);
.PP
.\".zA "defect, 6735, R1.1.1, new reentrant function"
\*Lint setusershell_r(
.nL
	\*Lunsigned int *\*Vstate\*L\|);
.PP
.\".zZ "defect, 6735, R1.1.1, new reentrant function"
\*Lint endusershell(void);
.\".zA "defect, 6735, R1.1.1, new reentrant function"
.PP
\*Lint endusershell_r(
.nL
	\*Lunsigned int *\*Vstate\*L\|);
.\".zZ "defect, 6735, R1.1.1, new reentrant function"
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vshell\*O"
Points to a buffer for the shell name.
.LI "\*Vlen\*O"
Specifies the length of the \*Vshell\*O parameter.
.\".zA "defect, 6735, R1.1.1, new parameter for reentrancy"
.LI "\*Vstate\*O"
Points to a variable which stores information about the contents of
the \*L/etc/shells\*O file.
.\".zZ "defect, 6735, R1.1.1, new parameter for reentrancy"
.LE
.SH DESCRIPTION
.PP
.iX "getusershell function"
.iX "getusershell_r function"
.iX "setusershell function"
.iX "endusershell function"
.iX "setusershell_r function"
.iX "endusershell_r function"
.iX "user shell" "returning name of"
.iX "shells file" "rewinding"
.iX "shells file" "closing"
.iX "shells file" "reading"
The \*Lgetusershell(\|)\*O function returns a pointer to a string
that contains the name of a legal user shell as defined by the system
manager in the \*L/etc/shells\*O file. If the \*L/etc/shells\*O
file does not exist, the standard system shells
are returned.
.PP
On subsequent calls, the \*Lgetusershell(\|)\*O function returns the
next shell.  The \*Lendusershell(\|)\*O function resets the list so
that subsequent calls of \*Lgetusershell(\|)\*O reread the list from
\*L/etc/shells\*O.  The \*Lsetusershell(\|)\*O function rereads the
list from \*L/etc/shells\*O and subsequent calls of
\*Lgetusershell(\|)\*O start from the beginning.
.PP
.\".zA "defect, 6735, R1.1.1, new description of reentrant functions"
The \*Lgetusershell_r(\|)\*O, \*Lsetusershell_r(\|)\*O, and
\*Lendusershell_r(\|)\*O functions are the reentrant versions of the
\*Lgetusershell(\|)\*O, \*Lsetusershell(\|)\*O, and
\*Lendusershell(\|)\*O functions.  Note that you must initialize the
\*Vstate\*O parameter to 0 (zero) before using it (pass by reference)
for the first time.
Upon successful completion of the
\*Lgetusershell_r(\|)\*O function, the
name is stored in \*Vshell\*O.
.\".zZ "defect, 6735, R1.1.1, new description of reentrant functions"
.SH NOTES
.PP
\*OFor the \*Lgetusershell(\|)\*O function,
the returned information is in a static area.
It must be copied if it is to be saved.
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lgetusershell(\|)\*O
functions returns a pointer to a character string. Upon error or end
of file, it returns a null pointer.
.PP
.\".zA "defect, 6735, R1.1.1, new description for reentrant functions"
Upon successful completion, the \*Lgetusershell_r(\|)\*O and
\*Lsetusershell_r(\|)\*O functions always
return a value of 0 (zero).  Otherwise, they return a value of -1 and set
\*Lerrno\*O.
.PP
The \*Lendusershell_r(\|)\*O function always returns 0 (zero).
.\".zZ "defect, 6735, R1.1.1, new description for reentrant functions"
.SH ERRORS
.PP
If any of the following conditions occurs, the \*Lgetusershell_r(\|)\*O
function sets \*Lerrno\*O to the corresponding value:
.PP
.VL
.LI "[EINVAL]"
Either the \*Vshell\*O parameter is invalid, the \*Vlen\*O parameter
is too small,
.\".zA "defect, 6735, R1.1.1, added new error for getusershell_r"
or the \*Vstate\*O parameter is a null pointer.
.\".zZ "defect, 6735, R1.1.1, added new error for getusershell_r"
.LI "[ESRCH]"
The end of the shell list has been reached (EOF).
.LE
.\".zA "defect, 6735, R1.1.1, errors for setusershell_r"
.PP
If the following condition occurs, the \*Lsetusershell_r(\|)\*O
function sets \*Lerrno\*O to the corresponding value:
.VL
.LI "[ENOMEM]"
Unable to allocate memory for the reread list of shells.
.LE
.\".zZ "defect, 6735, R1.1.1, errors for setusershell_r"
.SH FILES
.PP
.VL
.LI "\*L/etc/shells\*O"
Contains the names of legal user shells.
.LE
.SH RELATED INFORMATION
.PP
Files:
\*Lshells\*O(4).
.EQ
delim off
.EN
