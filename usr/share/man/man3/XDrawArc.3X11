.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XDrawArc.3X11,v $ $Revision: 1.2.4.2 $ (DEC) $Date: 1993/05/03 16:22:35 $
.\" 
'\" e
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.nf
..
.de FN
.fi
.KE
.LP
..
.de C{
.KS
.nf
.D
.\"
.\"     choose appropriate monospace font
.\"     the imagen conditional, 480,
.\"     may be changed to L if LB is too
.\"     heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.               \" Note End -- doug kraft 3/85
.ny0
'\" e
.TH XDrawArc 3X11 "" "" "" "X11R5"
.SH NAME
XDrawArc, XDrawArcs, XArc \- draw arcs and arc structure
.SH SYNTAX
.LP
XDrawArc\^(\^\f2display\fP, \f2d\fP\^, \f2gc\fP\^, \f2x\fP\^, \f2y\fP\^, \f2width\fP\^, \f2height\fP\^, \f2angle1\fP\^, \f2angle2\fP\^)
.br
      Display *\f2display\fP\^;
.br
      Drawable \f2d\fP\^;
.br
      GC \f2gc\fP\^;
.br
      int \f2x\fP\^, \f2y\fP\^;
.br
      unsigned int \f2width\fP\^, \f2height\fP\^;
.br
      int \f2angle1\fP\^, \f2angle2\fP\^;
.LP
XDrawArcs\^(\^\f2display\fP, \f2d\fP\^, \f2gc\fP\^, \f2arcs\fP\^, \f2narcs\fP\^)
.br
      Display *\f2display\fP\^;
.br
      Drawable \f2d\fP\^;
.br
      GC \f2gc\fP\^;
.br
      XArc *\f2arcs\fP\^;
.br
      int \f2narcs\fP\^;
.SH ARGUMENTS
.LP
.IP \f2angle1\fP 1i
Specifies the start of the arc relative to the three-o'clock position
from the center, in units of degrees * 64.
.IP \f2angle2\fP 1i
Specifies the path and extent of the arc relative to the start of the
arc, in units of degrees * 64.
.IP \f2arcs\fP 1i
Specifies an array of arcs.
.IP \f2d\fP 1i
Specifies the drawable. 
.IP \f2display\fP 1i
Specifies the connection to the X server.
.IP \f2gc\fP 1i
Specifies the GC.
.IP \f2narcs\fP 1i
Specifies the number of arcs in the array.
.ds Wh , which are the major and minor axes of the arc
.IP \f2width\fP 1i
.br
.ns
.IP \f2height\fP 1i
Specify the width and height\*(Wh.
.ds Xy , which are relative to the origin of the drawable \
and specify the upper-left corner of the bounding rectangle
.IP \f2x\fP 1i
.br
.ns
.IP \f2y\fP 1i
Specify the x and y coordinates\*(Xy.
.SH DESCRIPTION
.LP
.PN XDrawArc
draws a single circular or elliptical arc, and 
.PN XDrawArcs
draws multiple circular or elliptical arcs.
Each arc is specified by a rectangle and two angles.  
The center of the circle or ellipse is the center of the
rectangle, and the major and minor axes are specified by the width and height.
Positive angles indicate counterclockwise motion, 
and negative angles indicate clockwise motion.  
If the magnitude of angle2 is greater than 360 degrees, 
.PN XDrawArc
or 
.PN XDrawArcs
truncates it to 360 degrees.
.LP
For an arc specified as 
[ \f2x\f1, \f2y\f1, \f2width\f1, \f2height\f1, \f2angle1\f1, \f2angle2\f1 ], 
the origin of the major and minor axes is at 
[ \f2x\f1+(\f2width\f1/2), \f2y\f1+(\f2height\f1/2) ], 
and the infinitely thin path describing the entire circle or ellipse 
intersects the horizontal axis at 
[ \f2x\f1, \f2y\f1+(\f2height\f1/2) ] and 
[ \f2x\f1+\f2width\f1, \f2y\f1+(\f2height\f1/2) ]
and intersects the vertical axis at 
[ \f2x\f1+(\f2width\f1/2), \f2y\f1 ] and 
[ \f2x\f1+(\f2width\f1/2), \f2y\f1+\f2height\f1 ].
These coordinates can be fractional
and so are not truncated to discrete coordinates.
The path should be defined by the ideal mathematical path.  
For a wide line with line-width lw, 
the bounding outlines for filling are given        
by the two infinitely thin paths consisting of all points whose perpendicular
distance from the path of the circle/ellipse is equal to lw/2
(which may be a fractional value).
The cap-style and join-style are applied the same as for a line
corresponding to the tangent of the circle/ellipse at the endpoint.
.LP
For an arc specified as 
[ \f2x\f1, \f2y\f1, \f2width\f1, \f2height\f1, \f2angle1\f1, \f2angle2\f1 ],
the angles must be specified
in the effectively skewed coordinate system of the ellipse (for a
circle, the angles and coordinate systems are identical).  The
relationship between these angles and angles expressed in the normal
coordinate system of the screen (as measured with a protractor) is as
follows:
.LP
\f2skewed-angle\f1 = \f3atan\f1 [ \f3tan(\f2normal-angle\f1) * (\f2width\f1/\f2height\f1) ] + \f2adjust\f1
.LP
The \f2skewed-angle\f1 and \f2normal-angle\f1 are expressed in radians (rather
than in degrees scaled by 64) in the range 
[ 0, 2pi ] and where \f3atan\f1 returns a value in the range 
[ -pi/2, pi/2 ]
and \f2adjust\f1 is:
.LP
0       for \f2normal-angle\f1 in the range  [ 0, pi/2 ]

pi      for \f2normal-angle\f1 in the range  [ pi/2, 3pi/2 ]

2pi     for \f2normal-angle\f1 in the range  [ 3pi/2, 2pi ]
.LP
For any given arc, 
.PN XDrawArc
and
.PN XDrawArcs
do not draw a pixel more than once.  
If two arcs join correctly and if the line-width is greater than zero 
and the arcs intersect, 
.PN XDrawArc
and
.PN XDrawArcs
do not draw a pixel more than once.
Otherwise, 
the intersecting pixels of intersecting arcs are drawn multiple times.
Specifying an arc with one endpoint and a clockwise extent draws the same pixels
as specifying the other endpoint and an equivalent counterclockwise extent,
except as it affects joins.
.LP
If the last point in one arc coincides with the first point in the following 
arc, the two arcs will join correctly.  
If the first point in the first arc coincides with the last point in the last 
arc, the two arcs will join correctly.
By specifying one axis to be zero, a horizontal or vertical line can be
drawn.
Angles are computed based solely on the coordinate system and ignore the
aspect ratio.
.LP
Both functions use these GC components: 
function, plane-mask, line-width, line-style, cap-style, join-style, 
fill-style, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask.
They also use these GC mode-dependent components: 
foreground, background, tile, stipple, tile-stipple-x-origin, 
tile-stipple-y-origin, dash-offset, and dash-list.
.LP
.PN XDrawArc
and
.PN XDrawArcs
can generate
.PN BadDrawable ,
.PN BadGC ,
and
.PN BadMatch 
errors.
.SH STRUCTURES
The
.PN XArc
structure contains:
.LP
.PP
.ft CW
.nf
.ps -4
typedef struct {
        short x, y;
        unsigned short width, height;
        short angle1, angle2;             /* Degrees * 64 */
} XArc;
.ps +4
.fi
.ft P
.PP
.LP
All x and y members are signed integers.
The width and height members are 16-bit unsigned integers.
You should be careful not to generate coordinates and sizes
out of the 16-bit ranges, because the protocol only has 16-bit fields
for these values.
.SH DIAGNOSTICS
.LP
.TP 1i
.PN BadDrawable
A value for a Drawable argument does not name a defined Window or Pixmap.
.TP 1i
.PN BadGC
A value for a GContext argument does not name a defined GContext.
.TP 1i
.PN BadMatch
An
.PN InputOnly
window is used as a Drawable.
.TP 1i
.PN BadMatch
Some argument or pair of arguments has the correct type and range but fails
to match in some other way required by the request.
.SH "SEE ALSO"
XDrawLine(3X11),
XDrawPoint(3X11),
XDrawRectangle(3X11)
.br
\f2\*(xL\fP
.EQ
delim off
.EN
