.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: clock_getdrift.3,v $ $Revision: 1.2.2.4 $ (DEC) $Date: 1992/11/25 13:53:47 $
.\" 
.\" SCCSID: @(#)clock_getdrift.3	 6.5	3/20/91
.TH clock_getdrift 3
.SH NAME
\*Lclock_getdrift\*O, \*Lclock_setdrift\*O \- get or set the drift rate for the specified clock (P1003.4/D11)
.SH SYNOPSIS
.PP
#include \*L<time.h>\*O
.PP
int \*Lclock_getdrift\*O (
.br
int \*Vclock_id\*O,
.br
int \*V*drift\*O);
.PP
int \*Lclock_setdrift\*O (
.br
int \*Vclock_id\*O,
.br
const int \*Vdrift\*O,
.br
int \*V*odrift\*O);
.SH PARAMETERS
.PP
.TP 8
.I clock_id
The clock type used to obtain the time or the clock that is
set. The CLOCK_REALTIME
clock is supported and represents the TIME-OF-DAY clock for the system.
.TP
.I *drift
A pointer to the drift rate to be returned by a the \*Lclock_getdrift\*O
function.
.TP
.I drift
The specified drift rate to be set by the \*Lclock_setdrift\*O
function.
.TP
.I *odrift
A pointer to an integer that receives the previous clock drift rate.
.SH DESCRIPTION
.PP
The \*Lclock_getdrift\*O
function returns the current value of the clock drift rate as set
by the most recent call to the \*Lclock_setdrift\*O function.
.iX "clock_getdrift function"
.iX "clock_setdrift  function"
.iX "clocks" "getting drift rate"
.iX "clocks" "setting drift rate"
The drift rate for any clock is initially zero, but may vary through
an interval centered about zero to the maximum, the absolute value of
CLOCKDRIFT_MAX. For
positive drift, the clock will gain time at the specified rate. For negative
drift, the clock will lose time at the specified rate. Drift rate is
scaled to the number of ticks per second and uses nanoseconds as the units.
The application
of drift rate to the time measured by the clock behaves as if
\*Vdrift\*O/ticks_per_second (expressed in nanoseconds) were added to the clock time at
each tick, where tick corresponds to the clock resolution.
.PP
The \*Lclock_setdrift\*O
function sets the clock drift rate to the value specified by the \*Vdrift\*O
argument. If the value of \*Vodrift\*O is set to NULL, then the original
drift rate prior to the call is returned at the location
specified by \*Vodrift\*O.
The drift rate is adjusted according to clock resolution.
Clock drift is usually complete in 1 second, but if any amount of
precision of the full drift value remains after 1 second, it is adjusted
at the end of the next clock tick.
.PP
Note that the clock drift functions should not be used in conjunction
with Distributed Time Services (DTS). In addition, you need \*Lsuperuser\*O
privileges to use the \*Lclock_setdrift\*O function.
.SH RETURN VALUES
.PP
On a successful call, a value of 0 is returned.
.PP
On an unsuccessful call,
a value of \-1 is returned and \*Lerrno\*O
is set to indicate that an error occurred.
.SH ERRORS
.PP
The \*Lclock_getdrift\*O and \*Lclock_setdrift\*O
functions fail under the following conditions:
.TP 15
[EINVAL]
The \*Vclock_id\*O argument does not specify a known clock.
.sp
The \*Vdrift\*O argument specified a value outside the range supported
by the implementation.
.TP 15
[ENOSYS]
The functions \*Lclock_getdrift\*O and \*Lclock_setdrift\*O are not
supported by this implementation.
.TP 15
[EPERM]
The requesting process does not have the appropriate privilege to
set the drift rate. (\*Lclock_setdrift\*O only)
.SH RELATED INFORMATION
.PP
Functions:
\*Ltime\*O(1), \*Lclock_gettime\*O(3),
\*Lctime\*O(3), \*Ltimer_gettime\*O(3)
.EQ
delim off
.EN
