.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: ldr_xattach.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/12/06 21:10:12 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\"
.TH ldr_xattach 3
.SH NAME
\*Lldr_xattach \*O- Attaches to another process to permit loading/unloading of modules in that process' address space
.SH LIBRARY
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS 
.sS
\*L#include <sys/types.h>\*O
.nL
\*L#include <loader.h>\*O
.sp .4v
\*Lint ldr_xattach(
.nL
	ldr_process_t \*Vprocess \*L);
.sE 
.SH PARAMETERS
.PP 
.\"from TP "  
.VL 
.LI "\*Vprocess\*O"
Specifies the process to attach to.
.LE 
.SH DESCRIPTION
.iX "ldr_xattach function"
.iX "loader" "attaching to another process"
.PP 
The
\*Lldr_xattach(\|)\*O
function is used to permit a process to load, unload, query, or
retrieve the contents of another process' address space.  Before a
call to the
\*Lldr_xload(\|)\*O,
\*Lldr_xunload(\|)\*O,
or
\*Lldr_xlookup_package(\|)\*O
functions,
the
\*Lldr_xattach\*O
function
must be performed to that process.
.SH NOTES
.PP 
This function currently works only for the current process or the
kernel.
.SH RETURN VALUES
.PP 
If the attach operation is a success, the function returns a code of 0
(zero).  If the attach fails, the function returns a negative error value
and
\*Lerrno\*O
is set to indicate the error.
.SH ERRORS
.PP 
If the
\*Lldr_xattach(\|)\*O
function fails,
\*Lerrno\*O
may be set to the following value:
.\"from TP "  
.VL 
.LI "[ESRCH]"
The process identifier is invalid.
.LE 
.PP
Additional errors are possible from the underlying IPC mechanism.
.SH RELATED INFORMATION
Functions:
\*Lldr_xdetach\*O(3),
\*Lldr_xunload\*O(3),
\*Lldr_xlookup_package\*O(3),
\*Lldr_xload\*O(3)
.iX "ldr_xattach function"
.EQ
delim off
.EN
