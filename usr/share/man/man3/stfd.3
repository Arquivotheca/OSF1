.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: stfd.3,v $ $Revision: 3.2.2.4 $ (DEC) $Date: 1993/02/01 18:08:03 $
.\"
.\" ---------------------------------------------------
.\" | Copyright (c) 1986, MIPS Computer Systems, Inc. |
.\" | All Rights Reserved.                            |
.\" ---------------------------------------------------
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/./BASE/DEC/man3/stfd.3,v 3.2.2.4 1993/02/01 18:08:03 Margaret_Barham Exp $
.TH stfd 3
.SH NAME
\*Lstfd\*O \- Routines that provide access to per file descriptor section of the symbol table
.SH SYNOPSIS
.PP
.iX "stfd routine"
.iX "symbol table" "stfd routine"
.nf
\*L#include <syms.h>\*O
.PP
\*Llong st_currentifd ()\*O
.PP
\*Llong st_ifdmax ()\*O
.PP
\*Lvoid st_setfd (ifd)\*O
\*Llong ifd;\*O
.PP
\*Llong st_fdadd (filename)\*O
\*Lchar *filename;\*O
.PP
\*Llong st_symadd (iss, value, st, sc, freloc, index)\*O
\*Llong iss;\*O
\*Llong value;\*O
\*Llong st;\*O
\*Llong sc;\*O
\*Llong freloc;\*O
\*Llong index;\*O
.PP
\*Llong st_auxadd (aux)\*O
\*LAUXU aux;\*O
.PP
\*Llong st_stradd (cp)\*O
\*Lchar *cp;\*O
.PP
\*Llong st_lineadd (line)\*O
\*Llong line;\*O
.PP
\*Llong st_pdadd (isym)\*O
\*Llong isym;\*O
.PP
\*Llong st_ifd_pcfd (pcfd1)\*O
\*LpCFDR pcfd1;\*O
.PP
\*LpCFDR st_pcfd_ifd (ifd)\*O
\*Llong ifd;\*O
.PP
\*LpSYMR st_psym_ifd_isym (ifd, isym)\*O
\*Llong ifd;\*O
\*Llong isym;\*O
.PP
\*LpAUXU st_paux_ifd_iaux (ifd, iaux)\*O
\*Llong ifd;\*O
\*Llong iaux;\*O
.PP
\*LpAUXU st_paux_iaux (iaux)\*O
\*Llong iaux;\*O
.PP
\*Lchar *st_str_iss (iss)\*O
\*Llong iss;\*O
.PP
\*Lchar *st_str_ifd_iss (ifd, iss)\*O
\*Llong ifd;\*O
\*Llong iss;\*O
.PP
\*LpPDR st_ppd_ifd_isym (ifd, isym)\*O
\*Llong ifd;\*O
\*Llong isym;\*O
.PP
\*Lchar *st_malloc (ptr, psize, itemsize, baseitems)\*O
\*Lchar *ptr;\*O
\*Llong *size;\*O
\*Llong itemsize;\*O
\*Llong baseitems;\*O
.fi
.SH DESCRIPTION
.PP
The \*Lstfd\*O routines provide an interface to objects handled on a per file
descriptor (or fd) level (for example, local symbols, auxiliaries,
local strings, line numbers, optimization
entries, procedure descriptor entries, and the file descriptors).
These routines constitute a group because they deal with
objects corresponding to fields in the \*VFDR\*O structure.
.PP
An \*Lfd\*O routine can be activated by reading an existing one into memory
or by creating a new one.  The compilation unit routines \*Vst_readbinary\*O
and \*Vst_readst\*O read file descriptors and their constituent parts
into memory from a symbol table on disk.
.PP
The \*Vst_fdadd\*O routine adds a file descriptor to the list of file
descriptors. The \*Vlang\*O
field is initialized from a user specified global \*Vst_lang\*O that should be
set to a constant designated for the language in \*Vsymconst.h\*O. The
\*VfMerge\*O field is initialized from the user specified global
\*Vst_merge\*O that specifies
whether the file is to start with the attribute of being able
to be merged with identical files at load time. The
.\" Begin Digital-specific information CORRECTION
.\" Changed VfB to VB per QAR 6104.
\*VBigendian\*O
.\" End Digital-specific information CORRECTION
field is initialized by the \*Vgethostsex\*O routine
(see \*Lgethostsex\*O(3)), which determines the
permanent byte ordering for the auxiliary and line number entries for this file.
.PP
The \*Vst_fdadd \*O routine
adds the null string to the new files string table that is
accessible by the constant issNull (0).  It also adds the filename to the
string table and sets the \*Vrss\*O
field. Finally, the current file is set to the newly added file so that
later calls operate on that file.
.PP
All routines for fd-level objects handle only the current file
unless a file index is specified. The current file can also be set with
\*Vst_setfd\*O.
.PP
Programs can find the current file by calling \*Vst_currentifd,\*O
which returns the current index. Programs can find the number of
files by calling \*Vst_ifdmax\*O.
The fd routines only require working with indices to do most things.
They allow more in-depth manipulation by allowing users to get the
compile time file descriptor (\*VCFDR\*O)
that contains memory pointers to the per file tables (rather
than indices or offsets used in disk files).
Users can retrieve a pointer to the CFDR by calling \*Vst_pcfd_ifd\*O
with the index to the desired file. The inverse mapping \*Vst_ifd_pcfd\*O
exists, as well.
.PP
Each of fd's constituent parts has an add routine: \*Vst_symadd,\*O
\*Vst_stradd,\*O \*Vst_lineadd,\*O \*Vst_pdadd,\*O and
\*Vst_auxadd\*O.
The parameters of the add routines correspond to the fields of the
added object. The \*Vpdadd\*O routine lets users fill in
the isym field only. Further information can be added by directly accessing
the procedure descriptor entry.
.PP
The add routines return an index that can
be used to retrieve a pointer to part of
the desired object with one of the following
routines:
\*Vst_psym_isym,\*O \*Vst_str_iss,\*O and \*Vst_paux_iaux\*O.
\*LNOTE:\*O These routines only return objects within the current
file. The following routines allow for file specification:
\*Vst_psym_ifd_isym,\*O \*Vst_aux_ifd_iaux,\*O and \*Vst_str_ifd_iss\*O.
.PP
The \*Vst_ppd_ifd_isym \*O routine allows access to procedures through
the file index for the file where they occur
and the isym field of the entry that points at the local symbol for
that procedure.
.PP
The return index from \*Vst_symadd\*O should be used to get a dense number
(see \*Lstcu\*O(3)).
That number should be the ucode block number for the object the
symbol describes.
.SH RESTRICTIONS
.PP
The interface will added to incrementally, as needed.
.SH RELATED INFORMATION
.PP
\*Lstcu\*O(3), \*Lstfe\*O(3)
.EQ
delim off
.EN
