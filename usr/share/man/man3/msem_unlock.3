.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: msem_unlock.3,v $ $Revision: 3.2.2.2 $ (DEC) $Date: 1992/05/18 13:28:24 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\"
.TH msem_unlock 3
.SH NAME
\*Lmsem_unlock\*O \- Unlocks a semaphore
.SH LIBRARY
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS 
.sS
\*L#include <sys/mman.h>\*O
.sp .4v
\*Lint msem_unlock (\*O
.nL
	\*Lmsemaphore \(**\*Vsem\*O,\*L
.nL
	int \*Vcondition \*L);
.sE
.SH PARAMETERS
.\"from TP "  
.VL 
.LI "\*Vsem\*O"
Points to an
\*Lmsemaphore\*O
structure which specifies
the semaphore to be unlocked.
.\"from TP "  
.LI "\*Vcondition\*O" 
Determines whether the
\*Lmsem_unlock(\|)\*O
function unlocks the semaphore if no other processes are
waiting to lock it.
.LE 
.SH DESCRIPTION
.iX "msem_unlock function"
.iX "semaphore " "unlocking binary"
.PP 
The
\*Lmsem_unlock(\|)\*O
function unlocks a binary semaphore.
.PP 
If the
\*Vcondition\*O
parameter is 0 (zero), the semaphore is unlocked,
whether or not any other processes are currently attempting to
lock it.  If the
\*Vcondition\*O
parameter is MSEM_IF_WAITERS, and
another process is waiting to lock the semaphore
or it cannot be reliably determined whether some process
is waiting to lock the semaphore, the semaphore is
unlocked by the calling process.  If the
\*Vcondition\*O
parameter is
MSEM_IF_WAITERS, and no process is waiting to lock the semaphore,
the semaphore will not be unlocked and an error will be returned.
.PP 
All calls to the
\*Lmsem_lock(\|)\*O
and
\*Lmsem_unlock(\|)\*O
functions
by multiple processes
sharing a common
\*Lmsemaphore\*O
structure behave as if the calls
were serialized.
.PP 
If the
\*Lmsemaphore\*O
structure contains any value not resulting from
a call to the
\*Lmsem_init(\|)\*O
function
followed by a (possibly empty) sequence of
calls to the
\*Lmsem_lock(\|)\*O
and
\*Lmsem_unlock(\|)\*O
functions,
the results are undefined.
The address of an
\*Lmsemaphore\*O
structure may be significant.  If the
\*Lmsemaphore\*O
structure contains any value copied from an
\*Lmsemaphore\*O
structure at a different address, the result is undefined.
.SH NOTES
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Trial use
.LE
.SH RETURN VALUES
.PP 
On successful completion, the
\*Lmsem_unlock(\|)\*O
function returns 0 (zero).
On error, the
\*Lmsem_unlock(\|)\*O
function returns -1 and sets
\*Lerrno\*O
to indicate the error.
.SH ERRORS
.PP 
If the
\*Lmsem_unlock(\|)\*O
function fails,
\*Lerrno\*O
may be set to one of the following values:
.\"from TP 1i"  
.VL 1i
.LI "[EAGAIN]"
MSEM_IF_WAITERS was specified and there were no waiters.
.\"from TP "  
.LI "[EINVAL]" 
The
\*Vsem\*O
parameter points to
an
\*Lmsemaphore\*O
structure which specifies a semaphore
which has been removed, or the
\*Vcondition\*O
parameter is invalid.
.LE 
.SH RELATED INFORMATION
.PP 
Functions:
\*Lmsem_init\*O(3),
\*Lmsem_lock\*O(3),
\*Lmsem_remove\*O(3)
.iX "msem_unlock function"
.EQ
delim off
.EN
