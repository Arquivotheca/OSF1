.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: ctime.3,v $ $Revision: 1.1.4.2 $ (DEC) $Date: 1993/09/24 17:16:59 $
.\"
.\" Modified greatly from the original OSF manpage.
...\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\"
...\"
...\"
.TH ctime 3
.SH NAME
.PP
\*Lasctime\*O, \*Lasctime_r\*O, \*Lctime\*O, \*Lctime_r\*O, \*Lgmtime\*O, \*Lgmtime_r\*O, \*Llocaltime\*O, \*Llocaltime_r\*O, \*Lmktime\*O - Converts time units
.SH LIBRARY
.PP
Standard C Libraries: (\*Llibc.a\*O; \*Llibc_r.a\*O)
.SH SYNOPSIS
.PP
.iX "time conversion functions"
.iX "asctime function"
.iX "asctime_r function"
.iX "ctime function"
.iX "ctime_r function"
.iX "gmtime function"
.iX "gmtime_r function"
.iX "localtime function"
.iX "localtime_r function"
.iX "mktime function"
.iX "time units" "converting to strings"
.iX "time units" "storing for later processing"
.iX "time units" "converting to other time units"
.sS
.iS
\*L#include <time.h>
.PP
\*Lchar *asctime(
    \*Lconst struct tm *\*Vtimeptr\*L) ;
.PP
\*Lint asctime_r(
    \*Lconst struct tm *\*Vtimeptr\*L,
    \*Lchar *\*Vbuffer\*L,\*L
    \*Lint \*Vlen\*L) ;
.PP
\*Lchar *ctime\*L(
    \*Lconst time_t\*L *\*Vtimer\*L) ;
.PP
\*Lint ctime_r\*L(
    \*Lconst time_t *\*Vtimer\*L,
    \*Lchar *\*Vbuffer\*L,
    \*Lint \*Vlen\*L ) ;
.PP
\*Lstruct tm *gmtime\*L(
    \*Lconst time_t *\*Vtimer\*L) ;
.PP
\*Lint gmtime_r\*L(
    \*Lconst time_t *\*Vtimer\*L,
    \*Lstruct tm *\*Vresult\*L) ;
.PP
\*Lstruct tm *localtime\*L(
    \*Lconst time_t *\*Vtimer \*L) ;
.PP
\*Lint localtime_r\*L(
    \*Lconst time_t *\*Vtimer\*L,
    \*Lstruct tm *\*Vresult\*L) ; 
.PP
\*Ltime_t mktime\*L(\*L
    \*Lstruct tm\*L *\*Vtimeptr\*L) ;
.PP
.iE
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vtimeptr\*O"
Points to a type \*Ltm\*O structure that defines
space for a broken-down time value.
.LI "\*Vtimer\*O"
Points to a variable that specifies a time value
in seconds.
.LI "\*Vbuffer\*O"
Points to a character array used to store the generated date and time
string.
.LI "\*Vlen\*O"
Specifies an integer that defines the length of the character array.
.LE
.PP
.SH DESCRIPTION
.PP
The \*Lasctime(\|)\*O,
\*Lctime(\|)\*O,
\*Lgmtime(\|)\*O,
\*Llocaltime(\|)\*O,
\*Lmktime(\|)\*O,
and
\*Ltzset(\|)\*O
functions convert time values between \*Ltm\*O structures, \*Ltime_t\*O
type variables, and strings.
.PP
The
\*Lasctime_r(\|)\*O,
\*Lctime_r(\|)\*O,
\*Lgmtime_r(\|)\*O,
and
\*Llocaltime_r(\|)\*O
functions in \*Llibc_r.a\*O are thread-safe versions of the corresponding
functions in \*Llibc.a\*O.  These functions are thread-safe because they
do not return pointers to static data.
.PP
The \*Ltm\*O structure, which is defined in \*L<time.h>\*O, contains
the following elements:
.PP
.TS
tab(@);
l l l .
_
.sp
int@T{
\*Ltm_sec;\*O
T}@Seconds after the minute [0-60]
.sp
int@T{
\*Ltm_min;\*O
T}@Minutes after the hour [0-59]
.sp
int@T{
\*Ltm_hour;\*O
T}@Hours since midnight [0-23]
.sp
int@T{
\*Ltm_mday;\*O
T}@Day of the month [1-31]
.sp
int@T{
\*Ltm_mon;\*O
T}@Months since January [0-11]
.sp
int@T{
\*Ltm_year;\*O
T}@Years since 1900
.sp
int@T{
\*Ltm_wday;\*O
T}@Days since Sunday [0-6]
.sp
int@T{
\*Ltm_yday;\*O
T}@Days since January 1 [0-365]
.sp
int@T{
\*Ltm_isdst;\*O
T}@Daylight Saving Time flag
@@T{
\ \ \*Ltm_isdst\*O = 0 for Standard Time
T}
@@T{
\ \ \*Ltm_isdst = 1 for Daylight Time
T}
.sp
long@T{
\*Ltm_gmtoff;\*O
T}@T{
Seconds east of Greenwich (Negative values indicate seconds west of Greenwich)
T}
.sp
char@T{
\*L*tm_zone;\*O
T}@Timezone string, for example "GMT"
.sp
_
.TE
.PP
A \*Ltime_t\*O variable, also defined in \*L<time.h>\*O, contains the
number of seconds since the Epoch, 00:00:00 GMT 1 Jan 1970.
.PP
A string used to represent a time value has a five-field format.  For
example:
.PP
.oS
Tue Nov  9 15:37:29 1993\en\e0
.oE
.PP
The \*Lasctime(\|)\*O function converts the \*Ltm\*O structure pointed
to by the \*Vtimeptr\*O parameter to a string with this five-field
format.  The function uses the following members of the \*Ltm\*O
structure:
.oS
tm_wday
tm_mon
tm_mday
tm_hour
tm_min
tm_sec
tm_year
.oE
.PP
The \*Lasctime_r(\|)\*O function is the reentrant version of \*Lasctime(\|)\*O
for use with multiple threads.
.PP
The \*Lctime(\|)\*O function converts the \*Vtime_t\*O variable pointed
to by the \*Vtimer\*O parameter to a string with the five-field format.
Local timezone information is set as though the \*Ltzset(\|)\*O function
had been called.  This function is equivalent to
\*Lasctime(\*Llocaltime\*L(\*Vtimer\*L))\*O.
.PP
The \*Lctime_r(\|)\*O function is the reentrant version of \*Lctime(\|)\*O
for use with multiple threads.
.PP
The \*Lgmtime(\|)\*O function converts the \*Ltime_t\*O variable pointed
to by the \*Vtimer\*O parameter to a \*Ltm\*O structure, expressed as
GMT (Greenwich Mean Time).
.PP
The \*Lgmtime_r(\|)\*O function is the reentrant version of \*Lgmtime(\|)\*O
for use with multiple threads.
.PP
The \*Llocaltime(\|)\*O function converts the \*Ltime_t\*O variable pointed
to by the \*Vtimer\*O parameter to a \*Ltm\*O structure, expressed as
local time.  This function corrects for the local timezone and any
seasonal time adjustments.  Local timezone information is set as if the
\*Ltzset(\|)\*O function had been called.
.PP
The \*Llocaltime_r(\|)\*O function is the reentrant version of
\*Llocaltime(\|)\*O for use with multiple threads.
.PP
The \*Lmktime(\|)\*O function converts the \*Ltm\*O structure pointed to
by the \*Vtimeptr\*O parameter to a \*Ltime_t\*O variable.  The function
uses the following members of the \*Ltm\*O structure:
.oS
tm_year
tm_mon
tm_mday
tm_hour
tm_min
tm_sec
tm_isdst
.oE
The values of these members are not restricted to the ranges defined in
\*L<time.h>\*O.  The range for \*Ltm_sec\*O is increased to [0-61] to
allow for an occasional leap second or double leap second.
.PP
A positive value for \*Ltm_isdst\*O tells the \*Lmktime(\|)\*O function
that Daylight Saving Time is in effect.  A zero (0) value indicates that
Standard Time is in effect.  A negative values requests that the
\*Lmktime(\|)\*O function find out whether Daylight Saving Time is
in effect for the specified time.  Local timezone information is set
as if the \*Ltzset(\|)\*O function had been called.
.PP
On successful completion of the call, values for the
\*Vtimeptr\*L->tm_wday\*O and
\*Vtimeptr\*L->tm_yday\*O members of the structure are set.  The other
members are set to specified times, but have their values forced to the
ranges indicated previously.  The final
\*Vtimeptr\*L->tm_mday\*O is not set until the values of the members
\*Vtimeptr\*L->tm_mon\*O and
\*Vtimeptr\*L->tm_year\*O are determined.  If member \*Ltm_isdst\*O
is given as a negative number, it is set to 0 or 1 by \*Lmktime(\|)\*O,
depending on whether Daylight Saving Time is in effect at the specified
time.
.PP
.SH NOTES
.PP
The
\*Lasctime(\|)\*O,
\*Lctime(\|)\*O,
\*Lgmtime(\|)\*O,
and
\*Llocaltime(\|)\*O
functions are not supported for multi-threaded applications.  Instead, their
reentrant equivalents,
\*Lasctime_r(\|)\*O,
\*Lctime_r(\|)\*O,
\*Lgmtime_r(\|)\*O,
and
\*Llocaltime_r(\|),\*O
should be used with multiple threads.
.PP
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use \-\- \*Lasctime(\|)\*O,
\*Lctime(\|)\*O,
\*Lgmtime(\|)\*O,
\*Llocaltime(\|)\*O,
\*Lmktime(\|)\*O
.LE
.SH RETURN VALUES
.PP
When any of the
\*Lasctime(\|)\*O,
\*Lctime(\|)\*O,
\*Lgmtime(\|)\*O,
or
\*Llocaltime(\|)\*O
functions complete successfully, the return value may
point to static storage, which may be overwritten by subsequent calls to
these functions.
On error, these functions return a null pointer and \*Lerrno\*O is
set to a value indicating the error.
.PP
Upon successful completion, the \*Lasctime(\|)\*O
and
\*Lctime(\|)\*O
functions return a
pointer to a character string that expresses the time in a fixed format.
.PP
Upon successful completion, the \*Lgmtime(\|)\*O
function returns a pointer
to a \*Ltm\*O structure, which contains converted
GMT time information.
.PP
Upon successful completion, the \*Llocaltime(\|)\*O
functions
return a pointer to a \*Ltm\*O structure, which
contains converted local time.
.PP
Upon successful completion, the \*Lmktime(\|)\*O function returns the
specified time since the Epoch written as a value of type \*Ltime_t\*O .
On error, this function returns the value \*L(time_t)\*O\-1, and sets
\*Lerrno\*O to indicate the error.
.PP
Upon successful completion, the
\*Lasctime_r(\|)\*O,
\*Lctime_r(\|)\*O,
\*Lgmtime_r(\|)\*O,
and
\*Llocaltime_r(\|),\*O
functions return a value of 0 (zero).  Otherwise, -1 is returned
and
\*Lerrno\*O
is set to indicate the error.
.PP
.SH ERRORS
.PP
If any of these functions fails, \*Lerrno\*O may be set to the
following value:
.VL 1i
.LI "[EINVAL]"
The
\*Vbuffer\*O,
\*Vtimer\*O,
or
\*Vtimeptr\*O
parameter is null, the
\*Vlen\*O
parameter is less than 1.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Ldifftime\*O(3)
\*Lgetenv\*O(3),
\*Lstrftime\*O(3),
\*Ltime\*O(3)
\*Ltimezone\*O(3).
.EQ
delim off
.EN
