.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XmMenuShell.3X,v $ $Revision: 3.2.4.6 $ (DEC) $Date: 1993/12/14 21:21:07 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH XmMenuShell 3X "" "" "" "OSF/Motif"
.SH NAME
\*LXmMenuShell\*O \- The MenuShell widget class
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/MenuShell.h>
.iE
.sE
.SH DESCRIPTION
.iX "XmMenuShell"
.iX "widget class" "MenuShell"
The MenuShell widget is a custom OverrideShell widget.  An OverrideShell
widget bypasses \*Lmwm\*O when displaying itself.  It is designed
specifically to contain Popup or Pulldown MenuPanes.
.PP 
Most application writers never encounter this widget if they use the
menu-system convenience functions,
\*LXmCreatePopupMenu\*O or \*LXmCreatePulldownMenu\*O,
to create a Popup or Pulldown MenuPane.
The convenience functions automatically create a MenuShell widget as the
parent of the MenuPane.  However, if the convenience functions are
not used, the application programmer must create
the required MenuShell.  In this case, it is important to note that the
parent of the MenuShell depends on the type of menu system
being built.
.nL
.ne 15
.ML
.LI
If the MenuShell is for the top-level Popup MenuPane, the MenuShell's
parent must be the widget from which the Popup MenuPane is popped up.
.LI
If the MenuShell is for a MenuPane that is pulled down from a Popup or
another Pulldown MenuPane, the MenuShell's parent must be the Popup or
Pulldown MenuPane.
.LI
If the MenuShell is for a MenuPane that is pulled down from a MenuBar,
the MenuShell's parent must be the MenuBar.
.LI
If the MenuShell is for a Pulldown MenuPane in an OptionMenu, the
MenuShell's parent must be the OptionMenu's parent.
.LE 
.PP 
Setting \*LXmNheight\*O, \*LXmNwidth\*O, or \*LXmNborderWidth\*O for
either a MenuShell or its child sets that resource to the same value
in both the parent and the child.
An application should always specify these resources for the child, not
the parent.
.PP 
For the managed child of a MenuShell, regardless of the value of
the shell's \*LXmNallowShellResize\*O, setting \*LXmNx\*O or \*LXmNy\*O
sets the corresponding resource of the parent but does not change the
child's position relative to the parent.
\*LXtGetValues\*O for the child's \*LXmNx\*O or \*LXmNy\*O yields the
value of the corresponding resource in the parent.
The \*Vx\*O and \*Vy\*O coordinates of the child's upper left outside
corner relative to the parent's upper left inside corner are both zero
minus the value of \*LXmNborderWidth\*O.
.SS "Classes"
MenuShell inherits behavior and resources from \*LCore\*O,
\*LComposite\*O, \*LShell\*O, and
\*LOverrideShell\*O classes.
.PP 
The class pointer is \*LxmMenuShellWidgetClass\*O.
.PP 
The class name is \*LXmMenuShell\*O.
.SS "New Resources"
MenuShell overrides the \*LXmNallowShellResize\*O resource in Shell.
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmMenuShell Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNbuttonFontList	dynamic	CSG
\ \ \ \ \ \ XmCButtonFontList	\ \ \ \ \ \ \ XmFontList
_
XmNdefaultFontList	dynamic	CG
\ \ \ \ \ \ XmCDefaultFontList	\ \ \ \ \ \ \ XmFontList
_
XmNlabelFontList	dynamic	CSG
\ \ \ \ \ \ XmCLabelFontList	\ \ \ \ \ \ \ XmFontList
_
.TE
.\" NROFF HACK END
.VL  
.LI "\*LXmNbuttonFontList\*O"
Specifies the font list used for MenuShell's button descendants.
If this value is NULL at initialization and if the value of
\*LXmNdefaultFontList\*O is not NULL, \*LXmNbuttonFontList\*O
is initialized to the value of \*LXmNdefaultFontList\*O.  If
the value of \*LXmNdefaultFontList\*O is NULL, \*LXmNbuttonFontList\*O
is initialized by looking up the parent hierarchy of the widget for
an ancestor that is a subclass of the XmBulletinBoard, VendorShell,
or XmMenuShell widget class.  If such an ancestor is found,
\*LXmNbuttonFontList\*O is initialized to the \*LXmNbuttonFontList\*O
of the ancestor  widget.  If no such ancestor is found, the default
is implementation dependent.
.LI "\*LXmNdefaultFontList\*O"
Specifies a default font list for MenuShell's descendants.
This resource is obsolete and exists for compatibility with
earlier releases.  It has been replaced by \*LXmNbuttonFontList\*O
and \*LXmNlabelFontList\*O.
.LI "\*LXmNlabelFontList\*O"
Specifies the font list used for MenuShell's label descendants
(Labels and LabelGadgets).  If this value is NULL at initialization
and if the value of \*LXmNdefaultFontList\*O is not NULL,
\*LXmNlabelFontList\*O is initialized to the value of
\*LXmNdefaultFontList\*O.  If the value of \*LXmNdefaultFontList\*O is
NULL, \*LXmNlabelFontList\*O is initialized by looking up the parent
hierarchy of the widget for an ancestor that is a subclass of the
XmBulletinBoard, VendorShell, or XmMenuShell widget class.  If such
an ancestor is found, \*LXmNlabelFontList\*O is initialized to the
\*LXmNlabelFontList\*O of the ancestor widget.  If no such ancestor
is found, the default is implementation dependent.
.LE 
.SS "Inherited Resources"
MenuShell inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
The following tables define a set of widget resources used by the programmer
to specify data.  The programmer can set the resource values for these
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G),
or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Shell Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNallowShellResize	True	G
\ \ \ \ \ \ XmCAllowShellResize	\ \ \ \ \ \ \ Boolean
_
XmNcreatePopupChildProc	NULL	CSG
\ \ \ \ \ \ XmCCreatePopupChildProc	\ \ \ \ \ \ \ XtCreatePopupChildProc
_
XmNgeometry	NULL	CSG
\ \ \ \ \ \ XmCGeometry	\ \ \ \ \ \ \ String
_
XmNoverrideRedirect	True	CSG
\ \ \ \ \ \ XmCOverrideRedirect	\ \ \ \ \ \ \ Boolean
_
XmNpopdownCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNpopupCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNsaveUnder	True	CSG
\ \ \ \ \ \ XmCSaveUnder	\ \ \ \ \ \ \ Boolean
_
XmNvisual	CopyFromParent	CSG
\ \ \ \ \ \ XmCVisual	\ \ \ \ \ \ \ Visual *
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Composite Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNchildren	NULL	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ WidgetList
_
XmNinsertPosition	NULL	CSG
\ \ \ \ \ \ XmCInsertPosition	\ \ \ \ \ \ \ XtOrderProc
_
XmNnumChildren	0	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ Cardinal
_
.TE
.\" NROFF HACK END
.PP
.wH .in 0 
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Core Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaccelerators	dynamic	CSG
\ \ \ \ \ \ XmCAccelerators	\ \ \ \ \ \ \ XtAccelerators
_
XmNancestorSensitive	dynamic	G
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNbackground	dynamic	CSG
\ \ \ \ \ \ XmCBackground	\ \ \ \ \ \ \ Pixel
_
XmNbackgroundPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderColor	XtDefaultForeground	CSG
\ \ \ \ \ \ XmCBorderColor	\ \ \ \ \ \ \ Pixel
_
XmNborderPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderWidth	1	CSG
\ \ \ \ \ \ XmCBorderWidth	\ \ \ \ \ \ \ Dimension
_
XmNcolormap	dynamic	CG
\ \ \ \ \ \ XmCColormap	\ \ \ \ \ \ \ Colormap
_
XmNdepth	dynamic	CG
\ \ \ \ \ \ XmCDepth	\ \ \ \ \ \ \ int
_
XmNdestroyCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNheight	dynamic	CSG
\ \ \ \ \ \ XmCHeight	\ \ \ \ \ \ \ Dimension
_
XmNinitialResourcesPersistent	True	C
\ \ \ \ \ \ XmCInitialResourcesPersistent	\ \ \ \ \ \ \ Boolean
_
XmNmappedWhenManaged	True	CSG
\ \ \ \ \ \ XmCMappedWhenManaged	\ \ \ \ \ \ \ Boolean
_
XmNscreen	dynamic	CG
\ \ \ \ \ \ XmCScreen	\ \ \ \ \ \ \ Screen *
_
.wH .tH
XmNsensitive	True	CSG
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNtranslations	dynamic	CSG
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNwidth	dynamic	CSG
\ \ \ \ \ \ XmCWidth	\ \ \ \ \ \ \ Dimension
_
XmNx	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
XmNy	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
.TE
.\" NROFF HACK END
.wH .in  
.SS "Translations"
The XmMenuShell translations are listed below.
These translations may not directly correspond to a
translation table.
.iS
.ta 1.5i
BSelect Press:	ClearTraversal()
BSelect Release:	MenuShellPopdownDone()
.wH .fi
.iE
.SS "Action Routines"
The XmMenuShell action routines are described below:
.VL  
.LI "\*LClearTraversal()\*O:"
Disables keyboard traversal for the menu, enables mouse traversal, and
unposts any menus posted by this menu.
.nL
.ne 6
.LI "\*LMenuShellPopdownDone()\*O:"
Unposts the menu hierarchy and, when the shell's keyboard focus policy is
\*LXmEXPLICIT\*O, restores focus to the widget that had
the focus before the menu system was entered.
.LI "\*LMenuShellPopdownOne()\*O:"
In a toplevel Pulldown MenuPane from a MenuBar, unposts the menu,
disarms the MenuBar CascadeButton and the MenuBar, and,
when the shell's keyboard focus policy is \*LXmEXPLICT\*O,
restores keyboard
focus to the widget that had the focus before the MenuBar was
entered.
In other Pulldown MenuPanes, unposts the menu.
.sp
In a Popup MenuPane, unposts the menu, and,
when the shell's keyboard focus policy is \*LXmEXPLICT\*O,
restores keyboard focus to the
widget from which the menu was posted.
.LE
.SS "Virtual Bindings"
The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see \*LVirtualBindings(3X)\*O.
.SH RELATED INFORMATION
.na
\*LComposite(3X)\*O, \*LCore(3X)\*O, \*LOverrideShell(3X)\*O, \*LShell(3X)\*O,
\*LXmCreateMenuShell(3X)\*O,
\*LXmCreatePopupMenu(3X)\*O, \*LXmCreatePulldownMenu(3X)\*O,
\*LXmRowColumn(3X)\*O
.ad
.EQ
delim off
.EN
