.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pathconf.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1994/01/15 00:23:53 $
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\"
.TH pathconf 3
.SH NAME
.PP
\*Lpathconf\*O, \*Lfpathconf\*O \- Retrieves file implementation characteristics
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <unistd.h>
.sp .4v
\*Llong pathconf(
.nL
	const char \*V*path\*O,\*L
.nL
	\*Lint \*Vname\*O );\*L
.sp .4v
\*Llong fpathconf(
.nL
	int \*Vfiledes\*L,
.nL
	int \*Vname\*O );\*L
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vpath\*O"
Specifies the pathname.
If the final component of
\*Vpath\*O
is a symbolic link, it will be traversed and filename resolution will
continue.
.LI "\*Vfiledes\*O"
Specifies an open file descriptor.
.LI "\*Vname\*O"
Specifies the configuration attribute to be queried.
If this attribute is not applicable to the file specified by
the \*Vpath\*O
or \*Vfiledes\*O parameter, the \*Lpathconf(\|)\*O
function returns an error.
.LE
.SH DESCRIPTION
.PP
.iX "pathconf function"
.iX "fpathconf function"
.iX "file implementation" "characteristics of"
.iX "characteristics of file implementation"
The \*Lpathconf(\|)\*O function allows an application to determine
the characteristics of operations supported by the file system underlying
the file named by the
\*Vpath\*O
parameter.
Read, write, or execute permission of the
named file is not required, but all directories in the path leading
to the file must be searchable.
.PP
The \*Lfpathconf(\|)\*O function allows an application to retrieve
the same information for an open file.
.PP
Symbolic values
for the
\*Vname\*O
parameter are defined in the \*Lunistd.h\*O header
file, as follows:
.VL 1i
.LI "_PC_LINK_MAX"
The maximum number of links to the file.
If the
\*Vpath\*O
or
\*Vfiledes\*O
parameter
refers to a directory, the value returned applies to the directory
itself.
.LI "_PC_MAX_CANON"
The maximum number of bytes in a canonical input
line.  This is applicable only to terminal devices.
.LI "_PC_MAX_INPUT"
The number of types allowed in an input queue.
This is applicable only to terminal devices.
.LI "_PC_NAME_MAX"
Maximum number of bytes in a filename (not including
a terminating null). This may be as small as 13, but is never larger
than 255.
This is applicable only to a directory file.
The value returned applies to filenames within
the directory.
.LI "_PC_PATH_MAX"
Maximum number of bytes in a pathname (not including
a terminating null). This is never larger than 65,535.
This is applicable only to a directory file.
The value returned is the maximum length of a
relative pathname when the specified directory is the working
directory.
.LI "_PC_PIPE_BUF"
Maximum number of bytes guaranteed to be written
atomically. This is applicable only to a FIFO.
The value returned applies to the referenced object.  If the
\*Vpath\*O
or
\*Vfiledes\*O
parameter
refers to a directory, the value returned applies to any FIFO that
exists or can be created within the directory.
.LI "_PC_CHOWN_RESTRICTED"
This is applicable only to a directory file.
The value returned applies to any files (other than directories) that
exist or can be created within the directory.
.P
.LI "_PC_NO_TRUNC"
Returns 1 if supplying a component name longer
than allowed by NAME_MAX will cause an error. Returns 0 (zero) if long
component names are truncated. This is applicable only to a directory
file.
.LI "_PC_VDISABLE"
This is always 0 (zero); no disabling character is defined.
This is applicable only to a terminal device.
.LE
.SH NOTES
.PP
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use
.LE
.SH RETURN VALUES
.PP
Upon successful completion,
the \*Lpathconf(\|)\*O or \*Lfpathconf(\|)\*O function returns
the specified parameter. Otherwise, a value of -1 is returned
and \*Lerrno\*O is set to indicate the error.
.SH ERRORS
.PP
If the \*Lpathconf(\|)\*O function fails,
\*Lerrno\*O
may be set to the following value:
.VL 1i
.LI "[EACCES]"
Search permission is denied for a component of the path prefix.
.LI "[ELOOP]"
Too many links were encountered in translating
a pathname.
.LI "[EINVAL]"
The name parameter specifies an unknown or
inapplicable characteristic.
.LI "[EFAULT]"
The
\*Vpath\*O
argument is an invalid address.
.LI "[ENAMETOOLONG]"
The length of the \*Vpath\*O string exceeds {PATH_MAX} or a pathname component
is longer than {NAME_MAX}.
.LI "[ENOENT]"
The named file does not exist or the \*Vpath\*O argument points to an
.\" Begin Digital-specific information CORRECTION
.\" Corrected typo per QAR 6104.
empty string.
.\" End Digital-specific information CORRECTION
.LI "[ENOTDIR]"
A component of the path prefix is not a directory.
.LE
.PP
If the \*Lfpathconf(\|)\*O function fails,
\*Lerrno\*O
may be set to the following value:
.VL 1i
.LI "[ELOOP]"
Too many links were encountered in translating
a pathname.
.LI "[EINVAL]"
The name parameter specifies an unknown or
inapplicable characteristic.
.LI "[EBADF]"
The \*Vfildes\*O argument is not a valid file descriptor.
.iX "pathconf function"
.iX "fpathconf function"
.LE
.EQ
delim off
.EN
