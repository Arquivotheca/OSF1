.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: getopt.3,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/06/24 18:24:37 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH getopt 3
.SH NAME
.PP
\*Lgetopt\*O \- Gets flag letters from the argument vector
.SH LIBRARY
.PP
\*OStandard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <unistd.h>\*O
.PP
\*Lint getopt(
.nL
        \*Lint \*Vargc\*L,
.nL
        \*Lconst char * const \*Vargv\*L[\|],
.nL
        \*Lconst char *\*Voptstring\*L);\*O
.PP
\*Lextern char *optarg;\*O
.PP
\*Lextern int optind;\*O
.PP
\*Lextern int opterr;\*O
.PP
\*Lextern int optopt;\*O
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vargc\*O"
Specifies the number of parameters passed to the routine.
.LI "\*Vargv\*O"
Points to an array of \*Vargc\*O pointers to argument strings.
.LI "\*Voptstring\*O"
Specifies a string of recognized flag characters.  If
a character is followed by a : (colon), the flag is expected to take a
parameter that may or may not be separated from it by white space.
.\" .LI "\*Voptopt\*L"
.\" Specifies the current option the function is looking at.
.\" .LI "\*Voptarg\*O"
.\" Specifies an argument for the current \*Loptopt\*O.
.\" .LI "\*Voptind\*O"
.\" Specifies the index of the next \*Largv\*O.
.\" .LI "\*Vopterr\*O"
.\" Contains an integer value that can be used to suppress error messages.
.\" .LI "\*Vstringind\*O"
.\" Specifies the next option to examine.  It keeps track of where the
.\" \*Lgetopt_r(\|)\*O function is in the parsing of the options during
.\" the previous calls.
.\" .LI "\*Vretopt\*O"
.\" Stores the parsed option that is returned.
.LE
.SH DESCRIPTION
.PP
.iX "getopt function"
.iX "flag letters" "returning from argument vector"
.iX "argument vector" "returning flag letters from"
.iX "optarg" "external variable"
.iX "external variable" "optarg"
The \*Lgetopt(\|)\*O function parses argument lists.  It returns the
next flag character in
the \*Vargv\*O parameter list that matches a character in the
\*Voptstring\*O parameter.  If that flag takes an argument, the
\*Lgetopt(\|)\*O function has the \*Loptarg\*O variable point to the
flag argument according to the following rules:
.ML
.LI
If the flag is the last character pointed at by an \*Vargv\*O
element, \*Loptarg\*O will contain \*Vargv\*O's next element, and
\*Loptind\*O is incremented by 2.  The \*Lgetopt(\|)\*O function
returns an error if the resulting \*Loptind\*O is greater than or
equal to \*Vargc\*O.
.LI
If the flag is not the last character, then the \*Loptarg\*O
variable points at the string after the flag character in the
associated element of \*Vargv\*O.  The \*Loptind\*O variable is
incremented by 1.
.LE
.PP
The \*Loptarg\*O external variable is set to point to the start
of the flag's parameter on return from the \*Lgetopt(\|)\*O function.
.PP
The \*Lgetopt(\|)\*O function places the \*Vargv\*O index
of the next argument to be processed in \*Loptind\*O.  The
\*Loptind\*O variable
is externally initialized to 1 before the first call to
\*Lgetopt(\|)\*O so that \*Vargv\*L[0]\*O is not
processed.  Error messages can be suppressed by providing a value of 0
(zero) as the \*Lopterr\*O parameter.
.SH EXAMPLES
.PP
The following example shows a suggested way to use the \*Lgetopt(\|)\*O
function.
.PP
.oS
#include <unistd.h>
main(argc, argv)
int     argc;
char    *argv[];

#define ARGS    "r:w:f:s"

{
        int     c, errflg = 0;
        int     readers = 1, writers = 1;
        int     freeBufs = 1;
        int     doStats = FALSE;

        optarg = NULL;
        while (!errflg && (c = getopt(argc, argv, ARGS)) != -1)
                switch (c) {
                case 'r'        :
                        readers = atoi(optarg);
                        break;
                case 'w'        :
                        writers = atoi(optarg);
                        break;
                case 'f'        :
                        freeBufs = atoi(optarg);
                        break;
                case 's'        :
                        doStats = TRUE;
                        break;
                default :
                        errflg++;
                }
.oE
.SH NOTES
.PP
The external \*Lint\*O \*Loptopt\*O
variable is set to the real flag found in the \*Vargv\*O
parameter.  This is true whether the flag is in the \*Voptstring\*O
parameter or not.
.PP
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Trial use.
.LE
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lgetopt(\|)\*O
function returns the flag character that was detected.
If the function encounters
a flag that is not included in the \*Voptstring\*O parameter,
or if the : (colon) character is used incorrectly,
the \*Lgetopt(\|)\*O function prints an error message on
\*Lstderr\*O and returns a ? (question mark).  If there is a missing
flag, the \*Lgetopt(\|)\*O function returns a : (colon) if
\*Voptstring\*O's first character is a : (colon), and a ? (question
mark) otherwise.  In addition, the \*Lgetopt(\|)\*O function sets the
\*Loptopt\*O variable to the flag character that caused one of these
errors.
.PP
The \*Lgetopt(\|)\*O function also displays a diagnostic message if
the application did not set the \*Lopterr\*O variable to 0 (zero), and
\*Voptstring\*O's first character is not a : (colon).
.PP
When all flags have been processed (that is, up to the first nonflag
argument), the \*Lgetopt(\|)\*O function returns a value of -1.  The
special flag -- (dash dash) can be used to delimit the end of the
flags; -1 is returned, and the -- (dash dash) string is skipped.
.PP
The \*Lgetopt(\|)\*O function does not change \*Loptind\*O, and also
returns a value of -1, if one of the following occurs:
.ML
.LI
The \*Vargv\*O[\*Loptind\*O] result is \*LNULL\*O.
.LI
The *\*Vargv\*O[\*Loptind\*O] result is not the special - (dash) flag.
.LI
The \*Vargv\*O[\*Loptind\*O] result points to the - (dash) string.
.LE
.PP
The \*Lgetopt(\|)\*O function does increment \*Loptind\*O if
the result of \*Vargv\*O[\*Loptind\*O] points to the -- (dash dash) string.
.SH RELATED INFORMATION
.PP
Commands:
\*Lgetopt\*O(1).
.EQ
delim off
.EN
