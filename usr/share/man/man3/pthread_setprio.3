.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pthread_setprio.3,v $ $Revision: 3.2.4.3 $ (DEC) $Date: 1994/01/14 21:02:17 $
.\"
...\" Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED.
.wH "<routine_section>"
.TH pthread_setprio 3
.SH NAME
\*Lpthread_setprio\*O \- Changes the current priority of a thread.
.SH SYNOPSIS
.iX "Thread" "setting current priority of"
.iX "Priority" "setting for thread"
.PP
.sS
\*L#include <pthread.h>
.fS "int pthread_setprio"
.dS "pthread_t"
\*Vthread\*L
.dE
.dS "int"
\*Vpriority\*O
.dE
.fE
.sE
.wH "<endformat>"
.SH PARAMETERS
.PP
.VL 6m
.LI "\*Vthread\*O"
Thread whose priority is changed.
.LI "\*Vpriority\*O"
New priority value of the thread specified in \*Vthread\*O. The
priority value is dependent upon scheduling policy. Valid values fall within
one of the following five ranges.
.VL 1m
.LI ""
\*LPRI_OTHER_MIN <= \*Vpriority <= \*LPRI_OTHER_MAX\*O
.LI ""
\*LPRI_FIFO_MIN <= \*Vpriority <= \*LPRI_FIFO_MAX\*O
.LI ""
\*LPRI_RR_MIN <= \*Vpriority <= \*LPRI_RR_MAX\*O
.LI ""
\*LPRI_FG_MIN_NP <= \*Vpriority <= \*LPRI_FG_MAX_NP\*O
.LI ""
\*LPRI_BG_MIN_NP <= \*Vpriority <= \*LPRI_BG_MAX_NP\*O
.LE
.LI ""
If you create a new thread without specifying a threads attributes object
that contains a changed priority attribute, the default priority of the
newly created thread is the midpoint between \*LPRI_OTHER_MIN\*O and
\*LPRI_OTHER_MAX\*O (the midpoint between the minimum and the maximum
for the \*LSCHED_OTHER\*O policy).
.LI ""
When you call this routine to specify a minimum or maximum priority,
use the appropriate symbol \(em for example, \*LPRI_FIFO_MIN\*O or
\*LPRI_FIFO_MAX\*O. To specify a value between the minimum and
maximum, use an appropriate arithmetic expression. For example, to
specify a priority mid-way between the minimum and maximum for the
Round Robin scheduling policy, specify the following concept using
your programming language's syntax:
.sp
.oS
pri_rr_mid = (PRI_RR_MIN + PRI_RR_MAX)/2
.oE
.LI ""
If your expression results in a value outside the range of minimum to
maximum, an error results when you use it.
.LE
.wH "<endparameters>"
.SH DESCRIPTION
.PP
This routine changes the current priority of a thread. A thread can change
its own priority using the identifier returned by \*Lpthread_self\*O.
.PP
Changing the priority of a thread can cause it to start executing or be
preempted by another thread. The effect of setting different priority values
depends on the scheduling priority assigned to the thread. The initial
scheduling priority is set by calling the \*Lpthread_attr_setprio\*O
routine.
.PP
An application should specify priority only to express the urgency of
executing the thread relative to other threads. Priority should not be
used to control mutual exclusion when accessing shared data. With a
sufficient number of processors executing, all ready threads, regardless
of priority, can be executing simultaneously.
.PP
Note that \*Lpthread_attr_setprio\*O sets the priority attribute that
is used to establish the priority of a new thread when it is created.
However, \*Lpthread_setprio\*O changes the priority of an existing
thread.
.SH RETURN VALUES
.PP
The previous priority of the thread specified in \*Vthread\*O is
returned.
.PP
If an error condition occurs, this routine returns \-1 and sets
\*Eerrno\*O to the corresponding error value. Possible return values
are as follows:
.sp
.TS
tab(@);
l l lw(2.5i).
\*LReturn@Error@Description\*O
_
\Priority value@@Successful completion.
\&\-1@[\*LEINVAL\*O]@T{
The value specified by \*Vpriority\*O is invalid.
T}
\&\-1@[\*LENOTSUP\*O]@T{
An attempt is made to set the policy to an unsupported value.
T}
\&\-1@[\*LESRCH\*O]@T{
The value specified by \*Vthread\*O does not refer to an existing thread.
T}
\&\-1@[\*LEPERM\*O]@T{
The caller does not have the appropriate privileges to set the priority of
the specified thread.
T}
.TE
.wH "<endnas_return>"
.cS
.SH EXAMPLES
.PP
.oS
int pthread_setprio (pthread_t *thread, int priority);
.oE
.cE
.wH "<endnas_examples>"
.SH RELATED INFORMATION
.PP
\*Lpthread_attr_setprio\*O(3),
\*Lpthread_attr_setsched\*O(3),
\*Lpthread_create\*O(3),
\*Lpthread_self\*O(3),
\*Lpthread_setscheduler\*O(3)
.EQ
delim off
.EN
