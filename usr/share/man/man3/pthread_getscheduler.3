.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: pthread_getscheduler.3,v $ $Revision: 3.3.4.2 $ (DEC) $Date: 1994/01/14 20:59:03 $
.\"
...\" Copyright 1991, Open Software Foundation, Inc. ALL RIGHTS RESERVED.
.wH "<routine_section>"
.TH pthread_getscheduler 3
.SH NAME
\*Lpthread_getscheduler\*O \- Obtains the current scheduling policy of a thread.
.SH SYNOPSIS
.iX "Thread" "obtaining current scheduling policy of"
.iX "Scheduling policy" "obtaining for thread"
.PP
.sS
\*L#include <pthread.h>
.fS "int pthread_getscheduler"
.dS "pthread_t"
\*Vthread\*L
.dE
.fE
.sE
.wH "<endformat>"
.SH PARAMETERS
.PP
.VL 5m
.LI "\*Vthread\*O"
Thread whose scheduling policy is obtained.
.LE
.wH "<endparameters>"
.SH DESCRIPTION
.PP
This routine obtains the current scheduling policy of a thread. The current
scheduling policy of a thread is different from the initial scheduling
policy if the \*Lpthread_setscheduler\*O routine is called.
.SH RETURN VALUES
.PP
The current scheduling policy value of the thread specified in
\*Vthread\*O is returned. See the description of
\*Lpthread_setscheduler\*O for valid values.
.PP
If an error condition occurs, this routine returns \-1 and sets
\*Eerrno\*O to the corresponding error value. Possible return values are as
follows:
.sp
.TS
center, tab(@);
l l lw(2.5i).
\*LReturn@Error@Description\*O
_
\Scheduling policy value@@Successful completion.
\&\-1@[\*LEINVAL\*O]@T{
The value specified by \*Vthread\*O is invalid.
T}
\&\-1@[\*LESRCH\*O]@T{
The value specified by \*Vthread\*O does not refer to an existing thread.
T}
.TE
.wH "<endnas_return>"
.cS
.SH EXAMPLES
.PP
.oS
int pthread_getscheduler (pthread_t *thread);
.oE
.cE
.wH "<endnas_examples>"
.SH RELATED INFORMATION
.PP
.\" \*Lpthread_attr_setscheduler\*O(3),
\*Lpthread_setscheduler\*O(3)
.EQ
delim off
.EN
