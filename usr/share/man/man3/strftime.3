.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: strftime.3,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1993/11/19 16:28:35 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.\"
.TH strftime 3
.SH NAME
.PP
\*Lstrftime\*O, \*Lwcsftime\*O \- Converts a date and time to a string
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <time.h>\*O
.PP
\*Lsize_t strftime\*L(
.nL
        \*Lchar *\*Vs\*L,
.nL
        \*Lsize_t \*Vmaxsize\*L,
.nL
        \*Lconst char *\*Vformat\*L,
.nL
        \*Lconst struct tm *\*Vtimeptr\*L);\*O
.PP
\*L#include <wchar.h>\*O
.PP
\*Lsize_t wcsftime(
.nL
        wchar_t *\*Vwcs\*L,
.nL
        size_t \*Vmaxsize\*L,
.nL
        const char *\*Vformat\*L,
.nL
        const struct tm *\*Vtimptr\*L);\*O
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vs\*O"
Points to the array containing the output date and time string.
.LI "\*Vmaxsize\*O"
Specifies the maximum number of bytes or wide characters
to be written to the array pointed to by the \*Vs\*O parameter.
.LI "\*Vformat\*O"
Points to a sequence of format codes
that specify the format of the date and time to be written to the
output string. See the \*LDESCRIPTION\*O section for more information.
.LI "\*Vtimeptr\*O"
Points to a type \*Ltm\*O structure that contains
broken-down time information.
.LI "\*Vwcs\*O"
Points to the wide-character array containing the output date and time string.
.LE
.SH DESCRIPTION
.PP
.iX "strftime function"
.iX "wcsftime function"
.iX "converting dates and times"
.iX "date conversion"
.iX "time conversion"
The \*Lstrftime(\|)\*O function places characters into the array pointed
to by the \*Vs\*O parameter as controlled by the string pointed to by the
\*Vformat\*O parameter. The string pointed to by the \*Vformat\*O
parameter is a sequence of characters. Depending on the locale setting,
the characters may be single-byte or multibyte characters.
.PP
Local time zone information is used as though the \*Lstrftime(\|)\*O function
called the \*Ltzset(\|)\*O function. Time information used in this subroutine
is fetched from space containing type \*Ltm\*O structure data, which is
defined in the \*Ltime.h\*O include file. The type \*Ltm\*O structure
must contain the time information used by this subroutine to construct the
time and date string.
.PP
The \*Vformat\*O string consists of characters that represent
zero or more conversion specifications
and ordinary characters that represent the date and time values
and null string terminator.
A conversion specification consists of
a \*L%\*O (percent sign) character
followed by a character that determines how the
conversion specification constructs the formatted string.
.PP
All ordinary characters (including the terminating
null character) are copied unchanged into the \*Vs\*O array. When
copying between objects that overlap, behavior of this
function is undefined. No more than the number of bytes specified
by the \*Vmaxsize\*O parameter are written to the array (including the
terminating null byte).  Each conversion
specification is replaced by the appropriate characters as described in the
following list. The appropriate characters are determined by the
\*LLC_TIME\*O category of the current locale and by values specified by
the type \*Ltm\*O structure pointed to by the \*Vtimeptr\*O parameter.
.PP
The \*Lwcsftime(\|)\*O function formats the data in the \*Vtimptr\*O
parameter according to the specification contained in the \*Vformat\*O
parameter and places the resulting wide-character string into
the \*Vwcs\*O parameter. No more than the number of wide characters specified
by the \*Vmaxsize\*O parameter are written to the array (including the
terminating null wide character).
.PP
The \*Lwcsftime(\|)\*O function behaves as if the character string generated by
the \*Lstrftime(\|)\*O function is passed to the \*Lmbstowcs(\|)\*O function as
the character-string parameter and the
\*Lmbstowcs\*O function places the result
in the \*Vwcs\*O parameter of the \*Lwcsftime(\|)\*O function, up to the limit
of wide-character codes specified by the \*Vmaxsize\*O parameter. Only
the \*Lwchar.h\*O include file needs to be specified for the
\*Lwcsftime(\|)\*O function.
.PP
These functions use the local timezone information.
.PP
The \*Vformat\*O parameter consists of a series of zero or more
conversion specifiers and ordinary characters. Each conversion
specification starts with a % (percent sign) and ends with a
conversion code character
specifying the conversion format. The functions replace the conversion
specification with the appropriately formatted date or time value.
Ordinary characters are written to the output buffer unchanged.
.PP
The \*Vformat\*O parameter has the following syntax:
.PP
.sS
[\*Vordinary-text\*O] [\*L%\*O[[\*L-\*O|\*L0\*O]\*Vwidth\*O] [\*L.\*Vprecision\*O] \*Vformat-code\*O [\*Vordinary-text]\*O]...
.sE
.PP
.VL 1.25i
.LI "\*Vordinary-text\*O"
Text that is copied to the output parameter with no changes.
.LI "\*Vwidth\*O"
A decimal digit string that specifies the minimum field width. If the
width of the item equals or exceeds the minimum field width, the
minimum is ignored. If the width of the item is less than the minimum
field width, the function justifies and pads the item. The
optional \*L-\*O (minus sign) or \*L0\*O (zero digit) control the
justification and padding as follows:
.VL 1i
.LI "None"
Item is right justified and spaces are added to the beginning of the
item to fill the minimum width.
.LI "Minus sign"
Item is left justified and spaces are added to the end of the item to
fill the minimum width.
.LI "Zero digit"
Item is right justified and zeros are added to the beginning of the
item to fill the minimum width.
.LE
.LI "\*Vprecision\*O"
A decimal string that specifies the minimum number of digits to appear
for the
\*Ld\*O,
\*LH\*O,
\*LI\*O,
\*Lj\*O,
\*Lm\*O,
\*LM\*O,
\*Lo\*O,
\*LS\*O,
\*LU\*O,
\*Lw\*O,
\*LW\*O,
\*Ly\*O, and
\*LY\*O conversion formats and the maximum number of characters to
used from the
\*La\*O,
\*LA\*O,
\*Lb\*O,
\*LB\*O,
\*Lc\*O,
\*LD\*O,
\*LE\*O,
\*Lh\*O,
\*Ln\*O,
\*LN\*O,
\*Lp\*O,
\*Lr\*O,
\*Lt\*O,
\*LT\*O,
\*Lx\*O,
\*LX\*O,
\*LZ\*O, and
\*L%\*O conversion formats.
.IP
If no field width or precision is specified for the
\*Ld\*O,
\*LH\*O,
\*LI\*O,
\*Lm\*O,
\*LM\*O,
\*LS\*O,
\*LU\*O,
\*LW\*O, or
\*Ly\*O conversion character, a default precision of \*L.2\*O is used.
If no field width or precision is specified for the \*Lj\*O conversion
character, a default precision of 3 is used.
.LI "\*Vformat-code\*O"
A single character that specifies the date and time conversion to perform.
The following list describes the conversion code characters:
.VL 0.5i
.LI "\*La\*O"
The short day of the week is output as a string as defined for the
current locale (Mon, for example).
.LI "\*LA\*O"
The long day of the week is output as defined for the current locale
(Monday, for example).
.LI "\*Lb \*O(or \*Lh\*O)"
The short month is output as a string as defined for the current
locale (Jan, for example).
.LI "\*LB\*O"
The long month is output as a string as defined for the current locale
(January, for example).
.LI "\*Lc\*O"
The date and time is output with the
default date and time as defined for the current locale.
.LI "\*LC\*O"
The century is output as a decimal number in the range 00 to 99.
.LI "\*Ld\*O"
The day of the month is output as a number between 01 and 31.
.LI "\*LD\*O"
The format is fixed to return %m/%d/%y. (For example, 20
Jun 1990 will return 06/20/90.)
.LI "\*Le\*O"
The day of the month is output as a number between 1 and 31 in a
2-digit field with leading space fill.
.LI "\*LEc\*O"
Specifies the locale's alternative appropriate date and time representation.
.LI "\*LEC\*O"
Specifies the name of the base year (period) in the locale's
alternative representation.
.LI "\*LEx\*O"
Specifies the locale's alternative date representation.
.LI "\*LEX\*O"
Specifies the locale's alternative time representation.
.LI "\*LEy\*O"
Specifies the offset from \*L%EC\*O (year only) in the locale's
alternative representation.
.LI "\*LEY\*O"
Specifies the full alternative year representation.
.LI "\*LH\*O"
The hour of the day is output as a number between 00 and 23.
.LI "\*Lh\*O"
Same as \*Lb\*O.
.LI "\*LI\*O"
The hour of the day is output as a number between 01 and 12.
.LI "\*Lj\*O"
The Julian day of the year is output as a number between 001 and 366.
.LI "\*Lm\*O"
The month of the year is output as a number between 01 and 12.
.LI "\*LM\*O"
The minute is output as a number between 00 and 59.
.LI "\*Ln\*O"
Only a newline character is output.
.LI "\*LN\*O"
The locale-dependent Emperor/Era name is output.
.LI "\*Lo\*O"
The locale-dependent Emperor/Era year is output.
.LI "\*LOd\*O"
Specifies the day of the month using the locale's alternative numeric symbols.
.LI "\*LOe\*O"
Specifies the day of the month using the locale's alternative numeric symbols.
.LI "\*LOH\*O"
Specifies the hour (24-hour clock) using the locale's alternative
numeric symbols.
.LI "\*LOI\*O"
Specifies the hour (12-hour clock) using the locale's alternative
numeric symbols.
.LI "\*LOm\*O"
Specifies the month using the locale's alternative numeric symbols.
.LI "\*LOM\*O"
Specifies the minutes using the locale's alternative numeric symbols.
.LI "\*LOS\*O"
Specifies the seconds using the locale's alternative numeric symbols.
.LI "\*LOu\*O"
Specifies the weekday as a number in the locale's alternative
representation (Monday=1).
.LI "\*LOU\*O"
Specifies the week number of the year (Sunday as the first day
of the week) using the locale's alternative numeric symbols.
.LI "\*LOw\*O"
Specifies the week day as a number in the locale's alternative
representation (Sunday = 0).
.LI "\*LOW\*O"
Specifies the week number of the year (Monday as the first day of
the week) using the locale's alternative numeric symbols.
.LI "\*LOy\*O"
Specifies the year (offset from \*L%C\*O) in alternative representation.
.LI "\*Lp\*O"
The AM or PM indicator is output as a string specified
for the current locale.
.LI "\*Lr\*O"
The time in AM/PM notation is output, according
to British/US conventions (%I:%M:%S [AM|PM]).
.LI "\*LR\*O"
The time in hours (24-hour clock) and minutes (%H:%M).
.LI "\*LS\*O"
The second is output as a number between 00 and 61.
.LI "\*Lt\*O"
Only a tab character is output.
.LI "\*LT\*O"
The time is output as %H:%M:%S.
.LI "\*Lu\*O"
Specifies the weekday as a decimal number [1,7], with 1
representing Monday.
.LI "\*LU\*O"
The week number of the year (Sunday as the first day
of the week). Output format is a decimal number between 0 and 53.
.LI "\*Lw\*O"
The day of the week is output as a number between 0 (Sunday) and 6.
.LI "\*LW\*O"
The week number of the year (Monday as the first day
of the week). Output format is a decimal number between 0 and 53.
.LI "\*Lx\*O"
The short date is output in the format specified for the current
locale.
.LI "\*LX\*O"
The time is output in the format specified for the current locale.
.LI "\*Ly\*O"
The year is output as a number (without the century) between 00 and 99.
.LI "\*LY\*O"
The year is output as a number (with the century) between 0000 and 9999.
.LI "\*LZ\*O"
The (standard time or daylight saving time) time zone name is
output as a string from the environment variable \*LTZ\*O (CDT, for example).
If no time zone information exists, no characters are output.
.LI "\*L%\*O"
The % (percent) character is output.
.LE
.LE
.PP
When a conversion code character is not from the preceding list,
the behavior of this function is undefined.
.SH EXAMPLES
.PP
The following example uses \*Lstrftime(\|)\*O to display the current
date:
.PP
.oS
#include <time.h>
#include <locale.h>
#include <stdio.h>
#define SLENGTH 80

main()
{
    char nowstr[SLENGTH];
    time_t nowbin;
    struct tm *nowstruct;

    (void)setlocale(LC_ALL, "");

    if (time(&nowbin) == (time_t) - 1)
        printf("Could not get time of day from time()\en");

    nowstruct = localtime(&nowbin);

    if (strftime(nowstr, SLENGTH, "%A %x", nowstruct) == (size_t) 0)
        printf("Could not get string from strftime()\en");

    printf("Today's date is %s\en", nowstr);
}
.oE
.SH NOTES
.PP
The \*L%S\*O seconds field can contain a value up to 61 seconds rather
than up to 59 seconds to allow leap seconds that are sometimes added to
years to keep clocks in correspondence with the solar year.
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use (\*Lstrftime(\|)\*O).
.LE
.SH RETURN VALUES
.PP
The \*Lstrftime(\|)\*O function returns the number of bytes
written into the array pointed to by the \*Vs\*O parameter
when the total number of resulting bytes, including the terminating
null character, is not more than the value of the \*Vmaxsize\*O parameter.
The returned value does not count the terminating null byte in the
number of bytes written into the array.
Otherwise, a value of 0 cast to \*Lsize_t\*O is returned and the contents of
the array are undefined.
.PP
The \*Lwcsftime(\|)\*O function returns the number of wide characters
written into the array pointed to by the \*Vwcs\*O parameter
when the total number of resulting wide characters, including the terminating
null character, is not more than the value of the \*Vmaxsize\*O parameter.
The returned value does not count the terminating null wide character in the
number of wide characters written into the array.
Otherwise, a value of 0 cast to \*Lsize_t\*O is returned and the contents of
the array are undefined.
.SH RELATED INFORMATION
.PP
Functions:
\*Lctime\*O(3),
\*Lmbstowcs\*O(3),
\*Lsetlocale\*O(3),
\*Lstrptime\*O(3).
.EQ
delim off
.EN
