.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: ranhash.3,v $ $Revision: 3.2.2.2 $ (DEC) $Date: 1992/05/27 11:14:33 $
.\"
.\" ------------------------------------------------------------------
.\" | Copyright Unpublished, MIPS Computer Systems, Inc.  All Rights |
.\" | Reserved.  This software contains proprietary and confidential |
.\" | information of MIPS and its suppliers.  Use, disclosure or     |
.\" | reproduction is prohibited without the prior express written   |
.\" | consent of MIPS.                                               |
.\" ------------------------------------------------------------------
.\"  ranhash.3 3.1
.TH ranhash 3
.SH NAME
ranhashinit, ranhash, ranlookup \- access routine for the symbol table definition file in archives
.SH SYNOPSIS
.PP
.B #include <ar.h>
.PP
.B int ranhashinit(pran, pstr, size)
.br
.B struct ranlib *pran;
.br
.B char *pstr;
.br
.B int size;
.PP
.B ranhash(name)
.br
.B char *name;
.PP
.B struct ranlib *ranhash(name)
.br
.B char *name;
.SH DESCRIPTION
.PP
.B ranhashinit
initializes static information for future use by
.BR ranhash
and
.BR ranlookup.
.IR pran
points to an array of ranlib structures.
.IR pstr
points to the corresponding ranlib string table (these are only used by
.BR ranlookup ).
.IR size
is the size of the hash table and should be a power of 2. If the size isn't
a power of 2,
a 1 is returned; otherwise, a 0 is returned.
.PP
.B ranhash
returns a hash number given a name. It uses a multiplicative
hashing algorithm
and the
.IR size
argument to
.BR ranhashinit .
.PP
.B ranlookup
looks up
.IR name
in the ranlib table specified by
.BR ranhashinit .
It uses the
.B ranhash
routine as a starting point. Then, it does a rehash from there.
This routine returns a pointer to a valid ranlib entry on a match.
If no matches are found (the "emptiness" can be
inferred if the ran_off field is zero), the empty ranlib structure
hash table should be sparse.  This routine does not expect to run out
of places to look in the table.  For example, if you collide on all entries in
the table, an error is printed tostderr and a zero is returned.
.SH AUTHOR
.PP
Mark I. Himelstein
.SH RELATED INFORMATION
.PP
\*Lar\*O(1)
.EQ
delim off
.EN
