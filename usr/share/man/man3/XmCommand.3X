.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: XmCommand.3X,v $ $Revision: 3.2.4.4 $ (DEC) $Date: 1993/10/25 18:54:52 $
.\"
.\" **
.\" **
.\" **  (c) Copyright 1989, 1990, 1992 by Open Software Foundation, Inc.
.\" **      All Rights Reserved.
.\" **
.\" **  (c) Copyright 1987, 1988, 1989, by Hewlett-Packard Company
.\" **
.\" **  (c) Copyright 1987, 1988 by Digital Equipment Corporation,
.\" **      Maynard, MA.  All Rights Reserved.
.\" **
.\" **
.TH XmCommand 3X "" "" "" "OSF/Motif"
.SH NAME
\*LXmCommand\*O \- The Command widget class
.SH SYNOPSIS
.sS
.iS
\&#include <Xm/Command.h>
.iE
.sE
.SH DESCRIPTION
.iX "XmCommand"
.iX "widget class" "Command"
Command is a special-purpose composite widget for command
entry that provides a built-in command-history mechanism.
Command includes a command-line text-input field, a command-line prompt,
and a command-history list region.
.PP 
One additional \*LWorkArea\*O child may be added to the Command after
creation.
.PP 
Whenever a command is entered, it is
automatically added to the end of the command-history list and made visible.
This does not change the selected item in the list, if there is one.
.PP 
Many of the new resources specified for Command are actually SelectionBox
resources that have been renamed for clarity and ease of use.
.nL
.ne 10
.SS "Classes"
Command inherits behavior and resources from \*LCore\*O,
\*LComposite\*O, \*LConstraint\*O, \*LXmManager\*O,
\*LXmBulletinBoard\*O, and \*LXmSelectionBox\*O classes.
.PP 
The class pointer is \*LxmCommandWidgetClass\*O.
.PP 
The class name is \*LXmCommand\*O.
.SS "New Resources"
The following table defines a set of widget resources used by the programmer
to specify data.  The programmer can also set the resource values for the
inherited classes to set attributes for this widget.  To reference a
resource by name or by class in a .Xdefaults file, remove the \*LXmN\*O or
\*LXmC\*O prefix and use the remaining letters.  To specify one of the defined
values for a resource in a .Xdefaults file, remove the \*LXm\*O prefix and use
the remaining letters (in either lowercase or uppercase, but include any
underscores between words).
The codes in the access column indicate if the given resource can be
set at creation time (C),
set by using \*LXtSetValues\*O (S),
retrieved by using \*LXtGetValues\*O (G), or is not applicable (N/A).
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmCommand Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNcommand	""	CSG
\ \ \ \ \ \ XmCTextString	\ \ \ \ \ \ \ XmString
_
XmNcommandChangedCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNcommandEnteredCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNhistoryItems	NULL	CSG
\ \ \ \ \ \ XmCItems	\ \ \ \ \ \ \ XmStringTable
_
XmNhistoryItemCount	0	CSG
\ \ \ \ \ \ XmCItemCount	\ \ \ \ \ \ \ int
_
XmNhistoryMaxItems	100	CSG
\ \ \ \ \ \ XmCMaxItems	\ \ \ \ \ \ \ int
_
XmNhistoryVisibleItemCount	dynamic	CSG
\ \ \ \ \ \ XmCVisibleItemCount	\ \ \ \ \ \ \ int
_
XmNpromptString	dynamic	CSG
\ \ \ \ \ \ XmCPromptString	\ \ \ \ \ \ \ XmString
_
.TE
.\" NROFF HACK END
.VL  
.LI "\*LXmNcommand\*O"
Contains the current command-line text.  This is the \*LXmNtextString\*O
resource in SelectionBox, renamed for Command.
This resource can also be modified via
\*LXmCommandSetValue\*O and \*LXmCommandAppendValue\*O functions.
The command area is a Text widget.
.LI "\*LXmNcommandChangedCallback\*O"
Specifies the list of callbacks that is called
when the value of the command changes.
The callback reason is \*LXmCR_COMMAND_CHANGED\*O.
This is equivalent to the \*LXmNvalueChangedCallback\*O of the Text
widget, except that a pointer to an \*LXmCommandCallbackStructure\*O is
passed, and the structure's \*Vvalue\*O member contains the
\*LXmString\*O.
.nL
.ne 8
.LI "\*LXmNcommandEnteredCallback\*O"
Specifies the list of callbacks that is called
when a command is entered in the Command.
The callback reason is \*LXmCR_COMMAND_ENTERED\*O.  A pointer to an
\*LXmCommandCallback\*O structure is passed.
.LI "\*LXmNhistoryItems\*O"
Lists \*LXmString\*O items that make up the contents
of the history list.  This is the \*LXmNlistItems\*O resource in
SelectionBox, renamed for Command.
\*LXtGetValues\*O for this resource returns the list items themselves,
not a copy of the list items.
The application must not free the returned items.
.LI "\*LXmNhistoryItemCount\*O"
Specifies the number of \*LXmStrings\*O in \*LXmNhistoryItems\*O.  This is
the \*LXmNlistItemCount\*O resource in SelectionBox, renamed for Command.
The value must not be negative.
.LI "\*LXmNhistoryMaxItems\*O"
Specifies the maximum number of items allowed in the history list.  Once
this number is reached, an existing list item must be removed before
a new item can be added to the list.  For each command entered, the first list
item is removed from the list, so the new command can be added to the list.
The value must be greater than 0.
.LI "\*LXmNhistoryVisibleItemCount\*O"
Specifies the number of items in the history list that should be visible at
one time.  In effect, it sets the height (in lines) of the history list
window.  This is the \*LXmNlistVisibleItemCount\*O resource in SelectionBox,
renamed for Command.
The value must be greater than 0.
The default is dynamic based on the height of the list.
.LI "\*LXmNpromptString\*O"
Specifies a prompt for the command line.
This is the \*LXmNselectionLabelString\*O
resource in SelectionBox, renamed for Command.
The default may vary depending on the value of the
\*LXmNstringDirection\*O resource and the locale.
In the C locale the default is ">".
.LE
.SS "Inherited Resources"
Command inherits behavior and resources from the following
superclasses.  For a complete description of each resource, refer to the
man page for that superclass.
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmSelectionBox Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNapplyCallback	NULL	N/A
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNapplyLabelString	dynamic	N/A
\ \ \ \ \ \ XmCApplyLabelString	\ \ \ \ \ \ \ XmString
_
XmNcancelCallback	NULL	N/A
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNcancelLabelString	dynamic 	N/A
\ \ \ \ \ \ XmCCancelLabelString	\ \ \ \ \ \ \ XmString
_
XmNchildPlacement	XmPLACE_ABOVE_SELECTION	CSG
\ \ \ \ \ \ XmCChildPlacement	\ \ \ \ \ \ \ unsigned char
_
XmNdialogType	XmDIALOG_COMMAND 	G
\ \ \ \ \ \ XmCDialogType	\ \ \ \ \ \ \ unsigned char
_
XmNhelpLabelString	dynamic 	N/A
\ \ \ \ \ \ XmCHelpLabelString	\ \ \ \ \ \ \ XmString
_
XmNlistItemCount	0 	CSG
\ \ \ \ \ \ XmCItemCount	\ \ \ \ \ \ \ int
_
XmNlistItems	NULL	CSG
\ \ \ \ \ \ XmCItems	\ \ \ \ \ \ \ XmStringTable
_
XmNlistLabelString	NULL	N/A
\ \ \ \ \ \ XmCListLabelString	\ \ \ \ \ \ \ XmString
_
XmNlistVisibleItemCount	dynamic 	CSG
\ \ \ \ \ \ XmCVisibleItemCount	\ \ \ \ \ \ \ int
_
XmNminimizeButtons	False	N/A
\ \ \ \ \ \ XmCMinimizeButtons	\ \ \ \ \ \ \ Boolean
_
XmNmustMatch	False 	N/A
\ \ \ \ \ \ XmCMustMatch	\ \ \ \ \ \ \ Boolean
_
XmNnoMatchCallback	NULL	N/A
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
.wH .tH
XmNokCallback	NULL	N/A
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNokLabelString	dynamic	N/A
\ \ \ \ \ \ XmCOkLabelString	\ \ \ \ \ \ \ XmString
_
XmNselectionLabelString	dynamic	CSG
\ \ \ \ \ \ XmCSelectionLabelString	\ \ \ \ \ \ \ XmString
_
XmNtextAccelerators	default	C
\ \ \ \ \ \ XmCTextAccelerators	\ \ \ \ \ \ \ XtAccelerators
_
XmNtextColumns	dynamic	CSG
\ \ \ \ \ \ XmCColumns	\ \ \ \ \ \ \ short
_
XmNtextString	""	CSG
\ \ \ \ \ \ XmCTextString	\ \ \ \ \ \ \ XmString
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmBulletinBoard Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNallowOverlap	True	CSG
\ \ \ \ \ \ XmCAllowOverlap	\ \ \ \ \ \ \ Boolean
_
XmNautoUnmanage	False	N/A
\ \ \ \ \ \ XmCAutoUnmanage	\ \ \ \ \ \ \ Boolean
_
XmNbuttonFontList	dynamic	N/A
\ \ \ \ \ \ XmCButtonFontList	\ \ \ \ \ \ \ XmFontList
_
XmNcancelButton	NULL	N/A
\ \ \ \ \ \ XmCWidget	\ \ \ \ \ \ \ Widget
_
XmNdefaultButton	NULL	N/A
\ \ \ \ \ \ XmCWidget	\ \ \ \ \ \ \ Widget
_
XmNdefaultPosition	False	CSG
\ \ \ \ \ \ XmCDefaultPosition	\ \ \ \ \ \ \ Boolean
_
XmNdialogStyle	dynamic	CSG
\ \ \ \ \ \ XmCDialogStyle	\ \ \ \ \ \ \ unsigned char
_
XmNdialogTitle	NULL	CSG
\ \ \ \ \ \ XmCDialogTitle	\ \ \ \ \ \ \ XmString
_
XmNfocusCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNlabelFontList	dynamic	CSG
\ \ \ \ \ \ XmCLabelFontList	\ \ \ \ \ \ \ XmFontList
_
XmNmapCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNmarginHeight	10	CSG
\ \ \ \ \ \ XmCMarginHeight	\ \ \ \ \ \ \ Dimension
_
XmNmarginWidth	10 	CSG
\ \ \ \ \ \ XmCMarginWidth	\ \ \ \ \ \ \ Dimension
_
XmNnoResize	False	CSG
\ \ \ \ \ \ XmCNoResize	\ \ \ \ \ \ \ Boolean
_
.wH .tH
XmNresizePolicy	XmRESIZE_NONE	CSG
\ \ \ \ \ \ XmCResizePolicy	\ \ \ \ \ \ \ unsigned char
_
XmNshadowType	XmSHADOW_OUT	CSG
\ \ \ \ \ \ XmCShadowType	\ \ \ \ \ \ \ unsigned char
_
XmNtextFontList	dynamic	CSG
\ \ \ \ \ \ XmCTextFontList	\ \ \ \ \ \ \ XmFontList
_
XmNtextTranslations	NULL	C
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNunmapCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
XmManager Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNbottomShadowColor	dynamic	CSG
\ \ \ \ \ \ XmCBottomShadowColor	\ \ \ \ \ \ \ Pixel
_
XmNbottomShadowPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCBottomShadowPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNforeground	dynamic	CSG
\ \ \ \ \ \ XmCForeground	\ \ \ \ \ \ \ Pixel
_
XmNhelpCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNhighlightColor	dynamic	CSG
\ \ \ \ \ \ XmCHighlightColor	\ \ \ \ \ \ \ Pixel
_
XmNhighlightPixmap	dynamic	CSG
\ \ \ \ \ \ XmCHighlightPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNinitialFocus	dynamic	CSG
\ \ \ \ \ \ XmCInitialFocus	\ \ \ \ \ \ \ Widget
_
XmNnavigationType	XmTAB_GROUP	CSG
\ \ \ \ \ \ XmCNavigationType	\ \ \ \ \ \ \ XmNavigationType
_
XmNshadowThickness	dynamic	CSG
\ \ \ \ \ \ XmCShadowThickness	\ \ \ \ \ \ \ Dimension
_
XmNstringDirection	dynamic	CG
\ \ \ \ \ \ XmCStringDirection	\ \ \ \ \ \ \ XmStringDirection
_
XmNtopShadowColor	dynamic	CSG
\ \ \ \ \ \ XmCTopShadowColor	\ \ \ \ \ \ \ Pixel
_
XmNtopShadowPixmap	dynamic	CSG
\ \ \ \ \ \ XmCTopShadowPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNtraversalOn	True	CSG
\ \ \ \ \ \ XmCTraversalOn	\ \ \ \ \ \ \ Boolean
_
XmNunitType	dynamic	CSG
\ \ \ \ \ \ XmCUnitType	\ \ \ \ \ \ \ unsigned char
_
XmNuserData	NULL	CSG
\ \ \ \ \ \ XmCUserData	\ \ \ \ \ \ \ XtPointer
_
.TE
.\" NROFF HACK END
.PP
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Composite Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNchildren	NULL	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ WidgetList
_
XmNinsertPosition	NULL	CSG
\ \ \ \ \ \ XmCInsertPosition	\ \ \ \ \ \ \ XtOrderProc
_
XmNnumChildren	0	G
\ \ \ \ \ \ XmCReadOnly	\ \ \ \ \ \ \ Cardinal
_
.TE
.\" NROFF HACK END
.PP
.wH .in 0 
.\" NROFF HACK START
.TS
center ;
CB ss
lB lB lB
lB lB lB
l l l.
Core Resource Set
_
Name	Default	Access
\ \ \ \ \ \ Class	\ \ \ \ \ \ Type
_
_
XmNaccelerators	dynamic	N/A
\ \ \ \ \ \ XmCAccelerators	\ \ \ \ \ \ \ XtAccelerators
_
XmNancestorSensitive	dynamic	G
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNbackground	dynamic	CSG
\ \ \ \ \ \ XmCBackground	\ \ \ \ \ \ \ Pixel
_
XmNbackgroundPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderColor	XtDefaultForeground	CSG
\ \ \ \ \ \ XmCBorderColor	\ \ \ \ \ \ \ Pixel
_
XmNborderPixmap	XmUNSPECIFIED_PIXMAP	CSG
\ \ \ \ \ \ XmCPixmap	\ \ \ \ \ \ \ Pixmap
_
XmNborderWidth	0	CSG
\ \ \ \ \ \ XmCBorderWidth	\ \ \ \ \ \ \ Dimension
_
XmNcolormap	dynamic	CG
\ \ \ \ \ \ XmCColormap	\ \ \ \ \ \ \ Colormap
_
XmNdepth	dynamic	CG
\ \ \ \ \ \ XmCDepth	\ \ \ \ \ \ \ int
_
XmNdestroyCallback	NULL	C
\ \ \ \ \ \ XmCCallback	\ \ \ \ \ \ \ XtCallbackList
_
XmNheight	dynamic	CSG
\ \ \ \ \ \ XmCHeight	\ \ \ \ \ \ \ Dimension
_
XmNinitialResourcesPersistent	True	C
\ \ \ \ \ \ XmCInitialResourcesPersistent	\ \ \ \ \ \ \ Boolean
_
XmNmappedWhenManaged	True	CSG
\ \ \ \ \ \ XmCMappedWhenManaged	\ \ \ \ \ \ \ Boolean
_
XmNscreen	dynamic	CG
\ \ \ \ \ \ XmCScreen	\ \ \ \ \ \ \ Screen *
_
.wH .tH
XmNsensitive	True	CSG
\ \ \ \ \ \ XmCSensitive	\ \ \ \ \ \ \ Boolean
_
XmNtranslations	dynamic	CSG
\ \ \ \ \ \ XmCTranslations	\ \ \ \ \ \ \ XtTranslations
_
XmNwidth	dynamic	CSG
\ \ \ \ \ \ XmCWidth	\ \ \ \ \ \ \ Dimension
_
XmNx	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
XmNy	0	CSG
\ \ \ \ \ \ XmCPosition	\ \ \ \ \ \ \ Position
_
.TE
.\" NROFF HACK END
.wH .in  
.SS "Callback Information"
.PP
A pointer to the following structure is passed to each callback:
.sS
.iS
.ta .25i 1.1i
typedef struct
{
	int	\*Vreason\*L;
	XEvent	\*V* event\*L;
	XmString	\*Vvalue\*L;
	int	\*Vlength\*L;
} XmCommandCallbackStruct;
.iE
.sE
.wH .fi
.VL .75i 
.LI "\*Vreason\*O"
Indicates why the callback was invoked
.LI "\*Vevent\*O"
Points to the \*LXEvent\*O that triggered the callback
.LI "\*Vvalue\*O"
Specifies the \*LXmString\*O in the CommandArea
.LI "\*Vlength\*O"
Specifies the size of the command in \*LXmString\*O
.LE 
.SS "Translations"
XmCommand inherits translations from XmSelectionBox.
.SS "Accelerators"
The \*LXmNtextAccelerators\*O from XmSelectionBox are added to the Text
descendant of XmCommand.
.SS "Action Routines"
The XmCommand action routines are described below:
.VL  
.LI "\*LSelectionBoxUpOrDown(0|1|2|3)\*O:"
When called with a 0 argument, selects the previous item in the history
list and replaces the text with that item.
.PP
When called with a 1 argument, selects the next item in the history
list and replaces the text with that item.
.PP
When called with a 2 argument, selects the first item in the history
list and replaces the text with that item.
.PP
When called with a 3 argument, selects the last item in the history
list and replaces the text with that item.
.PP
Calls the callbacks for \*LXmNcommandChangedCallback\*O.
.LE
.SS "Additional Behavior"
The Command widget has the additional behavior described below:
.VL  
.LI "\*LMAny KCancel\*O:"
If the parent of the Command is a manager, the event is passed to the parent.
.LI "\*LKActivate\*O\ in\ Text:"
Calls the Text widget's \*LXmNactivateCallback\*O callbacks.
If the text is empty, this action then returns.
Otherwise, if the history list has \*LXmNhistoryMaxItems\*O items, it
removes the first item in
the list.
.ne 6
It adds the text to the history list as the last item, clears the text,
and calls the \*LXmNcommandEnteredCallback\*O callbacks.
.LI "\*L<Key>\*O\ in\ Text:"
When any change is made to the text edit widget, this action
calls the callbacks for
\*LXmNcommandChangedCallback\*O.
.LI "\*L<DoubleClick>\*O\ or\ \*L<KActivate>\*O\ in\ List:"
Calls the List widget's \*LXmNdefaultActionCallback\*O callbacks.
If the history list has \*LXmNhistoryMaxItems\*O items, this action
removes the first item in the list.
It adds the selected List item to the history list as the last item,
clears the text, and calls the \*LXmNcommandEnteredCallback\*O
callbacks.
.LI "\*L<FocusIn>\*O:"
Calls the callbacks for \*LXmNfocusCallback\*O.
.LI "\*L<MapWindow>\*O:"
When a Command that is the child of a DialogShell is mapped, this action
calls the callbacks for \*LXmNmapCallback\*O.
.LI "\*L<UnmapWindow>\*O:"
When a Command that is the child of a DialogShell is unmapped, this
action calls the
callbacks for \*LXmNunmapCallback\*O.
.LE
.SS "Virtual Bindings"
The bindings for virtual keys are vendor specific.
For information about bindings for virtual buttons and keys, see \*LVirtualBindings(3X)\*O.
.SH RELATED INFORMATION
.na
\*LComposite(3X)\*O, \*LConstraint(3X)\*O,
\*LCore(3X)\*O,
\*LXmBulletinBoard(3X)\*O,
\*LXmCommandAppendValue(3X)\*O,
\*LXmCommandError(3X)\*O,
\*LXmCommandGetChild(3X)\*O,
\*LXmCommandSetValue(3X)\*O,
\*LXmCreateCommand(3X)\*O,
\*LXmManager(3X)\*O, and
\*LXmSelectionBox(3X)\*O.
.ad
.EQ
delim off
.EN
