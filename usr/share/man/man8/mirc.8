.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: mirc.8,v $ $Revision: 1.1.2.7 $ (DEC) $Date: 1993/11/09 20:18:21 $
.\"
.\"
.\"  MIRC (8n) Manpage for POLYCENTER Common Agent
.\"
.\"  Use the following command to test this manpage:
.\"
.\"    tbl <filename> | nroff -man | col | more
.\"   
.TH mirc 8
.SH NAME
.PP
\*Lmirc\*O \- Managed Information Repository (MIR) Compiler utility component of the POLYCENTER Common Agent
.SH SYNOPSIS
.PP
\*L/usr/sbin/mirc\*O [\*Voptions\*O] \*Vinput_file\*O [\*Vinput_file\*O ...]
.\"
.SS Arguments
.VL 4m
.LI "\*Vinput_file\*O"
At least one \*Vinput_file\*O
parameter must be specified on the \*Lmirc\*O command line.  The
\*Vinput_file\*O must be either a MIB specification file
(file extension .mib) or an MSL file
(file extension .ms).  Refer to the
\*VPOLYCENTER Common Agent Managed Object Module Developer's Guide\*O
for more information on input file types.
The \*Lmirc\*O utility treats an \*Vinput_file\*O
specification as a MIB file unless the input file specification ends in
\*L.ms\*O, in which case it is treated as an MSL file.  Note that you must
specify the Internet MOM management specification file
(\*L/usr/ccs/lib/eca/rfc1213.ms\*O) when you first create a MIR File.
.IP
For syntax help using \*Lmirc\*O, enter the \*L/usr/sbin/mirc\*O command with
no options or arguments specified on the command line.
.LE
.\"
.SH FLAGS
.PP
.VL 4m
.LI "\*L-o\*VMIR_file\*O"
Create a MIR file with the file specification
you give for \*VMIR_file\*O.  If the \*L-o\*O option is omitted entirely,
then \*Lmirc\*O creates a binary output datafile by default with the name
"mir.dat" if no errors are encountered during compilation.
.LI "\*L-o\*O"
The \*L-o\*O option without a MIR File specification
suppresses binary MIR file output (i.e., no MIR file is created).  This option
performs diagnostic checking only.
.LI "\*L-d\*O[\*Vdebug_file_name\*O]"
Generate a symbolic dump upon error-free output.  You may optionally
specify a \*Vdebug_file_name\*O file specification to store the symbolic dump
output.
.LI "\*L-k\*Vkeyword\*O"
Specify a \*Vkeyword\*O for INCLUDE statements in MSL files.
Specifying the \*Vkeyword\*O allows the INCLUDE file to be
compiled.  You may specify any number of these \*L-k\*O switches on the
command line.
.IP "\*L-I\*Vinclude_path\*O"
Specify an alternate path to a directory where include
files can be found.  If the search for an include file in the current directory
fails, the \*Vinclude_path\*O is searched.  If more than one \*L-I\*O switch
is specified on the \*Lmirc\*O command line, the last \*L-I\*O switch
specified is in effect for each \*Linput_file\*O following that
\*L-I\*O switch until another \*L-I\*O
switch is encountered.  The \*L-I\*O switch may be embedded in a
\*Vfile_list\*O file (see description of \*L-f\*O).
.LI "\*L-b\*VMIR_file\*O"
Specify a single binary MIR file to be used as input.
Only one binary MIR file may be specified with the \*L-b\*O switch per
\*Lmirc\*O command.  See the Entity-Class Definition-Ordering Rule section
for more information.
.LI "\*L-f\*Vfile_list\*O"
Specify a file that contains a list of files to be used as input to
\*Lmirc\*O.  You may use more than one \*L-f\*O switch
on the \*Lmirc\*O command line.  Wildcards may not be used in the
\*Lfile_list\*O file specification.  Use '#' or '!' characters to comment lines
in the \*Vfile_list\*O file.  Specify only one filename per line in the
\*Lfile_list\*O file.  You may also use the \*L-I\*O and \*L-r\*O switches
in the \*Vfile_list\*O, one to a line.
.LI "\*L-r\*VEntity_class_OID\*O"
Specify the Object Id (OID) of an entity class (and its children) to be
removed.  There should be no spaces
between the \*L-r\*O switch and the \*VEntity_class_OID\*O Object Id.  The arcs
of the \*VEntity_class_OID\*O may be separated by a '.' or by a blank.  This
switch may be used within a \*Vfile_list\*O file (see \*L-f\*O).
.LI "\*L-m\*Vfilename\*O"
Specify an input file \*Vfilename\*O to be compiled in "merge" mode
instead of "normal" mode.  In "merge" mode, the compiler ignores syntax in a
"merge-mode" file that describes any MIR object that has already been compiled
(either in a previously compiled \*Vinput_file\*O, or by way of a binary MIR
file specified using the \*L-b\*O switch).  Only new definitions in
the "merge" \*Vfilename\*O are merged into the compilation run.
.IP
The definition of each CHILD Entity (supplied in an
MSL or MIB file) must follow the definitions of all of its parent entities.
See the Entity-Class Definition-Ordering Rule section for more
information.
.LE
.SH DESCRIPTION
.PP
.iX "mirc utility"
The \*Lmirc\*O utility is used to populate the POLYCENTER Common Agent's
Management Information Repository (MIR) with information about managed object
classes, directives, notifications, and attributes.  The MIR is used by the
SNMP protocol engine to decode and encode management requests.  The \*Lmirc\*O
utility takes this information from the MIB extensions and
POLYCENTER Framework Management Specification Language (MSL) files
you write for your managed objects.
.\"
.SS Entity-Class Definition-Ordering Rule
The \*Lmirc\*O compiler requires that the definition of each CHILD Entity
(supplied in an MSL or MIB file) must follow the definitions of all its parent
entities.
.PP
This implies all of the following:
.ML
.LI
One or more parent definitions may precede a CHILD entity definition inside
one MSL or MIB file, in which case the CHILD entity definition will actually
be nested inside the parent definitions in the file.
.LI
The parent definitions may be contained in one or more MSL or MIB files
processed by the compiler before the MSL or MIB file containing the CHILD
entity is processed.
.LI
The parent definitions may be contained in the input binary MIR database file
(specified with the \*L-b\*O switch).
.LI
Parent definitions may be defined by any combination of the above three
methods.
.LI
If no input binary MIR database file is specified, then the first file supplied
MUST be an MSL or MIB file for a global entity.  All succeeding filenames
supplied must be for child entities of the global entity or must define
another global entity.
.LE
.SH EXAMPLES
.PP
The following example compiles two global entities (\*Lglobal0.ms\*O and
\*Lglobal1.mib\*O) and their child entities into one MIR output file named
\*Lmir.dat\*O (named by default).
.iS
\*L# /usr/sbin/mirc global0.ms  *0.ms  global1.mib  *1.ms
.iE
The following example compiles global entity MSL file \*Lglobal.ms\*O into
output file \*Lmir.dat\*O (named by default) and produces a symbolic dump
in file \*Lmir.dmp\*O (named by derivation and triggered by \*L-d\*O).
.iS
# /usr/sbin/mirc -d global.ms
.iE
The following example compiles global entity MSL file \*Lglobal1.ms\*O into output file
\*Lmsl1.dat\*O (named explicitly) and produces a symbolic dump in
file \*Lmsl1.dmp\*O (named by derivation).
.iS
# /usr/sbin/mirc -omsl1.dat -d global1.ms
.iE
The following example compiles global entity MSL file \*Lnode.ms\*O and all the child
entity files into output file \*Ldna.dat\*O (named explicitly) with
symbolic dump in \*Ldna.dmp\*O (named by derivation).
.iS
# /usr/sbin/mirc -d -odna.dat node.ms *.ms
.iE
The following example compiles global entity MSL file \*Lnode.ms\*O and all the child
entity files.  Only diagnostics are produced to stderr since the
output file creation is suppressed.
.iS
# /usr/sbin/mirc -o node.ms child*.ms
.iE
The following example reads in the existing binary MIR database file \*Loldmir.dat\*O
and then compiles \*Lascii.ms\*O.  The output file \*Lmir.dat\*O (named
by default) receives the contents of \*Loldmir.dat\*O along with
that of \*Lascii.ms\*O.  Any INCLUDE files specified within the body
of \*Lascii.ms\*O will be sought first in the current working
directory and failing that in the place specified by prepending
the string \*L/usr/include/\*O to the front of the Include file name.
Note that the trailing backslash (/) must be specified.  The \*L-d\*O switch
causes the creation of a symbolic dump, directed to file \*Lmir.dmp\*O
(named by derivation).
.iS
# /usr/sbin/mirc -d -boldmir.dat -I/usr/include/ ascii.ms
.iE
The following example reads in the existing binary MIR database file \*Loldmir.dat\*O
and then compiles \*Lascii0.ms\*O while searching for INCLUDE files
in directory \*L/usr/include/\*O.  The INCLUDE directory is then
switched to \*L/usr/header/\*O and \*Lascii1.ms\*O is compiled.  Binary
output is produced to \*Lmir.dat\*O, no symbolic dump is produced.
.iS
# /usr/sbin/mirc -boldmir.dat -I/usr/include/ ascii0.ms -I/usr/header/ \\
ascii1.ms
.iE
The following example accomplishes the same result as the previous example but
through the use of a \*Vfile_list\*O file.
.iS
# /usr/sbin/mirc -boldmir.dat -fmsl.list
.iE
For this example the \*Lmsl.list\*O contains the following:
.oS
#
# File List file "msl.list"           --comments
#

! Specify current INCLUDE directory   --more comments
-I/usr/include/

! Specify ASCII MSL file to compile
ascii0.ms

! Switch INCLUDE directory to new place
-I/usr/header/

! Specify the last ASCII MSL file to compile
ascii1.ms
.oE
The following example reads in the existing binary MIR database file \*Loldmir.dat\*O
and removes the three Entity-Classes specified by OID using the
\*L-r\*O switch.  The binary output is generated to \*Lmir.dat\*O
(named by default) and contains whatever remains from
\*Loldmir.dat\*O after the Entity-Classes have been removed.
.iS
# /usr/sbin/mirc -boldmir.dat -fremove.list
.iE
For this example \*Lremove.list\*O contains the following:
.iS
#
# Removal specified for the following Entity-Classes:
#
-r1.3.12.2.1011.2.1.1
-r1.3.12.2.1011.2.2.1.4.0.126.0
-r1.3.12.2.1011.2.2.1.126.1
.iE
.SH RELATED INFORMATION
.PP
Commands: \*Lmtu\*O(8), \*Lsnmpsetup\*O(8)
.PP
Daemons: \*Lfddi_mom\*O(8), \*Linternet_mom\*O(8), \*Lmold\*O(8),
\*Lsnmp_pe\*O(8), \*Ltrn_mom\*O(8)
.PP
\*VA Simple Network Management Protocol\*O (RFC 1157)
.EQ
delim off
.EN
