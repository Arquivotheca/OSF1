.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: init.8,v $ $Revision: 3.5.5.2 $ (DEC) $Date: 1993/09/30 20:26:09 $
.\" 
...\" (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
...\" ALL RIGHTS RESERVED 
...\" OSF/1 Release 1.0.4
...\" 
...\"build rmifdef
.TH init 8
.SH NAME
.PP 
\*Linit\*O \- Process control initialization
.SH SYNOPSIS 
.PP
.\" Begin Digital-specific information
.\" Added q flag to synopsis
.sS 
\*L/sbin/init\*O [\*L023qs\*O]
.sE 
.\" End Digital-specific information
.SH DESCRIPTION
.PP 
.iX "init program"
.iX "initialization" "process"
.iX "processes" "initialization"
.iX "run levels"
.iX "system startup"
The \*Linit\*O program
initializes the system by creating and controlling
processes.
The processes run by \*Linit\*O at each
run level are defined in the \*Linittab\*O file.
The \*Linit\*O program 
reads and processes the entries in the \*Linittab\*O file.
.PP 
The \*Linit\*O program considers the system to be in a run level at any
given time; each run level has a specific group of
processes that run at that level. The 
\*Linit\*O program operates in one of four run levels:
\*L0\*O,
\*Ls\*O,
\*L2\*O,
or
\*L3\*O.
The run level changes when a privileged user invokes
\*Linit\*O. The new
\*Linit\*O
sends appropriate signals to the original \*Linit\*O
that tell it which run level to change to.
.PP 
Running the \*Linit\*O program 
is the last step in the boot process after the root
file system is mounted.  The 
\*Linit\*O program scans the \*Linittab\*O file and
looks for an entry with the \*Linitdefault\*O keyword. If the entry is
there, \*Linit\*O uses the run level specified in that entry
as the initial run level to enter. If the entry is not found in
the \*Linittab\*O file or if the \*Linittab\*O file
does not exist, \*Linit\*O requests that the user enter a
run level from the system console,
\*L/dev/console\*O. If the user enters the letter \*Ls\*O,
\*Linit\*O
enters single user state, assigns the virtual console terminal to the user's
terminal and opens it for reading and writing.  The
\*Lsu\*O
command is invoked and the system displays a message on the console stating
the location of the virtual console.
.PP 
To change the run level, the user
specifies either the \*L0\*O, \*L2\*O, \*L3\*O, or \*Ls\*O flag.
.PP 
For the first post-boot execution of \*Linit\*O 
to a run level other than single user,  it searches
the \*Linittab\*O file for entries at the new run level
that have the
\*Lboot\*O
or
\*Lbootwait\*O
keywords.  If the run level that is specified matches the entry, the 
\*Linit\*O program acts on these entries
before processing other entries in
the \*Linittab\*O file.  Any special initialization of
the system, such as checking and mounting file systems,
takes place before users are allowed on the system.  The 
\*Linit\*O program then scans the \*Linittab\*O file
to find all entries that are to be handled for that level.
.PP 
Before starting a new process,
\*Linit\*O
reads each entry in the
\*Linittab\*O
file, and for each entry that should be respawned,
\*Linit\*O
forks a child process.  After spawning all required processes,
\*Linit\*O
waits for one of its
descendant processes to stop, a power-fail signal,
or a signal that it should change the run level.
If one of the preceding three conditions occurs,
\*Linit\*O reexamines the \*Linittab\*O file.  
You can add new entries to the \*Linittab\*O file, but
\*Linit\*O does not reexamine the file until one of
the three previous conditions actually occurs.
.\" Begin Digital-specific information 
.\" Flag is q, not -q
To immediately reexamine the \*Linittab\*O file,
invoke the \*Linit\*O program with the \*Lq\*O flag.
.\" End Digital-specific information
.SH FLAGS
.PP
.VL
.LI "\*L0\*O"
Shuts down and halts the system.
.LI "\*L2\*O"
Changes the run level to a multiuser state with local processes
and daemons.
.LI "\*L3\*O"
Changes the run level to a multiuser state with remote processes
and daemons.
.\" Begin Digital-specific information
.\" Flag is q, not -q
.LI "\*Lq\*O
Forces \*Linit\*O to reexamine the entries in the \*Linittab\*O file.
.\" End Digital-specific information
.LI "\*Ls\*O"
Changes the run level to a single user state with only the
essential kernel services.
.LE 
.SH FILES
.PP
.VL
.LI "\*L/sbin/init\*O"
Specifies the command path
.LI "\*L/etc/inittab\c\*O"
Specifies the \*Linit\*O command control file
.\" Begin Digital-specific information
.\" The following item is being commented out because it only
.\" applies to a system that has C2 security.
.\" .LI "\*Ltcb/files/sysinitrc\*O"
.\" Specifies the boot time script used by systems that do not support
.\" \*Linittab\*O
.\" End Digital-specific information
.LI "\*L/var/adm/wtmp\*O"
Specifies the permanent login accounting file
.LE 
.SH RELATED INFORMATION
.PP 
Commands:  \*Lgetty\*O(8), \*Lrc0\*O(8), \*Lrc2\*O(8), \*Lrc3\*O(8),
\*Lshutdown\*O(8)
.PP 
Calls:  \*Lkill\*O(2), \*Lreboot\*O(2)
.PP 
Files:  \*L/etc/inittab\*O(4)
.iX "init command"
.iX "telinit command"
.EQ
delim off
.EN
.EQ
delim off
.EN
