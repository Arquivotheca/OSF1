.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: newfs.8,v $ $Revision: 3.6.7.8 $ (DEC) $Date: 1994/01/19 16:43:21 $
.\"
.\" (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 Release 1.0.4
.\" 
.\" 
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\" Begin Digital-specific information
.\" NOTE:  This change applies to the NAME section.
.\" Changing mount_mfs to mfs
.\" .PP
.\" \*Lnewfs\*O, \*Lmount_mfs\*O \- Constructs a new file system
.\" End Digital-specific information 
.\"build rmifdef
.TH newfs 8
.SH NAME
.PP
\*Lnewfs\*O, \*Lmfs\*O \- Constructs a new file system
.SH SYNOPSIS
.PP
.\" Begin Digital-specific information
.\" No support for system v file systems in Silver
.\" .sS
.\" \*L/usr/sbin/newfs\*O [\*L-T ufs\*O | \*Ls5fs\*O] [\*L-N\*O] [\*Vnewfs-options\*O] \*Vspecial-device\*O [\*Vdisk-type\*O]
.\" .PP
.\" \*L/usr/sbin/mount_mfs\*O [\*L-F \*Vmount-flags\*O] [\*Vnewfs-options\*O] [\*Vspecial-device\*O] \*Vmount-node\*O
.\" .PP
.\" #ifdef SEC_MAC
.\" \*L/usr/sbin/newfs\*O [\*L-LS\*O \*Vslabel\*O] [\*L-T ufs\*O | \*Ls5fs\*O] [\*L-N\*O] [\*Vnewfs-options\*O] \*Vspecial-device\*O [\*Vdisk-type\*O]
.\" .PP
.\" \*L/usr/sbin/mount_mfs\*O [\*L-LS\*O \*Vslabel\*O] [\*L-F \*Vmount-flags\*O] [\*Vnewfs-options\*O] [\*Vspecial-device\*O] \*Vmount-node\*O
.\" .PP
.\" #endif \* SEC_MAC *
.sS
\*L/usr/sbin/newfs\*O [\*L-N\*O] [\*Vnewfs-options\*O] \*Vspecial-device\*O [\*Vdisk-type\*O]
.PP
\*L/usr/sbin/mfs\*O [\*L-F \*Vmount-flags\*O] [\*Vnewfs-options\*O] [\*Vspecial-device\*O] \*Vmount-node\*O
.PP
.sE
.SH DESCRIPTION
.PP
.iX "newfs command"
.iX "mfs command"
The
\*Lnewfs\*O
command creates a new file system on the specified
\*Vspecial-device\*O of type \*Vdisk-type\*O.
If the disk has been labeled using the
\*Ldisklabel\*O command,
\*Lnewfs\*O
builds a
file system on the specified device, basing its
defaults on the information in the disk label.  If the disk
has not been labeled using the
\*Ldisklabel\*O command,
\*Lnewfs\*O
looks up the
specified disk type in the
\*L/etc/disktab\*O disk description file
to get default information on the specified special device.
Typically, the defaults are reasonable; however the
\*Lnewfs\*O command
has numerous flags that allow you to override the defaults.
.PP
.\" Begin Digital-specific information CORRECTION
.\" Use the -N flag to do this:
.\" If you invoke the \*Lnewfs\*O command without options, it displays the
.\" file system parameters without creating the file system.
.\" 
.\" End Digital-specific information
.\" Specify the \*L\-N\*O flag to display the
.\" file system parameters without creating the file system.
.PP
.\" Begin Digital-specific information
.\" Changed mount_mfs to mfs throughout this paragraph.
The \*Lmfs\*O command builds a memory file system (mfs), which is a
UFS file system in virtual memory, and
mounts it on the specified \*Vmount-node\*O.  When the file system is
unmounted, \*Lmfs\*O exits and the contents of the file system
are lost.  If \*Lmfs\*O is sent a signal while running, for
example during system shutdown, it attempts to unmount its
corresponding file system.  The parameters for \*Lmfs\*O are
almost the same as those for \*Lnewfs\*O.  For a memory file system,
the \*Vspecial-device\*O file
provides only a set of
configuration parameters, including the size of the virtual memory segment
to allocate.  If the
\*Vspecial-device\*O file is omitted, you must specify the segment size.  The
\*Vspecial-device\*O file is usually the primary swap area, because that is
where the file system is backed up when free memory gets low and
the memory supporting the file system has to be paged.
.PP
You can enable \*L/tmp\*O as a memory file system by adding
an entry in the \*L/etc/fstab\*O file. For example, the following line
creates a 10 Megabyte memory file system, mounted on \*L/tmp\*O:
.iS
-s20480		/tmp   mfs rw 1 0
.iE
.PP
.\" Begin Digital-specific information
.\" Paul Shaughnessy requested that the following sentence be added.
Note that the contents of a memory file system are lost whenever a
reboot or unmount is performed.
.\" End Digital-specific information
.\" End Digital-specific information
.PP
You must
be superuser
to use both commands.
.PP
.PP
Note that it is possible
to use \*Lnewfs\*O to create a file system on a device that is
currently part of a logical volume.
This is because the physical disks on which the Logical Volume Manager (LVM)
creates logical volumes are not
protected from access by other programs.
.SH FLAGS
.PP
This section describes the file system dependencies for
the UFS file systems.
.\" and for System V file systems.
.PP
.VL
.\" .LI "\*L-T ufs\*O"
.\" Since OSF/1 supports multiple file system types, a new
.\" flag, \*L-T\*O is used to choose between the ufs and System V file
.\" systems.  If \*L-T\*O
.\" is not specified, a ufs file system is created by default.
.\" 
.LI "\*L-N\*O"
Displays the file system parameters without creating the file system.
.LE
.PP
The following \*Vnewfs-options\*O flags define the general layout policies.
.VL
.LI "\*L-b\*O \*Vblock-size\*O"
The block size of the file system in bytes.  Note that the block size
is fixed at 8KB.
.LI "\*L-f\*O \*Vfrag-size\*O"
The fragment size of the file system in bytes.
.LI "\*L-m\*O \*V%free_space\*O"
The percentage of space reserved from normal users; the minimum
free space threshold (\*Vminfree\*O).  The default value is 10%.
See \*Ltunefs\*O(8) for more details on how to set this option.
.LI "\*L-o\*O \*Vopt_preference\*O"
The file system can either be instructed to try to minimize the \*Vtime\*O
spent allocating blocks, or to try to minimize the \*Vspace\*O
fragmentation on the disk.  If the value of \*Vminfree\*O is less than 10%,
the default is to optimize for space;
if the value of \*Vminfree\*O is greater than or equal to 10%,
the default is to optimize for time.
See \*Ltunefs\*O(8) for more details on how to set this option.
.LI "\*L-a\*O \*Vmaxcontig\*O"
This specifies the maximum number of contiguous blocks that are
laid out before forcing a rotational delay (refer to the \*L\-d\*O option);
that is, the number of blocks that can be combined into a single read 
request (cluster).
The default value is 8.  See \*Ltunefs\*O(8)
for more details on how to set this option.
.LI "\*L-d\*O \*Vrotdelay\*O"
This specifies the expected time (in milliseconds) to service a
transfer completion interrupt and initiate a new transfer on the same disk.
The default is 4 milliseconds.  See \*Ltunefs\*O(8)
for more details on how to set this option.
.LI "\*L-e\*O \*Vmaxbpg\*O"
This indicates the maximum number of blocks any single file can
allocate out of a cylinder group before it is forced to begin
allocating blocks from another cylinder group.
The default is about one-quarter of the total blocks in a cylinder group.
See \*Ltunefs\*O(8) for more details on how to set this option.
.LI "\*L-i\*O \*V#bytes/inode\*O"
This specifies the density of inodes in the file system.
The default is to create an inode for each 2048 bytes of data space.
If fewer inodes are desired, a larger number should be used;
to create more inodes a smaller number should be given.
.LI "\*L-c\*O \*V#cylinders/group\*O"
The number of cylinders per cylinder group in a file system.
The default value is 16.
.LI "\*L-s\*O \*Vsize\*O"
The size of the file system in sectors.
.LE
.PP
The following options override the default sizes for the disk geometry.
The default values are taken from the disk label.
Changing the defaults is useful only if you are using \*Lnewfs\*O
to build (create) a file system whose raw image will eventually be used
on a different type of disk (on a write-once disk, for example).
Note that changing any of these values from their
defaults makes it impossible for \*Lfsck\*O
to find the alternate superblocks if the standard superblock is lost.
.VL
.LI "\*L-r\*O \*Vrevolutions/minute\*O"
The speed of the disk in revolutions per minute.
.LI "\*L-S\*O \*Vsector-size\*O"
The size of a sector in bytes (almost never anything but 512).
.LI "\*L-u\*O \*Vsectors/track\*O"
The number of sectors per track available for data allocation
by the file system.  This does not include sectors reserved at the
end of each track for bad block replacement (see \*L\-p\*O).
.LI "\*L-t\*O \*V#tracks/cylinder\*O"
The number of tracks per cylinder available for data
allocation by the file system.
.LI "\*L-p\*O \*Vspare_sectors/track\*O"
Spare sectors (bad sector replacements) are physical sectors
that occupy space at the end of each track.
They are not counted as part of the sectors per track (\*L\-u\*O)
since they are not available to the file system for data allocation.
.LI "\*L-x\*O \*Vspare_sectors/cylinder\*O"
Spare sectors (bad sector replacements) are physical sectors
that occupy space at the end of the last track in the cylinder.
They are deducted from the sectors per track (\*L\-u\*O)
of the last track of each cylinder
since they are not available to the file system for data allocation.
.LI "\*L-l\*O \*Vhardware_sector_interleave\*O"
Used to describe perturbations in the media format to
compensate for a slow controller.
Interleave is physical sector interleave on each track,
specified as the denominator of the ratio:
sectors read/sectors passed over.
.IP
Thus, an interleave of 1/1 implies contiguous layout, while 1/2
implies logical sector 0 (zero) is separated by one sector from logical
sector 1.
.LI "\*L-k\*O \*Vsector0-skew/track\*O"
Used to describe perturbations in the media format to
compensate for a slow controller.
Track skew is the offset of sector 0 (zero) on track N
relative to sector 0 (zero) on track N-1 on the same cylinder.
.LE
.PP
.\" Begin Digital-specific information
.\" Changed mount_mfs to mfs in this paragraph and list.
The following option applies only to
\*Lmfs\*O:
.VL
.LI "\*L-F \*Vmount-flags\*O"
Used for providing a decimal numeric value to be passed as mount flags
when running as a memory based file system.  This option is primarily
intended for use when \*Lmfs\*O is started by the \*Lmount(8)\*O
command.
.\" End
.LE
.\" .SH "FILE SYSTEM DEPENDENT newfs - UFS FILE SYSTEMS"
.\" .PP
.\" Copyright (c) 1983, 1987 The Regents of the University of California.
.\" All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\" 
.\"	@(#)newfs.8	6.8 (Berkeley) 10/18/89
.\" 
.\" .SH SYNOPSIS
.\" .PP
.\" .sS 
.\" \*Lnewfs\*O [\*L\-N\*O] [\*Vnewfs-options\*O] \*Vspecial-device\*O \*Vdisk-type\*O
.\" .sE 
.\" .SH FLAGS
.\" 
.\" I HAVE MOVED THE THIS SECTION BELOW THE COMMON FLAGS
.\" 
.\" THIS IS WHERE IT ENDS
.\" 
.\" .SH "FILE SYSTEM DEPENDENT newfs - SYSTEM V FILE SYSTEMS"
.\" .PP
.\" .SH SYNOPSIS
.\" .sS
.\" \*Lnewfs -T s5fs\*O [\*Vnewfs-options\*O] \*Vspecial-device\*O [\*Vdisk-type\*O]
.\" .sE 
.\" .SH "FLAGS"
.\" .PP 
.\" The following \*Lnewfs-options\*O flags are specific to the 
.\" System V file system:
.\" .VL
.\" .LI "\*L-b\*O \*Vblock-size\*O"
.\" The block size of the file system in bytes.
.\" Valid block sizes are 512, 1024 and 2048.  The default is 512.
.\" .LI "\*L-s\*O \*Vsize\*O"
.\" The size of the file system in number of block-size blocks.
.\" Begin Digital-specific information CORRECTION
.\" Fixed typo in 'cylinder' per QAR 6104.
.\" .LI "\*L-C\*O \*Vblocks/cylinder\*O"
.\" End Digital-specific information CORRECTION
.\" The number of blocks/cylinder.
.\" .LI "\*L-G\*O \*Vgap\*O"
.\" The rotational gap.
.\" .LI "\*L-I\*O \*Vinodes\*O"
.\" The number of inodes.
.\" .LI "\*L-P\*O \*Vproto_name\*O"
.\" The name of the prototype file to use for creating the file system.
.\" .LE 
.\" .SH DESCRIPTION
.\" .PP 
.\" The \*Lnewfs\*O program waits 10 seconds before starting to construct the
.\" file system.  During this 10-second pause the command can
.\" be aborted by pressing the
.\" .kY Delete
.\" key.
.\" .PP 
.\" The specified special device should either be previously
.\" labeled using \*Ldisklabel\*O(8)
.\" or its disk-type must be in \*L/etc/disktab\*O.
.\" If the block-size and/or the size of the
.\" file system is specified, the specified values override
.\" what is in the disklabel or in
.\" \*L/etc/disktab\*O.
.\" .PP 
.\" If no prototype file is specified, \*Lnewfs\*O builds a file
.\" system with a single empty directory on it.  The boot
.\" program block (block zero) is left uninitialized.
.\" .PP 
.\" If a prototype file is specified, \*Lnewfs\*O takes its directions
.\" from that file.  The prototype file contains tokens
.\" separated by spaces or new-lines.  A sample prototype
.\" specification follows; line numbers have been added to aid
.\" in the explanation:
.\" .oS
.\" \*L1\*C    proto_file
.\" \*L2\*C    512 4872 110
.\" \*L3\*C    d--777 3 1
.\" \*L4\*C    usr d--777 3 1
.\" \*L5\*C    sh  ---755 3 1 /sbin/sh
.\" \*L6\*C    jmp d--755 6 1
.\" \*L7\*C    $
.\" \*L8\*C    b0  b--644 3 1 0 0\
.\" *L9\*C    c0  c--644 3 1 0 0
.\" \*L10\*C   $
.\" \*L11\*C   $
.\" .oE
.\" .PP
.\" Historically line 1, as shown in the preceding example, is the name of
.\" a file to be copied onto block zero as the bootstrap program.  Since
.\" OSF/1 does not support using the System V file system as a root
.\" file system, this file name is ignored by
.\" \*Lnewfs\*O and no data is
.\" copied onto block zero of the specified special device.
.\" .PP
.\" Line 2 specifies the block size of the file system in bytes,
.\" the size of the file system in number of blocks of the just
.\" specified block size and the number of inodes in the file system.
.\" .PP
.\" Lines 3 to 9 tell \*Lnewfs\*O about files and directories to be included
.\" in this file system.  Line 3 specifies the root directory
.\" Lines 4 to 6 and 8 to 9 specify other directories and files.
.\" The $ on line 7 tells \*Lnewfs\*O to end the branch of the file
.\" system it is on, and continue from the next higher directory.
.\" .PP
.\" The \*L$\*O on lines 10 and 11 end the process, since no additional
.\" specifications follow.
.\" .PP 
.\" File specifications give the mode, the user ID, the group ID,
.\" and the initial contents of the file.  Valid syntax for the
.\" contents field depends on the first character of the mode.
.\" .PP 
.\" The mode for a file is specified by a 6-character string.  The
.\" first character specifies the type of the file.  The character
.\" range is \*L-bcd\*O to specify regular, block special, character
.\" special and directory files, respectively.  The second
.\" character of the mode is either \*Lu\*O or \*L-\*O to specify set-user-id
.\" mode or not.  The third is \*Lg\*O or \*L-\*O for the set-group-id mode.
.\" The rest of the mode is a 3-digit octal number giving the
.\" owner, group, and other read, write, execute permissions.  Refer
.\" to \*Lchmod\*O(1) for additional information.
.\" .PP 
.\" Two decimal number tokens come after the mode; they specify
.\" the user and group IDs of the owner of the file.
.\" If the file is a regular file, the next token of the
.\" specification may be a path name from which the contents and
.\" size are copied.  If the file is a block or character special
.\" file, two decimal numbers follow which give the major and
.\" minor device numbers.  If the file is a directory,
.\" \*Lnewfs\*O makes the entries \*L.\*O (dot) and \*L..\*O (dot dot)
.\" and then reads a list of names and
.\" file specifications recursively for the entries in the
.\" directory.  As noted previously, the scan is terminated with the
.\" token \*L$\*O.
.SH ERRORS
.PP
You may receive the following informational messages when using the
\*Lnewfs\*O command:
.oS

Warning: nn sector(s) in last cylinder unallocated

.oE
This message is for UFS only.  It requires no user action. The message
indicates that if nn sectors are
added to the size of the file system, it will be an integral
number of cylinders.  Disk space is not wasted.  Usually,
cylinder boundaries are ignored when partitions are allocated.
.oS

Warning: inode blocks/cyl group (inumber) >= data blocks (dnumber)
in last cylinder group. This implies snumber sector(s) cannot
be allocated

.oE
This message requires no user action. It indicates that
inumber of file system blocks were needed to allocate the inode
table but only dnumber of file system blocks were available in the
last cylinder group. The last cylinder group could not be allocated and
snumber of sectors are actually wasted.
.SH FILES
.PP
.VL
.LI "\*L/usr/sbin/newfs\*O"
Specifies the command path.
.LI "\*L/usr/sbin/mfs\*O"
Specifies the command path.
.LI "\*L/etc/disktab\*O"
Provides disk geometry and file system partition information.
.LE
.SH RELATED INFORMATION
.PP
Commands:  \*Lchmod\*O(1), \*Ldisklabel\*O(8), \*Lfsck\*O(8), \*Ltunefs\*O(8),
\*Lmount\*O(8)
.PP
Files:  \*Ldisktab\*O(4), \*Lfstab\*O(4)
.EQ
delim off
.EN
