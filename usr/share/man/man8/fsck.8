.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: fsck.8,v $ $Revision: 3.5.6.3 $ (DEC) $Date: 1993/12/29 16:23:43 $
.\" 
...\" (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\" OSF/1 Release 1.0.4
...\"
...\"
...\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\"
...\"build rmifdef
.TH fsck 8
.\" Begin Digital-specific information CORRECTION
.\" Added ufs_fsck to the NAME line per requests from QA.
.\" --- , \*Lufs_fsck\*O ---
.\" End Digital-specific information CORRECTION
.\" Begin Digital-specific information 
.\" No system V file system support
.\" Took out \*Ls5fsck\*O from following line.  
.\" End Digital-specific information 
.SH NAME
.PP
\*Lfsck\*O, \*Lufs_fsck\*O \- Check and repair file systems
.SH SYNOPSIS
.PP
.sS
\*L/usr/sbin/fsck\*O [\*Vfs_options\*O] [\*Vfilesystem...\*O]
.\" Begin Digital-specific information
.\"  No sysvfs support for Silver
.\" .PP 
.\" \*L/usr/sbin/fsck\*O [\*Vcommon_options\*O] [\*L\-T ufs\*O | \*Ls5fs\*O [\*Vfs_type_options\*O] [\*Vfile system\*O]]
.sE
.SH DESCRIPTION
.PP
.iX "fsck command"
.\" Begin Digital-specific information CORRECTION
.\" Added ufs_fsck per requests from QA.
.iX "ufs_fsck command"
.\" End Digital-specific information CORRECTION
The \*Lfsck\*O command is a front-end program for the \*Lufs_fsck\*O
.\" and \*Ls5fsck\*O 
program, which checks and repairs UFS
.\" and System V 
file systems.
.\" The \*Lufs_fsck\*O command is the default program.  Information about the 
.\" file system-specific program is described later in this reference page.
.PP
The \*Lfsck\*O program has more consistency checks than
its \*Lcheck, dcheck, fcheck, \*Oand\*L icheck\*O predecessors combined.
.PP
.\" Begin Digital-specific information:
The following message indicates that the system is avoiding a potential
panic by skipping the file system check:
.PP
\*L/dev/rrz2g: skipping filesystem already mounted (read-write) on '/usr'\*O
.PP
The following message indicates that the file system is mounted:
.PP
\*L/dev/rz2g on /usr: Device busy\*O
.\" End Digital-specific information:
.PP
You must
be \*Lroot\*O
to use this command.
.PP
If you do not specify a file system in the command line,
the \*Lfsck\*O command checks the file systems in the \*L/etc/fstab\*O file.
.\"  using the information in the file
.\" to determine the file system-specific program to use.
.\" either \*Lufs_fsck\*O or \*Ls5fsck\*O.
.\" If you specify a file system, the \*Lfsck\*O command also checks the file
.\" system according to the information in the \*L/etc/fstab\*O file.  
.\" If a specified file system is not found in the \*L/etc/fstab\*O file,
.\" it is checked using the \*Lufs_fsck\*O default program.
.\" Different types of file systems can be listed in any
.\" order in the command line.  Each file system-specific \*Lfsck\*O
.\" program is invoked once with the list of appropriate file systems.
.PP
If you specify a file system, the raw device should always be used
because of inconsistencies between the block device and the
buffer cache.
.PP
The \*Lfsck\*O program interactively repairs inconsistent
file system conditions.  If the file system is found to
be consistent, the number of files, blocks used, and free blocks
are reported.  If the file system is inconsistent, you are prompted
before each correction is attempted.
For each corrected inconsistency, one or more lines are displayed,
identifying the file system on which the correction takes place
and the type of correction.  After successfully correcting a file
system, the \*Lfsck\*O program displays the number of files on that file
system, the number of used and free blocks,
and the percentage of fragmentation.
.\" HERE IS WHERE THE ufs_fsck DESCRIPTION SECTION BEGINS
.PP
The default behavior of the
.\" \*Lufs_fsck\*O 
\*Lfsck\*O program is to interactively
check the following UFS file system inconsistencies:
.RS 5
.PP
Blocks claimed by more than one inode or the free map
.PP
Blocks claimed by an inode outside the range of the file system
.PP
Incorrect link counts
.PP
Size checks: directory size not of proper format; partially truncated file
.PP
Bad inode format
.PP
Blocks not accounted for anywhere
.PP
Directory checks: file pointing to unallocated inode; inode number out of
range; \*L\&.\*O (dot) or \*L\&..\*O (dot dot) not the first two entries of
a directory or having the wrong inode number
.PP
Super Block checks: more blocks for inodes than there are in the file system
.PP
Bad free block map format
.PP
Total free block and/or free inode count incorrect
.RE
.PP
If you use the \*L\-p\*O flag, the
.\" \*Lufs_fsck\*O 
\*Lfsck\*O
program noninteractively
attempts to correct specific file system inconsistencies.  The corrections are
made only if they can be done safely.
The
.\" \*Lufs_fsck\*O 
\*Lfsck\*O
program can noninteractively correct the following
file system inconsistencies:
.RS 5
.PP
Unreferenced inodes
.PP
Link counts in inodes that are too large
.PP
Missing blocks in the free map
.PP
Blocks in the free map that are also in files
.PP
Wrong counts in the super-block.
.RE
.PP
If
.\" \*Lufs_fsck\*O 
\*Lfsck\*O
encounters any other inconsistencies, it exits
with an abnormal return status and a subsequent reboot will fail.
.PP
The system makes sure that only a restricted class of innocuous
inconsistencies can occur unless hardware or software failures intervene.
.PP
Note that some of the corrective actions can result in a loss of data.
The amount and severity of data lost can be determined from the
diagnostic output.
.PP
When the system boots, the \*Lfsck\*O program is automatically
run with the \*L\-p\*O flag.  The program reads the
\*L/etc/fstab\*O file to determine which file systems to check.
Only partitions that are specified in the \*Lfstab\*O file as being
mounted ``rw'' or ``ro'' and that have a non-zero pass number are checked.
File systems that have a pass number 1 (usually only the \*Lroot\*O
file system) are checked one at a time.
When pass 1 completes, all the remaining file systems are checked,
with one process running per disk drive.
.PP
If a \*AQUIT\*O signal is sent, \*Lfsck\*O
finishes the file system checks and then exits with an abnormal
return status that causes the automatic reboot to fail.
This is useful if you want to finish the file system checks
during an automatic reboot
but do not want the machine to come up multiuser after the checks complete.
.\" HERE IS WHERE IT ENDS
.PP
If the
.\" \*Lufs_fsck\*O 
\*Lfsck\*O
default program fails (terminates with a
non-zero value), \*Lfsck\*O terminates with the
.\" \*Lufs_fsck\*O program 
exit value.  This ensures that the
auto-reboot dependencies, such as those commonly used in the
run command script, continue to function.
.\" However, if the \*Ls5fsck\*O program fails,
.\" \*Lfsck\*O continues executing any remaining file system-specific
.\" programs before terminating and returning the first
.\" \*Ls5fsck\*O program non-zero exit value.
.PP
If orphaned files or directories (allocated but
unreferenced) are found, you are asked if you want
to reconnect the files and directories
that are not empty by putting them in the
\*Llost+found\*O directory.  The program indicates whether the
file or directory is empty or not empty.
The \*Lfsck\*O program reconnects directories that are not empty and
assigns the inode number for the name.  If the \*Llost+found\*O directory
does not exist, it is created, and if it has
insufficient space, the size is increased. Empty files
and directories are removed unless you specify the \*L\-n\*O
flag.
.\" 
.\" .SH FLAGS
.\" .PP
.\" The \*Lfsck\*O command allows you to specify the type of file system
.\" you want checked.  It also allows you to specify flags that are common to 
.\" the \*Lufs_fsck\*O 
.\" .\" and \*Ls5fsck\*O 
.\" file system-dependent program.
.\" Any flags specified before the \*L\-t\*O and \*L\-T\*O flags are 
.\" passed to the file system-specific program.  Flags that follow the
.\" \*L\-t\*O or \*L\-T\*O flags are passed only to the file
.\" system-dependent program.
.\" .VL
.\" .LI "\*L\-t ufs\*O"
.\" .LI "\*L\-t ufs\*O | \*Ls5fs\*O"
.\" Causes the file systems specified after the \*L\-t\*O flag 
.\" to be checked using the file system-specific program.  If you specify
.\" another \*L\-t\*O flag in the command line, the file systems 
.\" following the second \*L\-t\*O flag are checked with the 
.\" file system-specific program indicated by the second \*L\-t\*O flag.
.\" .LI "\*L\-T ufs\*O"
.\" .LI "\*L\-T ufs\*O | \*Ls5fs\*O"
.\" Causes the flags that follow the \*L\-T\*O flag to be applied only to
.\" the file system-specific program.
.\" .LE
.\" .SS File system-specific fsck - UFS file systems
.\" 
.\" .SS Synopsis
.\" 
.\" .sS
.\" \*Lufs_fsck\*O [\*L\-b\*O \*Vblock\*O] [\*L\-c\*O] [\*L\-l \*Vnumber\*O] [\*L\-m\*O \*Vmode\*O] [\*L\-n\*O] [\*L\-o\*O] [\*L\-p\*O] [\*L\-y\*O] [\*Vfilesystem \&...\*O]
.\" .sE 
.PP
Note that it is possible to check a file system
on a device that is currently part of a logical volume.
This is because physical disks on which the Logical Volume Manager (LVM)
creates logical volumes are not
protected from access by other programs.
.SH FLAGS
.PP
The following flags are interpreted by
.\" \*Lufs_fsck\*O:
\*Lfsck\*O:
.VL
.LI "\*L\-b\*O  \*Vblock\*O"
Uses the specified block number as the super block for the file system.
Block 32 is usually an alternate super block.
.LI "\*L\-c\*O"
If the file system is in the old (static table) format,
converts it to the new (dynamic table) format.
If the file system is in the new format, this flag
converts it to the old format, provided that the old format
can support the file system configuration.  In interactive mode,
\*Lfsck\*O
lists the direction of the conversion
and asks if the conversion should be done. If you answer "no,"
no further operations are done on the file system.
If the \*L\-p\*O flag is specified,
the direction of the conversion is listed and the conversion is
performed without user interaction if possible.
The \*L\-p\*O flag should be used if all the file systems
are being converted simultaneously.
The format of a file system can be determined from the
first line of output from the \*Ldumpfs\*O command.
.LI "\*L\-l\*O  \*Vnumber\*O"
Limits the number of parallel checks to the number specified.
By default, the limit is the number of disks running one process per
disk. If a smaller limit is given, the disks are checked using a
round robin-type schedule, one file system at a time.
.LI "\*L\-m\*O  \*Vmode\*O"
Uses the mode specified in octal as the
permission bits to use when creating the \*Llost+found\*O directory
rather than the default 777.
In particular, systems that do not want to have lost files accessible
by all users on the system should use a more restrictive
set of permissions, such as 700.
.LI "\*L\-n\*O"
Answers "no" to all the prompts except for the ``CONTINUE?'' prompt.
The flag does not
write to the \*Llost+found\*O file in the file system.
If you do not have write permission on the file system,
\*Lfsck\*O defaults to the behavior of the \*L\-n\*) flag.
.LI "\*L\-o\*O"
Causes \*Lfsck\*O to unconditionally check the file system
even if the file system's clean byte is set.  That is, a file
system is checked even if it has been unmounted cleanly.
.LI "\*L\-p\*O"
Noninteractively corrects the following file system inconsistencies:
unreferenced inodes, link counts in inodes that are too large,
missing blocks in the free map, blocks in the free map that are also in files,
and wrong counts in the super-block.
.LI "\*L\-y\*O"
Answers "yes" to all the prompts.
This flag should be used with caution because the integrity of the file
system data can be corrupted by answering "yes" to all the prompts.
.LE
.\" THE DESCRIPTION SECTION HAS BEEN MOVED UNDER THE COMMON 
.\" DESCRIPTION SECTION
.\" .SH Description
.\" ENDS HERE
.\" Begin Digital-specific information
.\" System V file systems nof supported for Silver
.\" 
.\" .SH "FILE SYSTEM-SPECIFIC fsck - SYSTEM V FILE SYSTEMS"
.\" .PP
.\" .SH SYNOPSIS 
.\" .PP
.\" .sS
.\" \*Ls5fsck\*O [\*L\-C\*O] [\*L\-D\*O] [\*L\-f\*O] [\*L\-n\*O] [\*L\-q\*O]
.\" [\*L\-s\*O[\*Vb:c\*O]] [\*L\-S\*O] [\*L\-y\*O]
.\" .sE 
.\" .SH FLAGS
.\" .PP 
.\" The following flags are interpreted by
.\" \*Ls5fsck\*O:
.\" .VL
.\" .LI "\*L\-C\*O"
.\" If \*Lfsck\*O
.\" cannot obtain enough memory to keep its tables,
.\" it uses a temporary file.  If you specify the
.\" \*L\-C\*O
.\" flag, the file named in the next argument is used as the
.\" temporary file, if needed.  Without the
.\" \*L\-C\*O flag, \*Lfsck\*O
.\" prompts you for the name of the temporary file.  The
.\" file chosen should not be on the file system being checked,
.\" and, if it is not a special file or did not already exist,
.\" it is removed when \*Lfsck\*O exits.
.\" .LI "\*L\-D\*O"
.\" Checks directories for bad blocks.  This flag is useful after
.\" system crashes.
.\" .LI "\*L\-f\*O"
.\" Performs a fast check.  This flag checks block and sizes and checks 
.\" the free list.  The free list is reconstructed, if necessary.
.\" .LI "\*L\-n\*O"
.\" Answers "no" to all the prompts except for the ``CONTINUE?'' prompt.  
.\" The flag does not 
.\" write to the \*Llost+found\*O file in the file system.
.\" If you do not have write permission on the file system,
.\" \*Lfsck\*O defaults to the behavior of the \*L\-n\*) flag.
.\" .LI "\*L\-q\*O"
.\" Performs a quiet check.  This flag does not print any size-check 
.\" messages.  Unreferenced FIFOs and symlinks are removed silently.  If
.\" necessary, counts in the super block are automatically
.\" fixed and the free list is salvaged.
.\" .LI "\*L\-s\*O[\*Vb\*O:\*Vc\*O]"
.\" Ignores the actual free list and (unconditionally)
.\" reconstructs a new one by rewriting the super-block of
.\" the file system.  The file system must be unmounted while
.\" this is done.  The \*L\-s\*O
.\" flag allows for the creation of an optimal free-list
.\" organization.  If \*L\-s\*O is specified without values, it uses 
.\" the values specified when the file system was created are used.  If these
.\" values were not specified, then a reasonable default value is used.
.\" You can also specify values with the \*L\-s\*O flag as follows:
.\" .RS 7
.\" .iS
.\" \-s\*VBlocks-per-cylinder\*L:\*VBlocks-to-skip\*O
.\" .iE
.\" .RE
.\" .LI "\*L\-S\*O"
.\" Conditionally reconstructs the free list.  This flag behaves 
.\" like the \*L\-s\*O flag except that the free list is rebuilt only
.\" if there are no discrepancies discovered in the file system.
.\" Using \*L\-S\*O forces a "no" response to all questions asked by
.\" \*Lfsck\*O.  This flag is useful for forcing free list
.\" reorganization on uncontaminated file systems.
.\" .LI "\*L\-y\*O"
.\" Answers "yes" to all prompts.
.\" This flag should be used with caution because the integrity of the file 
.\" system data can be corrupted by answering "yes" to all the prompts.
.\" .LE 
.\" .SH DESCRIPTION
.\" .PP 
.\" The \*Ls5fsck\*O
.\" command checks and interactively repairs inconsistent
.\" conditions for System V file systems.  The \*Ls5fsck\*O
.\" program checks for the following file system inconsistencies:
.\" .RS 5
.\" .PP
.\" Blocks claimed by more than one inode or the free list
.\" .PP
.\" Blocks claimed by an inode or the free list outside the
.\" range of the file system
.\" .PP
.\" Incorrect link counts
.\" .PP
.\" Size checks: Incorrect number of blocks, directory size not 16-byte aligned
.\" .PP
.\" Bad inode format
.\" .PP
.\" Blocks not accounted for anywhere
.\" .PP
.\" Directory checks: File pointing to unallocated inoder, inode number out 
.\" of range
.\" .PP
.\" Super Block checks: More than 65536 inodes, more blocks for inodes than 
.\" there are in the filesystem
.\" .PP
.\" Bad free block list format
.\" .PP
.\" Total free block and/or free inode count incorrect
.\" .RE 
.SH EXAMPLES
.PP
The following is an example of an \*L/etc/fstab\*O file that is used in
the examples in this section:
.iS
/dev/rz2a	/	ufs rw 1 1
/dev/rz0g	/usr	ufs rw 1 2
/dev/rz2b	swap1	ufs sw 0 2
/dev/rz0b	/public	ufs sw 0 2
/dev/rz2g	/var	ufs rw 1 2
/dev/rz3c	/usr/users	ufs rw 1 2
.iE
.PP
The following command checks all the
.\" and System V 
file systems in
the \*L/etc/fstab\*O file
.\" using the file system-specific programs indicated by 
.\" the \*L/etc/fstab\*O entries 
but makes no corrections:
.iS
# fsck \-n
.iE
.PP
The following example checks a file system
.\" and a System V file system that are found 
found in the \*L/etc/fstab\*O file
.\"  using the \*Lufs_fsck\*O and \*Ls5fsck\*O program 
and checks a file system that is not found in the \*L/etc/fstab\*O
file:
.\" using the default \*Lufs_fsck\*O program:
.iS
# fsck  /dev/rrz3c  /dev/rrz1a
.iE
.\" .PP
.\" The following example checks all the UFS file systems in the
.\" \*L/etc/fstab\*O file using the \*Lufs_fsck\*O program, and it performs a fast
.\" check on all the System V file systems in the \*L/etc/fstab\*O file 
.\" using the \*Ls5fsck\*O program:
.\" .iS
.\" # fsck \-T s5fs \-f
.\" .iE
.PP
The following command noninteractively checks the file systems in the
\*L/etc/fstab\*O file:
.\" using the \*Lufs_fsck\*O program:
.iS
# fsck \-p\*O
.iE
.\" .PP
.\" The following command noninteractively checks all the UFS file systems in the
.\" \*L/etc/fstab\*O file using the \*Lufs_fsck\*O program, and it checks 
.\" the \*L/dev/rz3a\*O System V file system using the \*Ls5fsck\*O program
.\" but does not make any corrections:
.\" .iS
.\" # fsck \-t ufs \-t s5fs /dev/rrz3a \-T ufs \-p \-T s5fs \-n 
.\" .iE
.SH FILES
.PP
.VL
.LI "\*L/usr/sbin/fsck\*O"
Specifies the command path
.LI "\*L/usr/sbin/ufs_fsck\*O"
Specifies the command path
.\" .LI "\*L/usr/sbin/s5fsck\*O"
.\" Specifies the command path
.LI "\*L/etc/fstab\*O"
Contains the default list of file systems to check
.LE
.SH RELATED INFORMATION
.PP
Commands:  \*Lnewfs\*O(8)
.EQ
delim off
.EN
