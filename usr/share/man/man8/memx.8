.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: memx.8,v $ $Revision: 3.2.2.3 $ (DEC) $Date: 1992/07/22 12:31:56 $
.\" 
.\" SCCSID: @(#)memx.8	9.1	4/15/91
.TH memx 8
.SH NAME
.PP
memx \- memory exerciser
.SH SYNOPSIS
.PP
.B /usr/field/memx
.B \-s
.B [
.B \-h
.B ] [
.BI \-o file
.B ] [
.BI \-t i
.B ] [
.BI \-m j
.B ] [
.BI \-p k
.B ]
.SH DESCRIPTION
.PP
.iX "memx exerciser"
.iX "memory" "testing"
The \*Lmemx\*O memory exerciser spawns processes to
exercise memory
by writing and reading three patterns: 1's and 0's, 0's and 1's,
and a random pattern.
.PP
You specify the number of processes to spawn
and the size of memory to be tested by each
process. If the \*Lshmx\*O
Shared Memory exerciser is present, it will be the first process
spawned; the remaining processes are standard memory exercisers.  The
\*Lmemx\*O exerciser will run until the process receives a
.kY "CTRL-C"
or a kill \-15 \f2pid\f1 command.
.PP
A logfile is created in \*L/usr/field\*O
for you to examine and then remove.  If there are errors
in the logfile, check the syslog
file where the driver and kernel error
messages are saved.
.SH FLAGS
.PP
.iX "memx" "options"
The \*Lmemx\*O options are as follows:
.IP \f3\-h\f1 1i
Print the help message for the \*Lmemx\*O command.
.IP \f3\-s\f1 1i
Disables automatic shared memory testing.
.IP \f3\-o\f2file\f1 1i
Save diagnostic output in \f2file\f1.
.IP \f3\-t\f2i\f1 1i
Run time in minutes (\f2i\f1).  The default is to run until
the process receives a
.kY "CTRL-C"
or a kill \-15 \f2pid\f1 command.
.IP \f3\-m\f2j\f1 1i
The memory size in bytes (\f2j\f1) to be tested by each spawned
process.  Must be greater than 4095.  The default is
(total-memory)/20.
.IP \f3\-p\f2k\f1 1i
The number of processes to spawn (\f2k\f1).  The default is 20.
The maximum is also 20.
.SH RESTRICTIONS
.PP
.iX "memx exerciser" "restricted"
The \*Lmemx\*O exerciser is restricted by the size
of the available swap space.  The size of the swap space and
the size of internal memory available determines how
many processes can run on the system.  For example,
If there is 16 Mbytes
of swap space and 16 Mbytes of memory, all of the
swap space would be used if all 20 spawned memory exercisers
are running.  In that event, no new processes would be able to run.
On systems with large amounts of memory and small swap
space, you must restrict the number of memory exercisers and/or the
size of memory being tested.
.PP
If there is a need to run a system exerciser over an NFS link or on a diskless
system there are some restrictions.  For exercisers
that need to write into a file
system, such as \*Lfsx\*O(8), the target file
system must be writable by root.  Also,
the directory in which any
of the exercisers are executed must be writable by root because temporary
files are written into the current directory.  These latter restrictions are
sometimes difficult to overcome because often NFS file systems are
mounted in a way that prevents root from writing into them.  Some of the
restrictions may be overcome by copying the exerciser to another
directory and then executing it.
.PP
You should specify the \*L\-s\*O option to disable automatic
shared memory testing, which is not supported.
.SH EXAMPLES
.PP
.iX "memx exerciser" "examples"
The following example tests all of memory by running 20
spawned processes until a
.kY "CTRL-C"
or kill \-15 \f2pid\f1 command is received:
.oS
% /usr/field/memx
.oE
The following example runs 10 spawned processes, memory size 500,000
bytes, for 180 minutes in the background.
.oS
% /usr/field/memx \-t180 \-m500000 \-p10 &
.oE
.SH RELATED INFORMATION
.PP
cmx(8), fsx(8), shmx(8), tapex(8), diskx(8)
.EQ
delim off
.EN
