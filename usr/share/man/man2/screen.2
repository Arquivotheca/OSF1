.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.TH screen 2
.SH NAME
.PP
\*Lscreen\*O \- Gateway packet screening facility
.SH SYNOPSIS
.PP
.sS
\*L#include <sys/types.h>
.nL
#include <net/gw_screen.h>\*O
.PP
\*Lint \*Vmode\*L;
.nL
struct screen_data sdata;
.nL
struct screen_stats sstats;\*O
.PP
\*Lioctl(s, SIOCSCREENON, (caddr_t)&\*Vmode\*L);
.nL
ioctl(s, SIOCSCREEN, (caddr_t)&\*Vsdata\*L);
.nL
ioctl(s, SIOCSCREENSTATS, (caddr_t)&\*Vsstats\*L);\*O
.sE
.SH PARAMETERS
.PP
The interface to the
gateway screen facility is a set of ioctl
requests.  All these requests are meant to be used on a file descriptor
created by the \*Lsocket(\|)\*O system call.
.VL
.LI "\*LSIOCSCREENON\*O"
The \*Vmode\*O parameter, passed by reference, can be \*LSCREENMODE_OFF\*O,
\*LSCREENMODE_ON\*O, or \*LSCREENMODE_NOCHANGE\*O. Upon completion of the
system call, the \*Vmode\*O parameter contains the previous value of the screen
mode. Unprivileged users may only use the \*LSCREENMODE_NOCHANGE\*O
request.
.LI "\*LSIOCSCREEN\*O"
This is the most important request and is described below.
Only the super-user may make this request.
.LI "\*LSIOCSCREENSTATS\*O"
Returns, by reference using the \*Vsstats\*O
parameter, statistics in this structure:
.\"
.nP
.oS
struct screen_stats {
 u_long	ss_packets;	/* total packets screened */
 u_long	ss_nobuffer;	/* dropped, buffer was full */
 u_long	ss_accept;	/* total accepted */
 u_long	ss_reject;	/* total rejected */
 u_long	ss_badsync;	/* dropped, user was out of sync */
 u_long	ss_stale;	/* dropped, too old */
};
.oE
.LE
.SH DESCRIPTION
.PP
.iX "gateway screening"
.iX "gateway screen facility"
.iX "network packets" "and the gateway screen facility"
.iX "screen system call"
The gateway screen
facility allows a user-level process to decide which network packets should be
forwarded by the kernel (when the system is acting as a gateway).
When the screen mode is set to ``off,'' all packets are forwarded normally;
when the screen mode is set to ``on,'' all packets that would be forwarded
must be approved through the use of this facility.
.SS Use of SIOCSCREEN
The \*LSIOCSCREEN\*O request is used in the main loop of
the user-level daemon.  Each time it is called, it returns
(by reference using the \*Vsdata\*O parameter) a \*Lscreen_data\*O structure
containing a prefix of a packet (normally containing the
packet headers) and some additional information:
.oS
struct screen_data_hdr {
 short	sdh_count;	/* length of entire record */
 short	sdh_dlen;	/* bytes of packet header */
 u_int	sdh_xid;	/* transaction ID */
 struct timeval	sdh_arrival;	/* time packet arrived */
 short	sdh_family;	/* address family */
 int	sdh_action;	/* disposition for packet */

#define	SCREEN_ACCEPT	0x0001	/* Accept this packet */
#define	SCREEN_DROP	0x0000	/* Do not accept this packet */
#define	SCREEN_NOTIFY	0x0002	/* Notify sender of failure */
#define	SCREEN_NONOTIFY	0x0000	/* Do not notify sender */
};

struct screen_data {
 struct screen_data_hdr sd_hdr;
 char sd_data[SCREEN_DATALEN];	/* sd_dlen bytes of packet header */
};

#define	sd_count	sd_hdr.sdh_count
#define	sd_dlen		sd_hdr.sdh_dlen
#define	sd_xid		sd_hdr.sdh_xid
#define	sd_action	sd_hdr.sdh_action
#define	sd_arrival	sd_hdr.sdh_arrival
#define	sd_family	sd_hdr.sdh_family
.oE
.PP
The \*Vsd_family\*O field indicates the protocol family (for example,
\*LAF_INET\*O) under which the packet is being handled; there is no
protocol-specific code in the kernel implementation of the
gateway screen.  Either the \*Vsd_family\*O
field should be initialized to a specific family before the
request is invoked (indicating that the user process is willing
to handle requests for this family only), or it should be set to
\*LAF_UNSPEC\*O (indicating that the user process is willing to handle all
protocols).
.PP
The user-level process examines the packet headers and decides whether or not
the packet should be forwarded.  It communicates this decision to the
kernel by filling in the \*Vsd_action\*O field in the \*Lscreen_data\*O
structure with either \*LSCREEN_ACCEPT\*O, \*LSCREEN_DROP\*O, or
\*LSCREEN_DROP\*O bit-wise ORed with \*LSCREEN_NOTIFY\*O;
the last choice causes the gateway to drop the packet but send
an error packet to the source host (if this is supported in the
protocol family). The process then passes that structure back to the kernel in
another invocation of the \*LSIOCSCREEN\*O request.  That \*Vioctl\*O
call then blocks until a new packet is available, at which point the
cycle repeats.
.PP
Note that two actions are being carried out through one system call, and that
each cycle starts mid-way through a system call.  Thus, the first time a daemon
uses this \*Vioctl\*O request, it has to pass in a no-op decision to complete
the first (half) cycle. The kernel matches incoming decisions with pending
packets by comparing both the transaction id (\*Vsd_xid\*O)
field, and the user's process id (so one process cannot provide
decisions on packets presented to a different process).
Decisions must be supplied in first-in, first-out order; decisions
supplied in the wrong order may result in packets being dropped.
.SH RETURN VALUES
.PP
If an error has occurred, a value of \-1 is returned and
\*Lerrno\*O is set to indicate the error.
.SH ERRORS
.PP
In addition to those error codes described for \*Lioctl(\|)\*O,
the \*LSIOCSCREEN\*O request can also return:
.VL 1i
.LI "[ENOPROTOOPT]"
If the screen mode is set to \*LSCREENMODE_OFF\*O, the \*LSIOCSCREEN\*O
request is meaningless.
.LI "[EACCES]"
If an operation reserved for the superuser is attempted by
a non-superuser.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lioctl\*O(2)
.PP
Daemons:
\*Lscreenmode\*O(8), \*Lscreend\*O(8), \*Lscreenstat\*O(8)
.EQ
delim off
.EN
