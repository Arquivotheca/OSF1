.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: recv.2,v $ $Revision: 3.5.5.2 $ (DEC) $Date: 1993/10/04 17:52:09 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"build rmifdef
.\"
.\"
.TH recv 2
.SH NAME
\*Lrecv\*O \- Receives messages from connected sockets
.SH SYNOPSIS 
.sS
\*L#include <sys/types.h>
.sp .4v
\*L#include <sys/socket.h>\*O
.sp .4v
\*Lint recv\*O (\*L
.nL
	\*Lint \*Vsocket\*L,
.nL
	\*Lchar *\*Vbuffer\*L,
.nL
	\*Lint \*Vlength\*L,
.nL
	int \*Vflags \*L);
.sE 
.SH PARAMETERS
.\"from TP "  
.VL 
.LI "\*Vsocket"
\*OSpecifies
the socket descriptor.
.\"from TP "  
.LI "\*Vbuffer" 
\*OPoints to
an address where the message should be placed.
.\"from TP "  
.LI "\*Vlength" 
\*OSpecifies
the size of the address pointed to
by the \*Vbuffer\*O parameter.
.\"from TP "  
.LI "\*Vflags" 
\*OPoints to a value controlling the message reception.
The
\*Vflags\*O
parameter is formed
by logically ORing one or more of the following values,
defined in the \*Lsys/socket.h\*O file:
.wH .RS  Can not be used in nested lists
.\"from TP .5i"  
.VL
.LI "MSG_PEEK" 
Peek at incoming message.  The data is treated
as unread and the next \*Lrecv(\|)\*O function (or similar function)
will still
return this data.
.\"from TP "  
.LI "MSG_OOB" 
Process
out-of-band data.
.LE
.LE 
.SH DESCRIPTION
.iX "recv function"
.iX "socket" "receiving messages from connected"
.iX "messages" "receiving from connected sockets"
.PP 
The \*Lrecv(\|)\*O function receives messages from
a connected socket.  The
\*Lrecvfrom(\|)\*O and
\*Lrecvmsg(\|)\*O functions
receive messages from both connected and unconnected sockets; however,
they are usually used for unconnected sockets only.
.PP 
The \*Lrecv(\|)\*O function returns the length of the message.
If a message is too long to fit in the supplied buffer, excess bytes
may be truncated depending on the
\*Otype of socket that issued
the message.
.PP 
If no messages are available at the socket, the \*Lrecv(\|)\*O
function waits for a message to arrive, unless the socket is
\*Ononblocking.  If a socket
is nonblocking,
\*Lerrno\*O
is set to [EWOULDBLOCK].
.PP 
\*OUse the \*Lselect(\|)\*O function to
determine when more data arrives.
.SH NOTES
The
\*Lrecv(\|)\*O
function is identical to the
\*Lrecvfrom(\|)\*O
function with a zero-valued
\*Vaddress_len\*O
parameter, and to the
\*Lread(\|)\*O
function if no flags are used.
For that reason, the
\*Lrecv(\|)\*O
function is disabled when 4.4BSD behavior is enabled (that is, when the
_SOCKADDR_LEN compile-time option is defined).
.SH RETURN VALUES
.PP 
Upon successful completion, the \*Lrecv(\|)\*O function returns
the length of the message in bytes.
Otherwise,
a value of -1 is returned, and \*Lerrno\*O is set
to indicate the error.
.SH ERRORS
.PP 
If the \*Lrecv(\|)\*O function fails,
\*Lerrno\*O
may be set to one of the following values:
.\"from TP 1i"  
.VL 1i
.LI "[EBADF]"
The \*Vsocket\*O parameter is not valid.
.\"from TP 1i"  
.LI "[ENOTSOCK]" 
The \*Vsocket\*O parameter refers to a file,
not a socket.
.\"from TP 1i"  
.LI "[EWOULDBLOCK]" 
The socket is marked nonblocking, and no
data is waiting to be received.
.\"from TP 1i"  
.LI "[EINTR]" 
A signal interrupted the \*Lrecv(\|)\*O function
before any data was available.
.\"from TP 1i"  
.LI "[EFAULT]" 
The data was directed to be received into a nonexistent
or protected part of the process address space.  The \*Vbuffer\*O
parameter is
invalid.
.LE 
.SH RELATED INFORMATION
.PP 
Functions:
\*Lrecvfrom\*O(2),
\*Lrecvmsg\*O(2),
\*Lsend\*O(2),
\*Lsendmsg\*O(2),
\*Lsendto\*O(2),
\*Lselect\*O(2),
\*Lshutdown\*O(2),
\*Lsocket\*O(2),
\*Lread\*O(2),
\*Lwrite\*O(2)
.iX "recv function"
.EQ
delim off
.EN
