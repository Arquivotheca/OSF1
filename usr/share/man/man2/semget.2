.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: semget.2,v $ $Revision: 3.5.5.2 $ (DEC) $Date: 1993/10/04 18:03:54 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"build rmifdef
.\"
.\"
.TH semget 2
.SH NAME
\*Lsemget\*O \- Returns (and possibly creates) a semaphore ID
.SH SYNOPSIS 
.sS
.sp .4v
\*L#include\*O <\*Lsys/types.h\*O>\*L
.nL
\*L#include\*O <\*Lsys/ipc.h\*O>\*L
.nL
\*L#include\*O <\*Lsys/sem.h\*O>\*L
.nL
\*Lint semget\*O(\*L
.nL
	\*Lkey_t\*O \*Vkey\*O,\*L
.nL
	\*Lint\*O \*Vnsems\*O,\*L
.nL
	\*Lint\*O \*Vsemflg\*O):\*L
.sE 
.SH PARAMETERS
.PP
.\"from TP "  
.VL 
.LI "\*Vkey\*O"
Specifies the key that identifies the semaphore set.  The IPC_PRIVATE key can
be used to assure the return of a new, unused, entry in the semaphore table.
.\"from TP "  
.LI "\*Vnsems\*O" 
Specifies the number of semaphores to create in the semaphore set.
.\"from TP "  
.LI "\*Vsemflg\*O" 
Specifies the creation flags.  Possible values are:
.wH .RS  Can not be used in nested lists
.\"from TP .5i"  
.VL
.LI "IPC_CREAT" 
If the key does not
exist, the
\*Lsemget(\|)\*O function
creates a semaphore set using the given key.  If the key
does exist, forces an error notification.
.\"from TP "  
.LI "IPC_EXCL" 
If the key already exists, the
\*Lsemget(\|)\*O function
fails and returns an error notification.
.wH .RE
.\"from TP "  
.LI "\" 
The low-order nine bits of
\*Vsem_perm.mode\*O
are set equal to the low-order
nine bits of
\*Vsemflg\*O.
.LE
.LE 
.SH DESCRIPTION
.iX "semget function"
.iX "semaphore set" "returning the ID for"
.iX "semaphore set" "creating"
.PP 
The
\*Lsemget()\*O
function returns (and possibly creates) the ID for a semaphore set
identified by the
\*Vkey\*O parameter.
Semaphores are used primarily for
synchronization between processes.
.PP 
The sets of semaphores are implemented collectively as a system-wide table, with
each set being an entry in the table.  The returned ID
identifies the semaphore set's entry in the table.  Each set of semaphores is
implemented using the
\*Lsemid_ds\*O
data structure.  This structure defines an array whose members are
the individual semaphores in the set.
.PP 
Each individual semaphore within a set is implemented
using the
\*Lsem\*O
structure.
.PP 
The \*Lsemget(\|)\*O
function creates a semaphore ID, its associated
\*Lsemid_ds\*O
data structure, and
\*Vnsems\*O
individual semaphores if one of the following is true:
.\"from TP 4"  
.ML
.LI
The \*Vkey\*O
parameter is IPC_PRIVATE.
.\"from TP "  
.LI
The \*Vkey\*O
parameter does not already exist as an entry in the semaphore table
and the IPC_CREAT flag is set.
.LE 
.PP
After creating a semaphore ID, the
\*Lsemget(\|)\*O function
initializes the
\*Lsemid_ds\*O
structure associated with the ID as follows:
.\"from TP 4"  
.ML
.LI
The \*Vsem_perm.cuid\*O
and
\*Vsem_perm.uid\*O fields
are set equal to the effective user ID
of the calling process.
.\"from TP "  
.LI
The \*Vsem_perm.cgid\*O
and
\*Vsem_perm.gid\*O fields
are set equal to the
effective group ID of the calling process.
.\"from TP "  
.LI
The low-order nine bits of
\*Vsem_perm.mode\*O
are set equal to the low-order nine bits of
\*Vsemflg\*O.
.\"from TP "  
.LI
The \*Vsem_nsems\*O
field is set equal to the value of
\*Vnsems\*O.
.\"from TP "  
.LI
The \*Vsem_otime\*O field
is set equal to 0 (zero) and the
\*Vsem_ctime\*O field
is set equal to the current time.
.LE 
.PP
The
\*Lsemget(\|)\*O
function
does not initialize the
\*Lsem\*O
structure associated with each semaphore in the set.  The
individual semaphores are initialized by using the
\*Lsemctl(\|)\*O function
with the SETVAL or SETALL command.
.SH RETURN VALUES
.PP
Upon successful completion, a semaphore identifier is returned.
If the \*Lsemget()\*O function fails, a value of -1 is returned
and \*Lerrno\*O is set to indicate the error.
.SH ERRORS
If the \*Lsemget()\*O function fails,
\*Lerrno\*O
may be set to one of the following values:
.\"from TP 1i"  
.VL 1i
.LI "[EACCES]"
A semaphore ID already exists for the
\*Vkey\*O parameter,
but operation
permission as specified by the low-order nine bits of the
\*Vsemflg\*O parameter
was not granted.
.\"from TP 1i"  
.LI "[EINVAL]" 
The value of the
\*Vnsems\*O parameter
is less than or equal to 0 (zero) or greater than
the system-defined limit.  Or, a semaphore ID already exists for the
\*Vkey\*O parameter,
but the number of semaphores in the set
is less than the
\*Vnsems\*O parameter,
and the
\*Vnsems\*O parameter
is not equal to 0 (zero).
.\"from TP 1i"  
.LI "[ENOENT]" 
A semaphore ID does not exist for the
\*Vkey\*O parameter
and IPC_CREAT was not set.
.PP
.\"from TP 1i"  
.LI "[ENOSPC]" 
An attempt to create a new semaphore ID exceeded the system-wide
limit on the size of the semaphore table.
.\"from TP 1i"  
.LI "[EEXIST]" 
A semaphore ID already exists for the
\*Vkey\*O parameter,
but IPC_CREAT and IPC_EXCL were used for the
\*Vsemflg\*O parameter.
.LE 
.SH RELATED INFORMATION
.PP 
Functions:
\*Lsemctl\*O(2),
\*Lsemop\*O(2)
.PP
Data structures:
\*Lsemid_ds\*O(4)
.iX "semget function"
.EQ
delim off
.EN
