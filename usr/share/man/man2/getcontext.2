.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: getcontext.2,v $ $Revision: 1.1.2.4 $ (DEC) $Date: 1993/12/08 15:27:37 $
.\"
.TH getcontext 2
.SH NAME
.PP
\*Lgetcontext\*O, \*Lsetcontext\*O \- provides user level context switching
.SH SYNOPSIS
.PP
.sS
\*L#include  <ucontext.h>\*O
.PP
\*Lint  getcontext (
.nL
         ucontext_t \*V*ucp\*L );\*O

\*Lint  setcontext (
.nL
         ucontext_t \*V*ucp\*L );\*O
.sE
.SH PARAMETERS
.PP
.VL 4m
.LI "\*Vucp\*O"
Provides a pointer to a \*Lucontext\*O structure.
.LE
.SH DESCRIPTION
.PP
Using both the \*Lgetcontext\*O and \*Lsetcontext\*O
.ix "getcontext function"
.iX "setcontext function"
functions enables you to initiate user level control switching
multiple threads of control within a single process.
.PP
To initialize the structure pointed to by the \*Lucp\*O parameter
to the current user context of the calling process, you must use
the \*Lgetcontext\*O function.  The format of the user context
is defined by \*Lucontext\*O(5) file format.  The \*Lucontext\*O file format
contains the signal mask, execution stack, and machine registers.
.PP
To restore the state of the user context pointed to by the
\*Lucp\*O parameter, you must use the \*Lsetcontext\*O function.  Requesting
the \*Lsetcontext\*O function does not return any value and
program execution continues from the point specified by the
context structure passed to the \*Lsetcontext\*O function.
The context structure must be created by a call to the
\*Lgetcontext\*O function, or it must be
passed as the third argument to a signal handler as described by
the \*Lsigaction\*O function.
When a context structure is created by the \*Lgetcontext\*O
structure, execution of the program continues as if the
corresponding call of the \*Lgetcontext\*O function had just
returned.
.SH RETURN VALUES
.PP
The \*Lsetcontext\*O function does not return upon success.
For the \*Lgetcontext\*O function, zero (0) is returned upon
success.  Upon failure, a value of -1 is returned and \*Lerrno\*O
is set to indicate the error.
.SH RESTRICTIONS
.PP
On a signal handler's execution, the current user context is
saved and a new context is created by the kernel.  If the process
leaves the signal handler using the \*Llongjmp\*O routine, the
original context cannot be restored, and future calls to the
\*Lgetcontext\*O function are not predictable.  Signal handlers
should use the \*Lsiglongjmp\*O or \*Lsetcontext\*O function.
.SH RELATED INFORMATION
.PP
Functions: \*Lsigaction\*O(2), \*Lsigaltstack\*O(2), \*Lsigprocmask\*O(2).
.PP
Files: \*Lucontext\*O(5).
.EQ
delim off
.EN
