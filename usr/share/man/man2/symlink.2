.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: symlink.2,v $ $Revision: 3.5.5.2 $ (DEC) $Date: 1993/10/04 18:32:49 $
.\"
.\" (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 Release 1.0.4
.\"build rmifdef
.\"
.\"
.TH symlink 2
.SH NAME
.PP
\*Lsymlink\*O \- Makes a symbolic link to a file
.SH SYNOPSIS 
.PP
.sS
\*L#include <unistd.h>
.sp .4v
\*Lint symlink (
.nL
	const char \*V*path1\*L,
.nL
	const char \*V*path2 \*L);
.sE 
.SH PARAMETERS
.PP
.VL 
.LI "\*Vpath1\*O"
Specifies the contents of the symbolic link to create.
.\"from TP "  
.LI "\*Vpath2\*O" 
Names the symbolic link to be created.
.LE 
.SH DESCRIPTION
.PP
.iX "symlink function"
.iX "file" "making symbolic links"
.iX "link" "making symbolic link to a file"
.PP 
The \*Lsymlink(\|)\*O function creates a symbolic link with
the name specified by the \*Vpath2\*O parameter which refers to the
file named by the \*Vpath1\*O parameter.
.PP 
Like a hard link (described in the \*Llink(\|)\*O function),
a symbolic link allows a file to have multiple names. The presence
of a hard link guarantees the existence of a file, even after the
original name has been removed.
A symbolic link provides no such assurance;
in fact, the file named by the \*Vpath1\*O parameter need not exist
when the link is created.  Unlike hard links, a symbolic link can cross file
system boundaries.
.PP 
When a component of a pathname refers to a symbolic link rather
than a directory, the pathname contained in the symbolic link is resolved.
If the pathname in the symbolic link starts with a / (slash), the symbolic
link pathname is resolved relative to the process root directory.
If the pathname in the symbolic link does not start with a / (slash),
the symbolic link pathname is resolved relative to the directory that
contains the symbolic link.
.PP 
If the symbolic link is the last component of the original
pathname, remaining components of the original pathname are
appended to the contents of the link and pathname resolution continues.
.PP 
The symbolic link pathname may or may not
be traversed, depending on which function is being performed.
Most functions traverse the link.
.PP 
The functions which refer only to the symbolic link itself, rather
than to the object to which the link refers, are:
.\"from TP 1i"  
.VL 1i
.LI "\*Llink(\|)\*O"
An error is returned if a symbolic link is named by the \*Vpath2\*O
parameter.
.\"from TP "  
.LI "\*Llstat(\|)\*O" 
If the file specified is a symbolic link, the status of the link
itself is returned.
.\"from TP "  
.LI "\*Lmknod(\|)\*O" 
An error is returned if a symbolic link is named as the
\*Vpath\*O parameter.
.\"from TP "  
.LI "\*Lreadlink(\|)\*O" 
This call applies only to symbolic links.
.\"from TP "  
.LI "\*Lremove(\|)\*O" 
A symbolic link can be removed by invoking the \*Lremove(\|)\*O function.
.\"from TP "  
.LI "\*Lrename(\|)\*O" 
If the file to be renamed
is a symbolic link, the symbolic link
is renamed.  If the new name
refers to an existing symbolic link, the symbolic link is destroyed.
.\"from TP "  
.LI "\*Lrmdir(\|)\*O" 
An error is returned if a symbolic link is named as the
\*Vpath\*O parameter.
.\"from TP "  
.LI "\*Lsymlink(\|)\*O" 
An error is returned if the
symbolic link named by the \*Vpath2\*O parameter already exists.
A symbolic link can be created that refers to another symbolic link;
that is, the \*Vpath1\*O parameter can refer to a symbolic link.
.\"from TP "  
.LI "\*Lunlink(\|)\*O" 
A symbolic link can be removed by invoking \*Lunlink(\|)\*O.
.LE 
.PP 
Search access to the symbolic link is required to traverse the
pathname contained therein.  Normal permission checks are made on
each component of the symbolic link pathname during its resolution.
.SH NOTES
.PP
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Trial use
.LE
.SH RETURN VALUES
.PP 
Upon successful completion, the \*Lsymlink(\|)\*O function returns
a value of 0 (zero). If the \*Lsymlink(\|)\*O function fails, a value of
-1 is returned and \*Lerrno\*O is set to indicate
the error.
.SH ERRORS
.PP 
If the \*Lsymlink(\|)\*O function fails,
\*Lerrno\*O
may be set to one of the following values:
.\"from TP 1i"  
.VL 1i
.LI "[EEXIST]"
The path specified by the
\*Vpath2\*O parameter already exists.
.\"from TP 1i"  
.LI "[EACCES]" 
The requested operation requires writing in a
directory with a mode that denies write permission,
or search permission is denied on a component of
\*Vpath2\*O.
.\"from TP 1i"  
.LI "[EROFS]" 
The requested operation requires writing in a directory
on a read-only file system.
.\"from TP 1i"  
.LI "[ENOSPC]" 
The directory in which the entry for the symbolic
link is being placed cannot be extended because there is no space
left on the file system containing the directory.
.LI "[ENOSPC]"
The new symbolic link cannot be created because there is no space left
on the file system which would contain the link.
.LI "[ENOSPC]"
There are
no free inodes on the file system on which the file is being created.
.LI "[ENOSYS]
The operation is not applicable for this file system type.
.\"from TP 1i"  
.LI "[EDQUOT]" 
The directory in which the entry for the symbolic
link is being placed cannot be extended because the user's quota of
disk blocks on the file system containing the directory has been exhausted.
.\"from TP 1i"  
.LI "[ENOENT]" 
The
\*Vpath2\*O
parameter points to a null pathname, or a component of
\*Vpath2\*O
does not exist.
.\"from TP 1i"  
.LI "[ENOTDIR]" 
A component of
\*Vpath2\*O
is not a directory.
.\"from TP 1i"  
.LI "[ENAMETOOLONG]" 
The length of the
\*Vpath1\*O
parameter
or
\*Vpath2\*O
parameter
exceeds
PATH_MAX,
or a pathname component
of
\*Vpath2\*O
is longer than
NAME_MAX while {_POSIX_NO_TRUNC} is in effect.
.LI "[ELOOP]"
Too many symbolic links are found in translating \*Vpath2\*O.
.LE 
.SH RELATED INFORMATION
.PP 
Functions:
\*Llink\*O(2),
\*Lreadlink\*O(2),
\*Lunlink\*O(2)
.PP 
Commands: \*Lln\*O(1)
.iX "symlink function"
.EQ
delim off
.EN
