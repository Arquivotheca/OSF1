.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: chmod.2,v $ $Revision: 3.5.5.3 $ (DEC) $Date: 1994/01/11 19:11:28 $
.\"
.\" (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 Release 1.0.4
.\"build rmifdef
.\"
.\"
.TH chmod 2
.SH NAME
.PP
\*Lchmod\*O, \*Lfchmod\*O \- Changes file access permissions
.SH SYNOPSIS
.PP
.sS
\*L#include <sys/mode.h>
.sp .4v
\*L#include <sys/types.h>
.sp .4v
\*L#include <sys/stat.h>
.sp .4v
\*Lint chmod (
.nL
	const char *\*Vpath\*L,
.nL
	mode_t \*Vmode \*L);
.sp .4v
\*Lint fchmod (
.nL
	int \*Vfiledes\*L,
.nL
	mode_t \*Vmode \*L);
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vpath\*O"
Specifies the full pathname of the file.
If the
\*Vpath\*O parameter refers to a symbolic link, the
\*Lchmod(\|)\*O function changes access permissions on the file
specified by the symbolic link.
.\" from TP  
.LI "\*Vfiledes\*O"
Specifies the file descriptor of an open
file.
.\" from TP  
.LI "\*Vmode\*O"
Specifies the bit pattern which determines the access
permissions.
.LE
.SH DESCRIPTION
.PP
.iX "chmod function"
.iX "fchmod function"
.iX "file" "changing access"
.iX "file" "access"
.iX "access" "changing for a file"
.iX "permission" "changing for a file"
The \*Lchmod(\|)\*O function sets the access permissions of
the file specified by the \*Vpath\*O parameter
according to the bit pattern specified by the \*Vmode\*O
parameter.
.PP
The \*Lfchmod(\|)\*O function sets the access permissions
of an open file pointed to by the \*Vfiledes\*O parameter
according to the bit
pattern specified by the \*Vmode\*O parameter.
.PP
To change file access permissions,
the process must have the same effective user ID as the owner of the
file
or the process must have
superuser privilege.
.PP
Upon successful completion, the
\*Lchmod(\|)\*O
and
\*Lfchmod(\|)\*O
functions mark the
\*Lst_ctime\*O
field of the file for update.
.PP
The \*Vmode\*O parameter is constructed by logically
ORing one or more of the following values, which are defined in
the \*Lsys/mode.h\*O header file:
.\" from TP 1i  
.VL 1i
.LI "S_ISUID"
Sets the process' effective user ID to the file's
owner on execution.
.\" from TP 1i  
.LI "S_ISGID"
Sets the process' effective group ID to the
file's group on execution.
.\" from TP 1i  
.LI "S_ISVTX"
Saves text image after execution.
.\" from TP 1i  
.LI "S_IRWXU"
Permits the file's owner to read, write, and execute it (or to search
the directory).
.\" from TP 1i  
.LI "S_IRUSR"
Permits the file's owner to read it.
.\" from TP 1i  
.LI "S_IWUSR"
Permits the file's owner to write to it.
.\" from TP 1i  
.LI "S_IXUSR"
Permits the file's owner to execute it (or to
search the directory).
.\" from TP 1i  
.LI "S_IRWXG"
Permits the file's group to read, write, and execute it (or to search the
directory).
.\" from TP 1i  
.LI "S_IRGRP"
Permits the file's group to read it.
.\" from TP 1i  
.LI "S_IWGRP"
Permits the file's group to write to it.
.\" from TP 1i  
.LI "S_IXGRP"
Permits the file's group to execute it (or to
search the directory).
.\" from TP 1i  
.LI "S_IRWXO"
Permits others to read, write, and execute it (or to search the directory).
.\" from TP 1i  
.LI "S_IROTH"
Permits others to read the file.
.\" from TP 1i  
.LI "S_IWOTH"
Permits others to write to the file.
.\" from TP 1i  
.LI "S_IXOTH"
Permits others to execute the file (or to search
the directory).
.LE
.PP
Other mode values exist that can be set with the \*Lmknod(\|)\*O
function, but not with the \*Lchmod(\|)\*O function.
.PP
If the mode bit S_ISGID is set and the mode bit S_IXGRP is not set,
mandatory file record locking will exist on a regular file.  This may
affect subsequent calls to other calls on the file, including
\*Lopen(\|)\*O,
\*Lcreat(\|)\*O,
\*Lread(\|)\*O,
\*Lwrite(\|)\*O,
and
\*Ltruncate(\|)\*O.
.PP
The S_ISGID bit of the file is cleared if:
.\" from TP 4  
.ML
.LI
The file is a regular file.
.\" from TP  
.LI
The effective user ID of the process does not have appropriate
system privilege.
.\" from TP  
.LI
The effective group ID or one of the
IDs in the group access list of the process does not match the file's
existing group ID.
.LE
.SH NOTES
.PP
.\" from TP 1.5i  
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use
(\*Lchmod(\|)\*O)
.IP
Trial use
(\*Lfchmod(\|)\*O)
.LE
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lchmod(\|)\*O and \*Lfchmod(\|)\*O
functions return a value of 0 (zero). If the \*Lchmod(\|)\*O
or \*Lfchmod(\|)\*O function fails, a value of -1 is returned,
and \*Lerrno\*O is set to indicate
the error.
.SH ERRORS
.PP
If the \*Lchmod(\|)\*O function fails, the file permissions
remain unchanged and
\*Lerrno\*O
may be set to one of the following values:
.\" from TP 1i  
.VL 1i
.LI "[ENOTDIR]"
A component of the \*Vpath\*O parameter is
not a directory.
.\" from TP 1i  
.LI "[ENOENT]"
The named file does not exist or is an empty string.
.\" from TP 1i  
.LI "[ENOENT]"
A symbolic link was named, but the file to which
it refers does not exist.
.\" from TP 1i  
.LI "[EACCES]"
A component of the \*Vpath\*O parameter has
search permission denied.
.\" from TP 1i  
.LI "[EPERM]"
The effective user ID does not match the
ID of the owner of the file or the owner does not have appropriate
system privilege.
.\" from TP 1i  
.LI "[EROFS]"
The named file resides on a read-only file system
.\" from TP 1i  
.LI "[EFAULT]"
The \*Vpath\*O parameter points to a location
outside of the allocated address space of the process.
.\" from TP 1i  
.LI "[ESTALE]"
The process' root or current directory is located
in a virtual file system that has been unmounted.
.\" from TP 1i  
.LI "[ELOOP]"
Too many symbolic links were encountered in translating
the \*Vpath\*O parameter.
.\" from TP 1i  
.LI "[ENAMETOOLONG]"
The length of the
\*Vpath\*O
argument exceeds
PATH_MAX
or a pathname component is longer than
NAME_MAX.
.\" from TP 1i  
.LI "[EINTR]"
A signal was caught during execution of the system call.
.LE
.PP
If the \*Lfchmod(\|)\*O function fails, the file permissions
remain unchanged and
\*Lerrno\*O
may be set to one of the following values:
.\" from TP 1i  
.VL
.LI "[EBADF]"
The file descriptor \*Vfiledes\*O is
not valid.
.\" from TP 1i  
.LI "[EROFS]"
The file referred to by \*Vfiledes\*O
resides on a read-only file system.
.\" from TP 1i  
.LI "[EPERM]"
The effective user ID does not match the ID of
the owner of the file, and the calling process does not have
superuser privilege.
.\" from TP 1i  
.LI "[ESTALE]"
The process' root or current directory is located
in a virtual file system that has been unmounted.
.\" from TP 1i  
.LI "[EINTR]"
A signal was caught during execution of the system call.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lchown\*O(2),
\*Lfcntl\*O(2),
\*Lgetgroups\*O(2),
\*Lmknod\*O(2),
\*Lopen\*O(2),
\*Lread\*O(2)
\*Lsetgroups\*O(2)
\*Ltruncate\*O(2)
\*Lwrite\*O(2)
.PP
Commands:
\*Lchmod\*O(1)
.iX "chmod function"
.iX "fchmod function"
.EQ
delim off
.EN
