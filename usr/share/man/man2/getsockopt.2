.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: getsockopt.2,v $ $Revision: 3.5.5.2 $ (DEC) $Date: 1993/10/04 17:26:19 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"build rmifdef
.\"
.\"
.TH getsockopt 2
.SH NAME
.PP
\*Lgetsockopt\*O \- Gets socket options
.SH SYNOPSIS
.PP
.sS
.sp 0.4v
\*L#include <sys/types.h>
.sp 0.4v
\*L#include <sys/socket.h>\*O
.sp 0.4v
\*Lint getsockopt\*O (\*L
.nL
	\*Lint \*Vsocket\*L,
.nL
	\*Lint \*Vlevel\*L,
.nL
	\*Lint \*Voption_nam\*L,
.nL
	\*Lchar *\*Voption_value\*L,
.nL
	\*Lint *\*Voption_len \*L);
.sE
.SH PARAMETERS
.PP
.\" from TP  
.VL
.LI "\*Vsocket"
\*OSpecifies the unique socket name.
.\" from TP  
.LI "\*Vlevel"
\*OSpecifies the protocol level at which the option
resides.  To retrieve options
at the socket level, specify the \*Vlevel\*O parameter as SOL_SOCKET.
To retrieve options at other levels,
supply the appropriate protocol number for the protocol
controlling the option.  For example, to indicate that an option will
be interpreted by the
TCP protocol, set \*Vlevel\*O
to the protocol number of TCP, as defined in the \*Lnetinet/in.h\*O
header file, or as determined by using the
\*Lgetprotobyname(\|)\*O
function.
.\" from TP  
.LI "\*Voption_nam"
\*OSpecifies
a single option to be retrieved.
The socket level options
can be enabled or disabled
by the
\*Lsetsockopt(\|)\*O
function.  The \*Lgetsockopt(\|)
\*Ofunction retrieves information about the following options:
.\" .wH .RS  Can not be used in nested lists
.\" from TP .5i  
.VL
.LI "SO_DEBUG"
Reports whether debugging information is being recorded.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_ACCEPTCONN"
Reports whether socket listening is enabled.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_BROADCAST"
Reports whether transmission of broadcast
messages is supported.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_REUSEADDR"
Reports whether the rules used in validating
addresses supplied by a
\*Lbind(\|)\*O function should
allow reuse of
\*Olocal addresses.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_KEEPALIVE"
Reports whether connections are kept active with periodic transmission
of messages.
If the
connected socket fails to respond to these messages, the connection
is broken and processes using that socket are notified with a
SIGPIPE signal.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_DONTROUTE"
Reports whether outgoing messages should bypass the standard
routing facilities.  (Not recommended, for debugging purposes only.)
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_USELOOPBACK"
Only valid for routing sockets.  Reports whether the sender receives a
copy of each message.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_LINGER"
Reports whether the socket lingers on a
\*Lclose(\|)\*O function if
data is present.
If SO_LINGER is set, the system blocks the process during
the\*L close(\|)\*O function until it can transmit the data or until
the time expires.  If SO_LINGER is not specified, and a \*Lclose(\|)\*O
function is issued, the system handles the call in a way that
allows the process to continue as quickly as possible.
This option returns an
\*Lstruct linger\*O
value.
.\" from TP  
.LI "SO_OOBINLINE"
Reports whether the socket leaves received out-of-band data (data marked
urgent) in line.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_SNDBUF"
Reports send buffer size information.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_RCVBUF"
Reports receive buffer size information.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_SNDLOWAT"
Reports send low-water mark information.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_RCVLOWAT"
Reports receive low-water mark information.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_SNDTIMEO"
Reports send time-out information.
This option returns a
\*Lstruct timeval\*O
value.
.\" from TP  
.LI "SO_RCVTIMEO"
Reports receive time-out information.
This option returns a
\*Lstruct timeval\*O
value.
.\" from TP  
.LI "SO_ERROR"
Reports information about error status and
clear.
This option returns an
\*Lint\*O
value.
.\" from TP  
.LI "SO_TYPE"
Reports the socket type.
This option returns an
\*Lint\*O
value.
.LE
.sp 0.4v
Options at other protocol levels
vary in format and name.
.\".wH .RE
.\" from TP 1i  
.LI "\*Voption_value"
\*OPoints to the address of a buffer.
.\" from TP  
.LI "\*Voption_len"
\*OSpecifies
the length of buffer pointed to by \*Voption_value\*O.  The \*Voption_len\*O
parameter initially contains the size of the buffer pointed to by
the \*Voption_value\*O parameter.  On return, the \*Voption_len\*O
parameter is modified to indicate the actual size of the value returned.
If no option value is supplied or returned, the \*Voption_value\*O
parameter can be 0 (zero).
.sp 0.4v
Options at other protocol levels vary in format and name.
.LE
.SH DESCRIPTION
.PP
.iX "getsockopt function"
.iX "socket" "returning options on"
.iX "socket" "options on"
The \*Lgetsockopt(\|)\*O function allows an application program
to query socket options.  The calling program specifies the name of
the socket, the name of the option, and a place to store the requested
information.  The operating system gets the socket option information
from its internal data structures and passes the requested information
back to the calling program.
.PP
Options may exist at multiple
protocol levels.  They
are always present at the uppermost socket level.  When retrieving
socket options, specify the level at which the option resides and
the name of the option.
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lgetsockopt(\|)\*O function
returns a value of 0 (zero).
Otherwise,
a value of -1 is returned, and
\*Lerrno\*O is set to indicate the error.
.SH ERRORS
.PP
If the \*Lgetsockopt(\|)\*O function fails,
\*Lerrno\*O
may be set to one of the following values:
.\" from TP 1i  
.VL 1i
.LI "[EBADF]"
The \*Vsocket\*O parameter is not valid.
.\" from TP 1i  
.LI "[ENOTSOCK]"
The \*Vsocket\*O parameter refers to a file,
not a socket.
.\" from TP 1i  
.LI "[ENOPROTOOPT]"
The option is unknown.
.\" from TP 1i  
.LI "[EFAULT]"
The address pointed to by the \*Voption_value\*O parameter
is not in a valid (writable) part of the process space, or the \*Voption_len
\*Oparameter is not in a valid part of the process address space.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lbind\*O(2),
\*Lclose\*O(2),
\*Lendprotoent\*O(3),
\*Lgetprotobynumber\*O(3),
\*Lgetprotoent\*O(3),
\*Lsetprotoent\*O(3),
\*Lsetsockopt\*O(2),
\*Lsocket\*O(2)
.EQ
delim off
.EN
