.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: getsysinfo.2,v $ $Revision: 3.3.9.4 $ (DEC) $Date: 1994/01/05 16:06:26 $
.\"
.\" SCCSID: @(#)getsysinfo.2 2.3 5/19/87
.TH getsysinfo 2
.SH NAME
\*Lgetsysinfo\*O \- Gets system information
.SH SYNOPSIS
.PP
.iX "getsysinfo system call"
.sS
#\*Linclude\*O <\*Lsys/types.h\*O>
.nL
#\*Linclude\*O <\*Lsys/sysinfo.h\*O>
.PP
\*Lgetsysinfo\*O
.nL
(
.nL
   \*Lunsigned long\*O \*Vop\*O,
.nL
   \*Lcaddr_t\*O \*Vbuffer\*O,
.nL
   \*Lunsigned long\*O \*Vnbytes\*O,
.nL
   \*Lint\*O \*L*\*Vstart\*O,
.nL
   \*Lchar\*O \*L*\*Varg\*O
.nL
);
.sE
.SH PARAMETERS
.PP
.VL 4m
.LI "\*Vop\*O"
Specifies the operation to be performed.  Values for \*Vop\*O are
defined in the <\*Lsys/sysinfo.h\*O> header file.  See the Operations
section in this reference page for information on the various operations
that you can specify.
.LI "\*Vbuffer\*O, \*Vnbytes\*O"
The \*Vnbytes\*O argument defines the size of \*Vbuffer\*O.  The
\*Vbuffer\*O argument specifies the location where
the system information is returned.
.LI "\*Vstart\*O"
The \*Vstart\*O argument is the current logical location within the
internal system table referenced by the \*Vop\*O value.  The \*Vstart\*O
argument must initially be set to 0 (zero).  It is updated to reflect
the current logical location within the system table, so that successive
executions of \*Lgetsysinfo(\|)\*O can retrieve information about all the
system structures specified by \*Vop\*O.
.sp
The \*Vstart\*O argument is set to 0 when all system information
requested by \*Vop\*O has been retrieved.
.LI "\*Varg\*O"
The optional \*Varg\*O argument can be used by certain \*Vop\*O values to
obtain additional information.  When \*Varg\*O is not required, it should be
set to NULL.
.LE
.SS Operations
This section lists the various operations that you can specify with
the \*Vop\*O parameter and the input arguments associated with each one.
.VL 4m
.LI "GSI_BOOTDEV"
Returns the BOOTDEV string, which is used for the installation.
(This operator does not take any input arguments.)
.LI "GSI_BOOTEDFILE"
Returns the name of the file from which the currently running kernel was booted.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Must be greater than or equal to 80.
.LE
.LI "GSI_BOOTTYPE"
Returns the name of the network interface over which the kernel was booted.
This value is only valid when the kernel is booted from the network.
Examples are \*Lln0\*O (DEC 3000) and \*Lte0\*O (DEC 4000).
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Must be greater than or equal to 10.
.LE
.LI "GSI_BUS_NAME"
Returns the name of a \*Vstart\*O-selected bus.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
If \*Vstart\*O is \-1, the name of the nexus iobus is returned in \*Vbuffer\*O.
Otherwise, \*Vstart\*O points to the bus address and returns the nexus iobus
name in \*Vbuffer\*O.
.LE
.LI "GSI_BUS_PNAME"
Returns the port name of a \*Vstart\*O-selected bus.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
If \*Vstart\*O is \-1, the port name of the nexus iobus is returned in
\*Vbuffer\*O.  Otherwise, \*Vstart\*O points to the bus address and returns
the port name of the nexus iobus in \*Vbuffer\*O.
.LE
.LI "GSI_BUS_STRUCT"
Returns a \*Vstart\*O-selected bus structure, which is defined in
\*L<io/common/devdriver.h>\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lstruct bus (/usr/include/io/common/devdriver.h)\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
If \*Vstart\*O is \-1, the structure of the nexus iobus is returned in
\*Vbuffer\*O.  Otherwise, \*Vstart\*O points to the bus structure and
returns the structure of the nexus iobus in \*Vbuffer\*O.
.LE
.LI "GSI_CLK_TCK"
Returns the system clock's ticks-per-second value in the form of an \*Lint\*O.
(This operator does not take any input arguments.)
.LI "GSI_COMPAT_MOD"
Returns the address of the \*Vstart\*O-selected binary compatibility module's
configure function in the form of a pointer.
.\" .LI "GSI_CONSTYPE (MIPS only)"
.\" Returns the MIPS console type identifier.
.LI "GSI_CPU"
Returns the CPU type (from the kernel \*Lcpu\*O global variable) in the form of
an \*Lint\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Must be no less than the size of an \*Lint\*O.
.LE
.LI "GSI_CTLR_NAME"
Returns the name of a \*Vstart\*O-selected controller.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
Points to the controller structure and returns the name of that structure in
\*Vbuffer\*O.
.LE
.LI "GSI_CTLR_PNAME"
Returns the port name of a \*Vstart\*O-selected controller.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
Points to the controller structure and returns the port name of that structure
in \*Vbuffer\*O.
.LE
.LI "GSI_CTLR_STRUCT"
Returns a \*Vstart\*O-selected controller structure, which is defined in
\*L<io/common/devdriver.h>\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lstruct controller\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
Points to the controller structure and returns that structure
in \*Vbuffer\*O.
.LE
.LI "GSI_CURRENT_CPU"
Returns the number of the CPU on which the thread is currently running in
the form of a \*Llong\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Llong\*O
.LE
.LI "GSI_DEV_MOD"
Returns a \*Vstart\*O-selected \*Ldev_mod_t\*O structure, which is defined in
\*L<sys/sysconfig.h>\*O.
(This operator does not take any input arguments.)
.LI "GSI_DEV_NAME"
Returns the name of a \*Vstart\*O-selected device.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
Points to the device structure and returns the name of the device structure
in \*Vbuffer\*O.
.LE
.LI "GSI_DEV_PNAME"
Returns the port name of a \*Vstart\*O-selected device.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
Points to the device structure and returns the port name of the device
structure in \*Vbuffer\*O.
.LE
.LI "GSI_DEV_STRUCT"
Returns a \*Vstart\*O-selected device structure which is defined in
\*L<io/common/devdriver.h>\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lstruct device (/usr/include/io/common/devdriver.h)\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LI "\*Vstart\*O"
Points to the device structure and returns that structure in \*Vbuffer\*O.
.LE
.LI "GSI_DUMPDEV"
Returns the dump device descriptor in the form of a \*Ldev_t\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Ldev_t\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_DUMPINFO"
Returns the contents of the kernel's \*Ldumpinfo\*O structure (defined in
\*L<sys/sysinfo.h>\*O) to allow the \*Lsavecore\*O utility to retrieve namelist
information for the currently running kernel.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lstruct dumpinfo\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_GRAPHICTYPE"
Returns information concerning the graphics options present in the system.
This information consists of the ROM identifier string associated with a
graphics device, for example, "PMAGB-BA" for the DEC 3000/500.
The \*Vop\*O value uses the \*Vstart\*O argument to allow you to step through
all the devices.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[SIZE]\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user bufer.  The value must be at least 8 bytes.
.LI "\*Vstart\*O"
Specifies the graphics controller number.  If there are graphics controllers
that are numbered higher than \*Vstart\*O, the next highest controller
number is returned in \*Vstart\*O.  If no graphics controllers
are numbered higher than \*Vstart\*O, zero (0) is returned in \*Vstart\*O.
.LE
.LI "GSI_IEEE_FP_CONTROL"
Returns the mask of the currently enabled FP exceptions, defined in
\*L<machine/fpu.h>\*O (as "read/write flags"), in the form of a \*Llong\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Llong\*O
.br
Note:  it is recommended that the libc routine \*Lieee_fp_control(\|)\*O
be used instead of \*Lgetsysinfo(\|)\*O.
See the \*Lieee\*O(3) reference page for information on this libc routine.
.LE
.LI "GSI_IEEE_STATE_AT_SIGNAL"
Returns the values set by the user through the SSI_IEEE_STATE_AT_SIGNAL
\*Lsetsysinfo\*O(2) routine.  See the IEEE specification for details.
.VL 4m
.LI "\*Vbuffer\*O"
\*Llong\*O
.br
Note:  it is recommended that the libc routine
\*Lieee_get_state_at_signal(\|)\*O be used instead of \*Lgetsysinfo(\|)\*O.
See the \*Lieee\*O(3) reference page for information on this libc routine.
.LE
.LI "GSI_IPRSETUP"
Returns the settings of the global kernel variables \*Vipforwarding\*O
(in bit 1) and \*Vipgateway\*O (in bit 0) for use by the \*Liprsetup\*O utility.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_LMF"
Returns LMF (License Management Facility) kernel information.  LMF definitions
are in the \*L<sys/lmf.h>\*O and \*L<sys/lmfklic.h>\*O header files.  You
must specify an \*Varg\*O argument.  The other argument values vary
depending on what you specify for \*Larg\*O.  See the LMF header files
to determine which input arguments are required.
.LI "GSI_MAX_CPU"
Returns the maximum number of CPUs on the current machine in the form of
an \*Lint\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_MAX_UPROCS"
Returns the maximum number of processes allowed for each user id.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_MMAPALIGN"
Returns the minimum alignment required for an address specified with the
\*LMAP_FIXED\*O option in the \*Lmmap\*O(2) system call.
.LI "GSI_NETBLK"
Returns the entire NETBLK structure, which is used for the network
installation.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lstruct netblk\*O
.LI "\*Vnbytes\*O"
Specifies the size of \*Vbuffer\*O.
.LE
.LI "GSI_PHYSMEM"
Returns the amount of physical memory, in kilobytes, in the form of
an \*Lint\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_PRESTO"
Returns the size of nonvolatile RAM (NVRAM) present on systems with PRESTO
installed, in the form of a \*Lint\*O.
(This operator does not take any input arguments.)
.LI "GSI_PROG_ENV"
Reserved for future use.
.\" Returns the compatibility mode of the process.  Possible values are A_BSD,
.\" A_POSIX, or A_SYSTEM_FIVE, as defined in the \*L<sys/exec.h>\*O header file.
.\" .VL 4m
.\" .LI "\*Vbuffer\*O"
.\" \*Lu_short\*O
.\" .LI "\*Vnbytes\*O"
.\" Specifies the size of the user buffer.
.\" .LI "NOTE"
.\" This function is not used anywhere and does not work.  It always returns
.\" a value of 2 in \*Vbuffer\*O.  This value is hard-wired in the code.
.\" .LE
.LI "GSI_PROM_ENV"
Returns the contents of the PROM environment variable specified by \*Varg\*O
in \*Vbuffer\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lchar buf[MAX_ENVIRON_LENGTH] /* <machine/prom.h> */\*O
.LI "\*Vnbytes\*O"
MAX_ENVIRON_LENGTH
.LI "\*Varg\*O"
Specifies the name of the console prom environment value.
.LE
.LI "GSI_ROOTDEV"
Returns the root device descriptor in the form of a \*Ldev_t\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Llong\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_SCS_SYSID"
Returns the first SCS CI port number for SCS_SYSID in the form of a
\*Lu_short\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lu_short\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_SIA_PROC_CRED_VAL"
Returns the SIA process authority value in the form of a \*Llong\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Llong\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_STATIC_DEF"
Returns an Assign_entry structure, which is defined in the \*L<sys/conf.h>\*O
header file.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lstruct aentry\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_TTYP"
Returns the major and minor numbers of the controlling terminal.
.VL 4m
.LI "\*Vbuffer\*O"
\*Ldev_t\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_UAC_PARNT"
Returns the parent UAC setting in \*Vbuffer\*O.  This setting is determined
by the \*Lsetsysinfo\*O(2) SSI_UAC_PARNT operation, which allows users
to specify their own unaligned access control (UAC) mechanism.
By default, when the operating system accesses unaligned data, it fixes the
unaligned accesses and displays a warning message so that the programmer
can make the necessary alternations in the code.  Meanwhile, however,
the program behaves correctly because the operating system
has made the necessary temporary adjustments.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_UAC_PROC"
Returns the parent UAC setting in \*Vbuffer\*O.  This setting is determined
by the \*Lsetsysinfo\*O(2) SSI_UAC_PROC operation, which allows users
to specify their own unaligned access control (UAC) mechanism.
By default, when the operating system accesses unaligned data, it fixes the
unaligned accesses and displays a warning message so that the programmer
can make the necessary alternations in the code.  Meanwhile, however,
the program behaves correctly because the operating system
has made the necessary temporary adjustments.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_UAC_SYS"
Returns the parent UAC setting in \*Vbuffer\*O.  This setting is determined
by the \*Lsetsysinfo\*O(2) SSI_UAC_SYS operation, which allows the superuser
to specify his or her own unaligned access control (UAC) mechanism.
By default, when the operating system accesses unaligned data, it fixes the
unaligned accesses and displays a warning message so that the programmer
can make the necessary alternations in the code.  Meanwhile, however,
the program behaves correctly because the operating system
has made the necessary temporary adjustments.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_WSD_CONS"
Returns the current console device, graphics (0) or alternate (1), in
the form of an \*Lint\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_WSD_TYPE"
Returns the Workstation Display Type information in the form of an \*Lint\*O.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LI "GSI_WSD_UNITS"
Returns the Workstation Display Units information in the form of an \*Lint\*O.
This value is bit-significant; each "on" bit indicates the presence of a
graphics head.
.VL 4m
.LI "\*Vbuffer\*O"
\*Lint\*O
.LI "\*Vnbytes\*O"
Specifies the size of the user buffer.
.LE
.LE
.SH DESCRIPTION
.PP
The \*Lgetsysinfo\*O system call retrieves information from the system.
.PP
When information about multiple system structures is returned, it is stored
in consecutive \*Vbuffer\*O locations. The information for each system
structure depends on the \*Vop\*O value.
.SH EXAMPLES
.PP
.oS
#include <sys/sysinfo.h>
\&.
\&.
\&.
long buf1;
\&.
\&.
\&.
error = getsysinfo(GSI_UACPARNT, &buf1, 4, 0, 0);
.oE
.PP
The \*Lgetsysinfo\*O operation, \*LGSI_UACPARNT\*O, returns the parent UAC
setting in the buffer.
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lgetsysinfo\*O system call returns
a value indicating the number of requested items
stored in \*Vbuffer\*O.  If the information requested by \*Vop\*O
is not available, \*Lgetsysinfo\*O returns a (0) zero.
Otherwise, \-1 is returned,
and the global variable \*Lerrno\*O is set to indicate the error.
.SH ERRORS
.PP
.VL 4m
.LI "[EFAULT]"
Either \*Vbuffer\*O, \*Vstart\*O, or \*Varg\*O causes an illegal address to be
referenced.
.LI "[EINVAL]"
The \*Vop\*O argument is invalid.
.LI "[EPERM]"
Permission is denied for the operation requested.
.LE
.SH RELATED INFORMATION
.PP
\*Lsetsysinfo\*O(2)
.EQ
delim off
.EN
