.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: sigprocmask.2,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1994/01/11 22:44:36 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\"
.TH sigprocmask 2
.SH NAME
.PP
\*Lsigprocmask\*O, \*Lsigsetmask\*O \- Sets the current signal mask
.SH LIBRARY
.PP
\*OStandard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
\*L#include <signal.h>
.sp .4v
\*Lint sigprocmask(
.nL
	int \*Vhow\*L,
.nL
	sigset_t *\*Vset\*L,
.nL
	sigset_t *\*Vo_set \*L);\*O
.sp .4v
\*Lint sigsetmask (
.nL
	int \*Vsignal_mask \*L);\*O
.sE
.SH PARAMETERS
.PP
.\"from TP "  
.VL
.LI "\*Vhow"
\*OIndicates the manner in which the set of masked signals is changed;
it has one of the following values:
.wH .RS  Can not be used in nested lists
.\"from TP .5i"  
.VL
.LI "SIG_BLOCK"
The resulting set is the union of the current
set and the signal set pointed to by the \*Vset\*O parameter.
.\"from TP "  
.LI "SIG_UNBLOCK"
The resulting set is the intersection of
the current set and the complement of the signal set pointed to by
the \*Vset\*O parameter.
.\"from TP "  
.LI "SIG_SETMASK"
The resulting set is the signal set pointed
to by the \*Vset\*O parameter.
.wH .RE
.\"from TP 1i"  
.LE
.LI "\*Vset"
\*OSpecifies the signal set.  If the value of the \*Vset\*O
parameter is not null, it points to a set of signals to be
used to change the currently blocked set. If the value of the
\*Vset\*O parameter is null, the value of the \*Vhow\*O
parameter is not significant and the process signal mask is unchanged;
thus, the call can be used to inquire about currently blocked signals.
.\"from TP "  
.LI "\*Vo_set"
\*OIf the \*Vo_set\*O parameter is not the null value,
the signal mask in effect at the time of the call is stored in the
spaced pointed to by the \*Vo_set\*O parameter.
.\"from TP "  
.LI "\*Vsignal_mask"
\*OSpecifies the signal mask of the process.
.LE
.SH DESCRIPTION
.PP
.iX "sigprocmask function"
.iX "sigsetmask function"
.iX "signal" "setting mask"
.iX "signal" "blocked"
.iX "process" "examining and changing signal mask"
The \*Lsigprocmask(\|)\*O function is used to examine or change
the signal mask of
the calling process.
.PP
Typically, you would use the \*Lsigprocmask (SIG_BLOCK)\*O function
to block signals during a critical section of code, and then
use the \*Lsigprocmask (SIG_SETMASK)
\*Ofunction to restore the mask to the previous
value returned by the \*Lsigprocmask (SIG_BLOCK)\*O function.
.PP
If there are any unblocked signals pending
after the call to the \*Lsigprocmask(\|)\*O
function, at least one of those signals will be delivered
before the \*Lsigprocmask(\|)\*O function returns.
.PP
The \*Lsigprocmask(\|)\*O function does not allow the SIGKILL or
SIGSTOP signals to be blocked. If a program attempts to
block one of these signals, the \*Lsigprocmask(\|)\*O function gives
no indication of the error.
.PP
The \*Lsigsetmask(\|)\*O function allows the process
signal mask to change for signal values 1 to 31.  This same function can be
accomplished for all values with the \*Lsigprocmask(SIG_SETMASK)\*O
function. The signal of value \*Vi\*O will be blocked if the \*Vi\*O-th
bit of \*Vsignal_mask\*O parameter is set.
.SH EXAMPLES
.PP
To set the signal mask to block only the SIGINT signal
from delivery, enter:
.PP
.oS
#include <signal.h>
.PP
\*Cint return_value;
.nL
sigset_t newset;
.nL
sigset_t *newset_p;
.nL
 . . .
.nL
newset_p = &newset;
.nL
sigemptyset(newset_p);
.nL
sigaddset(newset_p, SIGINT);
.nL
return_value = sigprocmask (SIG_SETMASK, newset_p, NULL);
.oE
.wH .S
.wH .in
.SH NOTES
.PP
.VL 1.5i
.LI "\*LAES Support Level:\*O"
Full use (\*Lsigprocmask(\|))
.LE
.SH RETURN VALUES
.PP
Upon successful completion, the
\*Lsigprocmask(\|)\*O
function returns a value of 0 (zero). If the
\*Lsigprocmask(\|)\*O function
fails, the signal mask of the process is unchanged, a value
of -1 is returned, and \*Lerrno\*O is set to
indicate the error.
.PP
Upon successful completion, the \*Lsigsetmask(\|)\*O function
returns the value of the previous signal mask.  If the function
fails, a value of -1 is returned.
.SH ERRORS
.PP
If the \*Lsigprocmask(\|)\*O
function fails,
\*Lerrno\*O
may be set to one of the following values:
.\"from TP 1i"  
.VL 1i
.LI "[EINVAL]"
The value of the \*Vhow\*O parameter is not
equal to one of the defined values.
.\"from TP 1i"  
.LI "[EFAULT]"
The
\*Vset\*O
or
\*Vo_set\*O
parameter points to a location
outside the allocated address space of
the process.
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lkill\*O(2),
\*Lsigaction\*O(2),
\*Lsigpause\*O(3),
\*Lsigsuspend\*O(2),
\*Lsigvec\*O(2)
.iX "sigprocmask function"
.iX "sigsetmask function"
.EQ
delim off
.EN
