.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: mount.2sv,v $ $Revision: 3.2.6.2 $ (DEC) $Date: 1994/01/20 01:37:12 $
.\"
.TH mount 2sv
.SH NAME
.PP
\*Lmount\*O, \*Lumount\*O \- Mounts or unmounts a file system using the System V function
.SH SYNOPSIS
.PP
.iX "mount function"
.iX "unmount function"
.iX "file system" "mounting"
.iX "file system" "umounting"
.iX "directory" "mounting a file system on"
.iX "directory" "umounting a file system on"
.sS
\*L#include <sys/types.h>
.nL
\*L#include <sys/mount.h>
.PP
\*Lint mount (
.nL
	char \*V\(**spec\*L,
.nL
	char \*V\(**dir\*L,
.nL
	int \*Vmflag\*L,
.nL
	int \*Vfstyp\*L,
.nL
	char \*V\(**dataptr\*L,
.nL
	int \*Vdatalen\*L);
.PP
\*Lint umount (const
.nL
	char \*V*mnt-path\*L);
.sE
.\"
.\" .sS
.\" int mount (\*Vspec, dir, mflag, fstyp, dataptr, datalen\*L)
.\" .nL
.\" char \*V\(**spec\*L, \*V\(**dir\*L;
.\" .nL
.\" int \*Vmflag\*L, \*Vfstyp\*L;
.\" .nL
.\" char \*V\(**dataptr\*L;
.\" .nL
.\" int \*Vdatalen\*L;
.\" .sE
.\"
.SH PARAMETERS
.PP
.VL
.LI "\*Vspec\*O"
Points to a path name that is a removable file system contained on the
block special file.
.LI "\*Vdir\*O"
Points to a path name that is the directory on which \*Vspec\*O is mounted.
.LI "\*Vmflag\*O"
Specifies whether additional file system data is included.
The valid flag is MS_DATA.
.LI "\*Vfstyp\*O"
Specifies the file system type number.
.LI "\*Vdataptr\*O"
Points to the address of a block of file system specific data.
.LI "\*Vdatalen\*O"
Specifies the length of the file system specific data.
.LI "\*Vmnt-path\*O"
Points to a null-terminated string containing the appropriate
pathname.
.LE
.SH DESCRIPTION
.PP
The \*Lmount\*O(\|) function mounts a removable file system contained on the
block special file identified by \*Vspec\*O.
The \*Vdir\*O argument identifies the mount point.
.PP
When the MS_DATA flag bit of \*Vmflag\*O is off,
the file system type defaults to the root file system type.
Only when the MS_DATA flag bit is on,
should you use the \*Vfstyp\*O argument to indicate the file system type.
Also, the \*Vdataptr\*O and \*Vdatalen\*O arguments,
which describe a block of file system specific data,
must be present when the MS_DATA flag is set.
The file system specific code within the operating system interprets the data.
The data's format depends on the file system type.
If a file system type does not require this data,
\*Vdataptr\*O and \*Vdatalen\*O should both be zero.
.PP
Use the low-order bit of \*Vmflag\*O to control write permission on
the mounted file system.
If the low-order bit is \*L1\*O, writing is forbidden;
otherwise, writing is permitted according to individual file accessibility.
.PP
After a successful \*Lmount\*O(\|), references to the \*Vdir\*O file
refer to the mounted file system's root directory.
.PP
The \*Lumount(\|)\*O function unmounts a file system mounted at the
directory pointed to the \*Vmnt-path\*O parameter.  The associated
directory reverts to its ordinary interpretation.
.PP
Except for file-on-file mounting, to call either the \*Lmount(\|)\*O and
\*Lumount(\|)\*O function, the calling process must have superuser
privilege.
.SH NOTES
.PP
Two
\*Lmount(\|)\*O
functions are supported by OSF/1: the BSD
\*Lmount(\|)\*O
and the System V
\*Lmount(\|)\*O.
The BSD function is the default
\*Lmount(\|)\*O and it is documented in \*Lmount\*O(2).
To use the System V version of
\*Lmount(\|)\*O, documented here
you must link with the
\*Llibsys5\*O
library before you link with
the \*Llibc\*O library or be in the System V habitat.
.SH RETURN VALUES
.PP
The \*Lmount(\|)\*O function
returns \*L0\*O when the file system is successfully mounted.
Otherwise, \*L\-1\*O is returned and
\*Lerrno\*O is set to indicate the error.
.PP
If the \*Lmount(\|)\*O function fails, \*Lerrno\*O may be set to one of the
following values:
.VL
.LI "[EPERM]"
The effective user ID is not super-user.
.LI "[ENOENT]"
Any of the named files does not exist.
.LI "[ENOTDIR]"
A component of a path prefix is not a directory.
.LI "[EREMOTE]"
The file system identified by \*Vspec\*O is remote and cannot be mounted.
.LI "[ENOLINK]"
The \*Vpath\*O argument points to a remote machine and
the link to that machine is no longer active.
.LI "[EMULTIHOP]"
Components of \*Vpath\*O require hopping to
multiple remote machines.
.LI "[ENOTBLK]"
The \*Vspec\*O argument is not a block special device.
.LI "[ENXIO]"
The device associated with \*Vspec\*O does not exist.
.LI "[ENOTDIR]"
The \*Vdir\*O argument is not a directory.
.LI "[EFAULT]"
The \*Vspec\*O or \*Vdir\*O argument
points outside the allocated address space of the process.
.LI "[EBUSY]"
.\" *********************************************************
.\"     Check the validity of the first item in series below
.\" *********************************************************
The \*Vdir\*O argument is a user's current working directory,
is mounted on a user's current working directory, or is otherwise busy.
.LI "[EBUSY]"
The device associated with \*Vspec\*O is currently mounted.
.LI "[EBUSY]"
There are no more mount table entries.
.LI "[EROFS]"
The \*Vspec\*O is write protected and \*Vmflag\*O
requests write permission.
.LI "[ENOSPC]"
The file system state in the super-block is not Fs\s-1OKAY\s+1 and
\*Vmflag\*O requests write permission.
.LI "[EINVAL]"
The super block has an invalid magic number
or the \*Vfstyp\*O is invalid or \*Vmflag\*O is not valid.
.LE
.PP
If the
\*Lumount(\|)\*O
function fails,
\*Lerrno\*O
may be set to one of the following values:
.VL
.LI "[EPERM]"
The caller does not have appropriate privilege.
.LI "[ENOTDIR]"
A component of the path is not a directory.
.LI "[EINVAL]"
The pathname contains a character with the high-order bit set.
.LI "[ENAMETOOLONG]"
A component of a pathname exceeded NAME_MAX characters,
or an entire pathname exceeded PATH_MAX characters.
.LI "[ELOOP]"
Too many symbolic links were encountered in translating the pathname.
.LI "[EINVAL]"
The requested directory is not in the mount table.
.LI "[EBUSY]"
A process is holding a reference to a file located
on the file system.
.LI "[EIO]"
An I/O error occurred while writing cached file system information.
.LI "[EFAULT]"
The
\*Vmnt-path\*O parameter points outside the process' allocated address space.
.LI "[ENXIO]"
The device identified by the \*Vmnt-path\*O does not exist.
.LI "[ENOENT]"
The named file does not exist.
.LE
.SH FILES
.PP
\*L/usr/include/sys/mount.h
.PP
\*L/usr/include/sys/types.h\*O
.SH RELATED INFORMATION
.PP
Command:  \*Lmount\*O(8)
.PP
Function:  \*Lstatfs\*O(2)
.PP
\*ESystem V Compatibility User's Guide\*O
.\" statfs(2), mount(2), umount(2), fs(4)
.EQ
delim off
.EN
