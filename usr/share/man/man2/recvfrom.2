.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: recvfrom.2,v $ $Revision: 3.2.2.2 $ (DEC) $Date: 1992/05/15 09:13:04 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\"
.TH recvfrom 2
.SH NAME
\*Lrecvfrom\*O \- Receives messages from sockets
.SH SYNOPSIS 
.sS
\*L#include\*O <\*Lsys/types.h\*O>\*L
.sp .4v
\*L#include\*O <\*Lsys/socket.h\*O>\*L
.sp .4v
\*Lint recvfrom\*O(\*L
.nL
	\*Lint \*Vsocket\*O,\*L
.nL
	\*Lchar\*O *\*Vbuffer\*L,
.nL
	\*Lint \*Vlength\*O,\*L
.nL
	\*Lint \*Vflags\*O,\*L
.nL
	\*Lstruct sockaddr\*O *\*Vaddress\*L,
.nL
	\*Lint *\*Vaddress_len\*O) ;
.sE 
.SH PARAMETERS
.\"from TP "  
.VL 
.LI "\*Vsocket\*O"
Specifies the socket file descriptor.
.\"from TP "  
.LI "\*Vbuffer\*O" 
Specifies a pointer to the buffer to which the message should be written.
.\"from TP "  
.LI "\*Vlength\*O" 
Specifies the length in bytes of the buffer pointed to by the \*Vbuffer\*O
parameter.
.\"from TP "  
.LI "\*Vflags\*O" 
Points to a value that controls message reception. The parameter to
control message reception is
formed by the logical OR of one or more of the following values:
.wH .RS  Can not be used in nested lists
.\"from TP .5i"  
.VL
.LI "MSG_PEEK" 
Peeks at the incoming message.
.\"from TP "  
.LI "MSG_OOB" 
Processes out-of-band data.
.LE
.\"from TP "  
.LI "\*Vaddress\*O" 
\*OPoints to a
\*Lsockaddr\*O
structure,
the format of which is determined by the domain and
by the behavior requested for the socket.
The
\*Lsockaddr\*O
structure is an overlay for a
\*Lsockaddr_in\*O,
\*Lsockaddr_un\*O,
or
\*Lsockaddr_ns\*O
structure, depending on which of the supported address families is
active.
If the compile-time option
_SOCKADDR_LEN
is
defined
before the
\*Lsys/socket.h\*O
header file
is included,
the
\*Lsockaddr\*O
structure takes 4.4BSD behavior,
with a
field for specifying the length of the socket
address.  Otherwise,
the default 4.3BSD
\*Lsockaddr\*O
structure is used, with the length of the socket address assumed to
be 14 bytes or less.
.PP
If
_SOCKADDR_LEN
is defined, the 4.3BSD
\*Lsockaddr\*O
structure is defined with the name
\*Losockaddr\*O.
.wH .RE
.\"from TP "  
.LI "\*Vaddress_len\*O"
\*OSpecifies
the length of the
\*Lsockaddr\*O
structure pointed to by the
\*Vaddress\*O parameter.
.LE 
.SH DESCRIPTION
.iX "recvfrom function"
.iX "socket" "receiving messages from unconnected"
.iX "messages" "receiving from unconnected sockets"
.PP 
The
\*Lrecvfrom(\|)\*O
function permits an application program
to receive messages from unconnected sockets.  It
is normally applied to unconnected sockets because it includes
parameters that permit a calling program to retrieve the source endpoint of
received data.
.PP
To obtain the source address of the message, specify a nonzero
value for the \*Vaddress\*O parameter.  The
\*Lrecvfrom(\|)\*O
function is called with the \*Vaddress_len\*O parameter set
to the size of
the buffer specified by the \*Vaddress\*O parameter. On return,
this function modifies the \*Vaddress_len\*O parameter
to the actual size in bytes of the address specified by the
\*Vaddress\*O parameter.
The
\*Lrecvfrom(\|)\*O
function returns the length of the message written to the
buffer pointed to by the \*Vbuffer\*O parameter. When a message is too
long for the specified buffer, excess bytes may be truncated
depending on the type of socket that issued the message, and depending
on which flags are set with the
\*Vflags\*O
parameter.
.PP
When no message is available at the socket specified by the \*Vsocket\*O
parameter, the
\*Lrecvfrom(\|)\*O
function waits for a message to arrive, unless the
socket is nonblocking. When the socket is nonblocking,
\*Lerrno\*O
is set to
[EWOULDBLOCK].
.SH RETURN VALUES
Upon successful completion, the byte length of the written
message is returned.
Otherwise, a value of -1 is returned and
\*Lerrno\*O is set to indicate the error.
.SH ERRORS
If the
\*Lrecvfrom(\|)\*O
function fails,
\*Lerrno\*O
may be set to one of the following values:
.\"from TP 1i"  
.VL 1i
.LI "[EBADF]"
The \*Vsocket\*O parameter is not a valid file descriptor.
.\"from TP "  
.LI "[ENOTSOCK]" 
The \*Vsocket\*O parameter refers to a file, not a socket.
.PP
.\"from TP "  
.LI "[EWOULDBLOCK]" 
The socket is nonblocking; no data is ready to be received.
.\"from TP 1i"  
.LI "[EFAULT]" 
A valid message buffer was not specified.
Nonexistent or protected address space is specified for the message
buffer.
.LE 
.SH RELATED INFORMATION
.PP 
Functions:
\*Lrecv\*O(2),
\*Lrecvmsg\*O(2),
\*Lsend\*O(2),
\*Lsendmsg\*O(2),
\*Lsendto\*O(2),
\*Lselect\*O(2),
\*Lshutdown\*O(2),
\*Lsocket\*O(2),
\*Lread\*O(2),
\*Lwrite\*O(2)
.iX "recvfrom function"
.EQ
delim off
.EN
