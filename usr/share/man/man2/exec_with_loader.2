.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: exec_with_loader.2,v $ $Revision: 3.2.2.3 $ (DEC) $Date: 1992/11/30 21:47:44 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\"
.TH exec_with_loader 2
.SH NAME
\*Lexec_with_loader\*O \- Executes a file with a loader
.SH SYNOPSIS
.PP
.sS
\*Lint exec_with_loader (
.nL
	\*Lint \*Vflags\*L,
.nL
	\*Lconst char \(**\*Vloader\*L,
.nL
	\*Lconst char \(**\*Vfile\*L,
.nL
	\*Lchar \(** const \*Vargv\*L[ ],
.nL
	\*Lchar \(** const \*Venvp\*L[ ] );
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vflags\*O"
Specifies flags to be passed to the loader.
.LI "\*Vloader\*O"
Points to a pathname that identifies a regular, executable, process
image file that contains the loader.
.LI "\*Vfile\*O"
Points to a pathname that identifies a regular, executable
process image file.
.LI "\*Vargv\*O"
Specifies an array of character pointers to null-terminated strings.
.LI "\*Venvp\*O"
Specifies an array of character pointers to null-terminated strings,
constituting the environment for the new process.
.LE
.SH DESCRIPTION
.PP
.iX "exec_with_loader function"
.iX "file" "executing with loader"
.iX "file" "executable with loader"
.iX "file" "shared library requirement"
.iX "process image" "current"
.iX "process image" "new"
.iX "loader" "executing a file with"
.iX "shared library" "executing a file with loader"
The \*Lexec_with_loader(\|)\*O function replaces the current process image
with a new process image, in a manner similar to what the \*Lexec\*O
functions do.  Both the \*Vloader\*O parameter and the \*Vfile\*O
parameter point to pathnames that identify regular, executable files
called new process image files.  Whereas the \*Lexec\*O
functions construct the new process image from the file identified by
the \*Vfile\*O parameter, \*Lexec_with_loader(\|)\*O instead constructs the
new process image from the file identified by the \*Vloader\*O
parameter.  Throughout this manual page, the regular, executable,
process image file specified by the \*Vloader\*O parameter is
referred to as the program loader, and the regular, executable, process image
file specified by the \*Vfile\*O parameter is referred to as the
file.
.PP
Once the \*Lexec_with_loader(\|)\*O function successfully loads the
program loader, it
transfers control to the program loader and effectively passes the \*Vfile\*O
parameter on to the loader.  Under normal usage, the program loader will then
load (that is,
merge) the file into the newly constructed process image,
along with any object files upon which the program (that is, the file)
depends.  The typical use of \*Lexec_with_loader(\|)\*O is to load
programs that contain unresolved external references, for example,
programs that require the use of a shared library.
.PP
The \*Lexec_with_loader(\|)\*O function implements and preserves all of
the semantics of the \*Lexec\*O functions, with respect to the file.
These include the handling of the \*Vargv\*O and \*Venvp\*O parameters,
command interpreters, close-on-exec processing, signals, set user ID
and set group ID processing, the process attributes and error
returns.
.PP
The \*Vloader\*O parameter may be null, in which case the
\*Lexec_with_loader(\|)\*O function loads the default program loader,
found in the
\*L/sbin/loader\*O
file.  The \*Lexec_with_loader(\|)\*O function
always loads the default
program
loader, even if the \*Vloader\*O parameter points to a valid loader
file, if the set user ID mode bit of the file is set (see the
\*Lchmod(\|)\*O
function)
and the owner ID of the file is not equal to the effective user ID of
the process, or if the set group ID mode bit of the file is set and
the group ID of the file is not equal to the effective group ID of
the process.  The setting of the set user ID or set group ID mode bits
on the loader have no effect whatsoever.
.SH RETURN VALUES
.PP
If the \*Lexec_with_loader(\|)\*O function returns to the calling
process image, an
error has occurred; the return value is \-1, and \*Lerrno\*O is set to
indicate the error.
.SH ERRORS
.PP
If the \*Lexec_with_loader(\|)\*O function fails,
\*Lerrno\*O
may be set to one of the following values:
.VL 1i
.LI "[EACCES]"
Search permission is denied for a directory listed in either file's
path prefix, or either file denies execution permission, or either
file is not a regular file and the implementation does not support
execution of files of its type.  Note that the \*Lexec_with_loader(\|)\*O
function references two files, one specified by the \*Vloader\*O
parameter and one specified by the \*Vfile\*O parameter.
.LI "[ENAMETOOLONG]"
The length of the \*Vloader\*O or \*Vfile\*O parameters exceeds
PATH_MAX, or a pathname component is longer than NAME_MAX and
_POSIX_NO_TRUNC is in effect for that file.
.LI "[ENOENT]"
One or more components of either file's pathname does not exist, or
the \*Vloader\*O or \*Vfile\*O parameter points to an
empty string.  Note that the \*Lexec_with_loader(\|)\*O function
references two files, one specified by the \*Vloader\*O parameter and
one specified by the \*Vfile\*O parameter.
.LI "[ENOTDIR]"
A component of either file's path prefix is not a directory.  Note
that the \*Lexec_with_loader(\|)\*O function references two files, one
specified by the \*Vloader\*O parameter and one specified by the
\*Vfile\*O parameter.
.LI "[ENOEXEC]"
The file specified by the \*Vloader\*O parameter has the
appropriate access permission but is not in the proper format.
.LI "[EFAULT]"
The \*Vloader\*O or \*Vfile\*O parameter is an invalid address.
.LI "[ELOOP]"
Too many symbolic links were encountered in pathname resolution.
.LI "[ENOMEM]"
Insufficient memory is available.
.\" Begin Digital-specific information
.\" Commenting out per Bob Picco.  This error is no longer supported.
.\" .LI "[ETXTBSY]" 
.\" The file specified by the \*Vloader\*O parameter is currently
.\" open for writing by some process.
.\" End Digital-specific information
.LE
.SH RELATED INFORMATION
.PP
Functions:
\*Lexec\*O(2)
.iX "exec_with_loader function"
.EQ
delim off
.EN
