.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: strmod_add.2,v $ $Revision: 3.2.4.2 $ (DEC) $Date: 1994/01/19 21:04:40 $
.\"
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.TH strmod_add 2
.SH NAME
.PP
\*Lstrmod_add\*O \- Adds STREAMS modules and drivers
.SH SYNOPSIS
.PP
\*L#include <sys/stream.h>
.nL
	dev_t strmod_add (\*Vdevno\*L, \*Vstreamtab\*L, \*Vstreamadm\*L );
.nL
	dev_t \*Vdevno\*L ;
.nL
	struct streamtab *\*Vstreamtab\*L ;
.nL
	struct streamadm *\*Vstreamadm\*L ;\*O
.SH PARAMETERS
.PP
.TP 10
\*Vdevno\*O
The device number (cdevsw slot) to use when adding a driver.
If NODEV is supplied,
the first available slot is used.  This parameter is ignored for
modules.
.TP
\*Vstreamtab\*O
A pointer to the \*Lstreamtab \*O
structure that contains the entry points.  The
actual \*Lstreamtab\*O
structure has to be allocated permanently in the driver's data space
(as specified by System V Release 3.2).
.TP
\*Vstreamadm\*O
A pointer to the \*Lstreamadm \*O
structure that contains the administration parameters for the STREAMS
module or driver.  The
actual
\*Lstreamadm \*O
structure is needed only for the duration of the call.  It does not
have to be allocated permanently by the caller.
.SH DESCRIPTION
.PP
.iX "strmod_add"
The
\*Lstrmod_add()\*O
interface is used to configure STREAMS modules and drivers
into the kernel.  Specifically, it allows STREAMS drivers to add
entry points in character device switch tables.  Modules are added to
the STREAMS modules switch.
.PP
When adding a driver only,
\*Lstrmod_add()\*O
takes a device number, which is used to
determine the device switch slot for the entry points.  A
STREAMS driver can supply NODEV instead of a device number.  In
this case,
\*Lstrmod_add()\*O
finds the first available device switch
slot and returns the number actually used.  If a device switch
slot is already in use or if there are no slots available, NODEV is
returned.
.PP
.I streamtab
is a pointer to a traditional (System V Release 3.2)
\*Lstreamtab \*O
structure.  The structure contains pointers to entry points
for the module's read and write queue routines.
.PP
.I streamadm
points to a
\*Lstreamadm \*O
structure.  The
\*Lstreamadm \*O
structure provides additional information
that is required under OSF/1.
.SH NOTES
.PP
.\".P
.\"Bottom-half configuration for STREAMS modules and drivers is performed
.\"the same as for block and character drivers.  In other words,
.\"interrupt routines must be registered via 
.\".B handler_add 
.\"and enabled via 
.\".BR handler_enable .
The device number can be constructed from the major number through
the
\*Lmakedev \*O
macro which is defined in \*L/usr/include/sys/types.h\*O.
.SH RETURN VALUES
.PP
Upon successful completion,
\*Lstrmod_add()\*O
returns the device number associated with the device switch
table.  Otherwise, it returns NODEV.
.SH RELATED INFORMATION
.PP
.\"Interfaces: 
.\" \*Lcdevsw_add\*O(2),
.\" \*Lcdevsw_del\*O(2),
.\" \*Lhandler_add\*O(2),
.\" \*Lhandler_del\*O(2)
.\".P
Data Structures:
.\" \*Lcdevsw\*O(4), 
.\" \*Lihandler\*O(4), 
\*Lstreamadm\*O(4)
.EQ
delim off
.EN
