.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" OSF/1 1.2
.TH putmsg 2
.SH NAME
.PP
\*Lputmsg\*O, \*Lputpmsg\*O \- Send a message on a Stream
.SH LIBRARY
.PP
Standard C Library (\*Llibc.a\*O)
.SH SYNOPSIS
.PP
.sS
.sp 0.4v
\*L#include <stropts.h>\*O
.sp 0.4v
\*Lint putmsg(
.nL
	int \*Vfd\*L,
.nL
	const struct strbuf *\*Vctlbuf\*L,
.nL
	const struct strbuf *\*Vdatabuf\*L,
.nL
	int \*Vflags\*L);
.sp 0.4v
int putpmsg(
.nL
	int \*Vfd\*L,
.nL
	const struct strbuf *\*Vctlbuf\*L,
.nL
	const struct strbuf *\*Vdatabuf\*L,
.nL
	int \*Vband\*L,
.nL
	int \*Vflags\*L);\*O
.sE
.SH PARAMETERS
.PP
.VL
.LI "\*Vfd\*O"
Specifies a file descriptor that references an open Stream.
.LI "\*Vctlbuf\*O"
Points to a \*Lstrbuf\*O structure that describes the
control part, if any, of the message. This \*Lstrbuf\*O
structure is described in the \*LDESCRIPTION\*O section.
.LI "\*Vdatabuf\*O"
Points to a \*Lstrbuf\*O structure that holds the
data part, if any, of the message. This \*Lstrbuf\*O
structure is described in the \*LDESCRIPTION\*O section.
.LI "\*Vband\*O"
Specifies the priority band.
.LI "\*Vflags\*O"
Specifies the type of message that should be sent.
.LE
.SH DESCRIPTION
.iX "putmsg function"
.iX "putpmsg function"
.iX "send a message on a Stream"
.iX "Stream" "send a message on a Stream"
.PP
The \*Lputmsg(\|)\*O and \*Lputpmsg(\|)\*O functions send messages to
the STREAMS file.  These messages are generated from user-provided
buffer(s), and must contain a control part and/or a data part.  The
open Stream specifies the format and semantics of the message's
control and data parts.  The control and data parts of the message are
placed into separate buffers, pointed at by \*Vcltbuf\*O and
\*Vdatabuf\*O respectively.  The \*Lputpmsg(\|)\*O function provides
more control over how messages are sent.  With this function, you can
send messages in different priority bands.  Except where specified,
all information that applies to the \*Lputmsg(\|)\*O function also
applies to the \*Lputpmsg(\|)\*O function.
.PP
The \*Vctlbuf\*O and \*Vdatabuf\*O parameters each point to a \*Lstrbuf\*O
structure that contains three members.  This structure is defined in
\*L<sys/stropts.h>\*O as:
.iS
struct strbuf {
    int maxlen;		/* max buffer length */
    int len;		/* length of data */
    char *buf		/* pointer to buffer */
};
.iE
The members are:
.VL
.LI "\*Lmaxlen\*O"
Specifies the maximum
number of bytes \*Vbuf\*O can hold.  This field is not used by either
the \*Lputmsg(\|)\*O or \*Lputpmsg(\|)\*O function.
.LI "\*Lbuf\*O"
Points to the
buffer where the control information is to reside.
.LI "\*Llen\*O"
Specifies the number of bytes to be sent.
.LE
A message can contain a control part and/or a data part, depending on
what is to be sent.  To send one or the other, the corresponding
\*Vctlbuf\*O or \*Vdatabuf\*O parameter must be a non-null pointer and
the \*Llen\*O field of the corresponding \*Lstrbuf\*O structure must
have a value of 0 (zero) or greater.  A data or control part is not
sent if its respective \*Vdatabuf\*O or \*Vctlbuf\*O parameter is a
null pointer, or if the corresponding structure's \*Llen\*O field is
set to -1.
.PP
One of the major differences between the \*Lputmsg(\|)\*O and
\*Lputpmsg(\|)\*O function, in addition to the \*Vband\*O parameter,
is how the \*Vflag\*O parameter is used to send messages.  The
\*Lputpmsg(\|)\*O function sends messages as follows:
.ML
.LI
If you set the \*Vflags\*O parameter to a value of 0 (zero), a normal
message (priority band equal to 0 (zero)) is sent.
.LI
If you set the \*Vflags\*O parameter to RS_HIPRI, and a control part
is specified, the control and data (if present) is sent as a high
priority message.
.LI
If you set the \*Vflags\*O parameter to RS_HIPRI, and a control part
is not specified, \*Lputmsg(\|)\*O fails.
.LI
If you set the \*Vflags\*O parameter to 0 (zero), and both the control
part and the data part of not specified, no message is sent and a
value of 0 (zero) is returned.
.LE
.PP
The \*Lputpmsg(\|)\*O function \*Vflags\*O parameter is a bitmask with
the mutually exclusive flags \*LMSG_HIPRI\*O and \*LMSG_BAND\*O defined.  The
\*Lputpmsg(\|)\*O function sends messages as follows:
.ML
.LI
If you set \*Vflags\*O to \*LMSG_BAND\*O, the control and/or data part is
sent on the priority band specified by the \*Vband\*O parameter.
.LI
If you set the \*Vflags\*O parameter to \*LMSG_HIPRI\*O, and set the
\*Vband\*O parameter to 0 (zero), and if a control part is specified,
the control and data (if present) is sent as a high-priority message.
.LI
If you set the \*Vflags\*O parameter to \*LMSG_HIPRI\*O, and either no
control part is specified or \*Vband\*O is set to a non-zero value,
the \*Lputpmsg(\|)\*O function fails.
.LI
If you set \*Vflags\*O to \*LMSG_BAND\*O, and both a control part and data
are not specified, no message is sent and a value of 0 (zero) is
returned.
.LI
If you set the \*Vflags\*O parameter to 0 (zero), \*Lputpmsg(\|)\*O
fails.
.LE
.PP
Unless the message is a high priority one, the \*Lputmsg(\|0\*O
function generally blocks if the Stream write queue is full.  This is
because of internal flow control conditions.  The \*Lputmsg(\|)\*O
function does not block on this condition for high priority messages.
However, for other messages, if the  O_NDELAY or O_NONBLOCK flag is
set for the \*Lwrite(\|)\*O operation, the \*Lputmsg(\|)\*O function
will not block when the write queue is full.  Instead, it fails.
.PP
In addition, unless the system runs out of internal resources, the
\*Lputmsg(\|)\*O and \*Lputpmsg(\|)\*O functions will block while
waiting for the availability of message blocks in the Stream.   In
this instance, neither the message priority nor the assertion of the
O_NDELAY or O_NONBLOCK flag matter.  Partial messages are not sent.
.SH RETURN VALUES
.PP
Upon successful completion, the \*Lputmsg(\|)\*O and \*Lputpmsg(\|)\*O
functions
return a value of 0 (zero). Otherwise, they return a value of -1 and
\*Lerrno\*O is set to indicate an error.
.SH ERRORS
.PP
Both the \*Lputmsg(\|)\*O and \*Lputpmsg(\|)\*O functions fail if the
Stream head has processed a STREAM error message before either of these
functions is called.  In this instance, the STREAMS error message
contains the value of the returned error.
.PP
In addition, if any of the following conditions occurs, the
\*Lputmsg(\|)\*O or \*Lputpmsg(\|)\*O function sets \*Lerrno\*O to the
corresponding value.
.VL
.LI "[EAGAIN]"
For a non-priority message, the \*LO_ONDELAY\*O or the
\*LO_NONBLOCK\*O flag is set, and the Stream write queue is determined to be
full because of the internal flow control conditions.
.LI "[EBADF]"
The \*Vfd\*O parameter is not invalid for writing.
.LI "[EINTR]"
The \*Lputmsg(\|) and \*Lputpmsg(\|)\*O function was interrupted by a
signal that was caught.
.LI "[EINVAL]"
An undefined message was specified in the \*Vflags\*O parameter.
.LI "[EINVAL]"
For the \*Lputmsg(\|)\*O function, the \*Vflags\*O parameter is
RS_HIPRI and the \*Vctlbuf len\*O
parameter is less than 0 (zero).
.LI "[EINVAL]"
For the \*Lputpmsg(\|)\*O function, the \*Vflags\*O parameter is
\*LMSG_HIPRI\*O and the \*Vctlbuf len\*O
parameter is less than 0 (zero) or the \*Vband\*O parameter is not 0
(zero); or the \*Vflags\*O parameter is \*LMSG_BAND\*O and the \*Vband\*O
parameter is greater than the system minimum.
.LI "[EINVAL]"
The Stream specified by the \*Vfd\*O parameter is linked under a
multiplexor.
.LI "[ENOSTR]"
A Stream is not associated with the \*Vfd\*O parameter.
.LI "[ENXIO]"
A hangup condition for the specified Stream was generated downstream.
.LI "[ERANGE]"
The size of the control part of a message is larger than the maximum
configured
size of the message's control part; or the data part of a message is
larger than the maximum configured size of the message's data part; or
the data part size of the message does not conform to the range
indicated by the maximum and minimum packet sizes of the topmost
Stream module.
.LE
.SH RELATED INFORMATION
.PP
Functions: \*Lgetmsg\*O(2), \*Lpoll\*O(2), \*Lread\*O(2), \*Lwrite\*O(2).
.nL
Interfaces: \*Lstreamio\*O(7).
.EQ
delim off
.EN
