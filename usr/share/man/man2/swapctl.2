.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: swapctl.2,v $ $Revision: 1.1.2.4 $ (DEC) $Date: 1994/01/19 22:03:46 $
.\"
.TH swapctl 2
.SH NAME
.PP
\*Lswapctl\*O \- Manages the system swap space
.SH SYNOPSIS
.PP
.sS
\*L#include <sys/stat.h>\*O
.nL
\*L#include <sys/swap.h>\*O
.PP
\*Lint swapctl (
.nL
       int \*Vcmd\*L,
.nL
       void \*V*arg );\*O
.sE
.SH PARAMETERS
.PP
.VL 4m
.LI "\*Vcmd\*O"
Specifies the operation to be performed.  Options include
adding a resource, deleting a resource, removing a resource,
or returning the number of swap resources.
.LI "\*Varg\*O"
Specifies a pointer to a structure.  See the DESCRIPTION
section for information on this structure.
.LE
.SH DESCRIPTION
.PP
.iX "swapctl function"
The \*Lswapctl\*O function manages the system swap space by
adding, deleting, or returning information about swap resources.
The \*Vcmd\*O parameter that you select determines the value
of the \*Larg\*O parameter.  The following sections discuss the
available commands and command arguments.
.SS Available Commands
.if n .PP
The \*Lswapctl\*O function adds, removes, or returns information
on the system swap space using the following values for the
\*Vcmd\*O parameter:
.VL
.LI "\*LSC_ADD\*O"
Includes a new resource in the swap list.
.LI "\*LSC_LIST\*O"
Provides a list of the resources available for swapping.
.LI "\*LSC_REMOVE\*O"
Removes a resource from the swap list.
.LI "\*LSC_GETNSWP\*O"
Counts and returns the number of swap resources.
.LE
With the exception of the \*LSC_GETSNSWP\*O command, each of these
commands returns information in a structure pointed to by the
\*Varg\*O parameter.  The next sections discusses the information
that is contained in these structures after a successful return.
.SS Command Arguments
.if n .PP
The value of the \*Varg\*O parameter is specific to the type of
command specified by the \*Vcmd\*O parameter.  This section highlights
the value for the \*Varg\*O parameter as it pertains to the commands.
.PP
If either the \*LSC_ADD\*O or \*LSC_REMOVE\*O command is specified,
the \*Varg\*O parameter is a pointer to the following \*Lswapres\*O
structure:
.PP
.sS
\*Ltypdef struct swapres {\*L
.nL
     char     \*Vsr_name;\*L
.nL
     off_t    \*Vsr_start;\*L
.nL
     off_t    \*Vsr_length\*L;
.nL
} swapres_t;\*O
.sE
.PP
The fields are defined as follows:
.VL
.LI "\*V*sr_name\*O"
Provides the pathname of the resource that is being added or
removed.
.LI "\*Vsr_start\*O"
Specifies in 512-byte blocks, the offset of the resource area
from the start.
.LI "\*Vsr_length\*O"
Specifies in 512-byte blocks, the length of the swap area.
.LE
.PP
When using the \*LSC_ADD\*O and \*LSC_REMOVE\*O commands,
the calling process fails if the appropriate privileges do not exist
for the operation.
.PP
If the \*LSC_LIST\*O command is specified, the \*Varg\*O parameter
is a pointer to the following \*Lswaptable\*O structure:
.PP
.sS
\*Lint     \*Vswt_n;\*L
.nL
struct swapent  \*Vswt_ent\*O [];
.sE
.PP
In this structure, the field \*Vswt_n\*O specifies the maximum
entries that will be returned by the \*Lswapctl\*O function.
The \*Vswt_ent\*O field is an array of \*Vswt_n\*O \*Lswapents\*O.
The \*Lswapent\*O structure is as follows:
.PP
.sS
\*Ltypdef struct swapwent\*O
.nL
          \*Lchar     \*V*ste_path;\*L
.nL
          \*Loff_t    \*Vste_start;\*L
.nL
          \*Loff_t    \*Vste_length\*L;
.nL
          \*Llong    \*Vste_pages\*L;
.nL
          \*Llong    \*Vste_free\*L;
.nL
          \*Llong    \*Vste_flags\*L;
.nL
} swapwent_t;\*O
.sE
.PP
The fields are defined as follows:
.VL
.LI "\*V*ste_path\*O"
Specifies the name of the swap file.
.LI "\*Vste_start\*O"
Specifies the starting block to begin swapping.
.LI "\*Vste_length\*O"
Specifies in 512-byte blocks, the length of the swap area.
.LI "\*Vste_page\*O"
Specifies the number of pages available for swapping.
.LI "\*Vste_free\*O"
Specifies the number of pages that are free.
.LI "\*Vste_flags\*O"
Sets the ST_INDEL bit if the swap file is being deleted.
.LE
.SH RETURN VALUE
.PP
On success, the \*Lswapctl\*O function returns zero (0) when
used with the \*LSC_ADD\*O or \*LSC_REMOVE\*O commands. For
the \*LSC_LIST\*O command, the number of \*Lstruct swapent\*O
entries actually returned indicates success, and for \*LSC_GETNSWP\*O,
the number of swap resources in use is returned upon success.
.PP
On error, the \*Lswapctl\*O function returns a value of -1 and
sets \*Lerrno\*O to indicate the error.
.SH ERRORS
.PP
If the \*Lswapctl\*O function fails, \*Lerrno\*O is set to one of
the following:
.VL
.LI "[EEXIST]"
Indicates that the range specified by the \*Vsr_start\*O and
\*Vsr_length\*O fields for the \*LSC_ADD\*O command is already
in use for swapping.
.LI "[EFAULT]"
Specifies that the structure pointed to by the \*Varg\*O
parameter, or one of the fields \*Vsr_name\*O or \*Vste_path\*O
is outside the allocated address space.
.LI "[EINVAL]"
Specifies one of the following:
.ML
.LI
The command value is not valid.
.LI
The path used with the \*LSC_REMOVE\*O command is not a swap resource.
.LI
The range indicated by the \*Vsr_start\*O and \*Vsr_length\*O fields for
the \*LSC_ADD\*O command is outside the resource specified.
.LI
The indicated swap area is less than one page for the \*LSC_ADD\*O
command.
.LE
.LI "[EISDIR]"
Indicates that the path used with the \*LSC_ADD\*O command is
not a directory.
.LI "[ELOOP]"
Indicates that the pathname used with the \*LSC_ADD\*O or
\*LSC_REMOVE\*O commands has too many symbolic links to correctly
translate the pathname.
.LI "[ENAMETOOLONG]"
Indicates that the length or path used with the \*LSC_ADD\*O
or \*LSC_REMOVE\*O command exceeds the maximum allowed with
\*L{_POSIX_NO_TRUNC}\*O in effect.
.LI "[ENOENT]"
Indicates that a nonexisting pathname was specified with either
the \*LSC_ADD\*O or \*LSC_REMOVE\*O commands.
.LI "[ENOMEM]"
Specifies one of the following:
.ML
.LI
Not enough \*Lstruct swapent\*O structures exist for the
\*LSC_LIST\*O command.
.LI
Sufficient system storage resources were not available during
an \*LSC_ADD\*O or \*LSC_REMOVE\*O operation.
.LI
Not enough swap space would exists after an \*LSC_REMOVE\*O
operation.
.LE
.LI "[ENOSYS]"
Indicates that the pathname specified for a \*LSC_ADD\*O or
\*LSC_REMOVE\*O operation is not a filename or special block
device.
.LI "[ENOTDIR]"
Specifies that the pathname used with the \*LSC_ADD\*O or
\*LSC_REMOVE\*O commands contained a component in the path
that was not a directory.
.LI "[EPERM]"
Indicates that insufficient privileges do not exist for the
operation.
.LI "[EROFS]"
Indicates that a read-only file system was specified by the
path for the \*LSC_ADD\*O command.
.LE
.EQ
delim off
.EN
