.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: get.1,v $ $Revision: 3.2.5.5 $ (DEC) $Date: 1993/12/01 16:22:43 $
.\" 
...\"
...\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\"
.TH get 1
.SH NAME
.PP
\*Lget\*O - Creates a specified version of a Source Code Control System (SCCS) file
.SH SYNOPSIS
.PP
.\" .zA "review, R1.1.2, XPG4"
.sS
.\" .in +.5i
.\".ti -.5i
\*Lget\*O
\*O[\*L\(hyg\*O]
\*O[\*L\(hyL\*O]
\*O[\*L\(hym\*O]
\*O[\*L\(hyn\*O]
\*O[\*L\(hyp\*O]
\*O[\*L\(hys\*O]
\*O[\*L\(hyt\*O]
\*O[\*L\(hyc\ \*Vcutoff\*O]
\*O[\*L\(hyi\ \*Vlist\*O]
\*O[\*L\(hyr\ \*VSID\*O]
\*O[\*L\(hyw\ \*Vstring\*O]
\*O[\*L\(hyx\ \*Vlist\*O]
\*Vfile\*O\ \&.\&.\&.\  |\ \*L\(hy\*O
.\" .in -.5i
.PP
.\" .in +.5i
.\" .ti -.5i
\*Lget\*O
\*O[\*L\(hyb\*O]
\*O[\*L\(hye\*O]
\*O[\*L\(hyk\*O]
\*O[\*L\(hys\*O]
\*O[\*L\(hyt\*O]
\*O[\*L\(hyc\ \*Vcutoff\*O]
\*O[\*L\(hyi\ \*Vlist\*O]
\*O[\*L\(hyr\ \*VSID\*O]
\*O[\*L\(hyx\ \*Vlist\*O]
\*O[\*L\(hyl\*O\ |\ \*L\(hylp\*O]
\*Vfile\*O\ \&.\&.\&.\  |\ \*L\(hy\*O
.in -.5i
.sE
.PP
The \*Lget\*O command reads the specified versions of the named SCCS
files, and creates a text file (the g-file), for each file according to the specified
flags. The command then writes each text file to a file with the same name as the
original SCCS file without the \*Ls.\*O (\*Ls\*O period) prefix.
.iX "get command"
.iX "files" "SCCS"
.iX "SCCS" "creating a specified file version"
.iX "creating" "specified version of SCCS file"
.iX "versions" "SCCS file"
.SH FLAGS
.PP
.VL 4m
.LI "\*L-b\*O"
Specifies that the delta to be created should have an SID in a new
branch.  The new SID is numbered according to the rules stated in
the table \*LSID Determination\*O.  You can use \*L-b\*O only with the
\*L-e\*O flag.  It is only necessary when you want to branch from a
\*Vleaf delta\*O (a delta without a successor).
.iX "deltas" "branching from nonleaf"
Attempting to create a delta at a nonleaf delta automatically results in
a branch, even if the \*Lb\*O header flag is not set.  If you do
not specify the \*Lb\*O header flag in the SCCS file, \*Lget\*O
ignores the \*L-b\*O flag because the file does not allow branching.
.LI "\*L-c\*Vcutoff\*O"
Specifies a cutoff date and time, in the form:
\*Vyy\*O[\*Vmm\*O[\*Vdd\*O[\*Vhh\*O[\*Vmm\*O[\*Vss\*O]]]]].
The \*Lget\*O command includes no deltas to the SCCS file created
after the specified cutoff in the g-file.  The values of any
unspecified items in \*Vcutoff\*O default to their maximum
allowable values.  Thus, a cutoff date and time specified with only the
year (\*Vyy\*O) would specify the last month, day, hour, minute,
and second of that year.  Any number of nonnumeric characters can
separate the 2-digit items of the cutoff date and time.
This allows you to specify a date and time in a number of ways, as
follows:
.iS
-c90/9/2,9:00:00
-c"90/9/2 9:00:00"
"-c90/9/2 9:00:00"
\*O\c
.iE
.LI "\*L-e\*O"
Indicates that the g-file being created is to be edited by the user
applying \*Lget\*O.  The changes are recorded later with the
\*Ldelta\*O command.  The \*Lget -e\*O command creates a p-file that
prevents other users from issuing another \*Lget -e\*O and editing
a second g-file on the same SID before \*Ldelta\*O is run.  The
owner of the file can override this restriction by allowing joint
editing on the same SID through the use of the \*Ladmin\*O command
with the \*L-fj\*O flag.  Other users, with permission, can obtain
read-only copies by using \*Lget\*O without the \*L-e\*O flag.
The \*Lget\*O \*L-e\*O command enforces SCCS file protection
specified via the ceiling, floor, and authorized user list in the SCCS
file (see the \*Ladmin\*O command).
.LI "\*L-g\*O"
Suppresses the actual retrieval of text from the SCCS file.  Use the
\*L-g\*O flag primarily to create an l-file or to verify the
existence of a particular SID.  Do not use it with the \*L-e\*O
flag.
.LI "\*L-i\*Vlist\*O"
Specifies a \*Vlist\*O of deltas to be included in
the creation of a g-file.
The SID list format consists of a combination of individual
SIDs separated by commas and SID ranges indicated by two SIDs separated
by a hyphen, as shown in the following example:
.iS
get -e -i1.4,1.5,1.6 s.file

get -e -i1.4-1.6 s.file
\*O\c
.iE
.IP
You can specify the SCCS Identification of a delta in any form shown
in the \*LSID Specified\*O column of the table \*LSID Determination\*O.
The \*Lget\*O command interprets partial SIDs as shown in the \*LSID
Retrieved\*O column of the table.
.LI "\*L-k\*O"
Suppresses replacement of identification keywords in the g-file by
their values.  The \*L-k\*O flag is implied
by the \*L-e\*O flag.  If you accidentally ruin the g-file created
by \*Lget\*O with an \*L-e\*O flag, you can recreate it by
reissuing the \*Lget\*O command with the \*L-k\*O flag in
place of the \*L-e\*O flag.
.LI "\*L-l[p]\*O"
Writes a delta summary to an l-file.
.IP
If you specify \*L-lp\*O, \*Lget\*O interprets it as \*L-L\*O. The
\*L-lp\*O option is obsolete.
.LI "\*L-L\*O"
Writes a delta summary to standard output and does not create an l-file.
All informative output that normally is written to standard output
is written to standard error instead, unless the \*L-s\*O flag is
specified, in which case it is suppressed.
Use this flag to determine which deltas were used to
create the g-file currently in use.
.LI "\*L-m\*O"
Writes before each line of text in the g-file the SID of the delta
that inserted the line into the SCCS file.  The format is as follows:
.iS
\*VSID\*O \*Vtab\*O \*Vline_of_text\*O
.iE
.LI "\*L-n\*O"
Writes the value of the \*L%\&M%\*O keyword before each
line of text in the g-file.
The format is the value of \*L%\&M%\*O, followed by a horizontal tab, followed
by the text line.  When both the \*L-m\*O and \*L-n\*O flags
are used, the format is as follows:
.\" old code for example %\&M% \*Vvalue  tab  SID  tab  line_of_text\*O
.iS
\*V%\&M%_value\*O \*Vtab  SID  tab  line_of_text\*O
.iE
.LI "\*L-p\*O"
Writes the text created from the SCCS file to standard output and
does not create a g-file.  The \*Lget\*O command sends output normally sent to
standard output to file descriptor 2 instead.  If you specify the
\*L-s\*O flag with the \*L-p\*O flag, output normally sent to
standard output does not appear anywhere.  Do not use \*L-p\*O with
the \*L-e\*O flag.
.LI "\*L-r\*VSID\*O"
Specifies the SCCS identification string (SID) of the SCCS file
version to be created.  Shows what version of a
file is created and the SID of the pending delta as functions of the SID
specified.
.LI "\*L-s\*O"
Suppresses all output normally written to standard output.
Error messages (written to standard error output) remain unaffected.
.LI "\*L-t\*O"
Accesses the most recently created delta in a given release or
release and level.  Without the \*L-r\*O flag, \*Lget\*O
accesses the most recent delta regardless of its SID.
.LI "\*L-w\*Vstring\*O"
Substitutes \*Vstring\*O for the \*L%\&W%\*O keyword in g-files
not intended for editing.
.LI "\*L-x\*Vlist\*O"
Excludes a \*Vlist\*O of deltas in the creation of a file.
See the \*L-i\*O flag for the SID list format.
.LE
.SH DESCRIPTION
.PP
The flags and files can be specified in
any order, and all flags apply to all named files.
If you specify a directory in place of \*Vfile\*O,
\*Lget\*O performs the requested actions on all the files in the
directory that begin with the \*Ls\&.\*O prefix.  If you
specify a \*L-\*O (dash) in place of \*Vfile\*O,
\*Lget\*O reads standard input and interprets each line as the name
of an SCCS file.  The \*Lget\*O command continues to read input until it reads
an End-of-File character.
.PP
If the effective user has write permission in the directory
containing the SCCS files but the real user does not, then only one file
can be named when the \*L-e\*O flag is used.
.\" .PP 
.\" If you are not familiar with the delta numbering system, see \*Lget\*O,
.\" \*Lsccs\*O, and "Controlling File Revisions with SCCS" in the \*(Ga.
.SS "SCCS Files"
In addition to the file with the \*Ls\&.\*O prefix (the
s-file), \*Lget\*O can create several auxiliary files:
the g-file, l-file, p-file, and z-file.
These files are identified by their \*Vtag\*O, which is the letter before
the dash.  The \*Lget\*O command names auxiliary files by replacing the
leading \*Ls.\*O in the SCCS filename with the proper tag, except
for the g-file, which is named by removing the \*Ls.\*O prefix.
So, for a file named \*Ls.sample\*O, the auxiliary filenames would
be \*Lsample\*O, \*Ll.sample\*O, \*Lp.sample\*O, and
\*Lz.sample\*O.
.PP
These files serve the following purposes:
.VL 4m
.LI "\*Ls-file\*O"
Contains the original file text and all the changes
(deltas) made to the file.  It also includes information
about who can change the file contents, who has made changes, when those
changes were made, and what the changes were.  You cannot edit this file
directly, because the file is read-only.  It contains the information
needed by the SCCS commands to build the g-file, the file you can edit.
.LI "\*Lg-file\*O"
A text file that contains the text of the SCCS
file version that you specify with the \*L-r\*O flag (or the latest
trunk version by default).  You can edit this file directly.  When you
have made all your changes and you want to make a new delta to the file,
you can then apply the \*Ldelta\*O command to the file.
The \*Lget\*O command creates the g-file in the current directory.
.IP
The \*Lget\*O command creates a g-file whenever it runs, unless
the \*L-g\*O flag or the \*L-p\*O flag is specified.  The real
user owns it (not the effective user).  If you do not specify the
\*L-k\*O or the \*L-e\*O flag, the file is read-only.  If the
\*L-k\*O or the \*L-e\*O flag is specified, the owner has
write permission for the g-file.  You must have write permission in the
current directory to create a g-file.
.LI "\*Ll-file\*O"
The \*Lget\*O command creates
the l-file (a read-only file) when the \*L-l\*O flag is specified.
It contains a table showing which deltas were applied in
generating the g-file.
You must have write permission in the current directory
to create an l-file.  Lines in the l-file have the following format:
.\".rS
.ML
.LI
A space if the delta was applied; an * (asterisk)
appears otherwise.
.LI
A space if the delta was applied or was not applied and
ignored; an * appears if the delta was not applied and was not
ignored.
.LI
A code indicating a special reason why the delta was or was not
applied:
.VL 4m
.LI "\*Vspace\*O"
Included or excluded normally.
.LI "\*LI\*O"
Included using the \*L-i\*O flag.
.LI "\*LX\*O"
Excluded using the \*L-x\*O flag.
.LI "\*LC\*O"
Cut off using the \*L-c\*O flag.
.LE
.LI
The SID.
.LI
The date and time the file was created.
.LI
The username of person who created the delta.
.IP
Comments and MR data follow on subsequent lines, indented one
horizontal tab character.  A blank line ends each entry.
.IP
For example, for a delta cut off with the \*L-c\*O flag, the
entry in the l-file might be:
.iS
**C 1.3 90/03/13 12:44:16 pat
\*O\c
.iE
.IP
and the entry for the initial delta might be:
.iS
1.1 90/02/27 15:42:20 pat
date and time created 90/02/27 15:42:20 by pat
.iE
\*O\c
.LE
.LI "\*Lp-file\*O"
The \*Lget\*O command creates the p-file when the \*L-e\*O
or the \*L-k\*O flag is specified.
The p-file passes information resulting
from a \*Lget -e\*O to a \*Ldelta\*O command.
The p-file also prevents a subsequent execution of \*Lget\*O with an
\*L-e\*O flag for the same SID until \*Ldelta\*O is run or the
joint edit keyletter (\*Lj\*O) is set in the SCCS file.  The
\*Lj\*O keyletter allows several \*Lget\*Os on the same SID.
The p-file is created in the directory containing the SCCS
file.  To create a p-file in the SCCS directory, you must
have write permission in that directory.  The permission code of the
p-file is read-only to all but its owner, and it is owned by the
effective user.  The p-file contains:
.ML
.LI
The current SID.
.LI
The SID of new delta to be created.
.LI
The username.
.LI
The date and time of the \*Lget\*O.
.LI
The \*L-i\*O flag, if it was present.
.LI
The \*L-x\*O flag, if it was present.
.IP
The p-file contains an entry with the preceding information for each
pending delta for the file.  No two lines have the same new delta SID.
.LE
.LI "\*Lz-file\*O"
The z-file is a lock mechanism against simultaneous updates.
It contains the binary process
number of the \*Lget\*O command that created it.
It is created in the directory containing the
SCCS file and exists only while the \*Lget\*O command is running.
.LE
.PP
When you use the \*Lget\*O command, it displays the SID being
accessed and the number of lines created from the SCCS file.  If you
specify the \*L-e\*O flag, the SID of the delta to be made appears
after the SID accessed and before the number of lines created.  If you
specify more than one file, or a directory, or standard input,
\*Lget\*O displays the filename before each file is processed.  If
you specify the \*L-i\*O flag, \*Lget\*O lists included deltas
below the word \*LIncluded\*O.  If you specify the \*L-x\*O
flag, \*Lget\*O lists excluded deltas below the word
\*LExcluded\*O.
.SS "Getting Read-Only File Versions"
The \*Lget\*O command creates
read-only versions as well as editable versions of a file.  Use read-only
versions of files any time the
application does not require that the file contents be
changed.  Read-only versions of source code files can be
compiled.  Text files can be displayed or printed from read-only versions.
.PP
The difference between an editable version and
a read-only version is important when using identification
keywords.  Identification keywords are symbols that are
expanded to some text value when the \*Lget\*O command retrieves
the file as read-only.  In editable versions, keywords are
not expanded.  Identification keywords can appear anywhere
in an SCCS file (see the \*Lprs\*O command for further information
on identification keywords).
.SS Identification Keywords
You can use identification keywords in your files to insert
identifying information.  These keywords are replaced by their values in
the g-file when \*Lget\*O is invoked without the \*L-e\*O or
\*L-k\*O flag.  The following identification keywords can be used
in SCCS files:
.PP
\*LIdentifying Values:\*O
.VL 4m
.LI "\*L%\&M%\*O"
Module name: the value of the \*Lm\*O flag in the SCCS file with the leading s. removed
.LI "\*L%\&I%\*O"
The SID (\*L%\&R%.%\&L%.%\&B%.%S\&%\*O) of the g-file
.LI "\*L%\&R%\*O"
Release
.LI "\*L%\&L%\*O"
Level
.LI "\*L%\&B%\*O"
Branch
.LI "\*L%\&S%\*O"
Sequence
.LI "\*L%\&D%\*O"
Date of the current \*Lget\*O (\*Vyy/mm/dd\*O)
.LI "\*L%\&H%\*O"
Date of the current \*Lget\*O (\*Vmm/dd/yy\*O)
.LI "\*L%\&T%\*O"
Time of the current \*Lget\*O (\*Vhh:mm:ss\*O)
.LI "\*L%\&E%\*O"
Date newest applied delta was created (\*Vyy/mm/dd\*O)
.LI "\*L%\&G%\*O"
Date newest applied delta was created (\*Vmm/dd/yy\*O)
.LI "\*L%\&U%\*O"
Time newest applied delta was created (\*Vhh:mm:ss\*O)
.LE
.PP
\*LNames:\*O
.VL 4m
.LI "\*L%\&F%\*O"
SCCS filename
.LI "\*L%\&P%\*O"
Full pathname of the SCCS file
.LE
.PP
\*LFlag Value:\*O
.VL 4m
.LI "\*L%\&Q%\*O"
The value of the \*Lq\*O flag in the file
.LI "\*L%\&Y%\*O"
Module type: the value of the \*Lt\*O flag in the SCCS file
.LE
.PP
\*LLine Number:\*O
.VL 4m
.LI "\*L%\&C%\*O"
The current line number.  This keyword is for identifying
messages output by the program.  It is not intended for use on every
line to provide sequence numbers.
.LE
.PP
\*LConstructing what Strings:\*O
.VL 4m
.\" .LI "\*L%\&A%\*O"
.\" A shorthand notation for constructing \*Lwhat\*O
.\" strings for non-OSF/1 program files.  Its value is the keyletters:
.\" .iS
.\" \&%\&A\&% \&= \&%\&Z\&%\&%\&Y\&% \&%\&M\&% \&%\&I\&%\&%\&Z\&%
.\" \*O\c
.\" .iE
.LI "\*L%\&W%\*O"
A shorthand notation for constructing \*Lwhat\*O strings of the
following type. Its value is the characters and keyletters:
.iS
\&%\&W\&% \&=  \&%\&Z\&%\&%\&M\&%\<tab\>\&%\&I\&%
\*O\c
.iE
.LI "\*L%\&Z%\*O"
The 4-character string \*L@(#)\*O recognized by the \*Lwhat\*O command.
.LE
.PP
The following table illustrates how \*Lget\*O determines the SID
of the file it retrieves, and what the pending SID is.  The column
\*LSID Specified\*O shows the various ways the SID can be specified
with the \*L-r\*O flag.  The next two columns illustrate the various
conditions that can exist, including whether or not the \*L-b\*O
flag is used with the \*Lget -e\*O.  The \*LSID Retrieved\*O column
indicates the SID of the file that makes up the g-file.  The \*LSID of
Delta to be Created\*O column indicates the SID of the version that
will be created when \*Ldelta\*O is applied.
.PP
.SS SID Determination Table
.TS
tab(~);
lB lB lB lB lB
lB lB lB lB lB
l l l l l.
_
.sp
SID~\-b~Other~SID~SID of Delta
Specified~Used~Conditions~Retrieved~to be Created
.sp
_
.sp
None (1)~No~R defaults~mR.mL~mR.(mL+1)
~~to mR(\&2)
None (1)~Yes~R defaults to mR~mR.mL~mR.mL.(mB+1).1
(R)elease~No~R > mR~mR.mL~R.1 (\&3)
R~No~R = mR~mR.mL~mR.(mL+1)
R~Yes~R > mR~mR.mL~mR.mL.(mB+1).1
R~Yes~R = mR~mR.mL~mR.mL.(mB+1).1
R~N/A~R < mR and~hR.mL (4)~hR.mL.(mB+1).1
~~R does not exist
R~N/A~R < mR and~R.mL~R.mL.(mB+1).1
~~R exists
R.(L)evel~No~No trunk~R.L~R.(L+1)
~~successor
R.L~yes~No trunk~R.L~R.L(mB+1).1
~~successor
R.L~N/A~Trunk~R.L~R.L.(mB+1).1
~~successor in
~~release \(>= R
R.L.(B)ranch~No~No branch~R.L.B.mS~R.L.B.(mS+1)
~~successor
R.L.B~Yes~No branch~R.L.B.mS~R.L.(mB+1).1
~~successor
R.L.B.(S)equence~No~No branch~R.L.B.S~R.L.B.(S+1)
~~successor
R.L.B.S~Yes~No branch~R.L.B.S~R.L.(mB+1).1
~~successor
R.L.B.S~N/A~Branch~R.L.B.S~R.L.(mB+1).1
~~successor
.sp
_
.TE
.PP
(1) Applies only if the
\*Ld\*O (default SID) flag is not present in the file (see \*Ladmin\*O).
.PP
(2) The mR indicates the maximum existing release.
.PP
(3) Forces creation of the first delta in a new release.
.PP
(4) The hR is the highest existing release that is lower than the specified,
nonexistent, release R.
.SH EXAMPLES
.PP
The following examples and descriptions illustrate the differences between
read-only and editable versions of SCCS files.
.AL
.LI
To insert the current date and SID in a file, enter the following
symbols in the file:
.iS
%\&H% %\&I%
\*O\c
.iE
.IP
\*L%\&H%\*O is the symbol for the current date and \*L%\&I%\*O is the
symbol for the SID.  When \*Lget\*O retrieves a file as editable,
it leaves the symbols in the file and does not do text value
substitution.
.LI
The following example builds the version with the highest SID,
because no version of the file is specified:
.iS
\*C$\*L ls
.iE
.oS
s.test.c
.oE
.iS
\*C$\*L get s.test.c
.iE
.oS
3.5
59 lines
.oE
.iS
\*C$\*L ls
.iE
.oS
s.test.c test.c
\*O\c
.oE
.LI
In the next two command lines, the \*L-r\*O flag specifies which
version to \*Lget\*O:
.iS
\*C$\*L get -r1.3 s.test.c
.iE
.oS
1.3
67 lines
.oE
.iS
\*C$\*L get -r1.3.1.4 s.test.c
.iE
.oS
1.3.1.4
50 lines
\*O\c
.oE
.LI
If you specify only the release number of the SID, \*Lget\*O finds
the file with the highest level within that release number:
.iS
\*C$\*L get -r2 s.test.c
.iE
.oS
2.7
21 lines
\*O\c
.oE
.LI
If the SID specified is greater than the highest existing SID,
\*Lget\*O retrieves the highest existing SID and displays an error
message. If the SID specified
is lower than the lowest existing SID, SCCS writes an error
message.  In the following example, release 7 is the highest
existing release:
.iS
\*C$\*L get -r9 s.test.c
\*C ERROR [s.test.c]
\*C The SID specified does not exist.
\*C Use the sact command to check the P-file
\*C for existing SID numbers. (cm20)
.iE
.oS
7.6
400 lines
\*O\c
.oE
.LI
The \*L-t\*O flag gets the top version in a given release or level.
The top version is the most recently created delta, independent of
its location.  In the next example, the highest existing delta in
release 3 is 3.5, while the most recently created delta is 3.2.1.5:
.iS
\*C$\*L get -t -r3 s.test.c
.iE
.oS
3.2.1.5
46 lines
\*O\c
.oE
.IP
All of the previous examples use the \*Lget\*O command to \*Lget\*O a
read-only file.  To create a copy of the file that can be edited
to create a new delta, use the
\*L-e\*O flag.  The \*Lget\*O command works differently when using
the \*L-e\*O flag (see also the \*Ladmin\*O command).
Use \*Lunget\*O to undo the effect of the \*Lget -e\*O
command and discard any changes made to the file before a
delta is created.
.LI
The following example shows how to use the \*L-e\*O flag:
.iS
\*C$\*L ls
.iE
.oS
s.test.c
.oE
.iS
\*C$\*L get -e s.test.c
.iE
.oS
1.3
new delta 1.4
67 lines
.oE
.iS
\*C$\*L ls
.iE
.oS
p.test.c s.test.c test.c
\*O\c
.oE
.IP
The working file is \*Ltest.c\*O.  If you edit \*Ltest.c\*O and
save the changes with the \*Ldelta\*O command, SCCS creates a new
delta with an SID of 1.4.  The file \*Lp.test.c\*O is a temporary
file used by SCCS to keep track of file versions.
.LI
In the previous example, you could have used the \*L-r\*O flag to
\*Lget\*O a specific version.  Assuming delta 1.3 already exists and is
the highest delta in release, the
following three uses of the \*Lget\*O command produce the same
results:
.iS
\*C$\*L get -e s.test.c
\*C$\*L get -e -r1 s.test.c
\*C$\*L get -e -r1.3 s.test.c
\*O\c
.iE
.LI
To start using a new (higher in value) release number, \*Lget\*O the file
with the \*L-r\*O flag and specify a release number greater than
the highest existing release number.  In the next example, release
2 does not yet exist:
.iS
\*C$\*L get -e -r2 s.test.c
.iE
.oS
1.3
new delta 2.1
67 lines
\*O\c
.oE
.IP
Notice that \*Lget\*O indicates the version of the new delta that
will be created if the \*Ldelta\*O command stores changes to the
SCCS file.
.IP
If the example did not include the \*L-e\*O flag,
\*Lget\*O would build the highest existing SID (1.3) and would not
indicate a new delta, even though the \*L-r2\*O flag requests a
version 2.1.
.LI
To create a branch delta, use the \*L-r\*O flag and specify the
release and level where the branch occurs.  In the next example,
deltas 1.3 and 1.4 already exist:
.iS
\*C$\*L get -e -r1.3 s.test.c
.iE
.oS
1.3
new delta 1.3.1.1
67 lines
\*O\c
.oE
.IP
Create deltas on branches using the same methods.
.IP
Several different editable versions of an SCCS file can
exist as long as each one is in a different directory.  If you try
to \*Lget\*O the same editable file version more than once into the same
directory without using the \*Ldelta\*O command, SCCS writes an
error message.
.IP
To \*Lget\*O the same editable file version more than once, set the
\*Lj\*O option in the SCCS file with the \*Ladmin\*O command.
Set the \*Lj\*O option using the \*L-f\*O flag.  You can then \*Lget\*O
the same SID several times from different directories, creating a
separate file for each \*Lget\*O command.  Although the files
originate from a single SID, SCCS gives each of them a unique new SID.
.LI
In the following example, the \*Lpwd\*O command displays the
current directory.  Then the \*Lj\*O option is set with the
\*Ladmin\*O command:
.iS
\*C$\*L pwd
.iE
.oS
/u/dan/sccs
.oE
.iS
\*C$\*L admin -fj s.test.c
\*O\c
.iE
.LI
Then use the \*Lget\*O command to retrieve the latest version of
the file:
.iS
\*C$\*L get -e s.test.c
.iE
.oS
1.1
new delta 1.2
5 lines
\*O\c
.oE
.LI
Change to directory \*L/u/new\*O and issue the \*Lget\*O command
again:
.iS
\*C$\*L cd /u/new
\*C$\*L get -e /u/dan/sccs/s.test.c
.iE
.oS
1.1
WARNING: 1.1 1.2 dan 90/08/21 09:03:45 is being edited.
This if an informational message only. (ge18)
new delta 1.1.1.1
5 lines
\*O\c
.oE
.IP
Notice that SCCS creates two deltas, 1.2 and 1.1.1.1, from the
single original file version of 1.1.  The \*Lp.test.c\*O file shows
a separate entry for each version currently in use.  The
\*Lp.test.c\*O file remains in the directory until you take care of
both file versions with either the \*Ldelta\*O command or the
\*Lunget\*O command.  (Note that you must have write permission in
both directories to issue the preceding commands.)
.LE
.SH RELATED INFORMATION
.PP
Commands:  \*Ladmin\*O(1), \*Lcdc\*O(1), \*Lcomb\*O(1), \*Ldelta\*O(1),
\*Lprs\*O(1), \*Lrmdel\*O(1), \*Lsact\*O(1), \*Lsccsdiff\*O(1),
\*Lsccshelp\*O(1), \*Lunget\*O(1), \*Lval\*O(1), \*Lwhat\*O(1).
.PP
Files: \*Lsccsfile\*O(4).
.PP
.EQ
delim off
.EN
