.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: tar.1,v $ $Revision: 3.5.7.7 $ (DEC) $Date: 1994/01/14 20:54:58 $
.\"
.\" (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 Release 1.0.4
.\"build rmifdef
.\" @(#)tar.1 6.6 (Berkeley) 5/23/88
.\" 
.TH tar 1
.SH NAME
.PP
\*Ltar\*O \- Manipulates tape archives
.SH SYNOPSIS
.PP
.sS
.in +.5i
.ti -.5i
\*Ltar\*O
\*Vrequired_flag\*O[\*LbBfFhilLmpPsSvw\*Vn\*O][\*Ln\*O
|
\*Lo\*O]
.nL
\*O[\*Vflag_argument\*O
\&...]
\*O[\*L\-e\*O
\*Vexception\*O]
\&...
\*O[\*L\-C\*O
\*Vdirectory\*O]
\&...
\*O[\*Vfile\*O
\&...]
.in -.5i
.sp
.in +.5i
.ti -.5i
\*Ltar\*O
\*L\-\*O\*Vrequired_flag\*O[\*Voptional_flag\*O]
[\*Vflag_argument\*O]
\&...
.nL
[\*Ln\*O
|
\*Lo\*O]
\*O[\*Vflag_argument\*O
\&...]
\*O[\*L\-e\*O
\*Vexception\*O]
\&...
.nL
\*O[\*L\-C\*O
\*Vdirectory\*O]
\&...
\*O[\*Vfile\*O
\&...]
.in -.5i
.sE
.PP
The \*Ltar\*O
command saves and
restores multiple files on a single file (usually a magnetic
tape, but it can be any file).
.PP
.ce
\f(HBNote\fP
.PP
The syntax of the \*Ltar\*O command has recently changed.  The minus
sign (\|\*L-\*O\|) at the beginning of a flag set is no longer
optional.  If \*Ltar\*O sees a minus sign in front of a flag that
requires an argument, \*Ltar\*O expects the argument to follow the flag
immediately.  In order to use the original \*Ltar\*O syntax in existing
scripts, you must remove the minus sign if more than one flag requiring
an argument is given.  Consider this command in the old form:
.iS
tar -xbfp 20 /dev/rmt1h
.iE
Under the new implementation, this command becomes
.iS
tar xbfp 20 /dev/rmt1h
.iE
or
.iS
tar -xb 20 -t /dev/rmt1h -p
.iE
.PP
.SH DESCRIPTION
.PP
.iX "tar command"
.iX "tape" "archiver"
.iX "saving files on tape"
.iX "writing" "files to tape"
.iX "restoring" "files from tape"
.iX "magnetic tape" "writing and restoring files"
.iX "tape" "writing and restoring files"
.PP
The \*Ltar\*O command is used to save and restore data from traditional
format \*Ltar\*O archives.
.PP
The actions of the \*Ltar\*O command are controlled
by a string containing, at most, one required flag and possibly
one or more optional flags.  Other arguments to \*Ltar\*O
are file or directory names specifying which files to dump or restore.
In all cases, appearance of a directory name refers to
the files and (recursively) subdirectories of that directory.
.PP
The \*LLC_MESSAGES\*O variable determines the locale's equivalent
of \*Ly\*O or \*Ln\*O (for yes/no queries).
.SH FLAGS
.PP
The function performed by \*Ltar\*O is specified by one of
the following required flags:
.VL 4m
.LI "\*Lc\*O"
Creates a new archive; writing begins on the beginning of the tape
instead of after the last file.
.LI "\*Lr\*O"
Writes the named files on the end of the tape.
.LI "\*Lt\*O"
The names of the specified files are listed each time they occur on
the tape.  If no file argument is given, all of the names on the tape
are listed.
.LI "\*Lu\*O"
Adds the named files to the tape, if the files are not already there or
if they were modified since last copied to the tape.
.LI "\*Lx\*O"
Extracts the named files from the tape.  If the named file
matches a directory whose contents were written onto the tape, this
directory is (recursively) extracted.  The owner, modification time, and mode
are restored (if possible).  If no file argument is given, the entire content
of the tape is extracted.  Note that if multiple entries specifying the same
file are on the tape, the last one overwrites all earlier ones.
.LE
.PP
The following flags can be used with the required flag:
.VL 4m
.LI "\*Lb\*O"
The
\*Ltar\*O
command uses the next argument as the blocking factor for tape records. The
default is 20 (larger values can be specified at the risk of
creating a tape archive that some systems' tape drives might not be
able to restore).  Use this flag only with raw magnetic
tape archives. The block size is determined automatically
when reading tapes (key letters \*Lx\*O and \*Lt\*O).
.LI "\*LB\*O"
Forces input and output blocking to the blocking factor
(see the \*Lb\*O flag).  This flag exists so that
\*Ltar\*O can work
across a communications channel where the blocking cannot be maintained.
.LI "\*Lf\*O"
The
\*Ltar\*O
command uses the next argument as the name of the archive instead of
\*L/dev/rmt\*Vn\*Lh\*O. If the name of the file is \*L\-\*O (dash), \*Ltar\*O
writes to standard output or
reads from standard input, whichever is appropriate.  Thus,
\*Ltar\*O
can be used as the head or tail of a filter chain.
The \*Ltar\*O command
can also be used to move hierarchies with the command:
.iS
cd fromdir; tar cf \- . | (cd todir; tar xf \-)
\*O\c
.iE
.LI "\*LF\*O"
Checks certain filenames before archiving.  Source Code Control System
(SCCS), Revision Control System (RCS), files named \*Lcore\*O,
\*Lerrs\*O, \*La.out\*O, and files ending in \*L\&.o\*O are not
archived.
.LI "\*Lh\*O"
Forces
\*Ltar\*O
to follow symbolic links as if they were normal files or
directories.  Normally,
\*Ltar\*O
does not follow symbolic links, but instead saves the link text
in the archive.
.LI "\*Li\*O"
Ignores checksum errors.
The \*Ltar\*O command writes a file header containing a checksum for
each file in the archive.  When this flag is not specified, the system
verifies the contents of the header blocks by recomputing the checksum
and stops with a directory checksum error when a mismatch occurs.  When
this flag is specified, \*Ltar\*O logs the error and then scans forward
until it finds a valid header block.  This permits restoring files from
later volumes of a multivolume archive without reading earlier volumes.
.LI "\*Ll\*O"
Tells
\*Ltar\*O
to complain if it cannot resolve all of the links to the
files dumped.  If this is not specified, no error messages are printed.
.LI "\*LL\*O"
Tries to create a symbolic link if \*Ltar\*O is unsuccessful in its
attempt to link (hard link) two files.
.LI "\*Lm\*O"
Tells
\*Ltar\*O
not to restore the modification times.  The modification time
is the time of extraction.  This is always the case with symbolic links.
.LI "\*Ln\*O"
Allows \*Ltar\*O headers to be created with filenames that cannot be
null-terminated if they are exactly the maximum length (as specified
in POSIX).  This flag is mutually exclusive with the \*Lo\*O flag
(that is, \*Ln\*Oew vs. \*Lo\*Old).  When specified, each of these flags
turns off the other; neither flag is turned on by default, however.
.LI "\*Lo\*O"
The \*Lo\*O flag is provided for backward compatibility.  Specify this flag
if the archive s to be restored on a system with an older
version of \*Ltar\*O.  On output,
\*Ltar\*O normally places information specifying owner and modes
of directories in the archive.  Former versions of \*Ltar\*O, when encountering
this information will give an error message of the form
.oS
\*Vname\*C/: cannot create
\*O\c
.oE
.IP
This modifier suppresses the directory information.
It also prevents archiving special files and FIFOs that earlier
versions of \*Ltar\*O would not be able to extract properly.
(Note that although anyone can archive special files, only a user
who has superuser authority
can extract them from the archives.)
.IP
When \*Lo\*O is used for reading, it causes the extracted file to take
on the User and Group ID (UID and GID) of the user running the
program, rather than those of the tape.  This is the default for the
ordinary user.
.IP
This flag is mutually exclusive with the \*Ln\*O flag
(that is, \*Ln\*Oew vs. \*Lo\*Old).  When specified, each of these flags
turns off the other; neither flag is turned on by default, however.
.IP
.LI "\*Lp\*O"
Restores files to their original modes,
ignoring the present
\*Lumask\*O.
Set-user-ID and sticky information
will also be restored if the user
is superuser.
.LI "\*LP\*O"
Specifies the prefix that is to be stripped off of the filenames
archived to or extracted from tape.  (See also the \*Ls\*O flag.)
.LI "\*Ls\*O"
Tells \*Ltar\*O to strip off any leading slashes from pathnames
during extraction.  This is useful when restoring a tape that was created
on a system with a different file system structure.
(See also the \*LP\*O flag.)
.\" Begin Digital-specific information
.\" Added Environment Note.
.LI "\*LR\*O"
The named file immediatedly following this flag
contains a list of file names separated by newlines.  This list is added to
(c function key, r function key) or extracted from (x function key) the
archive.  Note, the \*L-R\*O flag is incompatible with the \*L-C\*O flag.
.\" End Digital-specific information
.LI "\*LS\*O \*Vblocks\*Lb | \*Vfeet\*O[\*L@\*Vdensity\*O]"
Specifies the number of 512-byte blocks per volume (first form),
independent of the tape blocking factor.  You can also specify the
size of the tape in feet, and optionally density, by using the second form.
Feet are assumed to be 11 inches long to be conservative.  This flag
lets you deal more easily with multivolume tape archives, where \*Ltar\*O
must be able to determine how many blocks fit on each volume.
.IP
Note that tape drives vary in density capabilities.  The \*Vdensity\*O
argument is used in the amount of data that \*Ltar\*O can fit on a tape.
.LI "\*Lv\*O"
Normally
\*Ltar\*O
does its work silently.  The
\*Lv\*O
(verbose) option makes
\*Ltar\*O
print the name of each file it treats preceded by the function
letter.  With the
\*Lt\*O
function, the verbose option
gives more information about the tape entries than just their names.
.LI "\*Lw\*O"
Causes \*Ltar\*O to
print the action to be taken followed by the name of the file, and then
to wait for the user's confirmation. If a word beginning with \*Ly\*O,
or the locale's equivalent of a \*Ly\*O,
is given, the action is performed.  If any other input is given, the
action is not performed.
.LI "\*Vn\*O"
Selects \*L/dev/rmt\*Vn\*Lh\*O (the variable \*Vn\*O means 0-9) as the tape
drive on which the tape is mounted.  The default is drive 0 (\*L/dev/rmt0h\*O).
.LI "\*L\-e\*O"
Adds the following argument to a list of exception strings that prevent
files whose names match exactly from being archived.
.LI "\*L\-C\*O"
If a filename is preceded by
\*L\-C\*O,
\*Ltar\*O
performs a \*Lchdir()\*O
to that filename.  This allows multiple directories not
related by a close common parent to be archived using short
relative pathnames.  For example, to archive files from \*L/usr/include\*O
and from \*L/etc\*O, one might use the following command line:
.iS
tar c \-C /usr/include . \-C /etc .
\*O\c
.iE
.IP
Therefore, if you do not specify
an absolute filename, the filename is considered
relative to the previous \*L\-C\*O directory.
When you specify this flag multiple times on the command line,
make sure to specify subsequent \*L\-C\*O directories relative to
the preceding \*L\-C\*O directories.
.IP
If an error occurs while trying
to change to the requested directory, subsequent filenames on the command
line that are not absolute (that is, have no leading / (slash)) are
skipped until the next \*L\-C\*O flag is specified.
.LE
.PP
Only the \*L\-e\*O and \*L\-C\*O flags must be preceded by a \*L\-\*O
(dash) and can be specified more than once on a single command line
or interspersed within the list of filenames.
All other flags must be specified together (with no separating spaces)
before \*L\-e\*O, \*L\-C\*O, and the file list.  For all flags that require
arguments, the arguments must follow the string of flags and be
ordered in the same way as the specified flags.
.PP
Previous restrictions on the \*Ltar\*O command's
ability to properly handle blocked archives have been lifted.
.SH NOTES
.PP
.AL
.LI
There is no way to ask for the
\*Vn\*Oth
occurrence of a file.
.LI
Tape errors are handled ungracefully.
.LI
The
\*Lu\*O
option can be slow.
.LI
The current limit on filename length is 256 bytes.  The current
limit on file links (hard or soft) is 100 bytes.
.LI
There is no way selectively to follow symbolic links.
.LI
When extracting tapes created with the
\*Lr\*O
or
\*Lu\*O
options, directory modification times might not be set correctly.
.LE
.SH EXAMPLES
.PP
To create a \*Ltar\*O archive to device \*L/dev/rmt12\*O, enter:
.iS
tar cvfb /dev/rmt12 20 \-e ./foo \-C /usr/glenn \e
\-e ./bar \-e ./logs/logfile \-C /usr/gaston
\*O\c
.iE
.PP
The preceding command line specifies a blocking
factor of 20.  The resulting archive contains all files and directories
in \*L/usr/glenn\*O except for file \*L\&./foo\*O and all files and
directories in \*L/usr/gaston\*O except for \*L\&./foo\*O and
\*L\&./bar\*O and \*L\&./logs/logfile\*O.
.SH FILES
.PP
.VL 7m
.LI "\*L/dev/rmt\*Vn\*Lh\*O"
Device name used with the \*Vn\*O flag.
.LI "\*L/tmp/tar*\*O"
Temporary file used with the \*Lu\*O function.
.LE
.SH RELATED INFORMATION
.PP
Functions:  \*Lchdir\*O(2), \*Lumask\*O(2).
.PP
Files:  \*Ltar\*O(4).
.EQ
delim off
.EN
