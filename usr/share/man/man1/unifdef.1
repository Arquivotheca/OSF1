.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: unifdef.1,v $ $Revision: 3.2.4.2 $ (DEC) $Date: 1994/01/19 19:55:31 $
.\"
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.TH unifdef 1
.SH NAME
.PP
\*Lunifdef\*O \- Removes \*L#ifdef\*Oed lines
.SH SYNOPSIS
.PP
.sS
\*Lunifdef\*O
\*O[\*L-tlc\*O]
\*O[\*L-D\*Vsymbol\*O]
\*O[\*L-id\*Vsymbol\*O]
\*O[\*L-iu\*Vsymbol\*O]
\*O[\*Vfile\*O]
\*O[\*L-U\*Vsymbol\*O]
.sE
.PP
The \*Lunifdef\*O command partially simulates the behavior of the
C preprocessor in processing \*L#ifdef\*O conditionals.
.SH FLAGS
.PP
.VL 4m
.LI "\*L-c\*O"
Complements the action of \*Lunifdef\*O; retains lines that would
normally be removed and removes lines that would normally be retained.
.LI "\*L-D\*Vsymbol\*O"
Specifies \*Vsymbol\*O as a defined \*L#ifdef\*O symbol.
.LI "\*L-id\*Vsymbol\*O"
Specifies defined lines inside certain \*L#ifdef\*Os
to be ignored but copied out.
.LI "\*L-iu\*Vsymbol\*O"
Specifies undefined lines inside certain \*L#ifdef\*Os
to be ignored and not copied out.
.LI "\*L-l\*O"
Replaces removed lines with blank lines instead of deleting them.
.LI "\*L-t\*O"
Processes plain text (rather than C code) input.
The \*Lunifdef\*O command
does not try to recognize comments, single quotes, and double quotes.
.LI "\*L-U\*Vsymbol\*O"
Specifies \*Vsymbol\*O as an undefined \*L#ifdef\*O symbol.
.LE
.SH DESCRIPTION
.PP
.iX "unifdef command"
.iX "removing" "#ifdef lines"
.iX "#ifdef" "removing lines"
The \*Lunifdef\*O command recognizes nested \*L#ifdef\*Os, comments,
single and double quotes of C syntax so that it can function
correctly, but does not include files or interpret macros.
The \*Lunifdef\*O command recognizes, but does not remove comments.
.PP
The \*Lunifdef\*O command takes its input from
\*Lstdin\*O if no \*Vfile\*O argument is given, and
copies its output to \*Lstdout\*O.
.PP
You specify the symbols you want defined with
\*L-D\*Vsymbol\*O or undefined with \*L-U\*Vsymbol\*O
and the lines inside those \*L#ifdef\*Os are copied to the output
or removed, as appropriate.
The \*L#ifdef\*O, \*L#ifndef\*O, \*L#else\*O, \*L#elif\*O,
and \*Lendif\*O lines
associated with \*Vsymbol\*O are also removed.
\*L#ifdef\*Os involving unspecified symbols are untouched and
copied out along with their associated
\*L#ifdef\*O, \*L#else\*O, \*Lelif\*O, and \*L#endif\*O lines.
If the same symbol appears in more than one argument, only the
first occurrence is significant.  For instance,
if an \*L#ifdef X\*O occurs nested inside another \*L#ifdef X\*O, the
inside \*L#ifdef\*O is considered an unrecognized symbol.
.PP
If you use \*L#ifdef\*Os to delimit non-C lines, such as comments
or unfinished code, it is necessary to specify
which symbols are to be used for that purpose.  Otherwise, the
\*Lunifdef\*O command tries to parse
for quotes and comments in those \*L#ifdef\*O lines.
.SS Keywords
.if n .PP
The following keywords can be used with the \*Lunifdef\*O command:
.iS
ifdef
ifndef
else
endif
elif
\*O\c
.iE
.PP
The \*Lunifdef\*O command uses the \*Lelif\*O keyword as follows.
(Note that "Understood" means \*Lunifdef\*O knows how to convert \*Lelif\*O
to \*Lif\*O.)
.VL 4m
.LI "\*L# elif defined (X)\*O"
Understood
.LI "\*L# elif X\*O"
Not understood
.LI "\*L# elif defined (X)  defined (Y)\*O"
Not understood
.LE
.PP
For example:
.iS
\&\&# ifdef X
x
\&\&# elif defined (Y)
y
\&\&# elif defined (A)  || defined (B)
a
\&\&# else
default
\&\&# endif
\*O\c
.iE
.PP
The following list shows the results of using the \*Lelif\*O keyword
with variables:
.oS
-DX
x

-UX
\&\&# if defined (Y)
y
\&\&# elif defined (A)  || defined (B)
a
\&\&# else
default
\&\&# endif
.sp .5
-UX -DY
y

-UY -UX
\&\&# if defined (Y)
y
\&\&# elif defined (A)  || defined (B)
a
\&\&# else
default
\&\&# endif

-UY -UX -DA
\&\&# if defined (Y)
y
\&\&# elif defined (A)  || defined (B)
a
\&\&# else
default
\&\&# endif
\*O\c
.oE
.SH EXAMPLES
.PP
.AL
.LI
The following command line
causes the \*Lunifdef\*O command to read the file \*Loriginal.c\*O and
remove the \*L#ifdef A\*O lines.  It then removes everything following an
\*L#elif/#else\*O associated with the \*L#ifdef A\*O down to the \*L#endif\*O:
.iS
unifdef -DA original.c > modified.c
\*O\c
.iE
.LI
The following command line
causes the \*Lunifdef\*O command to read the file \*Loriginal.c\*O, and
remove the \*L#ifdef A\*O down to either its associated
\*L#elif/#else\*O, or its associated \*L#endif\*O:
.iS
unifdef -UA original.c > modified.c
\*O\c
.iE
.IP
In the case of the
\*L#elif\*O, the \*L#elif\*O is replaced with \*L#if\*O.
In the case of \*L#else\*O,
the \*L#else\*O is deleted along with its associated \*L#endif\*O.
.LE
.SH NOTES
.PP
The \*Lunifdef\*O command cannot process \*Lcpp\*O constructs such as:
.iS
\&\&#if defined(X) || defined(Y)
\*O\c
.iE
.SH DIAGNOSTICS
.PP
The \*Lunifdef\*O command can fail for several reasons:  a premature
end of file, or an inappropriate \*Lelse\*O, \*Lelif\*O, or \*Lendif\*O.
.SH EXIT VALUES
.PP
Exit status is \*L0\*O if output is an exact copy of input, \*L1\*O if not,
\*L2\*O if the \*Lunifdef\*O command fails.
.SH RELATED INFORMATION
.PP
Commands:  \*Ldiff\*O(1).
.\".PP 
.\"The \*Las\*O, \*Lgcc\*O (\*Lcc\*O), \*Lgdb\*O, and \*Lld\*O
.\"commands may be available on your system, but are not provided with OSF/1.
.EQ
delim off
.EN
