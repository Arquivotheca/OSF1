.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: xargs.1,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1993/11/15 01:36:02 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.TH xargs 1
.SH NAME
\*Lxargs\*O \- Constructs argument lists and runs commands
.SH SYNOPSIS
.PP
.sS
\*Lxargs\*O
[\*L\-e\*O[\*VEndOfFileString\*O]]
[\*L\-E\*O\*VEndOfFileString\*O]
[\*L\-i\*O[\*VReplacementString\*O]]
[\*L\-I\*O\*VReplacementString\*O]
[\*L\-l\*O[\*VNumber\*O]]
[\*L\-L\*O\*VNumber\*O]
[\*L\-n\*O[\*VNumber\*O]]
[\*L\-ptrx\*O] [\*L\-s\*O[\*VLength\*O] [\*VCommandString\*O]
[\*Vargument\*O ...]
.sE
.PP
The \*Lxargs\*O command constructs a
command line by combining a command string, containing a
command and its flags or arguments, with additional arguments read from
standard input.
.SH FLAGS
.PP
.VL 4m
.LI "\*L-e\*O \*VEndOfFileString\*O"
Sets the logical End-of-File string to \*Veof_string\*O.
The \*Lxargs\*O command reads standard input until it encounters either an
End-of-File character or the logical \*LEOF\*O string.  If you do
not specify the \*L-e\*O flag, the default \*Veof_string\*O is
\*L\(ul\*O (underline).  If you specify
\*L-e\*O with no \*Veof_string\*O, \*Lxargs\*O interprets the
underline character as a literal character, rather than as an End-of-File
marker.
.LI "\*L-E \*VEndOfFileString\*O"
Specifies a logical End-Of-File string to replace the default underscore.
The \*Lxargs\*O command reads standard input until either End-Of-File or
the logical EOF string is encountered.
.LI "\*L-i\*O \*VReplacementString\*O"
Takes an entire line as a single argument and inserts it in each
instance of \*Vreplace_string\*O found in the command string.  A maximum
of five arguments in the command string can each contain one or more
instances of \*Vreplace_string\*O.  The \*Lxargs\*O command discards spaces and
tabs at the beginning of each line.  The argument constructed cannot be
larger than 255 bytes.  The default \*Vreplace_string\*O is
{}.  This flag also turns on the \*L-x\*O flag.
.LI "\*L-I\*O \*VReplacementString\*O"
Insert mode: command is executed for each line from standard input,
taking the entire line as a single argument, inserting it in arguments
for each occurrence of \*LReplacementString\*O. Any blank characters at
the beginning of each line are ignored. Constructed arguments cannot
grow larger than 255 bytes. Flag \*L-x\*O is forced on. The \*L-I\*O and
\*L-i\*O flags are mutually exclusive; the last one specified takes
effect.
.LI "\*L-l\*O \*VNumber\*O"
Runs the command string with the specified \*Vnumber\*O of
nonempty argument lines read from standard input.  The last invocation
of the command string can have fewer argument lines if fewer than
\*Vnumber\*O remain.  A line ends with the first newline character
unless the last character of the line is a space or a tab.  A trailing
space or tab indicates a continuation through the next nonempty line.
The default \*Vnumber\*O is 1.  This flag turns on the \*L-x\*O flag.
.LI "\*L-L\*O \*VNumber\*O"
The command is executed for each non-empty \*Lnumber\*O lines of
argument from standard input. The last invocation of \*Lcommand\*O has
fewer lines of argument if fewer than \*Lnumber\*O remain. A line is
considered to end with the first newline character unless the last
character of the line is a blank character. A trailing blank character
signals continuation to the next non-empty line, inclusive. The
\*L-L\*O, \*L-l\*O and \*L-n\*O flags are mutually exclusive; the last
one takes effect.
.LI "\*L-n\*Vnumber\*O"
Executes the command string using as many standard input arguments
as possible, up to a maximum of \*Vnumber\*O.  The \*Lxargs\*O command uses
fewer arguments if their total length is greater than the number of
characters specified by the \*L-s\*O[\*Vlength\*O] flag.  It also
uses fewer arguments for the last invocation if
fewer than \*Vnumber\*O arguments remain.  When \*L-x\*O is
present, each \*Vnumber\*O argument must fit the \*Vlength\*O
limitation specified by \*L-s\*O.
.LI "\*L-p\*O"
Asks whether or not to run the command string.  It
displays the constructed command line, followed by a \*L?\&.\&.\&.\*O
prompt.  Press \*Ly\*O, or the locale's equivalent
of a \*Ly\*O, to run the command string.  Any other
response causes \*Lxargs\*O to skip that particular invocation
of the command string.  You are asked about each invocation.
.LI "\*L-s\*O[\*Vlength\*O]"
Sets the maximum total length of each argument list.  The \*Vlength\*O
must be a positive integer less than or equal to 470.  The default
\*Vlength\*O is 470 bytes.  Note that the character count for
\*Vlength\*O includes one extra character for each argument and the
number of characters in the command name.
.LI "\*L-t\*O"
Echoes the command string and each constructed argument list
to file descriptor \*L2\*O (usually standard error).
.LI "\*L-x\*O"
Stops running \*Lxargs\*O if any argument list is greater than
the number of characters specified by the \*L-s\*Vlength\*O flag.
This flag is turned on if you specify either the \*L-i\*O or
\*L-l\*O flags.  If you do not specify \*L-i\*O,
\*L-l\*O, or \*L-n\*O, the total length of all arguments must
be within the \*Vlength\*O limit.
.LE
.SH DESCRIPTION
.iX "xargs command"
.iX "commands" "running"
.iX "arguments" "lists"
.iX "list" "argument"
.iX "creating" "argument lists"
.PP
The \*Lxargs\*O command runs the command string as
many times as necessary to process all input arguments.
The default command string is \*Lecho\*O.
.PP
Arguments read from standard input are character strings delimited by
one or more spaces, tabs, or newline characters.  You can embed a space
or a tab in arguments by preceding it with a \e (backslash) or by
quoting it.  The \*Lxargs\*O command reads characters enclosed in single or
double quotes as literals and removes the delimiting quotes.  It always
discards empty lines.
.PP
The \*Lxargs\*O command ends if it cannot run
the command string or if it receives an exit code of \*L-1\*O.  When
the command string calls a shell procedure, the shell procedure
should explicitly exit with an appropriate value to avoid
accidentally returning \*L-1\*O.  (See the \*Lsh\*O command.)
.PP
The \*LLC_MESSAGES\*O variables determines the locale's equivalent
of \*Ly\*O and \*Ln\*O (for yes/no queries).
.SH EXAMPLES
.PP
.AL
.LI
To use a command on files whose names are listed in a file, use a
command line similar to the following:
.iS
xargs  lint  -a  < cfiles
\*O\c
.iE
.IP
If \*Lcfiles\*O contains the text, enter:
.iS
main.c  readit.c
gettoken.c
putobj.c
\*O\c
.iE
.IP
then \*Lxargs\*O constructs and runs the command:
.iS
lint  -a  main.c  readit.c  gettoken.c  putobj.c
\*O\c
.iE
.IP
Each shell command line can be up to 470 bytes long.
If \*Lcfiles\*O contains more filenames than fit on a single line,
then \*Lxargs\*O runs the \*Llint\*O command with the
filenames that fit.  It then constructs and runs another \*Llint\*O
command using the remaining filenames.  Depending on the names listed
in \*Lcfiles\*O, the commands might look like the following:
.iS
lint  -a  main.c  readit.c  gettoken.c\&.\&.\&.
lint  -a  getisx.c  getprp.c  getpid.c\&.\&.\&.
lint  -a  fltadd.c  fltmult.c  fltdiv.c\&.\&.\&.
\*O\c
.iE
.IP
This is not quite the same as running \*Llint\*O once with all
the filenames.  The \*Llint\*O command checks cross-references
between files.  However, in this example it cannot check
between \*Lmain.c\*O and \*Lfltadd.c\*O,
or between any two files listed on separate command lines.
.IP
For this reason you might want to
run the command only if all the filenames fit on one line.
Do this by using \*Lxargs\*O with the \*L-x\*O flag:
.iS
xargs  -x  lint  -a  <cfiles
\*O\c
.iE
.IP
If all the filenames in \*Lcfiles\*O do not fit on one
command line, then \*Lxargs\*O displays an error message.
.LI
To construct commands that contain a certain number of filenames, use a
command line similar to the following:
.iS
xargs  -t  -n2  diff  <<end
starting  chap1  concepts  chap2  writing
chap3
end
\*O\c
.iE
.IP
This constructs and runs \*Ldiff\*O commands
that contain two filenames each (\*L-n2\*O):
.iS
diff  starting  chap1
diff  concepts  chap2
diff  writing  chap3
\*O\c
.iE
.IP
The \*L-t\*O flag tells \*Lxargs\*O to display each
command before running it so that you can see what is happening.  The
\*L<<end\*O and \*Lend\*O arguments define a \*VHere Document\*O, which
uses the text entered before the \*Lend\*O line as standard input
for the \*Lxargs\*O command.  (For more details, see
the section \*LInline Input (Here) Documents\*O in the
\*Lsh\*O reference page.)
.LI
To insert filenames into the middle of commands, use a command line
similar to the following:
.iS
ls  |  xargs  -t  -i  mv  {}  {}.old
\*O\c
.iE
.IP
This renames all files in the current directory by adding \*L\&.old\*O
to the end of each name.  The \*L-i\*O tells
\*Lxargs\*O to insert each line of the \*Lls\*O directory
listing where  \*L{ }\*O (braces) appear.  If the current
directory contains the files \*Lchap1\*O, \*Lchap2\*O, and
\*Lchap3\*O, then this constructs the following commands:
.iS
mv  chap1  chap1.old
mv  chap2  chap2.old
mv  chap3  chap3.old
\*O\c
.iE
.LI
To run a command on files that you select individually, use a command
line similar to the following:
.iS
ls  |  xargs  -p  -n1  ar  r  lib.a
\*O\c
.iE
.IP
This allows you to select files to add to the library
\*Llib.a\*O.  The \*L-p\*O flag tells \*Lxargs\*O to
display each \*Lar\*O command it constructs and ask if you want to
run it.  Press \*Ly\*O, or the locale's equivalent of
a \*Ly\*O, and press \*L<Return>\*O to
run the command.  Press \*L<Return>\*O alone if you do not want to run it.
.LE
.SH RELATED INFORMATION
.PP
Commands:  \*Lsh\*O(1).
.EQ
delim off
.EN
