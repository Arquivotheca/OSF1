.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: prof2.1,v $ $Revision: 3.2.2.4 $ (DEC) $Date: 1992/12/10 09:39:14 $
.\"
.\" -----------------------------------------------------
.\" | Copyright MIPS Computer Systems, Inc.  All Rights |
.\" | Reserved.                                         |
.\" -----------------------------------------------------
.\"  prof2.1 3.1
.TH prof2 1
.SH NAME
prof2 \- analyze profile data
.SH SYNOPSIS
.PP
.iX "prof2 command"
.B prof
[ options ] mainobject
.SH DESCRIPTION
.PP
.B prof2
analyzes one or more data files generated by the compiler's
execution-profiling system and produces a listing.
.PP
The compiler system provides two kinds of profiling:
.PP
1.
\*Vpc-sampling\*O
interrupts the program periodically, recording the value of the program
counter.
.PP
2.
\*Vbasic-block counting\*O
divides the program into blocks delimited by labels, jump instructions,
and branch instructions. It counts the number of times each block
executes. This provides more detailed (line by line) information than
pc-sampling.
.SH OPTIONS
.PP
.\"For each
.\".B prof
.\"option, you need type only enough of the name to distinguish it from
.\"the other options (usually the first character is sufficient).  Unless
.\"otherwise noted, each part of the listing operates only on the set of
.\"procedures that results from the combination of the
.\".B \-exclude
.\"and
.\".B \-only
.\"options.
.\".PP
.\"If the options you specify would neither produce a listing nor generate a file,
.\".B prof
.\"uses
.\".B \-procedures
.\"plus
.\".B \-heavy
.\"by default.
.\".TP
.\"\*L\-note \*V"comment string"\*O
.\"If you use this argument, the \*V"comment string"\*O appears near the beginning of the listing as a comment.
.\".TP
.\".B \-pixie
.\"Selects pixie mode, as opposed to pc-sampling mode.
.\".TP
.\".B \-procedures
.\"Reports time spent per procedure (using data obtained from pc-sampling
.\"or basic-block counting; the listing tells which one).  For basic-block counting,
.\"this option also reports the number of invocations per procedure.
.\".TP
.\".BI \-heavy
.\"Reports the most heavily used lines in descending order of use (requires
.\"basic-block counting).
.\".TP
.\".B \-lines
.\"Like
.\".BR \-heavy ,
.\"but gives the lines in order of occurrence.
.\".TP
.\".B \-invocations
.\"For each procedure, reports how many times the procedure was invoked
.\"from each of its possible callers (requires basic-block
.\"counting).  For this listing, the
.\".B \-exclude
.\"and
.\".B \-only
.\"options apply to callees, but not to callers.
.\".TP
.\".B \-zero
.\"Prints a list of procedures that were never invoked (requires
.\"basic-block counting).
.\".TP
.\".B \-testcoverage
.\"Reports all lines that never executed (requires basic-block
.\"counting).
.\".TP
.\".BI \-feedback\  filename
.\"Produces a file with information that the compiler system can use to
.\"decide what parts of the program will benefit most from global
.\"optimization and what parts will benefit most from in-line procedure
.\"substitution (requires basic-block counting).
.\".TP
.\".BI \-merge\  filename
.\"Sums the pc-sampling data files (or, in pixie mode, the bbcounts files)
.\"and writes the result into a new file with the specified name. The
.\".B \-only
.\"and
.\".B \-exclude
.\"options have no affect on the merged data.
.\".TP
.\".BI \-only\  procedure_name
.\"If you use one or more
.\".B \-only
.\"options, the profile listing includes only the named procedures, rather
.\"than the entire program. If any option uses an uppercase "O" for
.\""Only,"
.\".B prof
.\"uses only the named procedures, rather than the entire program, as the
.\"base upon which it calculates percentages.
.\".TP
.\".BI \-exclude\  procedure_name
.\"If you use one or more
.\".B \-exclude
.\"options, the profiler omits the specified procedure and its descendents
.\"from the listing. If any option uses an uppercase "E" for "Exclude,"
.\".B prof
.\"also omits that procedure from the base upon which it calculates
.\"percentages.
.\".TP
.\".BI \-clock\  megahertz
.\"Alters the appropriate parts of the listing to reflect the clock speed
.\"of the CPU. If you do not specify
.\".IR megahertz ,
.\"it defaults to "8.0".
.TP
.BI \-quit\  n
Truncates the
.B \-procedures
and
.B \-heavy
listings after the first entry that represents less than
\*Vn\*O
percent of the total.
.TP
.BI \-a\ object
Includes object's basic block counts in profiler output. Used with pixified
dynamic shared objects such as libc.so.
.TP
.BI \-w
Turns off warning messages.
.TP
.BI \-v
Turns on verbose messages.
.SH RESTRICTIONS
.PP
\*Lprof2\*O does not yet take into account interactions among floating-point
instructions.
\*Lprof2\*O should find pixified shared libraries automatically.
.SH EXAMPLES
.PP
.B "Using pc-sampling"
.PP
See \*Lprof\*O(1).
.B "Using basic-block counting"
.PP
To use basic-block counting, compile your program without the option
.BR \-p .
Use \*Lpixie\*O(1) to
translate your program into a profiling version and generate a file,
whose name ends in ".Addrs", containing block addresses. Then run the
profiling version, which (assuming the program terminates normally
via \*Lexit\*O(2) or \*L_exit\*O(2))
will generate one or more files, whose name(s) end(s) in ".Counts",
containing block counts. Then use
.B prof2
with the
.B \-pixie
option to analyze the bbaddrs and bbcounts files. Notice that you must
tell
.B prof2
the name of your original program, not the name of the profiling
version.
.PP
For example:
.oS
cc -c myprog.c
cc -o myprog myprog.o
pixie -o myprog.pixie myprog \f1(generates "myprog.Addrs")\f(CW
\&./myprog.pixie \f1(generates "myprog.Counts")\f(CW
prof2 -pixie myprog
.oE
.\".SH FILES
.\".TP 20
.\".I crt0.o
.\"normal startup code
.SH RELATED INFORMATION
.PP
\*Lprof\*O(1), \*Las\*O(1), \*Lcc\*O(1),
.\" \*Lf77\*O(1), \*Lpc\*O(1),
\*Lpixie\*O(1)
.br
\*Lprofil\*O(2)
.\" ,  \*Lmonitor\*O(3)
.EQ
delim off
.EN
