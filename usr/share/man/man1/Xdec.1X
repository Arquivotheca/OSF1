.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" $XConsortium: Xdec.man,v 1.3 91/08/01 02:35:07 keith Exp $
.\" This page is based on a copyright version of the Xserver.1 MIT manpage.
.\" 
.\" Copyright 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991
.\" Massachusetts Institute of Technology.
.\"
.\" See X(1X) for a full statement of rights and permissions.
.\"
.\" AUTHORS
.\"
.\" The sample server was originally written by Susan Angebranndt, Raymond
.\" Drewry, Philip Karlton, and Todd Newman, from Digital Equipment
.\" Corporation, with support from a large cast.  It has since been
.\" extensively rewritten by Keith Packard and Bob Scheifler, from MIT.
.\" Jim Ludwig from DEC added the loadable server functionality.
.TH Xdec 1X "" "" "" "X11R5"
.SH NAME
Xdec, Xserver \- X Window System server
.SH SYNOPSIS
.B Xdec
[ option ... ]
.SH DESCRIPTION
The \f3Xdec\f1 command starts the X server.  The \f3Xdec\f1
command supports the run-time loading and execution of X server
libraries on OSF1 platforms with graphics devices. The command loads
appropriate libraries to handle graphics devices installed on the
workstation and you can configure the command to use any or all
of the extension libraries available on your workstation.
.SH "STARTING THE SERVER"
The server is usually started from the X Display Manager program
\f3xdm\f1.  The \f3xdm\f1 daemon, started from the system
initialization script \f3/sbin/rc3.d/S95xdm\f1, starts the
\f3Xdec\f1 command when the system enters multiuser mode.  \f3Xdm\f1
takes care of keeping the server running, prompting for
usernames and passwords, and starting up the user sessions.  It
is easily configured for sites that want to provide consistent
interfaces for novice users (loading convenient sets of resources
and starting up a window manager, a clock, and a selection of
terminal emulator windows).
.PP
When the X server starts up, it takes over the display.  If you
are running on a workstation whose console is the display, you cannot
log into the console while the server is running.
.SH "NETWORK CONNECTIONS"
The X server supports connections made using the following reliable
byte-streams:
.TP 4
\f3TCP\/IP\f1
The server listens on port 6000+\f2n\f1, where \f2n\f1 is the
display number.
.TP 4
\f3UNIX Domain\f1
The X server uses \f3/tmp/.X11-unix/X\f2n\f1 as the filename for
the socket, where \f2n\f1 is the display number.
.TP 4
\f3Shared Memory\f1
The X server uses shared memory.
.TP 4
\f3DECnet\f1
.br
The server responds to connections to object \f3X$X\f2n\f1, where
\f2n\f1 is the display number.
.SH OPTIONS
The X server accepts the following command line options:
.TP 8
\f3\-a \f2number\f1
Sets pointer acceleration (that is, the ratio of how much is reported
to how much the user actually moved the pointer).
.TP 8
\f3\-ac\f1
Disables host-based access control mechanisms.  Enables access by
any host, and permits any host to modify the access control list.
Use with extreme caution.
This option exists primarily for running test suites remotely.
.TP 8
\f3\-audit \f2level\f1
Sets the audit trail level.  The default level is 1, meaning only
connection rejections are reported.  Level 2 additionally reports all
successful connections and disconnections.  Level 0 turns off the audit
trail.  Audit lines are sent as standard error output.
.TP 8
\f3\-auth \f2authorization-file\f1
Specifies a file which contains a collection of authorization records
used to authenticate access.  See also the \f3xdm\f1 and
\f2Xsecurity\f1 manual pages.
.TP 8
\f3bc\f1
Disables certain kinds of error checking, for bug compatibility with
previous releases (for example, to work around bugs in R2 and R3 xterms
and toolkits).  Use of this option is not recommended.
.TP 8
\f3\-bs\f1
Disables backing store support on all screens.
.TP 8
\f3\-c\f1
Turns off key-click.
.TP 8
\f3c \f2volume\f1
Sets the key-click volume (allowable range: 0-100).
.TP 8
\f3\-cc \f2class\f1
Sets the visual class for the root window of color screens.
The class numbers are those specified in the X protocol.
This option is not obeyed by all servers.
.TP 8
\f3\-co \f2filename\f1
Sets the name of the RGB color database.
.TP 8
\f3\-core\f1
Causes the server to generate a core dump on fatal errors.
.TP 8
\f3\-f \f2volume\f1
Sets the bell volume (allowable range: 0-100).
.TP 8
\f3\-fc \f2cursorFont\f1
Sets the default cursor font.
.TP 8
\f3\-fn \f2font\f1
Sets the default font.
.TP 8
\f3\-fp \f2fontPath\f1
Sets the search path for fonts.  This path is a comma separated list of
directories which the X server searches for font databases. All
components of the list must be valid font directories or the X server
will exit, not finding the default font.
.IP
.\" FOLLOWING TEXT ADDED AS RESPONSE TO QAR 3562 - (KHall)
It is recommended that you not use this option because of the problems
caused by an invalid font path.  If you install a new set of
fonts, it is best to specify the font path in a start-up file such as
\f3Xsession\f1 or \f3\.xsession\f1 using the \f3xset \+fp\f1 command.
Then, if the font path is invalid for any reason, the X server will still run.
.TP 4
\f3\-help\f1
Prints a usage message.
.TP 4
\f3\-I\f1
Causes all remaining command line arguments to be ignored.
.TP 4
\f3\-ld \f2kilobytes\f1
Sets the data space limit of the server to the specified number of
kilobytes.  A value of zero makes the data size as large as possible.
The default value of \-1 leaves the data space limit unchanged.
.TP 4
\f3\-lf \f2files\f1
Sets the number-of-open-files limit of the server to the specified
number.  A value is zero makes the limit as large as possible.
The default value of \-1 leaves the limit unchanged.
.TP 4
\f3\-ls \f2kilobytes\f1
Sets the stack space limit of the server to the specified number
of kilobytes.  A value of zero makes the stack size as large as
possible.  The default value of \-1 leaves the stack space limit
unchanged.
.TP 4
\f3\-logo\f1
Turns on the X Window System logo display in the screen-saver.
There is currently no way to change this setting from a client.
.TP 4
\f3nologo\f1
Turns off the X Window System logo display in the screen-saver.
There is currently no way to change this setting from a client.
.TP 4
\f3\-p \f2minutes\f1
Sets the screen-saver pattern cycle time in minutes.
.TP 4
\f3\-pn\f1
Permits the server to continue running if it fails to establish all of
its well-known sockets, but establishes at least one. (Default)
.TP 4
\f3pn\f1
Prevents the server from continuing to run if it fails to establish
all of its well-known sockets.
.TP 4
\f3\-r\f1
Turns off auto-repeat.
.TP 4
\f3r\f1
Turns on auto-repeat.
.TP 4
\f3\-s \f2minutes\f1
Sets the screen-saver timeout time in minutes.
.TP 4
\f3\-su
Disables the save under support on all screens.
.TP 4
\f3\-t \f2number\f1
Sets the pointer acceleration threshold in pixels (that is, after how many
pixels pointer acceleration should take effect).
.TP 4
\f3\-terminate\f1
Causes the server to terminate at server reset, instead of continuing
to run.
.TP 4
\f3\-to \f2seconds\f1
Sets the default connection timeout in seconds.
.TP 4
.B \-tst\f1
Disables all testing extensions (for example, XTEST, XTrap, XTestExtension1).
.TP 4
\f3tty\f2xx\f1
This option is a valid option but is ignored by the \f3Xdec\f1
server.
.TP 4
\f3v\f1
Sets video-off screen-saver preference.
.TP 4
\f3\-v\f1
Sets video-on screen-saver preference.
.TP 4
\f3\-wm\f1
Forces the default backing-store of all windows to be WhenMapped.
This option is a quick way of getting backing-store to apply to all windows.
.TP 4
\f3\-x \f2extension\f1
Loads the specified extension at initialization. Some extensions have
only a small portion loaded at initialization, saving memory until
the extension is actually requested. This option forces the complete
loading of the extension at initialization time, saving a small amount
of startup time when the first request for the extension is made by a
client application. Not all extensions will implement this feature.
.PP
You can also have the X server connect to \f3xdm\f1 using XDMCP.
Although this method is not typically useful as it does not allow \f3xdm\f1
to manage the server process, it can be used to debug XDMCP
implementations, and serves as a sample implementation of the server
side of XDMCP.  For more information on this protocol, see the
\f2X Display Manager Control Protocol\f1 specification.
The following options control the behavior of XDMCP.
.TP 8
\f3\-query\f1 \f2host-name\f1
Enables XDMCP and sends Query packets to the specified host.
.TP 8
\f3\-broadcast\f1
Enables XDMCP and broadcasts BroadcastQuery packets to the network.  The
first responding display manager will be chosen for the session.
.TP 8
\f3\-indirect\f1 \f2host-name\f1
Enables XDMCP and sends IndirectQuery packets to the specified host.
.TP 8
\f3\-port\f1 \f2port-num\f1
Uses an alternate port number for XDMCP packets.  Must be specified
before any \f3\-query\f1, \f3\-broadcast\f1, or \f3\-indirect\f1 options.
.TP 8
\f3\-class\f1 \f2display-class\f1
XDMCP has an additional display qualifier used in resource lookup for
display-specific options.  This option sets that value.  By default, it
is "MIT-Unspecified", which is not very useful.
.TP 8
\f3\-cookie\f1 \f2xdm-auth-bits\f1
When testing XDM-AUTHENTICATION-1, a private key is shared between the
server and the manager.  This option sets the value of that private
data, although because it is on the command line, it is not very private.
.TP 8
\f3\-displayID\f1 \f2display-id\f1
Yet another XDMCP-specific value, this one allows the display manager
to identify each display so that it can locate the shared key.
.PP
The following options are for the controlling the loadable portion of
the X server.  See the \f2Modular Extensible Server\f1 section for
more information.
.TP 8
\f3\-config\f1 \f2configuration file\f1
Specifies the name of a configuration file to use to configure the
loadable X server. The default configuration file is
\f3/usr/lib/X11/Xserver.conf\f1.
.TP 8
\f3\-errorFile\f1 \f2error file\f1
Specifies the name of an error file to use to redirect error messages.
The default is to send error messages to standard error.
.TP 8
\f3\-showDefaults\f1
Displays the default libraries that will be used by the loadable server.
.TP 8
\f3\-showConfigs\f1
Displays the libraries specified in the configuration file that will be
used by the loadable server.
.TP 8
\f3\-showUsed\f1
Displays the merging of the default and configured lists of libraries,
showing the resultant list to be used by the loadable server.
.PP
The following options are device dependent and Digital specific.
When the server is run on multiscreen-capable platforms, selected
device-dependent options take an optional screen-specification
argument.  Omitting the screen-specification argument defines the
parameter for all available screens.
.TP 8
\f3\-btn \f2num\f1
Specifies the number of buttons on the pointer device.  The default is
3 for a mouse device and 4 for a tablet device.
.TP 8
\f3\-bp\f1[\f2screen\f1]  \f2color\f1
Sets the color of black pixels for the screen.
The \f2color\f1 argument can be a named color from the
.PN rgb
database or a number sign (\f3#\f1) followed by a hexidecimal number.
.TP 8
\f3\-vclass\f1[\f2screen\f1]  \f2visual class\f1
Sets the visual class for the root window of the screen.  Possible
values are \f3StaticGray\f1, \f3StaticColor\f1, \f3PseudoColor\f1,
\f3GrayScale\f1, \f3TrueColor\f1, and \f3DirectColor\f1.
.TP 8
\f3\-dpi\f1[\f2screen\f1]  \f2num\f1
Sets the dots-per-inch for the x and y coordinates.
.TP 8
\f3\-dpix\f1[\f2screen\f1]  \f2num\f1
Sets the dots-per-inch for the x coordinates.
.TP 8
\f3\-dpiy\f1[\f2screen\f1]  \f2num\f1
Sets the dots-per-inch for the y coordinates.
.TP 8
\f3\-edge_bottom\f1\f2scr1\f1 \f2scr2\f1
Attaches the bottom edge of the screen specified by \f2scr1\f1 to the
screen specified by \f2scr2\f1.
.TP 8
\f3\-edge_left\f1\f2scr1\f1 \f2scr2\f1
Attaches the left edge of the screen specified by \f2scr1\f1 to the
screen specified by \f2scr2\f1.
.TP 8
\f3\-edge_right\f1\f2scr1\f1 \f2scr2\f1
Attaches the right edge of the screen specified by \f2scr1\f1 to the
screen specified by \f2scr2\f1.
.TP 8
\f3\-edge_top\f1\f2scr1\f1 \f2scr2\f1
Attaches the top edge of the screen specified by \f2scr1\f1 to the
screen specified by \f2scr2\f1.
.TP 8
\f3\-wp\f1[\f2screen\f1]  \f2color\f1
Sets the color of white pixels for the screen.  The syntax for
\f2color\f1 is the same as for the argument to the \f3-bp\f1 option.
.\" *******************************************************************
.\" ********************* NOT YET IMPLEMENTED *************************
.\" *******************************************************************
.\" ***.IP "\f3\-tb\f1 \f2n\f1" 20
.\" ***Opens
.\" ***.PN /dev/tty0\f2n\f1
.\" ***for graphics tablet communications.
.\" ***The two free serial ports on the DECstation correspond to
.\" ***.PN /dev/tty00
.\" ***and 
.\" ***.PN /dev/tty01 .
.\" ***A graphics tablet must be connected through one of these two
.\" ***ports.
.\" ***.IP "\f3\-pcm\f1 \f2n\f1" 20
.\" ***Opens
.\" ***.PN /dev/tty0\f2n\f1
.\" ***for Protocol Control Module (PCM) communications.
.\" ***The two free serial ports on the DECstation correspond to
.\" ***.PN /dev/tty00
.\" ***and 
.\" ***.PN /dev/tty01 .
.\" ***Dial boxes and button boxes must be connected through these
.\" ***two ports.
.\" *******************************************************************
.\" ********************** NOT YET IMPLEMENTED ************************
.\" *******************************************************************
.SH RESTRICTIONS
If options not listed in this reference page are
used, the server may fail. Using invalid options for the X server
in the \f3/usr/lib/X11/xdm/Xservers\f1 file may cause the X server
to start and fail repetitively.
.PP
Multiscreen configurations may contain any configuration display
devices.
.PP
To connect two screens, two command line options must be
issued.  Attaching two screens using only one \f3-edge_\f1
argument produces a one-way mouse-travel path.
You can create a wrap-around mouse path by attaching
noncontiguous screen edges.  The \f3-edge_\f1
arguments are disabled on single screen systems.
.PP
Nonsensical screen connections are not allowed; the top edge of a
particular screen must be connected with the bottom edge of
another screen, and the right edge of a particular screen
must be connected with the left edge of another screen.
Left and right edges cannot be connected to top or bottom edges.
.SH EXAMPLES
The following example specifies that screen \f30\f1 has a
resolution of 100x100 dots-per-inch and screen \f31\f1 has a
resolution of 75x70 dots-per-inch:
.PP
.nf
  \f3Xdec -dpi0 100 -dpix1 75 -dpiy1 70\f1
.fi
.PP
If no screen is specified, the value specified is used
for all screens.  If the screen resolution is not specified using
command line options, a default value based on pixel dimensions
and screen size is calculated for each screen.
.PP
The following example specifies that black pixels on screen \f31\f1
have the hexadecimal value 3a009e005c0 prefixed with a number sign
(\f3#\f1) and white pixels on screen \f31\f1 are color "wheat"
from the X rgb color database.
.PP
.nf
  \f3Xdec -bp1 #3a009e005c0 -wp1 wheat\f1
.fi
.PP
For monochrome display devices, values of 0 and 1 are the only
valid pixel colors.
.PP
To specify the default visual class
of a root window on a particular screen, append the screen
number (\f30\f1, \f31\f1, or \f32\f1) to the \f3\-vclass\f1
command line option.  Possible visual classes are: \f3StaticGray\f1,
\f3StaticColor\f1, \f3PseudoColor\f1, \f3GrayScale\f1, \f3TrueColor\f1,
and \f3DirectColor\f1.  The following example specifies that the
screen \f30\f1 root window is a \f3TrueColor\f1 visual, and the
screen \f31\f1 root window is a \f3PseudoColor\f1 visual.
.PP
.nf
  \f3Xdec -class0 TrueColor -class1 PseudoColor\f1
.fi
.PP
The following example attaches screen \f31\f1 above screen
\f30\f1 and screen \f32\f1 to the right of screen \f30\f1
(an L-shaped configuration):
.PP
.nf
  \f3Xdec -edge_top0 1 -edge_bottom1 0 -edge_right0 2 -edge_left2 0\f1
.fi
.PP
The following example is identical to the default state (a
horizontal line) with the addition of a wraparound from screen
\f30\f1 to screen \f32\f1:
.PP
.nf
  \f3Xdec -edge_left0 2 -edge_right0 1 -edge_left1 0 -edge_right1 2 \e\f1
.br
  \f3-edge_left2 1 -edge_right2 0\f1
.fi
.SH SECURITY
The X server implements a simplistic authorization protocol,
MIT-MAGIC-COOKIE-1.  This protocol uses data private to authorized
clients and the server.  It is a rather trivial scheme; if the
client passes authorization data that is the same as the server
has, it is allowed access.  This scheme is worse than the host-based
access control mechanisms in environments with unsecure networks
because it allows any host to connect, given that it has discovered
the private key.  But in many environments, this level of security is
better than the host-based scheme because it allows access control
per-user instead of per-host.
.PP
.\" *******************************************************************
.\" ********************* NOT YET IMPLEMENTED *************************
.\" *******************************************************************
.\" ***In addition, the server provides support for a DES-based
.\" ***authorization scheme, XDM-AUTHORIZATION-1, which is more secure
.\" ***(given a secure key distribution mechanism).  This authorization
.\" ***scheme can be used in conjunction with XDMCP's authentication
.\" ***scheme (XDM-AUTHENTICATION-1) or in isolation.
.\" ***THIS NEEDS TO BE CHECKED OUT
.\" *******************************************************************
.\" ********************* NOT YET IMPLEMENTED *************************
.\" *******************************************************************
.PP
The authorization data is passed to the server in a private file named
with the \f3\-auth\f1 command line option.  Each time the server is
about to accept the first connection after a reset (or when the server
is starting), it reads this file.  If this file contains any
authorization records, the local host is not automatically allowed
access to the server, and only clients which send one of the
authorization records contained in the file in the connection setup
information will be allowed access.  See the \f3Xau\f1 manual page for
a description of the binary format of this file.
.\" NOT VERY USER FRIENDLY.  OMIT PER DEVO.
.\" Maintenance of this file and distribution of its contents to
.\" remote sites for use there is left as an exercise for the reader.
.\" .PP
.\" *******************************************************************
.\" ******************** NOT YET IMPLEMENTED **************************
.\" *******************************************************************
.\" ***The server also provides support for SUN-DES-1, using Sun's
.\" ***Secure RPC.  It involves encrypting data with the X server's
.\" ***public key.  See the \f2Xsecurity\f1 manual page for more
.\" *** information.
.\" ***THIS NEEDS TO BE CHECKED OUT
.\" *******************************************************************
.\" ******************** NOT YET IMPLEMENTED **************************
.\" *******************************************************************
.PP
The X server also uses a host-based access control list for deciding
whether to accept connections from clients on a particular machine.
If no other authorization mechanism is being used, this list initially
consists of the host on which the server is running as well as any
machines listed in the file \f3/etc/X\f2n\f3.hosts\f1, where \f2n\f1
is the display number of the server.  Each line of the file should
contain either an Internet hostname (for example, expo.lcs.mit.edu) or a
DECnet hostname in double colon format (for example, hydra::).  There
should be no leading or trailing spaces on any lines.  For example:
.sp
.in +8
.nf
joesworkstation
corporate.company.com
star::
bigcpu::
.fi
.in -8
.PP
Users can add or remove hosts from this list and enable or disable
access control using the \f3xhost\f1 command from the same machine
as the server.
.PP
.\" *******************************************************************
.\" ******************** NOT YET IMPLEMENTED **************************
.\" *******************************************************************
.\" ***The X protocol intrinsically does not have any notion of window
.\" ***operation permissions or place any restrictions on what a
.\" ***client can do; if a program can connect to a display, it has
.\" ***full run of the screen.  Sites that have better authentication
.\" ***and authorization systems (such as Kerberos) might wish to make
.\" ***use of the hooks in the libraries and the server to provide 
.\" ***additional security models.
.\" ***THIS NEEDS TO BE CHECKED OUT
.\" *******************************************************************
.\" ******************** NOT YET IMPLEMENTED **************************
.\" *******************************************************************
.SH SIGNALS
The X server attaches special meaning to the following signals:
.TP 8
\f3SIGHUP\f1
This signal causes the server to close all existing connections, free
all resources, and restore all defaults.  It is sent by the display
manager whenever the main user's main application (usually an
\f3xterm\f1 or window manager) exits to force the server to clean up
and prepare for the next user.
.TP 8
\f3SIGTERM\f1
This signal causes the server to exit cleanly.
.TP 8
\f3SIGUSR1\f1
This signal is used quite differently from either of the above.  When
the server starts, it checks to see if it has inherited SIGUSR1 as
SIG_IGN instead of the usual SIG_DFL.  In this case, the server sends
a SIGUSR1 to its parent process after it has set up the various
connection schemes.  \f3Xdm\f1 uses this feature to recognize when
it is possible to connect to the server.
.SH FONTS
Fonts are usually stored as individual files in directories.  The X
server can obtain fonts from directories and/or from font servers.
The list of directories and font servers
the X server uses when trying to open a font is controlled by the
\f2font path\f1.  Although most sites will choose to have the
X server start up with the appropriate font path (using the
\f3-fp\f1 option described previously), it can be overridden using
the \f3xset\f1 program.
.PP
The default font path for the X server contains seven directories:
.TP 8
\f3/usr/lib/X11/fonts/decwin\f1
This directory contains font directories for 75dpi fonts and 100dpi
fonts used by Digital's out-of-the-box
applications such as \f3dxcalendar\f1 and \f3dxterm.\f1
.L
.TP 8
\f3/usr/lib/X11/fonts/misc\f1
This directory contains many miscellaneous bitmap fonts that are
useful on all systems.  It contains a family of fixed-width fonts,
a family of fixed-width fonts from Dale Schumacher,
several Kana fonts from Sony Corporation, two JIS Kanji fonts,
two Hangul fonts from Daewoo Electronics,
two Hebrew fonts from Joseph Friedman, the standard cursor font,
two cursor fonts from Digital Equipment Corporation, and cursor and
glyph fonts from Sun Microsystems.  It also has various font name
aliases for the fonts, including \f3fixed\f1 and \f3variable\f1.
.TP 8
\f3/usr/lib/X11/fonts/Speedo\f1
This directory contains outline fonts for Bitstream's Speedo
rasterizer.  A single font face \- in normal, bold, italic, and bold
italic \- is provided, contributed by Bitstream, Inc.
.TP 8
\f3/usr/lib/X11/fonts/Type1\f1
This directory contains "Type 1" (PostScript) format outline fonts for
IBM's rasterizer.
.TP 8
\f3/usr/lib/X11/fonts/Type1Adobe\f1
This directory contains "Type 1" (PostScript) format outline fonts
contributed by Adobe Systems, Inc.
.TP 8
\f3/usr/lib/X11/fonts/75dpi\f1
This directory contains bitmap fonts contributed by Adobe Systems,
Inc., Digital Equipment Corporation, Bitstream, Inc.,
Bigelow and Holmes, and Sun Microsystems, Inc.
for 75 dots-per-inch displays.  An integrated selection of sizes,
styles, and weights are provided for each family.
.TP 8
\f3/usr/lib/X11/fonts/100dpi\f1
This directory contains 100 dots-per-inch versions of some of the
fonts in the \f375dpi\f1 directory.
.PP
Font databases are created by running the \f3mkfontdir\f1 program in
the directory containing the compiled versions of the fonts (the
\f3.pcf\f1 files).  Whenever fonts are added to a directory,
\f3mkfontdir\f1 should be rerun so that the server can find the new
fonts.  If \f3mkfontdir\f1 is not run, the server will not be able
to find any fonts in the directory.
.SH MODULAR EXTENSIBLE SERVER
The \f3Xdec\f1 command is simply a bootstrap program that loads
the X server components and transfers execution to them. The command
also contains some utility routines to allow the X server components
to load even more components.
.PP
The X server is composed of several sections:
.TP 8
System
System components are the system libraries used for such things
as math routines and DECnet interfaces.
.TP 8
Core
Core components form the core portion of the X server. They include
operating system interfaces, X protocol interfaces, routines for
handling server resources, window trees, fonts, some generic frame
buffer handlers, and routines for interfacing with the workstation
device driver (the interface to the frame buffers, keyboard, and
pointer devices).
.TP 8
Device Handlers
Device handler components are made available to the workstation
device driver interface. The interface loads them to handle specific
graphics devices found on the system. The components contain code
for initializing the graphics devices and for performing specialized
drawing operations tailored for the specific hardware on the device.
.TP 8
Extensions
Extension components contain the code for X extensions. The components
are loaded by the core components from a configurable list. Some
extensions may only be partially loaded at server initialization time
to save memory. When the first client requests the use of an extension,
the extension code loads the remainder of the extension and continues
processing the requests. Some extensions may further load
device-specific code to provide special handling of graphics devices
or input devices found on the system.
.TP 8
Font Renderers
By default, the core components contain font handling code for bitmap
and some scalable fonts. The core components can also load additional
font renderers to handle different font formats. One font renderer is a
communication interface to a font server.
.\" *******************************************************************
.\" ******************** NOT YET IMPLEMENTED **************************
.\" *******************************************************************
.\" ***.TP 8
.\" ***.I input device handlers
.\" ***TBD
.\" ***.TP 8
.\" ***.I transports
.\" ***(To be implemented) Transport components handle X server
.\" ***communication.
.\" ***They can provide a TCP/IP, UNIX Domain, or DECNet socket based
.\" ***interface, a shared memory based interface, or some other
.\" ***communication interface between the X server and clients. The
.\" ***components can also be used by other components within the
.\" ***server, for example for communication between the X server
.\" ***and the font server.
.\" ***.TP 8
.\" ***.I authorization protocols
.\" ***(To be implemented) Authorization protocols are methods used 
.\" ***for verifying the right of a client application to open a
.\" ***connection to the X server. The methods can range from simple
.\" ***host access lists to token exchanges to communication with
.\" ***elaborate network based authorization daemons.
.\" *******************************************************************
.\" ******************** NOT YET IMPLEMENTED **************************
.\" *******************************************************************
.PP
When the \f3Xdec\f1 command is started, it uses a set of internal
default lists of components to build an X server. It also reads a
system configuration file (\f3/usr/lib/X11/Xserver.conf\f1 or the
file specified by the \f3-config\f1 option) to supplement or replace
components on the lists.  The command loads all system and core
components and then transfers execution to the core components.
.PP
Workstation driver interface code in the core components then queries
the system for graphics and input device types and loads appropriate
components from the device and input lists. If the workstation driver
interface cannot find a component for a device, it will force the X
server to exit. If a graphics device is a generic dumb frame buffer,
the device list should contain an entry mapping the device type to a
generic frame buffer handler (see below).
.PP
The core components then load the list of extensions provided and
initialize the extensions. Some extensions may load further
device-specific components from the sublists provided to them in the
configuration file.
.PP
The core components also load any font renderers, transport handlers,
and authorization protocol methods specified in the configurations.
.PP
The X server then begins to accept connections.
.PP
When the X server resets itself (usually when the last client has
exited), all extension and font renderer components are unloaded and
then re-initialized when the X server begins to restart itself. In this
way, extensions or font renderers which have been used can re-install
themselves as small stub components, taking up much less memory, until
they are accessed again. For instance, if you want to have Post Script
or PEX as an available extension at all times but do not wish to use up
memory, they might be loaded initially as a stub component, taking up
only a fraction of their total required memory. When you run a client
that needs to use them, the full extension is used. When you have
finished using that client, you can log out of your session (if using
\f3xdm\f1) which will reset the X server, unload the full extension,
and reinstall only the stub component until you need to use the
extension again, leaving memory for other uses.
.SH CONFIGURATION FILE SYNTAX
The configuration file syntax is quite simple. The following are key
tokens recognized by the \f3Xdec\f1 command when reading the file.
.TP 8
.I \f3!\f1
When \f3!\f1 is encountered, the remainder of the line is ignored.
Comments in the configuration file should be proceeded on each line
by a \f3!\f1.
.TP 8
\f3component\f1 < \f2library-list\f1 >
Where component is one of
.in 16
\f3system\fP
.br
\f3core\fP
.br
\f3device\fP
.br
\f3extensions\fP
.br
\f3font_renderers\fP
.br
\f3auth_protocols\fP
.br
\f3transports\fP
.br
\f3input\fP
.in -16
.TP 8
\f3replace\f1
When specifying the keyword \f3replace\f1
after the keyword \f3core\f1, the default list of core X server
libraries is replaced by the configured list.
.TP 8
\f3library_list\fP has the format:
.br
< \f2library_name library_file_name\fP [ \f2initialization_routine_name\fP [ \f2device_name\fP ] ] [ \f2sub_library_list\fP ] >
.br
.in +8
.TP 8
\f2library_name\fP
Specifies the name of the library. This name is used to reference
internal data structures within the library and may also be used to
construct the library initialization routine name.
.TP 8
\f2library_file_name\fP
Specifies the name of the file containing the library. The file is a
shared library and usually has the extension \f3.so\fP.
.TP 8
\f2initialization_routine_name\fP
This routine is used to initialize the component, if appropriate.
The \f3system\fP and \f3core\fP libraries do not have initialization
routines. If no name is specified, the name will be constructed from
the library name.
.TP 8
\f2device_name\fP
For device handlers and extension sublists, the device name matches the
name stored on a graphics device option card. The name is used to match
a library to a graphics device. This name must be provided for device
handler and extension sublist components that handle graphics devices.
.TP 8
\f2sub_list\fP
Specifies a list of libraries made available for loading to an
extension. The syntax is the same as the \f2library_list\fP syntax
except that no further sublists are allowed.
.in -8
.TP 8
\f2library_path\fP < \f2path_list\fP >
Specifies a colon separated list of directories to search for finding
libraries. If the list does not begin or end with a colon, it will be
used as the exclusive search path for libraries. If the list begins or
ends with a colon, it is either appended or prepended to the default
library search path, which may either be a default search path as
specified by the system loader or the search path specified by the
environment variable \f3LD_LIBRARY_PATH\fP. (See the manpage for
\f3/sbin/loader\f1 for more details.)
.TP 8
\f2args\f1 < \f2arglist\f1 >
Specifies the list of arguments to be appended to the command line
arguments passed to the X server. Arguments can span multiple lines and
no parsing is done by the \f3Xdec\f1 command. The options \f3-config\f1
and \f3-errorFile\f1 are specific to the \f3Xdec\f1 bootstrap command
and cannot be specified in the configuration file.
.PP
The \f3Xdec\f1 command searches for libraries using the
\f2library_path\f1 specified in the configuration file or the
\f3LD_LIBRARY_PATH\f1 environment variable. Each component in the
colon separated path is searched. In addition, for each component in
the path, the path \f3component/Xserver\f1 is also searched so that
X server libraries can be more neatly maintained in a subdirectory.
The default search path is \f3/usr/shlib/Xserver:/usr/shlib\f1.
.PP
The default system installation provides a sample configuration file
\f3/usr/lib/X11/Xserver.conf\fP. It contains comments and shows
examples for setting up library lists, library sublists, the library
search path, and sample argument lists.
.SH GENERIC FRAME BUFFER HANDLERS
If you install a generic frame buffer device that has the following
characteristics, you can handle the frame buffer with the generic
frame buffer handlers provided with the core X server components:
.IP \(bu 4
Does not require any initialization beyond that done by the device
driver.
.IP \(bu
Is a continuous array of packed pixels with a depth of 1, 8, 16, or
32 bits.
.IP \(bu
Can be accessed through the workstation device driver.
.PP
The entries you would need in the configuration file for initializing
the device are as follows for the 1-, 8-, 16-, and 32-bit deep devices:
.sp
.in +4
< mfb	libmfb.so	mfbScreenInit	device_name >
.br
< cfb	libcfb.so	cfbScreenInit	device_name >
.br
< cfb16	libcfb16.so	cfb16ScreenInit	device_name >
.br
< cfb32	libcfb32.so	cfb32ScreenInit	device_name >
.in -4
.sp
where \f2device_name\f1 matches the moduleID of the graphics device.
.SH DIAGNOSTICS
If run from \f3xdm\f1, errors are typically logged in the file
\f3/usr/lib/X11/xdm/xdm-errors\f1.
.SH FILES
.PP
.TS
tab(~);
l l.
T{
\f3/etc/X*.hosts\f1
T}~Initial access control list
.sp
T{
\f3/usr/lib/X11/fonts/misc,\f1
.br
\f3/usr/lib/X11/fonts/75dpi,\f1
.br
\f3/usr/lib/X11/fonts/100dpi\f1
T}~Bitmap font directories
.sp
T{
\f3/usr/lib/X11/fonts/speedo,\f1
.br
\f3/usr/lib/X11/fonts/Type1\f1
T}~Outline font directories
.sp
T{
\f3/usr/lib/X11/fonts/decwin/100dpi,\f1
.br
\f3/usr/lib/X11/fonts/decwin/75dpi\f1
T}~DECwindows font directories
.sp
T{
\f3/usr/lib/X11/rgb.txt\f1
T}~Color database
.sp
T{
\f3/tmp/.X11-unix/X*\f1
T}~UNIX domain socket
.sp
T{
\f3/usr/adm/X*msgs\f1
T}~Error log file
.sp
T{
\f3/usr/lib/X11/Xserver.conf\f1
T}~Default configuration file
.sp
T{
\f3/usr/shlib/Xserver\f1
T}~Loadable components
.sp
T{
\f3/usr/bin/X11/Xdec\f1
T}~Executable image
.TE
.\" OLD "FILES" CODE. DOESN'T WORK BECAUSE OF BUG (PER DICK BINDER).
.\" .TP 30
.\" \f3/etc/X*.hosts\fP
.\" Initial access control list
.\" .TP 30
.\" \f3/usr/lib/X11/fonts/misc\f1, \f3/usr/lib/X11/fonts/75dpi\f1, \f3/usr/lib/X11/fonts/100dpi\fP
.\" Bitmap font directories
.\" .TP 30
.\" \f3/usr/lib/X11/fonts/Speedo\f1, \f3/usr/lib/X11/fonts/Type1\fP
.\" Outline font directories
.\" .TP 30
.\" \f3/usr/lib/X11/fonts/decwin/100dpi,\f1 \f3/usr/lib/X11/fonts/decwin/75dpi\fP
.\" DEC Windows font directories
.\" .TP 30
.\" \f3/usr/lib/X11/rgb.txt\fP
.\" Color database
.\" .TP 30
.\" \f3/tmp/.X11-unix/X*\fP
.\" UNIX domain socket
.\" .TP 30
.\" \f3/usr/adm/X*msgs\fP
.\" Error log file
.\" .TP 30
.\" \f3/usr/lib/X11/Xserver.conf\fP
.\" Default configuration file
.\" .TP 30
.\" \f3/usr/shlib/Xserver\fP
.\" Loadable components
.\" .TP 30
.\" \f3/usr/bin/X11/Xdec\fP
.\" Executable image
.SH "SEE ALSO"
\f3X(1X)\f1, \f3bdftopcf(1X)\f1, \f3mkfontdir(1X)\f1, \f3xauth(1X)\f1,
\f3xdm(1X)\f1, \f3xhost(1X)\f1,
\f3xset(1X)\f1, \f3xsetroot(1X)\f1, \f3xterm(1X)\f1,
\f2X Window System Protocol\f1,
\f2Definition of the Porting Layer for the X v11 Sample Server\f1,
\f2Strategies for Porting the X v11 Sample Server\f1,
\f2Godzilla's Guide to Porting the X V11 Sample Server\fP
.EQ
delim off
.EN
