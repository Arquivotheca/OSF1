.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: lorder.1,v $ $Revision: 3.2.2.6 $ (DEC) $Date: 1993/01/29 16:56:49 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.TH lorder 1
.SH NAME
\*Llorder\*O \- Finds the best order for member files in an object library
.SH SYNOPSIS
.PP
.sS
\*Llorder\*O
\*Vfile\*O
\&...
.sE
.SH DESCRIPTION
.iX "lorder command"
.iX "files" "in object library"
.iX "object library" "ordering relation"
.iX "ordering files in object library"
.PP
The \*Llorder\*O command is essentially obsolete. Use the
following command in its place:
.iS
% ar -ts \*Vfile\*O.a
.iE
.PP
The \*Llorder\*O command reads one or more object or library
archive files, looks for external references, and writes a
list of paired filenames to standard output.  The first of each pair
of files contains references to identifiers that are defined in
the second file.  You can send this list to the \*Ltsort\*O command to find an
ordering of a library member file suitable for 1-pass access by \*Lld\*O.
.PP
If object files do not end with \*L.o\*O, \*Llorder\*O
overlooks them and attributes their global symbols and references to
some other file.
.SH EXAMPLES
.PP
To create a subroutine library, enter:
.iS
lorder charin.o scanfld.o scan.o scanln.o |
	tsort | xargs ar qv libsubs.a
\*O\c
.iE
.PP
(Enter this command entirely on one line, not on two lines as shown above.)
.PP
This creates a subroutine library named \*Llibsubs.a\*O that
contains \*Lcharin.o\*O, \*Lscanfld.o\*O, \*Lscan.o\*O,
and \*Lscanln.o\*O.
The ordering of the object modules in the library is important.
The \*Llorder\*O and \*Ltsort\*O commands together add the
subroutines to the library in the proper order.
.PP
Suppose that \*Lscan.o\*O calls entry points in
\*Lscanfld.o\*O and \*Lscanln.o\*O.
\*Lscanfld.o\*O also calls entry points in \*Lcharin.o\*O.
First, the \*Llorder\*O command creates a list of pairs that shows
these dependencies:
.iS
charin.o charin.o
scanfld.o scanfld.o
scan.o scan.o
scanln.o scanln.o
scanfld.o charin.o
scanln.o charin.o
scan.o scanfld.o
\*O\c
.iE
.PP
This list is piped to the
\*Ltsort\*O command, which converts the list into the ordering that is
needed:
.iS
scan.o
scanfld.o
scanln.o
charin.o
\*O\c
.iE
.PP
Note that each module precedes the module it calls.  \*Lcharin.o\*O,
which does not call another module, is last.
The second list is then piped to \*Lxargs\*O,
which constructs and runs the following \*Lar\*O command:
.iS
ar  qv  libsubs.a  scan.o  scanfld.o  scanln.o  charin.o
\*O\c
.iE
.PP
This \*Lar\*O command creates the properly ordered library.
.SH FILES
.PP
.VL 11m
.LI "\*L/tmp/sym*\*O"
Temporary files
.LE
.SH RELATED INFORMATION
.PP
Commands:  \*Lar\*O(1), \*Las\*O(1), \*Lcc\*O(1), \*Lld\*O(1), \*Lmake\*O(1),
\*Lnm\*O(1), \*Lsize\*O(1), \*Lstrip\*O(1), \*Ltsort\*O(1), \*Lxargs\*O(1)
.PP
Files:
.\" Begin Digital-specific information
.\" Adding a.out(4) to replace osf_rose per QAR 9937.
\*La.out\*O(4),
.\" Also removed commands from Files: that were listed above in Commands:.
.\" End Digital-specific information
\*Lar\*O(4),
.\" Begin Digital-specific information
.\" Commenting out osf_rose because DEC OSF/1 does not support that format.
.\" \*Losf_rose\*O(4),
.\" End Digital-specific information
.\".PP 
.\"The \*Las\*O, \*Lgcc\*O (\*Lcc\*O), \*Lgdb\*O, and \*Lld\*O
.\"commands may be available on your system, but are not provided with OSF/1.
.EQ
delim off
.EN
