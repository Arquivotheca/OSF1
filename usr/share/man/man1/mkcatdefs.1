.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: mkcatdefs.1,v $ $Revision: 3.2.5.3 $ (DEC) $Date: 1993/11/22 16:46:04 $
.\" 
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"
.TH mkcatdefs 1
.SH "NAME"
.PP
\*Lmkcatdefs\*O \- Preprocesses a message source file
.SH "SYNOPSIS"
.PP
.sS
\*Lmkcatdefs\*O
\*O[\*L-h\*O]
\*Vcatname\*O
\*Vsource_file\*O\ \&.\&.\&.
.sE
.SH "FLAGS"
.PP
.VL 4m
.LI "\*L-h\*O"
Suppresses the generation of a \*L_msg.h\*O file.
.LE
.SH "DESCRIPTION"
.PP
.iX "mkcatdefs command"
.iX "message catalogs" "preprocessing symbols in"
The \*Lmkcatdefs\*O utility preprocesses
a message source file to change symbolic identifiers into numeric constants.
The utility produces two forms of output.  The standard output is a set of
commands suitable for passing to the \*Lgencat\*O utility, which creates a
new message catalog.
.\" .zA "defect, 6843, R1.1.1, Changed wording so that catname is required"
In addition, \*Vcatname\*O,
produces a file named \*Vcatname\*L_msg.h\*O containing
definition statements that equate your symbolic identifiers with set numbers
and message ID numbers assigned by \*Lmkcatdefs\*O.
.\" .zZ "defect, 6843, R1.1.1, Changed wording so that catname is required"
The \*Vcatname\*L_msg.h\*O file is required in your
application program if you use symbolic identifiers.
.PP
See \*Lgencat\*O(1) for a description of input format for
commands.  The only difference between \*Lgencat\*O
and \*Lmkcatdefs\*O is that \*Lgencat\*O
requires a number to identify each message, while
\*Lmkcatdefs\*O accepts either a number or
a symbolic name.  The \*Lmkcatdefs\*O program can send message source data,
with numbers instead of symbolic identifiers, to standard output.
This output is suitable as input to the \*Lgencat\*O program.  You
can use the \*L>\*O (right angle bracket) character to write the
new message source to a file, and then use the file as input to
the \*Lgencat\*O command.
.PP
A symbolic name is converted to a number in the
\*Lmkcatdefs\*O output.  Each set and message in a
program must have a unique number or symbolic name.
Symbolic identifiers can contain letters, digits, and underscores. The first
character cannot be a digit or an underscore.  You cannot use
a symbolic name for a set in the \*L$delset\*O command.
.PP
The \*Lmkcatdefs\*O program is designed to create new message catalogs, not to
change existing ones incrementally.  Thus, the program's first
operation on each set is
to delete it, in case the catalog contains a set with that number.  The sets
specified in \*Vsource_file\*O are assigned numbers in ascending order,
starting at 1.  Within each set, messages are also assigned numbers in
ascending order, starting at 1.  If you assign a message
to a number in your \*Vsource_file\*O, \*Lmkcatdefs\*O
continues its ascending series with that number.
.PP
Note also that you can use the \*Lruncat\*O command rather than
the \*Lmkcatdefs\*O command.  The \*Lruncat\*O command
automatically sends the message
source file through the \*Lmkcatdefs\*O command and pipes the
files to the \*Lgencat\*O command.
.SH EXAMPLES
.PP
.AL
.LI
The following example shows a message source file with symbolic
message identifiers and quoted messages:
.IP
.oS
$quote " Use a double quotation mark to delimit message text
$set MSFAC         Message Facility - symbolic identifiers
SYM_FORM "Symbolic identifiers can contain only letters \e
and digits and the _ (underscore character)\en"
5 "You can mix symbolic identifiers and numbers \en"
$quote
MSG_H Remember to include the "_msg.h" file in your program\en
.oE
.IP
In the preceding example, the \*L$quote\*O command sets the quote character
to \*L"\*O (double quote), then disables
it before the last message, which contains double quotes.
.IP
When you process the file with \*Lmkcatdefs\*O, the modified
source is written to standard output.  Standard output can either be
redirected to a file using the \*L>\*O
(redirection symbol) or piped to \*Lgencat\*O.
.LI
Assume that the preceding file is named \*Lsymb.src\*O.  It can be processed
with \*Lmkcatdefs\*O as follows:
.IP
.iS
$ mkcatdefs symb symb.src >symb.msg
.iE
.IP
The following source is created:
.IP
.oS
$quote " Use a double quotation mark to delimit message text
$delset 1
$set 1
1  "Symbolic identifiers can contain only letters \e
and digits and the _ (underscore character)\en"
5 "You can mix symbolic identifiers and numbers \en"
$quote
6  Remember to include the "_msg.h" file in your program\en
.oE
.IP
Note that the assigned message numbers are noncontiguous because
the source contained a specific number. The \*Lmkcatdefs\*O program
always assigns the previous number plus 1 to a symbolic identifier.
.IP
The generated \*Lsymb_msg.h\*O file is:
.IP
.oS
\&#ifndef _H_SYMB_MSG
\&#define _H_SYMB_MSG
\&#include <limits.h>
\&#include <nl_types.h>
\&#define MF_SYMB "symb.cat"

/* The following was generated from symb.src. */

/* definitions for set MSFAC */
\&#define MSFAC 1

\&#define SYM_FORM 1
\&#define MSG_H 6
\&#endif
.oE
.IP
Note that \*Lmkcatdefs\*O also created  a symbol \*LMF_SYMB\*O
by adding \*LMF_\*O to the \*Vcatname\*O using uppercase
letters. The \*Lmkcatdefs\*O program assumes that the name of the
generated catalog should be \*Vcatname\*L\&.cat\*O, and generates
this symbol for your use with \*Lcatopen\*O.
.IP
Because this file includes \*Llimits.h\*O and \*Lnl_types.h\*O,
you do not need to include them in your application program.
(\*Lnl_types\*O defines special data types required
by the message facility routines.)
.LE
.SH "NOTES"
.PP
Symbolic references
allow a convenient input source for both the message catalog and the
program's header file; however, symbolic references are an extension to
X/Open specifications may not be supported on all
systems conforming to XPG4.
.SH "RELATED INFORMATION"
.PP
Commands:  \*Ldspcat\*O(1), \*Ldspmsg\*O(1), \*Lgencat\*O(1),
\*Lruncat\*O(1).
.PP
Functions:  \*Lcatclose\*O(3), \*Lcatgets\*O(3), \*Lcatopen\*O(3).
.EQ
delim off
.EN
