.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: strextract.1,v $ $Revision: 3.2.2.2 $ (DEC) $Date: 1992/05/26 15:41:29 $
.\"
.TH strextract 1
.SH NAME
strextract \- batch string extraction
.SH SYNOPSIS
.PP
.B strextract
[
.B \-p
\*Vpatternfile\*O
] [
.B \-i
\*Vignorefile\*O
] [
.B \-d
] [
\*Vsource-program...\*O
]
.SH DESCRIPTION
.PP
.iX "strextract utility"
The \*Lstrextract\*O command extracts text strings from source programs.
This command also writes the string it extracts to a message text file.
The message text file contains the text for each message extracted
from your input source program. The \*Lstrextract\*O command names the
file by appending \*L\&.str\*O to the name of the input source program.
.PP
In the
\*Vsource-program\*O
argument, you name one or more source programs
from which you want messages extracted. The \*Lstrextract\*O
command does not extract messages from source programs included using the
\*L#include\*O directive. Therefore, you might want a source program and all
the source programs it includes on a single \*Lstrextract\*O command line.
.PP
You can create a patterns file (as specified by
\*Vpatternfile\*O
) to control how the \*Lstrextract\*O
command extracts text. The patterns file is divided into several sections,
each of which is identified by a keyword. The keyword must start at the
beginning of a new line, and its first character must be a dollar sign ($).
Following the identifier, you specify a number of patterns. Each pattern
begins on a new line and follows the regular expression syntax you use in
the \*Lregexp\*O(3) routine. For more information on the patterns file, see the
\*Lpatterns\*O(4) reference page.
.PP
In addition to the patterns file, you can create a file that indicates
strings that \*Lextract\*O ignores.  Each line in this ignore file contains
a single string to be ignored that
follows the syntax of the \*Lregexp\*O(3) routine.
.PP
When you invoke the \*Lstrextract\*O
command, it reads the patterns file and the file that contains strings
it ignores.  You can specify a patterns file and an ignore file on the
\*Lstrextract\*O command line.  Otherwise, the \*Lstrextract\*O
command matches all strings and uses the default patterns file.
.PP
If \*Lstrextract\*O finds strings which match the \*LERROR\*O
directive in the pattern file, it reports the strings to standard
error (stderr.) but does not write the string to the message file.
.PP
After running \*Lstrextract\*O, you can edit the message text file to remove
text strings which do not need translating before running \*Lstrmerge\*O.
.PP
It is  recommended that you use \*Lextract\*O command  as a visual front
end to the \*Lstrextract\*O command rather than running \*Lstrextract\*O
directly.
.SH FLAGS
.PP
.IP \f3\-i\f1 5
Ignore text strings specified in
\*Vignorefile.\*O
By default, the \*Lstrextract\*O command searches for
\*Vignorefile \*O
in the current working directory, your home directory, and \*L/usr/lib/nls\*O.
.IP
If you omit the \*L\-i\*O option, \*Lstrextract\*O
recognizes all strings specified in the patterns file.
.IP \f3\-p\f1 5
Use \f2patternfile\f1 to match strings in the input source program. By default,
the command searches for the pattern file in the current working directory,
your home directory, and finally \*L/usr/lib/nls\*O.
.IP
If you omit the \*L\-p\*O option, the \*Lstrextract\*O
command uses a default patterns file that is stored in
\*L/usr/lib/nls/patterns\*O.
.IP \f3\-d\f1 5
Disables warnings of duplicate strings. If you omit the \*L\-d\*O option,
\*Lstrextract\*O prints warnings of duplicate strings in your source program.
.SH RESTRICTIONS
.PP
Given the default pattern file, you cannot cause \*Lstrextract\*O
to ignore strings in comments that are longer than one line.
.PP
You can specify only one rewrite string for all classes of pattern matches.
.PP
The \*Lstrextract\*O command does not extract strings from files include with
\*L#include\*O directive. You must run the \*Lstrextract\*O
commands on these files separately.
.oS
% strextract \-p c_patterns prog.c prog2.c
% vi prog.str
% strmerge \-p c_patterns prog.c prog2.c
% gencat prog.cat prog.msg prog2.msg
% vi nl_prog.c
% vi nl_prog2.c
% cc nl_prog.c nl_prog2.c
.oE
.PP
In this example, the \*Lstrextract\*O command uses the \*Lc_patterns\*O
file to determine which strings to match. The input source programs are named
\*Lprog.c\*O and \*Lprog2.c\*O.
.PP
If you need to remove any of the messages or extract one of the created strings, edit the
resulting message file, \*Lprog.str\*O.
Under no conditions should you add to this file. Doing so could result in
unpredictable behavior.
.PP
You issue the \*Lstrmerge\*O command to replace the extracted strings with
calls to the message catalog. In response to this command, \*Lstrmerge\*O,
creates the source message catalogs, \*Lprog.msg\*O and \*Lprog2.msg\*O,
and the output source programs, \*Lnl_prog.c\*O and \*Lnl_prog2.c\*O.
.PP
You must edit \*Lnl_prog.c\*O and \*Lnl_prog2.c\*O to include the appropriate
\*Lcatopen\*O and \*Lcatclose\*O function calls.
.PP
The \*Lgencat\*O command creates a message catalog and the
\*Lcc\*O command creates an executable program.
.SH RELATED INFORMATION
.PP
\*Lgencat\*O(1), \*Lextract\*O(1), \*Lstrmerge\*O(1), \*Lregexp\*O(3),
\*Lcatopen\*O(3), \*Lpatterns\*O(4)
.PP
\*EWriting Software for the International Market\*O
.EQ
delim off
.EN
