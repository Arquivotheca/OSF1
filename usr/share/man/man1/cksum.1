.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: cksum.1,v $ $Revision: 1.1.3.2 $ (DEC) $Date: 1993/08/29 13:12:37 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"build rmifdef
.\"
.\"
.\"build rmifdef tbl eqn
.TH cksum 1
.SH NAME
\*Lcksum\*O \- Displays the checksum and byte count of a file
.SH SYNOPSIS
.PP
.sS
\*Lcksum\*O
\*O[\*Vfile\*O\ \&.\&.\&.]
.sE
.SH DESCRIPTION
.iX "cksum command"
.iX "displaying" "checksum"
.iX "displaying" "byte count"
.iX "checksum"
.iX "bytes, counting"
.iX "files" "displaying checksum"
.iX "files" "displaying byte count"
.PP
The \*Lcksum\*O command reads the files specified by the \*Vfile\*O
argument and calculates a 32-bit checksum Cyclic Redundancy Check
(CRC) and the byte count for each file. If no files are specified,
standard input is read. The checksum, number of bytes, and filename
are written to standard output. If standard input is used, no pathname
is printed.
.PP
The \*Lcksum\*O command can be used to compare a suspect file
copied or communicated over noisy transmission lines against an exact
copy of a trusted file. The comparison made by the \*Lcksum\*O
command may not be cryptographically secure; however, it is unlikely that an
accidentally damaged file will produce the same checksum as the original file.
.PP
The \*Lcksum\*O command uses a different algorithm
than the \*Lsum\*O command to calculate the 32-bit checksum CRC.  The
\*Lcksum\*O command uses a CRC
algorithmn based on the Ethernet standard frame check.
.\" .zA "review, R1.1.2, XPG4"
In addition, the sum block count is an octet count in \*Lcksum\*O.
.PP
The CRC checksum is obtained in the following way:
.PP
The encoding is defined by the generating polynomial:
.PP
\*VG\*O(\*Vx\*O) =
\*Vx\*O\u\s832\s0\d +
\*Vx\*O\u\s826\s0\d +
\*Vx\*O\u\s823\s0\d +
\*Vx\*O\u\s822\s0\d +
\*Vx\*O\u\s816\s0\d +
\*Vx\*O\u\s812\s0\d +
\*Vx\*O\u\s811\s0\d +
\*Vx\*O\u\s810\s0\d +
\*Vx\*O\u\s88\s0\d +
\*Vx\*O\u\s87\s0\d +
\*Vx\*O\u\s85\s0\d +
\*Vx\*O\u\s84\s0\d +
\*Vx\*O\u\s82\s0\d +
\*Vx\*O + 1
.PP
Mathematically, the CRC value corresponding to a given file is defined
by the following procedure:
.AL
.LI
The \*Vn\*O bits to be evaluated are considered to be the coefficients
of a mod 2 polynomial \*VM\*O(\*Vx\*O) of degree \*Vn\*O-1.  These
\*Vn\*O bits are the bits from the file, with the most significant bit
being the most significant bit of the first octet of the file and the
last bit being the least significant bit of the last octet, padded
with zero bits (if necessary) to achieve an integral number of octets,
following by one or more octets representing the length of the file as
a binary value, least significant octet first.  The smallest number of
octets capable of representing this integer is used.
.LI
\*VM\*O(\*Vx\*O) is multiplied by \*Vx\*O\u\s832\s0\d (that is,
shifted left 32 bits) and divided by \*VG\*O(\*Vx\*O) using mod 2
division, producing a remainder \*VR\*O(\*Vx\*O) of degree less than
or equal to 31.
.LI
The coefficients of \*VR\*O(\*Vx\*O) are considered to be a 32-bit
sequence.
.LI
The bit sequence is complemented and the result is the CRC.
.LE
.\" .zZ "review, R1.1.2, XPG4"
.SH EXAMPLES
.PP
To display the checksum and the size, in bytes, of \*Lfile1\*O
and \*Lfile2\*O, enter:
.iS
cksum file1 file2
.iE
.oS
3995432187      1390    file1
3266927833      20912   file2
.oE
.PP
This output shows that
the checksum of the \*Lfile1\*O file is 3995432187
and contains 1390 bytes, and that the checksum of the \*Lfile2\*O
file is 3266927833 and contains 20912 bytes.
.SH RELATED INFORMATION
.PP
Commands: \*Lsum\*O(1), \*Lwc\*O(1).
.EQ
delim off
.EN
