.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.TH mxr 1
.SH NAME
.PP
\*Lmxr\*O - DECmigrate for DEC OSF/1 AXP: MIPS Translator Runtime Environment
.SH SYNOPSIS
.PP
.sS
\*Vexecutable_name\*O [\*Voptions...\*O]
.nL
\*L/usr/bin/mxr -help\*O
.nL
\*L/usr/bin/mxr -V\*O
.sE
.SH FLAGS
.PP
.VL 4m
.LI "\*L-help\*O"
Display the \*Lmxr\*O help message.
.LI "\*L-V\*O"
Display the \*Lmxr\*O version number.
.LE
.SH DESCRIPTION
.PP
.iX "mxr"
.iX "DECmigrate for DEC OSF/1 AXP: MIPS Translator Runtime Environment"
.iX "mx Translator Runtime Environment (mxr)"
The MIPS Translator Runtime Environment, \*Lmxr\*O, supports binary executables
produced by the DECmigrate for DEC OSF/1 AXP: MIPS (\*Lmx\*O).
When you execute the output executable on a DEC OSF/1 AXP system, \*Lmxr\*O
is automatically invoked either as a shared image or as a shared library.
The \*Lmxr\*O environment provides the translated executable with any MIPS or
ULTRIX resources it requires to run.
.PP
.\"Removed for SSB
.\"The \*Lmxr\*O image is a native DEC OSF/1 standalone image.  It provides
.\"functions that enable the translated executable to run as if it were on a
.\"MIPS or RISC ULTRIX system.
In cases where there is no DEC OSF/1 AXP translation for
a MIPS ULTRIX operation, \*Lmxr\*O supports the executable by emulating
that operation.  In addition, \*Lmxr\*O provides feedback, enabling
\*Lmx\*O to retranslate the executable, eliminate some or all instances of
emulation, and improve run-time performance.
.\" Removed for SSB
.\"  That is, all successfully
.\"translated executables perform like the original.  Some translations can be
.\"improved with feedback.  Translation never require active intervention to
.\"perform. 
.\".PP
.\"The default name for the output executable from \*Lmx\*O is \*Lmx.out\*O. 
.\"Before running the translated executable on a DEC OSF/1 AXP system, rename the
.\"\*Lmx.out\*O file to the name of the original MIPS executable.
.\".PP
.\"The \*Lmxr\*O environment supports the following MIPS system operations:
.\".ML
.\".LI
.\"Initialization routines
.\".LI
.\"SYSCALL jacketing
.\".LI
.\"Address space management 
.\".LI
.\"MIPS/ULTRIX signal interface
.\".LI
.\"Subroutines for long instructions 
.\".LI
.\"Full MIPS interpreter (rarely needed)
.\".LE
.\".PP
.\"The DEC OSF/1 AXP system provides most of the underlying system services that
.\"allow \*Lmxr\*O to provide an environment similar to ULTRIX to the translated
.\"executable.
.SH RESTRICTIONS
.PP
The \*Lmxr\*O environment does not support certain ULTRIX operations.  See the
release notes for the unsupported ULTRIX operation.
The \*Lmxr\*O environment only supports executables that were translated by
\*Lmx\*O.
.PP
The \*Lmxr\*O environment only supports \*Lsetuid\*O or \*Lsetgid\*O programs
or OMAGIC executions if the executable was translated using the \*L-coff\*O
option (the default) to the \*Lmx\*O command.  In addition, \*Lmxr\*O only
supports non-finite numbers if the executable was translated with the
\*L-full_fp\*O option to the \*Lmx\*O command.
.\"It does not support SUID/SGID translated executables.
.\"For \*Lmx\*O restrictions, see \*Lmx\*O(1).
.SH EXAMPLES
.PP
The following is an excerpt from the terminal output of an executable that
needs to be retranslated by \*Lmx\*O with the \*L\-F\*O option.
The opcodes stt (\*Ltype=stt\*O) and ldt (\*Ltype=ldt\*O) are the
ones in error.
.oS
.ps -3
[963] piston:person> dxpsview quilt.ps
Unaligned access pid=419 <mxr> va=10041624 reg=4 \*Ltype=stt\*O pc=58cbd8 ra=58c8f0
Unaligned access pid=419 <mxr> va=1004161c reg=2 \*Ltype=ldt\*O pc=58cbd8 ra=58c8f0
.ps +3
.oE
.SH DEBUGGING
.PP
This section describes situations when the translated executable fails at
runtime, runs but produces different results than the original executable, or
runs slowly.
.PP
If an executable runs properly on an ULTRIX system but fails when translated
and run on a DEC OSF/1 AXP system, check the following:
.ML
.LI
File Names: Some executables read the name with which they were invoked to
determine operating behavior.  To enable these executables to run properly
on the DEC OSF/1 AXP system, ensure that the file names match the original
names of the files on the MIPS ULTRIX system.  Restore filenames as necessary.
.LI
Missing Files: See if there are any files that need to be moved to the DEC
OSF/1 AXP system.  Some executables require certain files to exist at specific
places in the file system, and fail when that is not true.  For example, many X
clients require files in \*L/usr/lib/X11/app-defaults\*O
and \*L/usr/lib/X11/uid\*O.  Translated MicroFocus COBOL programs attempt to
access the file \*L/usr/lib/cobol/rts32\*O, and abort if that file is not
present.
.IP
To see a list of the files that a program is trying to find, set the
environment variable MXR_TRACE_VARIABLES to \*Lstat,open\(O.
.IP
To run translated programs, copy the missing files to the DEC OSF/1 AXP system
and place them in directories that correspond to their original directories.
For example, to run translated MicroFocus COBOL programs on a DEC OSF/1 AXP
system, do the following:
.AL
.LI
On the DEC OSF/1 AXP system, create the \*L/usr/lib/cobol\*O directory.
.LI
Copy the \*L/usr/lib/cobol/rts32\*O file from the RISC ULTRIX machine on which
COBOL is installed to the \*L/usr/lib/cobol\*O directory on the DEC OSF/1 AXP
system.
.LI
Invoke the translated executable.
.\"Removed for SSB
.\"  COBOL is installed in the
.\".\"\*L/usr/lib/cobol\*O directory on the DEC OSF/1 AXP system. 
.LE
.LI
Floating Point Exceptions:  Floating point calculations involving non-finite
numbers such as infinites, denormalized numbers, or Not-a-Numbers (NaNs),
generate exceptions on the AXP architecture. These calculations are handled
silently by the MIPS architecture.  If an executable generates SIGFPEs,
an error message of the following form displays and the program terminates:
.oS
The translated program attempted
a floating-point calculation with
a denormalized number or NaN.
Retranslate using the -full_fp option
to mx.
.oE
.IP
To reproduce the MIPS system behavior, \*Lmxr\*O must intercept these
exceptions and perform the appropriate actions without signaling the translated
program. Retranslate program using the \*L-full_fp\*O option to
\*Lmx\*O, then run the new translated executable.  The results of the
calculations using or producing non-finite numbers are consistent with
IEEE/ANSI 754-1985 and should produce the same results as the original program.
See the user manual for more information.  If the executable still generates
SIGFPEs, try translating with the \*Lmx\*O option \*L-trapb\*O.
If you do this, please file an SPR including the results with Digital so that
\*L-full_fp\*O option can be enhanced.  You can still use
MXR_GENERATE_FEEDBACK, but \*L-full_fp\*O must be set each time you retranslate
the executable.  See the Feedback section.
.LI
Error message saying "Unaligned access on ldt" or
"Unaligned access on stt:"  If you get a message of this form,
retranslate using the \*L-F\*O option to \*Lmx\*O.  This causes \*Lmx\*O to
assume that all floating-point loads and stores are potentially unaligned, and
to generate code accordingly. Refer to the Example section.
.LI
Error message saying "Stack not longword aligned:"
This error message indicates a serious bug in your original program.
.IP
If an executable runs on the DEC OSF/1 system but does not produce the same
output as on MIPS, check the following:
.AL
.LI
Some executables look at the stack and use the return address to examine the
MIPS code stream.  These executables will not work properly when translated.
These executables include:
.ML
.LI
Ada executables that use exceptions
.LI
PL/1 executables that use signals
.LI
Some classes of FORTRAN executables
.LI
Some programs that use Digital's VMS portability library (plib).
.LE
.LI
Some executables expect non-finite, floating point numbers, such as infinities,
denormalized numbers, and Not-a-Numbers, to behave as specified
in the IEEE/ANSI 754-1985 standard.  To support this, you must translate the
executable with the \*L-full_fp\*O option.  Otherwise, the results of the
translated executable might be different from the original executable, or may
abort with a floating-point exception.
.\"The \*Lmx\*O translator does not translate this
.\"behavior. The results of the translated executable may be different from the
.\"original executable, or may abort with a floating point exception.  If you
.\"receive a SIGFPE message, indicating a floating exception, see the
.\".E, "Release Notes"
.\"for more information.
.LE
.LI
Error message saying "The program changes the rounding mode to -Infinity..."
Retranslate the executable using the \*L-fixround \*O option.
At runtime, code checks the rounding mode, and changes each instance of
floating point rounding to RM (minus infinity)
to floating point rounding to RZ (zero).
.IP
This may cause a slight loss of precision, but might substantially improve the
runtime performance of the translated program.
.LI
The \*L/bin/time\*O file created by the executable shows large amounts of
time being spent on system operations.
Translate executable using the \*L-fixround\*O option.
At runtime, code checks the rounding mode, and changes each instance of
floating point rounding to minus infinity (RM) to floating
point rounding to zero (RZ).
.IP
This may cause a slight loss of precision, but might substantially improve the
runtime performance of the translated program.
.IP
If the translated executable runs, but slowly, see if the translation can be
improved with feedback.  See the Feedback section.
.LE
.\" \*Lmxr\*O environment operates as described below.
.\".AL
.\".LI
.\"The executable's header invokes \*L/usr/bin/mxr\*O.
.\".LI
.\"An \*Lmxr\*O function loads the sections of the executable into the current
.\"process's address space. For ZMAGIC files, the sections are mapped using
.\"\*Lmmap\*O. For NMAGIC files, DEC OSF/1 allocates virtual memory and reads in
.\"the section data.
.\".LI
.\"AXP text is protected read/no write/execute.
.\".LI
.\"MIPS text is protected read/no write/no execute.
.\".LI
.\"The data section is protected read/write/no execute.
.\".LI
.\"The \*Lmxr\*O environment converts the argument vector (argv) and
.\"environment vector (envp) into arrays of 32-bit pointers for the translated
.\"program.
.\".LI
.\"The \*Lmxr\*O environment sets all signals to go through the \*Lmxr\*O signal
.\"dispatcher.
.\".LI
.\"The \*Lmxr\*O environment sets up a callback vector dispatch table for the
.\"translated program.
.\".LI
.\"The \*Lmxr\*O environment jumps to the entry point of the translated program.
.\".LI
.\"When the translated program needs to invoke an \*Lmxr\*O service, it consults
.\"the callback vector dispatch table to find the address of the appropriate
.\"\*Lmxr\*O service routine.
.\".LI
.\"When a signal is delivered to the translated program, the \*Lmxr\*O signal
.\"dispatcher is invoked. If the signal is intended for the translated program,
.\"the signal dispatcher converts the DEC OSF/1 AXP sigcontext structure into
.\"MIPS ULTRIX format and invokes the translated signal handler.
.\".LI
.\"When the translated program exits, cleanup code is invoked. If
.\"MXR_STATS_DISPLAY or MXR_VERBOSE is set, the code correlates and prints the
.\"run-time statistics. If MXR_GENERATE_FEEDBACK is set, the code flushes and
.\"closes the feedback file.
.\".LI
.\"An \*Lmxr\*O function terminates the program.
.\".LE                      
.SH FEEDBACK
.PP
If you set the MXR_GENERATE_FEEDBACK environment variable and the executable
creates or extends a \*L.hif\*O file when executing, this means \*Lmxr\*O
discovered new entry points while executing the executable. Retranslating the
executable allows \*Lmx\*O to access the entry points and improve the speed of
the executable.  Do the following:
.AL
.LI
Delete or remove the translated executable.  You do not need it to create the
next version.
.LI
Copy only the \*L.hif\*O file to the system and directory containing both
\*Lmx\*O and the original input executable. Be sure the name of the \*L.hif\*O
file is \*Vexecutable\*O\*L.hif\*O, where \*Vexecutable\*O is the file name of
the input executable.
.LI
Retranslate the original input executable using \*Lmx\*O.
.sp
The \*Lmx\*O translator reads the \*L.hif\*O file and uses the information in
it to improve the translation.
.\"Removed for SSB
.\"\*L.hif\*O file contains a list of entry points not found on initial
.\"translation.
.LI
Run the retranslated executable with the MXR_GENERATE_FEEDBACK environment
variable set.
.LI
If the retranslated executable discovers more entry points, it appends entries
to the \*L.hif\*O file, extending the file.  Repeat steps 1, 2, 3, and 4 until
no new \*L.hif\*O entries are created during execution.
.\"Removed for SSB
.\"  Always use the same
.\"original input executable with the \*L.hif\*O file, not the output executable
.\"created by \*Lmxr\*O.
.\".LI
.\"If you get an error message saying, "Unaligned
.\"access on LDT" or "Unaligned access on STT," retranslate the executable using
.\"the \*L\-F\*O option. This aligns T_floating or IEE double-precision data on
.\"natural boundaries. See the Example section.  
.\".LI
.\"If you get an error message indicating a floating point exception because of
.\"denormalized numbers, see the
.\".E, "Release Notes"
.\"for information.
.LE
.SH ERROR MESSAGES
.PP
Error messages are described in the \*VDECmigrate for DEC OSF/1 AXP User's
Guide\*O.
.PP
The severity levels are as follows:
.VL
.LI "INFO"
Informational message.  Not displayed unless MXR_VERBOSE
is set.
.LI "WARNING"
Warning message.  Warning messages are displayed unless
MXR_QUIET is set.  A warning usually results in the specified
operation, such as syscall, returning an error status, but
the translated program continues to run.
.LI "ERROR"
Fatal error message.  Always displayed if an error occurs.  Error messages
cause immediate termination of the translated program.
.LE
.\" Removed because there is now a user guide
.\".PP
.\"Messages with the ERROR severity level are as follows:
.\".VL
.\".LI "MXR: Arg list too long"
.\"The translated program was invoked with an argument list
.\"that is too long to be processed by \*Lmxr\*O.
.\".LI "MXR: Cannot specify both MXR_VERBOSE and MXR_QUIET"
.\"The \*Lmxr\*O environment cannot use both MXR_VERBOSE and MXR_QUIET
.\"simultaneously because they contradict each other.  
.\".LI "MXR: Bad magic number 0x%x"
.\"The translated program has a MIPS ULTRIX magic number that is not recognized by
.\"the \*Lmxr\*O loader.
.\".LI "MXR: Error loading executable"
.\"An error was detected while trying to load the translated
.\"program.  This error message will usually be accompanied
.\"by an OSF error message detailing the reason for failure.
.\".LI "MXR: <name> is not an MX-translated program"
.\"The \*Lmxr\*O environment attempted to load a file
.\"that is not a translated executable produced by \*Lmx\*O.
.\".LI "MXR: <name> uses MXR interface V\*Vnnn\*O; this version of MXR supports V\*Vnnn\*O
.\"The translated program expected a different interface to \*Lmxr\*O than
.\"\*Lmxr\*O currently supports.  Action: Upgrade to the latest versions of
.\"\*Lmx\*O and \*Lmxr\*O and retranslate the executable.
.\".LI "MXR: No executable file specified"
.\"The \*Lmxr\*O environment was invoked as a standalone
.\"program with no other arguments.  When invoked as a standalone
.\"program, the first argument to \*Lmxr\*O must be the name of a translated
.\"program to run.
.\".LI "MXR: No PTYs available for xterm I/O"
.\"MXR_XTERM was set and the translated program could not allocate a PTY pair for
.\"performing I/O to the xterm window.
.\".LI "MXR: Unable to allocate vfork synchronization channel"
.\"During a simulated \*Lvfork()\*O syscall, \*Lmxr\*O allocates an IPC channel
.\"to synchronize parent and child execution.  If this channel cannot
.\"be allocated due to system resource constraints, this error is
.\"reported.
.\".LE
.\".PP
.\"Messages with the WARNING severity level are as follows:
.\".VL
.\".LI "MXR: Called MXR stub routine %s"
.\"The translated program attempted to invoke an unimplemented feature of
.\"\*Lmxr\*O.
.\".LI "MXR: IOCTL function %s not implemented yet"
.\"An \*Lioctl()\*O system call was issued with a request code not currently
.\"supported by \*Lmxr\*O.
.\".LI "MXR: MIPS Syscall '%s' is not supported"
.\"The translated program attempted to issue a system call to a system call vector
.\"known to ULTRIX but not currently supported by \*Lmxr\*O.
.\".LI "MXR: Non-standard open flags 0%o while opening %s"
.\"An \*Lopen()\*O system call was issued with bits in the flags argument that are
.\"not known to the DEC OSF/1 AXP system.
.\".LI "MXR: Undefined system call number %d"
.\"The translated program attempted to issue a system call to a system call vector
.\"unknown to either ULTRIX or DEC OSF/1 AXP systems.
.\".LI "MXR: Unknown ioctl request 0x%x"
.\"An \*Lioctl()\*O system call was issued with a request code that is unknown to
.\"either MIPS ULTRIX or DEC OSF/1 AXP systems.
.\".LE
.\".PP
.\"Messages with the INFO severity level are as follows:
.\".VL
.\".LI "MXR: Ignoring close of file descriptor %d"
.\"The translated program attempted to close a file descriptor assigned to one of
.\"\*Lmxr\*O's standard input, standard output, or standard error channels. Note:
.\"These are different from the translated program's stdin, stdout, and stderr.
.\".LE
.SH FILES
.PP
.VL
.LI "\*L/usr/shlib/mxr.so\*O"
The run-time support for executables translated using the \*L-coff\*O option to
the \*Lmx\*O command.  Resides on the DEC OSF/1 AXP system, and called in as a
shared library by the translated executable.
.LI "\*L/usr/bin/mxr\*O"
The runtime support for executables translated using the \*L-script\*O option
in \*Lmx\*O.
.\"Removed for SSB
.LI "mx.out"
The default name of the translated output file.
.LE
.SH ENVIRONMENT
.PP
The \*Lmxr\*O environment modifies its behavior if any of the following
environment variables are set when you execute a translated executable:
.VL
.LI "MXR_GENERATE_FEEDBACK"
Generate a \*L.hif\*O file to use as feedback for a subsequent retranslation.
This is overridden by the \*L-nohifs\*O option in \*Lmx\*O.  See the Feedback
section.
.LI "MXR_XTERM"
.nL
Redirect \*Lmxr\*O input/output through an xterm window.  This is useful for
separating \*Lmxr\*O diagnostic messages.
.LI "MXR_VERBOSE \*Vn\*O"
Print all debugging output in detailed form.
.VL 4m
.LI "1"
Prints program header information and "unrecognized error tag" messages.
.LI "2"
Prints program load/execute progress.
.LI "3"
Prints program exit details and homing map.
.LI "7"
Prints signal details.
.LI "8"
Prints \*Lioctl()\*O details.
.LI "9"
Prints \*Lbrk()\*O details.
.LI "10"
Prints computed branch details.
.LE
.LI "MXR_QUIET"
Suppress all \*Lmxr\*O output except for fatal errors.  Note: You may be
suppressing nonfatal error messages that indicate you are using an unsupported
feature. The executable still runs, but its function is
unpredictable.
.LI "MXR_TRACE_SYSCALLS xxx,xxx"
Trace all system calls.  If no system calls are specified, all system calls are
traced.  If any system calls are specified or if the word "all" appears in the
list, only those calls are traced.  Preceding a system call name with a hyphen
(-) forces it not to be traced. The list is scanned left-to-right.
Separate the system call names with commas (,).  For example:
.sp
.oS
MXR_TRACE_SYSCALLS open, close, read, write
.oE
.sp
Traces the calls specified.
.sp
.oS
MXR_TRACE_SYSCALLS all, -read, -write
.oE
Traces all syscalls except read and write.
.sp
If you are using either the ksh or sh shell, the format is:
.sp
.oS
MXR_TRACE_SYSCALLS=xxx,xxx
export MXR_TRACE_SYSCALLS
.oE
.LI "MXR_STATS_DISPLAY"
Display runtime statistics when the executable exits.
.LI "MXR_TRACE_SIGNALS"
Trace all signals and signal system calls.
.LE
.SH RELATED INFORMATION
.PP
.\" No such manpage in DEC OSF/1 V1.2 \*Lmx\*O(1) 
\*VDECmigrate for DEC OSF/1 AXP User's Guide\*O
.EQ
delim off
.EN
