.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" $XConsortium: xdm.man,v 1.27 91/08/26 19:27:29 gildea Exp $
.TH xdm 1X "" "" "" "X11R5"
.SH NAME
.PP
xdm \- X Display Manager with support for XDMCP
.SH SYNOPSIS
.PP
.NX "xdm display manager"
.B xdm
[
.B \-config
.I configuration_file
] [
.B \-nodaemon
] [
.B \-debug
.I debug_level
] [
.B \-error
.I error_log_file
] [
.B \-resources
.I resource_file
] [
.B \-server
.I server_entry
] [
.B \-session
.I session_program
]
.SH DESCRIPTION
.PP
.I Xdm
manages a collection of X displays, which may be on the local host
or remote servers.  The design of
.I xdm
was guided by the needs of X terminals as well as the X Consortium
standard XDMCP, the \f2X Display Manager Control Protocol\f1.
.I Xdm
provides services similar to those provided by \f2init\f1, \f2getty\f1
and \f2login\f1 on character terminals: prompting for login name and
password, authenticating the user, and running a ``session.''
.PP
A ``session'' is defined by the lifetime of a particular process; in
the traditional character-based terminal world, it is the user's login
shell.
In the
.I xdm
context, it is an arbitrary session manager.  This is because in a
windowing environment, a user's login shell process does not
necessarily have any terminal-like interface with which to connect.
When a real session manager is not available, a window manager or
terminal emulator is typically used as the ``session manager,''
meaning that termination of this process terminates the user's session.
.PP
When the session is terminated, \f2xdm\f1
resets the X server and (optionally) restarts the whole process.
.PP
When \f2xdm\f1 receives an Indirect query via XDMCP, it can run a
\f2chooser\f1 process to
perform an XDMCP BroadcastQuery (or an XDMCP Query to specified hosts)
on behalf of the display and
offer a menu of possible hosts that offer XDMCP display management.
This feature is useful with X terminals that do not offer a host
menu themselves.
.PP
Because
.I xdm
provides the first interface that users will see, it is designed to be
simple to use and easy to customize to the needs of a particular site.
.I Xdm
has many options, most of which have reasonable defaults.  Browse
through the various sections of this reference page, picking and
choosing the things you want to change.  Pay particular attention to
the
.B "Session Program"
section, which describes how to set up the style of session desired.
.PP
In handling a user's login to the X display,
.I xdm
records the login in the \f2/var/adm/utmp\f1
file, the same way that a normal, non-X login does.
This allows the
.I finger
and
.I who
commands to show the user logged in to the X display.
.SH "TYPICAL USAGE"
.PP
Actually,
.I xdm
is designed to operate in such a wide variety of environments that
.I typical
is probably a misnomer.
.PP
First, the
.I xdm
configuration file should be set up.
Make a directory (usually \f2/usr/lib/X11/xdm\f1)
to contain all of the relevant
files.  Here is a reasonable configuration file, which could be
named \f2xdm-config\f1:
.\" COPY OF DEFAULT XDM-CONFIG FILE AS OF 1/14/93
.nf
.cs 20
  DisplayManager.errorLogFile:   /usr/lib/X11/xdm/xdm-errors
  DisplayManager.pidFile:        /usr/lib/X11/xdm/xdm-pid
  DisplayManager.keyFile:        /usr/lib/X11/xdm/xdm-keys
  DisplayManager.servers:        /usr/lib/X11/xdm/Xservers
  DisplayManager.accessFile:     /usr/lib/X11/xdm/Xaccess
  DisplayManager.greeterLib:     /usr/lib/X11/xdm/libXdmDecGreet.so
  DisplayManager._0.authorize:   true
  DisplayManager._0.setup:       /usr/lib/X11/xdm/Xsetup_0
  DisplayManager._0.startup:     /usr/lib/X11/xdm/GiveConsole
  DisplayManager._0.reset:       /usr/lib/X11/xdm/TakeConsole
  DisplayManager.local_0.authorize:  true
  DisplayManager.local_0.setup:  /usr/lib/X11/xdm/Xsetup_0
  DisplayManager.local_0.startup:    /usr/lib/X11/xdm/GiveConsole
  DisplayManager.local_0.reset:  /usr/lib/X11/xdm/TakeConsole
  DisplayManager*resources:      /usr/lib/X11/xdm/Xresources
  DisplayManager*session:        /usr/lib/X11/xdm/Xsession
  DisplayManager*authComplain:   false
  DisplayManager*keymaps:        /usr/lib/X11/xdm/Xkeymaps
.cs

.fi
.\" Begin Digital specific information
.\" Added the DisplayManager*keymaps: line for V1.2 (Last line
.\" of the above example.)
.\" End Digital specific information
.PP
Note that this file simply contains references to other files.  Note
also that some of the resources are specified with ``*'' separating
the components.  These resources can be made unique for each different
display, by replacing the ``*'' with the display-name, but normally
this is not very useful.  See the \f3RESOURCES\f1 section for a
complete discussion.
.PP
The first file, \f2/usr/lib/X11/xdm/Xservers,\f1
contains the list of displays to manage that are not using XDMCP.
Most workstations have only one display, numbered 0, so the file
will look something like this:
.nf
.ta 0.5i

	:0 Local local /usr/bin/X11/X :0

.fi
.PP
This will keep \f2/usr/bin/X11/X\f1 running on this display and
manage a continuous cycle of sessions.
.PP
The file \f2/usr/lib/X11/xdm/xdm-errors\f1 will contain error
messages from
.I xdm
and anything output to stderr by \f2Xsetup_0\f1, GiveConsole, Xsession\f1
or \f2TakeConsole\f1.
When you have trouble getting
.I xdm
working, check this file to see if
.I xdm
has any clues to the trouble.
.PP
.\" START OF NEW MATERIAL 
\f2GiveConsole\f1 assigns ownership of the console to the user.  Here
is an example \f2GiveConsole\f1 file:
.nf
.ta 0.5i 1i

	#!/bin/sh
	# Assign ownership of the console to the invoking user.
	#
	# By convention, both xconsole and xterm -C check that the
	# console is owned by the invoking user and is readable before
	# attaching the console output.  This way, a random user can
	# invoke xterm -C without causing serious problems.
	#
	# However, don't give up ownership of the console if the
	# alternate console is in use, that is, if the graphics
	# display device is not the console.
	#
	case `/usr/sbin/sizer -wc` in
	1)
	  ;;
	*)
	  chown $USER /dev/console
	  ;;
	esac

.fi
.PP
\f2TakeConsole\f1 assigns ownership back to root.  Here is an example
\f2TakeConsole\f1 file:
.nf
.ta 0.5i 1i

	#!/bin/sh
	# Reassign ownership of the console to root -- this
	# should disallow assignment of console output to any
	# random users's xterm
	#
	chmod 622 /dev/console
	chown root /dev/console
.fi
.\" END OF NEW MATERIAL
.PP
The next configuration entry, \f2/usr/lib/X11/xdm/Xresources\f1, is
loaded onto the display as a resource database using
.I xrdb.
Since the authentication widget reads this database before starting up,
it usually contains parameters for that widget.
.\"  ***COMMENT OUT EXAMPLE PER DEVELOPER.
.\"     MOST OF RESOURCES SHOWN DON'T WORK.
.\" .nf
.\" .ta 0.5i 1i
.\" 
.\" 	dxlogin*login.translations: #override\\
.\" 		<Key>F1: set-session-argument(failsafe) finish-field()\\n\\
.\" 		<Key>Return: set-session-argument() finish-field()
.\" 	dxlogin*borderWidth: 3
.\" 	#ifdef COLOR
.\" 	dxlogin*greetColor: CadetBlue
.\" 	dxlogin*failColor: red
.\" 	#endif
.\" 
.\" .fi
.\" .PP
.\" Please note the translations entry; it specifies a few new
.\" translations for the widget that allow users to escape from the
.\" default session (and avoid troubles that may occur in it).  Note
.\" that if #override is not specified, the default translations are
.\" removed and replaced by the new value, not a very useful result
.\" as some of the default translations are quite useful (such as
.\" ``<Key>: insert-char ()'' which responds to normal typing).
.\" .PP
.\" ***COMMENT OUT XSTARTUP STUFF ALSO (PER DEVO)
.\" The \f2Xstartup\f1 file shown here simply prevents login while the
.\" file \f2/etc/nologin\f1
.\" exists.  Because there is no provision for displaying any messages here
.\" (there isn't any core X client that displays files),
.\" the user will probably be baffled by this behavior.
.\" Thus this is not a complete example, but
.\" simply a demonstration of the available functionality.
.\" .PP
.\" Here is a sample \f2Xstartup\f1 script:
.\" .nf
.\" .ta 0.5i 1i
.\" 
.\" 	#!/bin/sh
.\" 	#
.\" 	# Xstartup
.\" 	#
.\" 	# This program is run as root after the user is verified
.\" 	#
.\" 	if [ \-f /etc/nologin ]; then
.\" 		exit 1
.\" 	fi
.\" 	exit 0
.\" .fi
.PP
The most interesting script is \f2Xsession\f1.  It establishes the
default login session for all users of the workstation.  Here is an
example \f2Xsession\f1 file:
.\" NEW XSESSION SCRIPT PROVIDED BY DEVO (1/14/93)
.\"Removed comments that described and code that performed a check
.\"for the /usr/lib/X11/fonts/decwin/100dpi directory and added it
.\"to the path.  Per devo (Peter Derr).  5/25/93
.nf
.ta 0.5i 1i 1.5i

#!/bin/sh

if [ -d $HOME -a -w $HOME ]
then
	exec > $HOME/.xsession-errors 2>&1
else
	echo "Xsession: $HOME directory not writable by $USER" \e
		> /dev/console
	exec dxterm -geometry 80x40+0+0
	# exec xterm -geometry 80x24+0+0
fi

case $# in
1)
	case $1 in
	failsafe)
		exec dxterm -geometry 80x40+0+0
		# exec xterm -geometry 80x24+0+0
		;;
	esac
esac

startup=$HOME/.xsession
resources=$HOME/.Xresources

if [ -f $startup ]; then
	if [ -x $startup ]
	then
		exec $startup
	else
		exec /bin/sh $startup
	fi
else
	if [ -f $resources ]; then
		xrdb -load -retain $resources
	fi
	#
	# Motif/DECWindows Version
	#
	dxsession

	#
	# MIT/Athena Version
	#
	# For a MIT/Athena version,
	# uncomment the following lines and comment the Motif
	# lines above

  	# xconsole -geometry 480x130-0-0 -daemon -notify -verbose \e
	#      -fn fixed -exitOnFail
	# twm &
	# exec xterm -geometry 80x24+10+10 -ls
fi
.fi
.PP
The preceding version of the \f2Xsession\f1 script recognizes
the special ``failsafe'' mode, specified in the translations
in the \f2Xresources\f1 file above, to provide an escape from
the ordinary session.
.\"  FAILSAFE INFO ADDED PER DEVO REQUEST
.\"  Added references to $HOME\.xsession per Peter Derr. 5/25/93
Failsafe mode enables you to start a \f2dxterm\f1 even
when your \f2Xsession\f1 or \f2$HOME/.xsession\f1 script is faulty.  To enter
failsafe
mode, enter your username and password at the login prompt and then press
either the F1 key or the F2 key, instead of pressing the carriage return
key.  This sequence initiates a \f2dxterm\f1
session, enabling you to edit the faulty \f2Xsession\f1 or
\f2$HOME/.xsession\f1 file.
Also, if you do not have a login directory or if your login
directory is not writable (as in the case of a login directory
that belongs to someone else), failsafe mode is invoked and
brings up a \f2dxterm\f1 session to allow you to make
adjustments.
.\"  END OF FAILSAFE ADDITION TEXT
.PP
.\" Begin Digital specific information
The file \f2/usr/lib/X11/xdm/Xkeymaps\f1 defines the keymaps that are 
loaded by the \f2Xserver\f1 for the various languages and keyboards.  
The table in the following file defines the correspondence
between the value of the console's language variable, the keyboard types,
and the default keymaps loaded by the \f2Xserver\f1:

.nf
#
# This file defines the language-keymap mapping
#
#
#   The first line contains the name of the
#   link to be created to the default keymap.
#
/usr/lib/X11/keymap_default
#
#   This is the directory where the keymap files are to be found.
#
/usr/lib/X11/keymaps/
#
# The following lines must contain:
#                  <number> <language> <keymap-filename>
#
# The <number> field is a 2-byte hex value where the first byte
# represents the keyboard type and the second byte is the value 
# of the console's language variable.  The values for the keyboard 
# types are:
#          LK401   0
#          PCXAL   1
#          LK201   2
#          LK421   3
#          LK443/4 4
#
# Do not put any 8-bit characters in the language names because
# the isspace() function that is used to parse this file might
# read them as spaces and cause the lines to be parsed incorrectly.
# 
# If the <keymap-filename> field is blank, this has the special 
# meaning that no keymap_default link will be created, nor will 
# any existing keymap_default be modified.
#
# The keymap specified for the "fallback" line is used for any
# language value missing from the table for the corresponding
# keyboard type.
#
000   fallback                us_lk401aa.decw_keymap
030   Dansk                   danish_lk401ad_tw.decw_keymap
032   Deutsch                 austrian_german_lk401ag.decw_keymap
034   Deutsch(Schweiz)        swiss_german_lk401al_tw.decw_keymap
036   English(American)       us_lk401aa.decw_keymap
038   English(British/Irish)  uk_lk401aa.decw_keymap
03a   Espanol                 spanish_lk401as_tw.decw_keymap
03c   Francais                belgian_french_lk401ap_tw.decw_keymap
.if n 03e   Francais(Canadien)      canadian_french_lk401ac_tw.decw_keymap
.if t 03e   Francais(Canadien) \e
.if t 		canadian_french_lk401ac_tw.decw_keymap
.if n 040   Francais(SuisseRomande) swiss_french_lk401ak_tw.decw_keymap
.if t 040   Francais(SuisseRomande) \e
.if t 		swiss_french_lk401ak_tw.decw_keymap
042   Italiano                italian_lk401ai_tw.decw_keymap
044   Nederlands              dutch_us_lk401ah.decw_keymap
046   Norsk                   norwegian_lk401an_tw.decw_keymap
048   Portugues               portuguese_lk401av.decw_keymap
04a   Suomi                   finnish_lk401af_tw.decw_keymap
04c   Svenska	              swedish_lk401am_tw.decw_keymap
04e   Vlaams                  flemish_lk401ab_tw.decw_keymap

100   fallback                us_pcxalka.decw_keymap
130   Dansk                   danish_pcxalkd.decw_keymap
132   Deutsch                 austrian_german_pcxalkg.decw_keymap
        .
        .
        .
14c   Svenska                 swedish_pcxalma.decw_keymap
14e   Vlaams                  belgian_pcxalkb.decw_keymap

200   fallback                us_lk201re.decw_keymap
230   Dansk                   danish_lk201ld_tw.decw_keymap
232   Deutsch                 austrian_german_lk201lg_tw.decw_keymap
        .
        .
        .
24c   Svenska                 swedish_lk201lm_tw.decw_keymap
24e   Vlaams                  flemish_lk201lb_tw.decw_keymap

300   fallback                us_lk421aa.decw_keymap
336   English(American)       us_lk421aa.decw_keymap
338   English(British/Irish)  uk_lk421aa.decw_keymap

400   fallback                us_lk443aa.decw_keymap
430   Dansk                   danish_lk444kd.decw_keymap
432   Deutsch                 austrian_german_lk444kg.decw_keymap
        .
        .
        .
44c   Svenska                 swedish_lk444ma.decw_keymap
44e   Vlaams                  belgian_lk444kb.decw_keymap

.fi
.\" End Digital specific information
.SH OPTIONS
.PP
All these options, except \f3\-config\f1,
specify values that can also be specified in the configuration file
as resources.
.IP "\f3\-config \f2configuration_file\f1"
Names the configuration file, which specifies resources to control
the behavior of
.I xdm.
.I /usr/lib/X11/xdm/xdm-config
is the default.
.IP "\f3\-nodaemon\f1"
Specifies ``false'' as the value for the
\f3DisplayManager.daemonMode\f1 resource.
This option suppresses the normal daemon behavior, which is for
.I xdm
to close all file descriptors, disassociate itself from
the controlling terminal, and put
itself in the background when it first starts up.
.IP "\f3\-debug \f2debug_level\f1"
Specifies the numeric value for the \f3DisplayManager.debugLevel\f1
resource.  A non-zero value causes
.I xdm
to display debugging statements on the screen.  It also
disables the \f3DisplayManager.daemonMode\f1 resource, forcing
.I xdm
to run synchronously.  To interpret these debugging messages, a copy
of the source code for
.I xdm
is almost a necessity.  No attempt has been
made to rationalize or standardize the output.
.IP "\f3\-error \f2error_log_file\f1"
Specifies the value for the \f3DisplayManager.errorLogFile\f1 resource.
This file contains errors from
.I xdm
as well as anything written to stderr by the various scripts and
programs run during the progress of the session.
.IP "\f3\-resources \f2resource_file\f1"
Specifies the value for the \f3DisplayManager*resources\f1 resource.
This file is loaded using
.I xrdb
to specify configuration parameters for the
authentication widget.
.IP "\f3\-server \f2server_entry\f1"
Specifies the value for the \f3DisplayManager.servers\f1 resource.
See the section
.B "SERVER SPECIFICATION"
for a description of this resource.
.IP "\f3\-udpPort \f2port_number\f1"
Specifies the value for the \f3DisplayManager.requestPort\f1 resource.
This option sets the port number that
.I xdm
will monitor for XDMCP requests.  Because XDMCP
uses the registered well-known UDP port 177, this resource should
not be changed except for debugging.
.IP "\f3\-session \f2session_program\f1"
Specifies the value for the \f3DisplayManager*session\f1 resource.
This option indicates the program to run as the session after the user
has logged in.
.IP "\f3\-xrm \f2resource_specification\f1"
Allows an arbitrary resource to be specified, as in most
X Toolkit applications.
.SH RESOURCES
.PP
At many stages the actions of
.I xdm
can be controlled through the use of its configuration file, which
is in the X resource format.
Some resources modify the behavior of
.I xdm
on all displays, while others modify its behavior on a single display.
Where actions relate to a specific display, the display name is
inserted into the resource name between ``DisplayManager'' and
the final resource name segment.  For example,
\f3DisplayManager.expo_0.startup\f1 is the name of the resource
that defines the startup shell file on the ``expo:0'' display.
Because the resource manager uses colons to separate the name of
the resource from its value and dots to separate resource name parts,
.I xdm
substitutes underscores for both dots and colons when generating
the resource name.
.IP "\f3DisplayManager.servers\f1"
This resource either specifies a file name full of server entries,
one per line (if the value starts with a slash), or a single server
entry.  See the section \f3SERVER SPECIFICATION\f1 for the details.
.IP "\f3DisplayManager.requestPort\f1"
This resource indicates the UDP port number that
.I xdm
uses to listen for incoming XDMCP requests.  Unless you need to
debug the system, leave this with its default value of 177.
.IP "\f3DisplayManager.errorLogFile\f1"
Error output is normally directed to the system console.  To
redirect it, set this resource to a file name.  A method to
send these messages to
.I syslog
should be developed for systems that support it; however, the
wide variety of interfaces precludes any system-independent
implementation.  This file also contains any output directed to
stderr by the \f2Xsetup_0, GiveConsole, Xsession\f1, and
\f2TakeConsole\f1 files, so it will contain descriptions of problems
in those scripts as well.
.IP "\f3DisplayManager.debugLevel\f1"
If the integer value of this resource is greater than zero, reams of
debugging information will be printed.  It also disables daemon
mode, which would redirect the information into the bit bucket, and
allows non-root users to run
.I xdm,
which would normally not be useful.
.IP "\f3DisplayManager.daemonMode\f1"
Normally,
.I xdm
attempts to make itself into a daemon process unassociated with any terminal.
This is
accomplished by forking and leaving the parent process to exit, then closing
file descriptors and releasing the controlling terminal.  In some
environments, this is not desired (in particular, when debugging).  Setting
this resource to ``false'' will disable this feature.
.IP "\f3DisplayManager.pidFile\f1"
The filename specified will be created to contain an ASCII
representation of the process-id of the main
.I xdm
process.
.I Xdm
also uses file locking on this file
to attempt to eliminate multiple daemons running on
the same machine, which would cause problems.
.IP "\f3DisplayManager.lockPidFile\f1"
This resource controls whether
.I xdm
uses file locking to keep multiple display managers from running amok.
On System V, this resource
uses the \f2lockf\f1 library call, while on BSD it uses \f2flock.\f1
.IP "\f3DisplayManager.authDir\f1"
This resource names a directory in which
.I xdm
stores authorization files while initializing the session.  The
default value is \f2/usr/lib/X11/xdm.\f1
.IP \f3DisplayManager.autoRescan\f1
This boolean controls whether
.I xdm
rescans the configuration, servers, access control, and authentication
keys files after a session terminates and the files have changed.
By default, it is ``true.''  You can force
.I xdm
to reread these files by sending a SIGHUP to the main process.
.IP "\f3DisplayManager.removeDomainname\f1"
When computing the display name for XDMCP clients, the name resolver
typically creates a fully qualified host name for the terminal.
Because this is sometimes confusing,
.I xdm
will remove the domain name portion of the host name if it is the
same as the domain name of the local host when this variable is set.
By default, the value is ``true.''
.IP "\f3DisplayManager.keyFile\f1"
Not used.
.\" COMMENT OUT (PER DEVO)
.\" XDM-AUTHENTICATION-1 style XDMCP authentication requires that a
.\" private key be shared between
.\" .I xdm
.\" and the terminal.  This resource specifies the file containing those
.\" values.  Each entry in the file consists of a display name and the
.\" shared key.  By default,
.\" .I xdm
.\" does not include support for XDM-AUTHENTICATION-1, as it requires
.\" DES, which is not generally distributable because of United States
.\" export restrictions.
.IP \f3DisplayManager.accessFile\f1
To prevent unauthorized XDMCP service and to allow forwarding of XDMCP
IndirectQuery requests, this file contains a database of host names
that are either allowed direct access to this machine, or have a
list of hosts to which queries should be forwarded.  The format
of this file is described in the section
.B "XDMCP ACCESS CONTROL."
.IP \f3DisplayManager.exportList\f1
This resource is a whitespace-separated list of additional environment variables
to pass on to the \f2Xsetup_0\f1,
\f2GiveConsole\f1, \f2Xsession\f1, and \f2TakeConsole\f1 programs.
.IP \f3DisplayManager.greeterLib\f1
This resource is the name of the loadable greeter library.  
The greeter is the component
that displays the login box, collects the username and password from
the user, and authenticates the user.  The default value for this
resource is 
\f2/usr/lib/X11/xdm/libXdmDecGreet.so\f1
which is the Motif login interface.  The
\f2/usr/lib/X11/xdm/libXdmGreet.so\f1
library contains the Athena-style login interface.
.IP \f3DisplayManager.randomFile\f1
Not used.
.\" COMMENT OUT (PER DEVO)
.\" A file to checksum to generate the seed of authorization keys.
.\" This should be a file that changes frequently.
.\" The default is \f2/dev/mem\f1.
.IP "\f3DisplayManager.choiceTimeout\f1"
This resource specifies the time in seconds after which a host choice returned
from the chooser will no longer be used on a following Indirect
request from a remote display.  The default value is 15 seconds.
.IP "\f3DisplayManager.\f2DISPLAY\f3.resources\f1"
This resource specifies the name of the file to be loaded by
\f2xrdb\f1 as the resource database onto the root window of
screen 0 of the display.  The \f2Xsetup_0\f1 program, Login
widget, and \f2chooser\f1 will use the resources set in this file.
This resource database is loaded just before the authentication
procedure is started, so it can control the appearance of the login
window.  See the
.B "AUTHENTICATION WIDGET"
sections which describe the various resources that are appropriate to
place in this file.  There is no default value for this resource, but
\f2/usr/lib/X11/xdm/Xresources\f1 is the conventional name.
.IP "\f3DisplayManager.\f2DISPLAY\f3.chooser\f1"
This resource specifies the program run to offer a host menu for 
Indirect queries redirected to the special host name CHOOSER.
The default is \f2/usr/lib/X11/xdm/chooser\f1.
See the sections \f3XDMCP ACCESS CONTROL\f1 and \f3CHOOSER\f1.
.IP "\f3DisplayManager.\f2DISPLAY\f3.xrdb\f1"
This resource specifies the program used to load the resources.  By default,
.I xdm
uses \f2/usr/bin/X11/xrdb\f1.
.\" DOES NOT EXIST (PER DEVO)
.\" .IP "\f3DisplayManager.\f2DISPLAY\f3.cpp\f1"
.\" This resource specifies the name of the C preprocessor that is used by
.\" \f2xrdb\f1.
.IP "\f3DisplayManager.\f2DISPLAY\f3.setup\f1"
This resource specifies a program that is run (as root) before offering the
Login window.  This program may be used to change the appearance of the screen
around the Login window or to put up other windows.  For example,
you may want to run \f2xconsole\f1 here.
By default, no program is run.  The conventional name for a
file used here is \f2Xsetup_0\f1.
See the section \f3SETUP PROGRAM.\f1
.IP "\f3DisplayManager.\f2DISPLAY\f3.startup\f1"
This resource specifies a program that is run (as root) after the
authentication process succeeds.  By default, no program is run.
The conventional name for a file used here is \f2GiveConsole\f1.
See the section \f3STARTUP PROGRAM\f1.
.IP "\f3DisplayManager.\f2DISPLAY\f3.session\f1"
This resource specifies the session to be executed (not running as root).
By default, \f2/usr/bin/X11/xterm\f1 is
run.  The conventional name is \f2Xsession\f1.
See the section \f3SESSION PROGRAM\f1.
.IP "\f3DisplayManager.\f2DISPLAY\f3.reset\f1"
This resource specifies a program that is run (as root) after the session
terminates.  By default, no program is run.
The conventional name is \f2TakeConsole\f1.  See the section
\f3RESET PROGRAM\f1.
.IP "\f3DisplayManager.\f2DISPLAY\f3.openDelay\f1"
.IP "\f3DisplayManager.\f2DISPLAY\f3.openRepeat\f1"
.IP "\f3DisplayManager.\f2DISPLAY\f3.openTimeout\f1"
.IP "\f3DisplayManager.\f2DISPLAY\f3.startAttempts\f1"
These numeric resources control the behavior of
.I xdm
when attempting to open intransigent servers.  The \f3openDelay\f1 resource is
the length of the pause (in seconds) between successive attempts.
The \f3openRepeat\f1 resource is the number of attempts to make.  The
\f3openTimeout\f1 resource
is the amount of time to wait while actually
attempting the open (that is, the maximum time spent in the
.IR connect (2)
system call).  The \f3startAttempts\f1 resource is the number of times this
entire process is done before giving up on the server.  After
\f3openRepeat\f1 attempts have been made, or if \f3openTimeout\f1
seconds elapse in any particular attempt,
.I xdm
terminates and restarts the server, attempting to connect again.
This process is repeated \f3startAttempts\f1 times, at which point
the display is declared dead and disabled.  Although
this behavior may seem arbitrary, it has been empirically developed
and works quite well on most systems.  The default values are
5 for \f3openDelay\f1, 5 for \f3openRepeat\f1, 30 for
\f3openTimeout\f1, and 4 for \f3startAttempts\f1.
.IP "\f3DisplayManager.\f2DISPLAY\f3.pingInterval\f1"
.IP "\f3DisplayManager.\f2DISPLAY\f3.pingTimeout\f1"
To discover when remote displays disappear,
.I xdm
occasionally pings them, using an X connection and \f2XSync\f1 calls. the
\f3pingInterval\f1 resource specifies the time (in minutes) between each ping
attempt. The \f3pingTimeout\f1 resource specifies the maximum amount of time (in
minutes) to wait for the terminal to respond to the request.  If the
terminal does not respond, the session is declared dead and terminated.
By default, both resources are set to 5 minutes.  If you frequently use X
terminals that can become isolated from the managing host, you may
wish to increase this value.  The only drawback is that sessions will
continue to exist after the terminal has been accidentally disabled.
.I xdm
will not ping local displays.  Although it would seem harmless, it is
unpleasant when the workstation session is terminated as a result
of the server hanging for NFS service and not responding to the ping.
.IP "\f3DisplayManager.\f2DISPLAY\f3.terminateServer\f1"
This boolean resource specifies whether the X server should be
terminated when a session terminates (instead of resetting it).
This resource can be used when the server tends to grow without bound
over time, in order to limit the amount of time the server is run.
The default value is ``false.''
.IP "\f3DisplayManager.\f2DISPLAY\f3.userPath\f1"
.I Xdm
sets the PATH environment variable for the session to this value.
It should be a colon separated list of directories; see
.IR sh (1)
for a full description.  A common setting is
``\f2:/bin:/usr/bin:/usr/bin/X11:/usr/ucb''\f1.
The default value can be specified at build time in the X system
configuration file with DefaultUserPath.
.IP "\f3DisplayManager.\f2DISPLAY\f3.systemPath\f1"
.I Xdm
sets the PATH environment variable for the startup and reset scripts
to the value of this resource.  The default for this resource is
specified at build time by the DefaultSystemPath entry in the system
configuration file; ``/etc:/bin:/usr/bin:/usr/bin/X11:/usr/ucb''
is a common choice.
Note the absence of ``.'' from this entry.  This is a good practice to
follow for root; it avoids many common Trojan Horse system penetration
schemes.
.IP "\f3DisplayManager.\f2DISPLAY\f3.systemShell\f1"
.I Xdm
sets the SHELL environment variable for the startup and reset scripts
to the value of this resource.  It is \f2/bin/sh\f1 by default.
.IP "\f3DisplayManager.\f2DISPLAY\f3.failsafeClient\f1"
If the default session fails to execute,
.I xdm
will fall back to this program.  This program is executed with no
arguments, but executes using the same environment variables as
the session would have had (see the section \f3SESSION PROGRAM\f1).
By default, \f2/usr/bin/X11/xterm\f1 is used.
.IP "\f3DisplayManager.\f2DISPLAY\f3.grabServer\f1"
.IP "\f3DisplayManager.\f2DISPLAY\f3.grabTimeout\f1"
To improve security,
.I xdm
grabs the server and keyboard while reading the login name and
password.  The \f3grabServer\f1 resource specifies if the server
should be held for the duration of the name/password reading.
When the value is ``false'', the server is ungrabbed after the keyboard grab
succeeds; otherwise, the server is grabbed until just
before the session begins.  The default is ``false''.
The \f3grabTimeout\f1 resource specifies the maximum time
.I xdm
will wait for the grab to succeed.  The grab may fail if some other
client has the server grabbed, or possibly if the network latencies
are very high.  This resource has a default value of 3 seconds.  You
should be cautious when raising it, as a user can be confused by a
look-alike window on the display.  If the grab fails,
.I xdm
kills and restarts the server (if possible) and the session.
.IP "\f3DisplayManager.\f2DISPLAY\f3.authorize\f1"
.IP "\f3DisplayManager.\f2DISPLAY\f3.authName\f1"
The \f3authorize\f1 resource is a Boolean that controls whether
.I xdm
generates and uses authorization for the local server connections.  If
authorization is used, \f3authName\f1 is a whitespace-separated list
of authorization mechanisms to use.  XDMCP connections dynamically
specify which authorization mechanisms are supported, so
\f3authName\f1 is ignored in this case.
.\" NOT TRUE (PER DEVO)
.\" When \f3authorize\f1 is set for a display and authorization is
.\" not available, the user is informed by having a different
.\" message displayed in the login widget.
By default, \f3authorize\f1 is ``true''; \f3authName\f1 is
``MIT-MAGIC-COOKIE-1.''
.IP \f3DisplayManager.\f2DISPLAY\f3.authFile\f1
This file is used to communicate the authorization data from
.I xdm
to the server, using the \f3\-auth\f1 server command line option.
The file should be kept in a directory that is not world-writable because
it could easily be removed, disabling the authorization mechanism
in the server.
.\" TEXT ADDED BY DEVO
If this resource is not specified, unique file names are
generated and written into the directory specified by the
\f3DisplayManager.authDir\f1 resource.
.\" END OF TEXT ADDED BY DEVO
.IP "\f3DisplayManager.\f2DISPLAY\f3.authComplain\f1"
Not used.
.\" COMMENT OUT TEXT (PER DEVO)
.\" If set to ``false,'' disables the use of the \f3unsecureGreeting\f1
.\" in the login window.
.\" See the section \f3Authentication Widget.\f1
.\" The default is ``true.''
.IP "\f3DisplayManager.\f2DISPLAY\f3.resetSignal\f1"
This resource specifies the number of the signal \f2xdm\f1 sends to reset 
the server.  See the section \f3CONTROLLING THE SERVER\f1.
The default is 1 (SIGHUP).
.IP "\f3DisplayManager.\f2DISPLAY\f3.termSignal\f1"
This resource specifies the  number of the signal \f2xdm\f1 sends to 
terminate the server.  See the section \f3CONTROLLING THE SERVER\f1.
The default is 15 (SIGTERM).
.IP "\f3DisplayManager.\f2DISPLAY\f3.resetForAuth\f1"
The original implementation of authorization in the sample server
reread the authorization file at server reset time, instead of when
checking the initial connection.  Because
.I xdm
generates the authorization information just before connecting to the
display, an old server would not get up-to-date authorization
information.  This resource causes
.I xdm
to send SIGHUP to the server after setting up the file, causing an
additional server reset to occur, during which time the new
authorization information will be read.
The default is ``false'', which will work for all X Consortium servers.
.IP "\f3DisplayManager.\f2DISPLAY\f3.userAuthDir\f1"
When
.I xdm
is unable to write to the usual user authorization file
($HOME/.Xauthority), it creates a unique file name in this
directory and points the environment variable XAUTHORITY at the
created file.  It uses \f2/tmp\f1 by default.
.\" Begin Digital specific information
.IP "\f3DisplayManager.\f2Display\f3.keymaps\f1"
This resource defines the default keymap that the local Xserver uses and maps 
the value of the console's language variable to a keymap name. This
resource applies only to local displays.
.\" End Digital specific information
.SH "XDMCP ACCESS CONTROL"
.PP
The database file specified by the \f3DisplayManager.accessFile\f1
provides information that
.I xdm
uses to control access from displays requesting XDMCP service.  This
file contains three types of entries:  entries that control the
response to Direct and Broadcast queries, entries that control the
response to Indirect queries, and macro definitions.
.PP
The format of the Direct entries is simple, either a host name or a
pattern, which is distinguished from a host name by the inclusion of
one or more meta characters (`*' matches any sequence of 0 or more
characters, and `?' matches any single character) that are compared
against the host name of the display device.  If the entry is a host
name, all comparisons are done using network addresses, so any name
that converts to the correct network address can be used.
For patterns, only canonical host names are used in the comparison,
so do not attempt to match aliases.
Preceding either a host name or a pattern with a `!' character
causes hosts which match that entry to be excluded.
.PP
An Indirect entry also contains a host name or pattern,
but follows it with a list of
host names or macros to which indirect queries should be sent.
.PP
A macro definition contains a macro name and a list of host names and
other macros that
the macro expands to.  To distinguish macros from hostnames, macro
names start with a `%' character.  Macros can be nested.
.PP
Indirect entries can also specify to have \f2xdm\f1 run \f2chooser\f1 
to offer a menu of hosts to connect to.  See the section \f3CHOOSER\f1.
.PP
When \f2xdm\f1 checks the access for a particular display host, each entry is
scanned in turn and the first matching entry determines the response.
Direct and Broadcast entries are ignored when scanning for an
Indirect entry and vice-versa.
.PP
Blank lines are ignored, `#' is treated as a comment delimiter
causing the rest of that line to be ignored, and `\e\f2newline\f1'
causes the newline to be ignored, allowing indirect host lists
to span multiple lines.
.PP
Here is an example Xaccess file:
.PP
.nf
#
# Xaccess \- XDMCP access control file
#

#
# Direct/Broadcast query entries
#

!xtra.lcs.mit.edu
          # disallow direct/broadcast service for xtra
bambi.ogi.edu
          # allow access from this particular display
*.lcs.mit.edu
          # allow access from any display in LCS

#
# Indirect query entries
#

%HOSTS  expo.lcs.mit.edu xenon.lcs.mit.edu \\
        excess.lcs.mit.edu kanga.lcs.mit.edu

extract.lcs.mit.edu  xenon.lcs.mit.edu
                   #force extract to contact xenon
!xtra.lcs.mit.edu   dummy   #disallow indirect access
*.lcs.mit.edu   %HOSTS   #all others get to choose
.fi
.SH CHOOSER
.PP
For X terminals that do not offer a host menu for use with Broadcast
or Indirect queries, the \f2chooser\f1 program can do this for them.
In the \f2Xaccess\f1 file, specify ``CHOOSER'' as the first entry in
the Indirect host list.  \f2Chooser\f1 will send a Query request to
each of the remaining host names in the list and offer a menu of all
the hosts that respond.
.PP
The list may consist of the word ``BROADCAST'', in which case
\f2chooser\f1 will send a Broadcast instead, again offering a menu of
all hosts that respond.  Note that on some operating systems, this
feature does not work because UDP
packets cannot be broadcast.
.PP
Example \f2Xaccess\f1 file using \f2chooser\f1:
.sp
.nf
extract.lcs.mit.edu   CHOOSER %HOSTS
                           #offer a menu of these hosts
xtra.lcs.mit.edu   CHOOSER BROADCAST
                           #offer a menu of all hosts
.fi
.PP
The program to use for \f2chooser\f1 is specified by the
\f3DisplayManager.\f2DISPLAY\f3.chooser\f1 resource.
Resources for this program can be put into the file named by
\f3DisplayManager.\f2DISPLAY\f3.resources\f1.
.SH "SERVER SPECIFICATION"
.PP
The resource \f3DisplayManager.servers\f1 gives a server specification
or, if the values starts with a slash (/), the name of a file
containing server specifications, one per line.
.PP
Each specification indicates a display that should constantly be
managed and that is not using XDMCP.  Each consists of at least
three parts:  a display name, a display class, a display type, and
(for local servers) a command line to start the server.  A typical
entry for local display number 0 would be:
.nf

  :0 local /usr/bin/X11/X

.fi
The display types are:
.TP 3
local
Local display: \f2xdm\f1 must run the server.
.TP 3
foreign
Remote display: \f2xdm\f1 opens an X connection to a running server.
.PP
The display name must be something that can be passed in the \f3-display\f1
option to an X program.  This string is used to generate the 
display-specific resource names, so be careful to match the names (that is, use
``:0 local /usr/bin/X11/X'' instead of ``localhost:0 local
/usr/bin/X11/X'' if your other resources are specified as
``DisplayManager._0.session'').
.PP
The display class portion is also
used in the display-specific resources as the class of the
resource.  This feature is useful if you have a large collection of similar
displays (like a corral of X terminals) and would like to set
resources for groups of them.  When using XDMCP, the display is
required to specify the display class.  The manual for your
particular X terminal should document the display class string for
your device.  If it does not, you can run \f2xdm\f1 in debug mode and look
at the resource strings that it generates for that device.  One of
these strings is the class string.
.PP  
To use the Shared Memory Transport as the default transport for
communication between the X server and local clients, specify the local
display as local:0, in which case the entry in the Xservers file might
read as follows:
.PP
.nf
local:0 local /usr/bin/X11/X
.fi
.SH "ATHENA-STYLE AUTHENTICATION WIDGET"
.PP
This login widget is used when the greeter library,
\f2/usr/lib/X11/xdm/libXdmGreet.so\f1,
is specified as the value of the
\f3DisplayManager.greeterLib\f1 resource.
.PP
Note that you cannot use the Athena-style greeter if you have enabled
enhanced security on your system.  The Athena-style greeter does not
use the necessary security mechanisms.  See \f3secsetup\f1(8).
.PP
The authentication widget reads a name/password pair from the keyboard.
Nearly every imaginable parameter can be controlled with a resource.
Resources for this widget should be put into the file named by
\f3DisplayManager.\f2DISPLAY\f3.resources\f1.  All of these resources
have reasonable default values, so it is not necessary to specify any of them.
.TP 8
.B "xlogin.Login.width, xlogin.Login.height, xlogin.Login.x, xlogin.Login.y"
The geometry of the Login widget is normally computed automatically.
If you wish to position it elsewhere, specify each of these resources.
.TP 8
.B xlogin.Login.foreground
The color used to display the typed-in user name.
.TP 8
.B xlogin.Login.font
The font used to display the typed-in user name.
.TP 8
.B xlogin.Login.greeting
A string that identifies this window.  The default is ``X Window System''.
.TP 8
.B xlogin.Login.unsecureGreeting
When X authorization is requested in the configuration file for this
display and none is in use, this greeting replaces the standard greeting.
The default is ``This is an unsecure session''.
.TP 8
.B xlogin.Login.greetFont
The font used to display the greeting.
.TP 8
.B xlogin.Login.greetColor
The color used to display the greeting.
.TP 8
.B xlogin.Login.namePrompt
The string displayed to prompt for a user name.  The \f3xrdb\f1 utility 
strips trailing white space from resource values.  To add spaces at the 
end of the prompt to make it more readable, add spaces escaped with backslashes.
The default is ``Login:  ''.
.TP 8 
.B xlogin.Login.passwdPrompt
The string displayed to prompt for a password.  The default is ``Password:  ''.
.TP 8
.B xlogin.Login.promptFont
The font used to display both prompts.
.TP 8
.B xlogin.Login.promptColor
The color used to display both prompts.
.TP 8
.B xlogin.Login.fail
A message that is displayed when the authentication fails.  The default 
is ``Login incorrect''.
.TP 8
.B xlogin.Login.failFont
The font used to display the failure message.
.TP 8
.B xlogin.Login.failColor
The color used to display the failure message.
.TP 8
.B xlogin.Login.failTimeout
The number of seconds that the failure message is displayed.  The default is 30.
.TP 8
.B xlogin.Login.translations
This resource specifies the translations used for the login widget.  Refer to
the X Toolkit documentation for a complete discussion of translations.
The default translation table is:
.sp
.nf
.ta 0.5i 2i
	Ctrl<Key>H:    delete-previous-character() \\n\\
	Ctrl<Key>D:    delete-character() \\n\\
	Ctrl<Key>B:    move-backward-character() \\n\\
	Ctrl<Key>F:    move-forward-character() \\n\\
	Ctrl<Key>A:    move-to-begining() \\n\\
	Ctrl<Key>E:    move-to-end() \\n\\
	Ctrl<Key>K:    erase-to-end-of-line() \\n\\
	Ctrl<Key>U:    erase-line() \\n\\
	Ctrl<Key>X:    erase-line() \\n\\
	Ctrl<Key>C:    restart-session() \\n\\
	Ctrl<Key>\\:   abort-session() \\n\\
	<Key>BackSpace:delete-previous-character() \\n\\
	<Key>Delete:   delete-previous-character() \\n\\
	<Key>Return:   finish-field() \\n\\
	<Key>:         insert-char() \\
.fi
.PP
The actions which are supported by the widget are:
.TP 8
.B delete-previous-character
Erases the character before the cursor.
.TP 8
.B delete-character
Erases the character after the cursor.
.TP 8
.B move-backward-character
Moves the cursor backward.
.TP 8
.B move-forward-character
Moves the cursor forward.
.TP 8
.B move-to-begining
(Apologies about the spelling error.)  Moves the cursor to
the beginning of the editable text.
.TP 8
.B move-to-end
Moves the cursor to the end of the editable text.
.TP 8
.B erase-to-end-of-line
Erases all text after the cursor.
.TP 8
.B erase-line
Erases the entire text.
.TP 8
.B finish-field
If the cursor is in the name field, proceeds to the password field.  If
the cursor is in the password field, checks the current name/password
pair.  If the name/password pair is valid, \f2xdm\f1 starts the session.
Otherwise, the failure message is displayed and the user is prompted again.
.TP 8
.B abort-session
Terminates and restarts the server.
.TP 8
.B abort-display
Terminates the server, disabling it.  This is a rash action and is not
accessible in the default configuration.   It can be used to stop \f2xdm\f1
when you are shutting the system down or using \f2xdmshell\f1.
.TP 8
.B restart-session
Resets the X server and starts a new session.  This action can be used when
the resources have been changed and you want to test them or when the
screen has been overwritten with system messages.
.TP 8
.B insert-char
Inserts the character typed.
.TP 8
.B set-session-argument
Specifies a single word argument that is passed to the session at
startup.  See the sections \f3SESSION PROGRAM\f1 and \f3TYPICAL USAGE\f1.
.TP 8
.B allow-all-access
Disables access control in the server.  This action can be used when
the \f2\.Xauthority\f1 file cannot be created by \f3xdm\f1.  Use this action
with caution; you should probably disconnect the machine from the network before
using this action.
.SH "MOTIF AUTHENTICATION WIDGET"
.PP
This login widget is used when the greeter library,
\f2/usr/lib/X11/xdm/libXdmDecGreet.so\f1,
is specified as the value of the
\f3DisplayManager.greeterLib\f1 resource.
.PP
The authentication widget reads a name/password pair from the keyboard.
Many parameters can be controlled with resources.
Resources for this widget should be put into the file named by
\f3DisplayManager.\f2DISPLAY\f3.resources\f1.
All these resources have reasonable default
values, so it is not necessary to specify any of them.
.TP 8
.B "dxlogin.LogoY, dxlogin.LogoX"
The coordinates in pixels of the upper left corner of the logo displayed on
the login screen.  A value of \-1 for \f3LogoX\f1 or \f3LogoY\f1 causes 
an appropriate default to be calculated.
.TP 8
.B dxlogin.LogoColor
The foreground color of the logo displayed across the top of the
login screen.  The default color is rgb:8182/0604/2c28.
.TP 8
.B  dxlogin.LogoBackground
The logo background color.  The default is White.
.TP 8
.B dxlogin.logoBW
The foreground color of the logo on monochrome systems.  The default is Black.
.TP 8
.B dxlogin.LogoBackgroundBW
The logo background color on monochrome systems.  The default is White.
.TP 8
.B dxlogin.setRootColor
If set to True, the root window will be painted the specified solid
color and, when the login widget is destroyed, the root window will
be restored to its default pattern.  The default value is True.
.TP 8
.B dxlogin.rootColor
The root window color in the login screen.  The default value is
rgb:3030/5050/6060.
.TP 8
.B dxlogin.bitmapFile
The name of the file containing a bitmap in X bitmap format that is
displayed in place of the default Digital logo.
.TP 8
.B dxlogin.bitmapMaskFile
The name of the file containing the shape mask bitmap to use when 
displaying the logo.
.TP 8
.B dxlogin*failColor
The color of the text displayed in a message box on a failed login.
.TP 8
.B dxlogin.greeting
The greeting text displayed as a title in the login box.  The
default value is "\\D\\E\\C OSF/1 on CLIENTHOST".  'DEC' must be escaped or 
else the \f2xrdb\f1 \f2cpp\f1 will treat it as a macro.  'CLIENTHOST' is a 
macro that \f2xrdb\f1 replaces with the name of the \f2xdm\f1 host.
.TP 8
.B dxlogin.greetingColor
The color of the greeting text in the login box.  The default is Black.
.TP 8
.B dxlogin.promptColor
The color of the text of the prompt strings in the login box.  The
default is Black.
.TP 8
.B dxlogin.answerColor
The color of the response text in the login box.  The default is Black.
.TP 8
.B dxlogin.greetingFont
The font used to display the greeting text in the login box.  The
default is '*-new century schoolbook-bold-i-normal-*-240-*'.
.TP 8
.B dxlogin.promptFont
The font used to display the strings in the login box.  The default
is '*-new century schoolbook-medium-r-normal-*-180-*'.
.TP 8
.B dxlogin.answerFont
The font used to display the response text in the login box.  The
default is '*-new century schoolbook-medium-r-normal-*-180-*'.
.SH "SETUP PROGRAM"
.PP
The program named in the \f3DisplayManager.\f2DISPLAY\f3.setup\f1
resource is run after the server is reset, but before the Login
window is offered.  The file is typically a shell script.
It is run as root, so you should be careful about security.
This is the place to change the root background or bring up other
windows that should appear on the screen along with the Login widget.
.PP
In addition to any specified by \f3DisplayManager.exportList\f1,
the following environment variables are passed:
.TP 3
DISPLAY
Sets the associated display name.
.TP 3
PATH
Sets the value of \f3DisplayManager.\f2DISPLAY\f3.systemPath\f1.
.TP 3
SHELL
Sets the value of \f3DisplayManager.\f2DISPLAY\f3.systemShell\f1.
.TP 3
XAUTHORITY
May be set to an authority file.
.PP
Note that since \f2xdm\f1 grabs the keyboard, any other windows
will not be able to receive keyboard input.  However, they will be able to
interact with the mouse, so check for potential security
holes here.  If \f3DisplayManager.\f2DISPLAY\f3.grabServer\f1 is set,
\f2Xsetup_0\f1 \f1will not be able to connect to the display at all.
Resources for this program can be put into the file named by
\f3DisplayManager.\f2DISPLAY\f3.resources\f1.
.\" ***COMMENT OUT THIS ENTIRE SECTION (PER DEVO). DESCRIBES THE
.\"    ATHENA XLOGIN WIDGIT, WHICH HAS BEEN REPLACED BY MOTIF'S
.\"    DXLOGIN
.\" .SH "AUTHENTICATION WIDGET"
.\" The authentication widget reads a name/password pair from
.\" the keyboard.  Nearly every imaginable parameter can be
.\" controlled with a resource.  Resources for this widget should
.\" be put into the file named by
.\" \f3DisplayManager.\f2DISPLAY\f3.resources\f1.  All of these
.\" have reasonable default values, so it is not necessary to
.\" specify any of them.
.\" .IP "\f3xlogin.Login.width, xlogin.Login.height, xlogin.Login.x, xlogin.Login.y\f1"
.\" The geometry of the Login widget is normally computed
.\" automatically.  If you wish to position it elsewhere,
.\" specify each of these resources.
.\" .IP "\f3xlogin.Login.foreground\f1"
.\" The color used to display the typed-in user name.
.\" .IP "\f3xlogin.Login.font\f1"
.\" The font used to display the typed-in user name.
.\" .IP "\f3xlogin.Login.greeting\f1"
.\" A string that identifies this window.
.\" The default is ``X Window System.''
.\" .IP "\f3xlogin.Login.unsecureGreeting\f1"
.\" When X authorization is requested in the configuration file for
.\" this display and none is in use, this greeting replaces the
.\" standard greeting.  The default is ``This is an unsecure session''
.\" .IP "\f3xlogin.Login.greetFont\f1"
.\" The font used to display the greeting.
.\" .IP "\f3xlogin.Login.greetColor\f1"
.\" The color used to display the greeting.
.\" .IP "\f3xlogin.Login.namePrompt\f1"
.\" The string displayed to prompt for a user name.
.\" .I Xrdb
.\" strips trailing white space from resource values, so to add
.\" spaces at the end of the prompt (usually a nice thing), add
.\" spaces escaped with backslashes.  The default is ``Login:  ''
.\" .IP "\f3xlogin.Login.passwdPrompt\f1"
.\" The string displayed to prompt for a password.
.\" The default is ``Password:  ''
.\" .IP "\f3xlogin.Login.promptFont\f1"
.\" The font used to display both prompts.
.\" .IP "\f3xlogin.Login.promptColor\f1"
.\" The color used to display both prompts.
.\" .IP "\f3xlogin.Login.fail\f1"
.\" A message that is displayed when the authentication fails.
.\" The default is ``Login incorrect''
.\" .IP "\f3xlogin.Login.failFont\f1"
.\" The font used to display the failure message.
.\" .IP "\f3xlogin.Login.failColor\f1"
.\" The color used to display the failure message.
.\" .IP "\f3xlogin.Login.failTimeout\f1"
.\" The number of seconds that the failure message is displayed.
.\" The default is 30.
.\" .IP "\f3xlogin.Login.translations\f1"
.\" This specifies the translations used for the login widget.
.\" Refer to the X Toolkit documentation for a complete discussion
.\" on translations.  The default translation table is:
.\" .nf
.\" .ta 0.5i 2i
.\" 
.\" 	Ctrl<Key>H:	delete-previous-character() \\n\\
.\" 	Ctrl<Key>D:	delete-character() \\n\\
.\" 	Ctrl<Key>B:	move-backward-character() \\n\\
.\" 	Ctrl<Key>F:	move-forward-character() \\n\\
.\" 	Ctrl<Key>A:	move-to-begining() \\n\\
.\" 	Ctrl<Key>E:	move-to-end() \\n\\
.\" 	Ctrl<Key>K:	erase-to-end-of-line() \\n\\
.\" 	Ctrl<Key>U:	erase-line() \\n\\
.\" 	Ctrl<Key>X:	erase-line() \\n\\
.\" 	Ctrl<Key>C:	restart-session() \\n\\
.\" 	Ctrl<Key>\\\\:	abort-session() \\n\\
.\" 	<Key>BackSpace:	delete-previous-character() \\n\\
.\" 	<Key>Delete:	delete-previous-character() \\n\\
.\" 	<Key>Return:	finish-field() \\n\\
.\" 	<Key>:	insert-char() \\
.\" 
.\" .fi
.\" .PP
.\" The actions that are supported by the widget are:
.\" .IP "delete-previous-character"
.\" Erases the character before the cursor.
.\" .IP "delete-character"
.\" Erases the character after the cursor.
.\" .IP "move-backward-character"
.\" Moves the cursor backward.
.\" .IP "move-forward-character"
.\" Moves the cursor forward.
.\" .IP "move-to-begining"
.\" (Apologies about the spelling error.)
.\" Moves the cursor to the beginning of the editable text.
.\" .IP "move-to-end"
.\" Moves the cursor to the end of the editable text.
.\" .IP "erase-to-end-of-line"
.\" Erases all text after the cursor.
.\" .IP "erase-line"
.\" Erases the entire text.
.\" .IP "finish-field"
.\" If the cursor is in the name field, proceeds to the password field;
.\" if the cursor is in the password field, checks the current
.\" name/password pair.  If the name/password pair is valid, \f2xdm\f1
.\" starts the session.  Otherwise the failure message is displayed and
.\" the user is prompted again.
.\" .IP "abort-session"
.\" Terminates and restarts the server.
.\" .IP "abort-display"
.\" Terminates the server, disabling it.  This is a rash action and
.\" is not accessible in the default configuration.  It can be used to
.\" stop \f2xdm\f1
.\" when shutting the system down or when using \f2xdmshell\f1.
.\" .IP "restart-session"
.\" Resets the X server and starts a new session.  This can be used when
.\" the resources have been changed and you want to test them or when
.\" the screen has been overwritten with system messages.
.\" .IP "insert-char"
.\" Inserts the character typed.
.\" .IP "set-session-argument"
.\" Specifies a single word argument that is passed to the session at
.\" startup.
.\" See the sections \f3Session Program\f1 and \f3Typical Usage\f1.
.\" .IP "allow-all-access"
.\" Disables access control in the server.  This can be used when
.\" the .Xauthority file cannot be created by
.\" .I xdm.
.\" Be very careful using this; it might be better to disconnect the
.\" machine from the network before doing this.
.SH "STARTUP PROGRAM"
.PP
The program specified by the
\f3DisplayManager.\f2DISPLAY\f3.startup\f1 resource is typically
a shell script.
It is run as root and needs to be careful about security.  This
is the place to put commands that add entries to \f2/etc/utmp,\f1
\f1mount users' home directories from file servers, display the message
of the day, or abort the session if logins are not allowed.
.PP
In addition to any specified by \f3DisplayManager.exportList\f1,
the following environment variables are passed:
.TP 3
DISPLAY
Sets the associated display name.
.TP 3
HOME
Sets the initial working directory of the user.
.TP 3
USER
Sets the user name.
.TP 3
PATH
Sets the value of \f3DisplayManager.\f2DISPLAY\f3.systemPath\f1.
.TP 3
SHELL
Sets the value of \f3DisplayManager.\f2DISPLAY\f3.systemShell\f1.
.TP 3
XAUTHORITY
May be set to an authority file.
.PP
No arguments are passed to the script.
.I Xdm
waits until this script exits before starting the user session.
If the exit value of this script is non-zero,
.I xdm
discontinues the session and starts another authentication cycle.
.SH "SESSION PROGRAM"
.PP
The \f2Xsession\f1 program
.\" BEGIN CHANGE 
(specified by the \f3DisplayManager.\f2DISPLAY\f3.session\f1 resource)
.\" END CHANGE
is the command that is run as the user's session.  It is run with
the permissions of the authorized user.
.PP
In addition to any specified by \f3DisplayManager.exportList\f1,
the following environment variables are passed:
.TP 3
DISPLAY
Sets the associated display name.
.TP 3
HOME
Sets the initial working directory of the user.
.TP 3
USER
Sets the user name.
.TP 3
PATH
Sets the value of \f3DisplayManager.\f2DISPLAY\f3.userPath\f1.
.TP 3
SHELL
Sets the user's default shell (from \f2getpwnam\f1).
.TP 3
XAUTHORITY
May be set to a non-standard authority file.
.PP
At most installations, \f2Xsession\f1 should look in $HOME for
a file \f2\.xsession,\f1
which contains commands that each user would like to use as a session.
\f2Xsession\f1 should also
implement a system default session if no user-specified session exists.
See the section \f3TYPICAL USAGE\f1.
.PP
An argument may be passed to this program from the authentication
widget using the `set-session-argument' action.  This argument can be used
to select different styles of session.  One good use for this feature
is to allow the user to escape from the ordinary session when it
fails.  The feature also allows users to repair their own \f2.xsession\f1 if
it fails, without requiring administrative intervention.  The section
\f3TYPICAL USAGE\f1 demonstrates this feature.
.SH "RESET PROGRAM"
.PP
.\" START OF DEVO CHANGE
Symmetrical with the startup program,
the program specified by the \f3DisplayManager.\f2DISPLAY\f3.startup\f1
resource is run after the user session has terminated.
.\" END OF DEVO CHANGE
Run as root, it should contain commands that undo the \f1effects of
commands in the startup program, removing entries from \f2/etc/utmp\f1
\f1or unmounting directories from file servers.  The environment
variables that were passed to the startup program are also passed to
the program specified by the \f3DisplayManager.\f2DISPLAY\f3.startup\f1
resource.
.SH "CONTROLLING THE SERVER"
.PP
.I Xdm
controls local servers using POSIX signals.  SIGHUP is expected
to reset the server, closing all client connections and performing
other cleanup duties.  SIGTERM is expected to terminate the server.
If these signals do not perform the expected actions,
the resources \f3DisplayManager.\f2DISPLAY\f3.resetSignal\f1 and
\f3DisplayManager.\f2DISPLAY\f3.termSignal\f1 can specify alternate
signals.
.PP
To control remote terminals not using XDMCP,
.I xdm
searches the window hierarchy on the display and uses the protocol
request KillClient in an attempt to clean up the terminal for the
next session.  This action may not actually kill all of the clients because
only those which have created windows will be noticed.  XDMCP provides
a more sure mechanism; when
.I xdm
closes its initial connection, the session is over and the terminal is
required to close all other connections.
.SH "CONTROLLING XDM"
.PP
.I Xdm
responds to two signals: SIGHUP and SIGTERM.  When sent a SIGHUP,
.I xdm
rereads the configuration file, the access control file, and the
servers file.  For the servers file, it notices if entries have
been added or removed.  If a new entry has been added,
.I xdm
starts a session on the associated display.  Entries that have been
removed are disabled immediately, meaning that any session in progress
will be terminated without notice and no new session will be started.
.PP
When sent a SIGTERM,
.I xdm
terminates all sessions in progress and exits.  This signal can be used when
shutting down the system.
.PP
.I Xdm
attempts to mark its various subprocesses for
.IR ps (1)
by editing the
command line argument list in place.  Because
.I xdm
cannot allocate additional space for this task, it is useful to start
.I xdm
with a reasonably long command line (using the full path name
should be enough).  Each process that is
servicing a display is marked \f3\-\f2display\f1.
.SH "OTHER POSSIBILITIES"
.PP
You can use \f2xdm\f1
to run a single session at a time, using the 4.3 \f2init\f1 options
or another suitable daemon by specifying the server on the command line:
.nf
.ta 0.5i

	xdm \-server ":0 SUN-3/60CG4 local /usr/bin/X :0"

.fi
.PP
Suppose you have a file server and a collection of X terminals.  The
configuration for this is identical to the preceding example,
except that the \f2Xservers\f1 file would be as follows:
.nf
.ta 0.5i

	extol:0 VISUAL-19 foreign
	exalt:0 NCD-19 foreign
	explode:0 NCR-TOWERVIEW3000 foreign

.fi
.PP
This file directs
.I xdm
to manage sessions on all three of these terminals.  See the section
\f3CONTROLLING XDM\f1 for a description of how to use signals to enable
and disable these terminals in a manner similar to
.IR init (8).
.SH LIMITATIONS
.PP
The
.I xdm
program does not coexist well with other window systems.
.\" To use multiple window systems on the same hardware, you'll
.\" probably be more interested in
.\" .I xinit.
.SH FILES
.PP
.TP 20
.I /usr/lib/X11/xdm/xdm-config
Default configuration file
.TP 20
.I /usr/lib/X11/xdm/Xaccess
Default access file, listing authorized displays
.TP 20
.I /usr/lib/X11/xdm/Xservers
Default server file, listing non-XDMCP servers to manage
.TP 20
.I $(HOME)/.Xauthority
User authorization file where \f2xdm\f1 stores keys for clients to read
.TP 20
.I /usr/lib/X11/xdm/chooser
Default chooser
.TP 20
/usr/lib/X11/xdm/libXdmDecGreet.so
Motif loadable greeter
.TP 20
/usr/lib/X11/xdm/libXdmGreet.so
Athena-style loadable greeter
.TP 20
.I /usr/bin/X11/xrdb
Default resource database loader
.TP 20
.I /usr/bin/X11/X
Default server
.TP 20
.I /usr/bin/X11/xterm
Default session program and failsafe client
.TP 20
.I /usr/lib/X11/xdm/A<host>\-<suffix>
Default location for authorization files
.SH "SEE ALSO"
.PP
.IR X (1X),
.\" XINIT IS NOT SUPPORTED???
.\" .IR xinit (1X),
.IR xauth (1X),
.IR Xsecurity (1X),
and XDMCP
.SH COPYRIGHT
.PP
Copyright 1988, Massachusetts Institute of Technology.
.br
See
.IR X (1X)
for a full statement of rights and permissions.
.SH AUTHOR
.PP
Keith Packard, MIT X Consortium
.EQ
delim off
.EN
