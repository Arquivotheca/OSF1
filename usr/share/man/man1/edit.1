.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: edit.1,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/12/15 22:02:02 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.TH edit 1
.SH NAME
\*Ledit\*O \- Edits a file line by line with a simplified command set
.SH SYNOPSIS
.PP
.sS
\*Ledit\*O
\*O[\*L-c
\*Vsubcommand\*O]
\*O[\*L-lRv\*O]
\*O[\*L-w\*Vnumber\*O]
\*O[\*L+\*Vsubcommand\*O]
\*O[\*L-\*O]
\*O[\*Vfile\*O
\&.\&.\&.]
.PP
\*Ledit\*O
\*O[\*L-c
\*Vsubcommand\*O]
\*O[\*L-lRv\*O]
\*O[\*L-t\*O
\*Vtag\*O]
\*O[\*Vfile\*O
\&.\&.\&.]
.PP
\*Ledit\*O
\*O[\*L-c
\*Vsubcommand\*O]
\*L-r\*O[\*Vfile\*O]
\*O[\*L-lRv\*O]
\*O[\*Vfile\*O]
.sE
.PP
The \*Ledit\*O command provides a line editor designed for beginning users.
.SH FLAGS
.PP
.VL 4m
.LI "\*L-l\*O"
Indents appropriately for LISP code, and accepts the \*L(\*O, \*L)\*O,
\*L{\*O, \*L}\*O,
\*L[\*O, and \*L]\*O characters (parentheses, braces, and
brackets) as text rather than
interpreting them as \*Lvi\*O subcommands.  The LISP modifier is
active in \*Lopen\*O or \*Lvisual\*O modes.
.LI "\*L-r[\*Vfile\*O]"
Recovers \*Vfile\*O after an editor or system crash.  If you do
not specify \*Vfile\*O, a list of all saved files is displayed.
.LI "\*L-R\*O"
Sets the \*Lreadonly\*O option, preventing
you from altering the file.
.LI "\*L-t \*Vtag\*O"
Loads the file that contains \*Vtag\*O and positions the
editor at \*Vtag\*O.  To use this flag, you must first create
a database of function names and locations using the
\*Lctags\*O command.
.LI "\*L-v\*O"
Invokes the \*Lvisual\*O editor.
When the \*L-v\*O flag is specified, an enlarged set of
subcommands are available, including screen editing and cursor movement
features.  See \*Lvi\*O.
.LI "\*L-w\*Vnumber\*O"
Sets the default window size to \*Vnumber\*O lines.
.LI "\*L-\*O"
Suppresses all interactive user feedback.  If you use this flag, file
input/output errors do not generate an error message.
.LI "\*L\(pl\*Vsubcommand\*O"
Begins the edit with the specified editor search or subcommand.  When
\*Vsubcommand\*O is not entered, a \(pl (plus sign)
sets the current line to
the bottom of the file.  Normally \*Ledit\*O sets the current line to the
last line of the file, or to some specified tag or pattern.
.LE
.SH DESCRIPTION
.iX "edit command"
.iX "editing" "files line by line"
.iX "files" "editing line by line"
.iX "line editors" "simplified"
.iX "editors" "line"
.iX "editors" "simplified"
.PP
The \*Ledit\*O command is part of a family of editors that
also includes \*Led\*O, \*Lex\*O, and \*Lvi\*O.
It is a simplified version of the \*Lex\*O
editor, which itself is built on the \*Led\*O line editor.
.PP
To edit the contents of a file, enter:
.PP
\*Ledit \*Vfile\*O
.PP
If \*Vfile\*O is the name of an existing file, \*Ledit\*O
copies it to a buffer and displays the number of lines and characters in
it.  Then it displays a \*L:\*O (colon) prompt to show that
it is ready to read subcommands from standard input.
.PP
If \*Vfile\*O
does not already exist, \*Ledit\*O tells you this.  You can give more than one
\*Vfile\*O, in which case \*Ledit\*O copies the first
file into its buffer and stores the remaining filenames in an
argument list for later use.
.PP
The \*Ledit\*O command does not make changes to the file until you use
the \*Lw\*O subcommand to write the changes.
.SS Editing Modes
.if n .PP
The \*Ledit\*O command operates in one of two modes:
.VL 4m
.LI "Command mode"
In command mode, the \*Ledit\*O editor recognizes and executes
subcommands.  When you start the editor, it is in command mode.
.LI "Text input mode"
In text input mode, you can add text to the editing buffer.  You enter
text input mode by using the \*La\*O, \*Lc\*O, or \*Li\*O subcommand.
To exit text input mode (and return to command mode), you enter a \*L\&.\*O
(dot) alone at the beginning of a line.
.LE
.SS Subcommand Syntax
.if n .PP
The general format of an \*Ledit\*O subcommand is as follows:
.iS
\*O[\*Vaddress\*O]\*Vsubcommand\*O[\*Vargument\*O \&.\&.\&.][\*Vcount\*O]
\*O
.iE
.if n .PP
If you do not specify an \*Vaddress\*O, \*Ledit\*O works on
the current line.  When you
start the \*Ledit\*O program, the current line is the last line in the buffer.
As you edit the buffer, the current line changes to the
last line affected by a subcommand.
(When \*Ledit\*O reads a file into its buffer, the last line affected by
the process of reading is the last line in the file.)
If you add a numeric \*Vcount\*O to
most subcommands, \*Ledit\*O works on the specified number of lines.
.if n .PP
The value for \*Vaddress\*O can be a line number or a pattern to be
matched or, in some cases, a range of line numbers or
patterns.  To specify a range, separate two line numbers or
patterns with a comma or a semicolon (for example,
\*L1,5\*O or \*L1;5\*O).  In a range, the second address must
refer to a line that follows the first addressed line in the range.
.if n .PP
To work with different parts of a file, you must know how to find out
the current line and how to address different lines in a file.
.SS Addressing Lines Within a File
.if n .PP
The simplest way to address a line within a file is to use its line
number.  But this can be unreliable because line numbers change when you
insert and delete lines.  The \*Ledit\*O command provides a way to search
through the buffer for strings.  Given the following address,
\*Ledit\*O searches forward for \*Vpattern\*O:
.iS
/\*Vpattern\*L/\*O
.iE
.if n .PP
If given the following address, \*Ledit\*O
searches backward for \*Vpattern\*O:
.iS
?\*Vpattern\*L?
\*O
.iE
.if n .PP
If a forward search
reaches the end of the buffer without finding \*Vpattern\*O, it
continues the search at the beginning of the file until it reaches the
current line.  A backward search does just the reverse.
.if n .PP
The following characters have special meanings in these
search patterns:
.rS
.VL 4m
.LI "\*L^\*O"
Matches the beginning of a line.
.LI "\*L$\*O"
Matches the end of a line.
.LE
.rE
.if n .PP
Thus, you can use \*L/^\*Vpattern\*L/\*O to
search for patterns at the beginning of a line, and
\*L/\*Vpattern\*L$/\*O to search for patterns at the end of the line.
.if n .PP
Lines can be addressed by their line numbers; for example, \*L11\*O refers to
line 11 of the buffer.  In addition, the current line is addressed with
a \*L\&.\*O (dot) and the last line in the buffer is addressed with
a \*L$\*O (dollar sign).  This is useful when
working with a range of lines.  For example, the following command
displays all lines from the current line to the last line in the
buffer:
.iS
\&.,$print
\*O\c
.iE
.if n .PP
Do not confuse the meaning of \*L$\*O in text patterns,
\*Vend of line\*O, with its meaning in addresses, \*Vlast line\*O.
.if n .PP
Arithmetic with line references is also possible, so that
\*L$-5\*O refers to the fifth line from the last and
\*L\&.\(pl20\*O refers to the line 20 lines past the current
line.  You can also use the \*L=\*O (equal sign) command to find out the
line number of the current line or the last line, as follows:
.iS
\&.=
$=
\*O\c
.iE
.if n .PP
To view the next line
in the buffer, press \*L<Return>\*O.  Press \*L<Ctrl-d>\*O
to display the next half-screen of lines.
.SS Using a Family of Editors
.if n .PP
As you become more experienced with \*Ledit\*O,
you might want to try the advanced features of one of the other
editors in the family.  Because \*Ledit\*O is part of a family
of editors, you can apply your knowledge of \*Ledit\*O to the
other editors in the family.
.if n .PP
The \*Lex\*O editor is a powerful interactive line editor.
The \*Ledit\*O subcommands work the same way in \*Lex\*O,
but the editing environment is somewhat different.  For example
in \*Ledit\*O, only the characters \*L^\*O (circumflex), \*L$\*O (dollar
sign), and \*L\e\*O (backslash) have special meanings
as pattern-matching characters; however,
several additional characters also have special meanings in \*Lex\*O.
.SH SUBCOMMANDS
.PP
Unless otherwise noted, all subcommands work by default on the current line;
\*Vaddress\*O is optional.  You can use the full subcommand
or its abbreviation.  Subcommand abbreviations appear after the command
in the sections that follow.
.PP
You can use the \*L1,$p\*O subcommand to display the entire contents of the
buffer.
.PP
The \*Ledit\*O program recognizes and interprets the following
subcommands when it displays the colon prompt.
.SS Adding Text
.if n .PP
.VL 4m
.LI "[\*Vaddress\*O]\*Lappend\*O (\*La\*O)"
Appends the text you type after the current line,
if you do not specify an address.  If you specify an address, the
\*La\*O subcommand appends text after the addressed line.  If you
specify address 0 (zero), the \*La\*O subcommand places the text at the
beginning of the buffer.
.if n .PP
As you type your
text, press \*L<Return>\*O at the end of each line.  When you
have entered all your text, enter a \*L\&.\*O (dot) alone at the start
of a line.  This ends text input mode and returns to command mode.
.LI "[\*Vaddress\*O]\*Linsert\*O (\*Li\*O)"
Places the given text before the specified line.  Enter a \*L\&.\*O
(dot) to return to command mode.  The last line
input becomes the current line.
.LE
.SS Changing Text
.if n .PP
.VL 4m
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lchange\*O (\*Lc\*O)"
Replaces the current line or addressed line or lines with the input text.
Enter a \*L\&.\*O (dot) to return to command mode.
If any lines are input, the last input line becomes the new current line.
.LE
.SS Deleting Text
.if n .PP
.VL 4m
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Ldelete\*O [\*Vbuffer\*O] (\*Ld\*O)"
Removes the specified line or lines from the editing buffer.
The line following the last deleted line becomes the current line.
If you specify a buffer by giving a letter from \*La\*O
to \*Lz\*O, \*Ledit\*O saves the specified lines in that buffer
or, if the letter is uppercase, appends the lines to that buffer.
.LE
.SS "Displaying Text and Determining the Current Line"
.if n .PP
.VL 4m
.LI "\*Lfile\*O [\*Vfile\*O] (\*Lf\*O)"
Displays the current filename along with the following
information:
.ML
.LI
Whether it was modified since the last \*Lwrite\*O.
.LI
What the current line is.
.LI
How many lines are in the buffer.
.LI
What percentage of the way through the buffer the current line is.
.IP
Also, sets the current filename if \*Vfile\*O is specified.
.LE
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lnumber\*O (\*Lnu\*O)"
Displays each specified line or lines preceded by its
buffer line number.  The last line displayed becomes the current line.
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lprint\*O (\*Lp\*O)"
Displays the specified line or lines.  The last line
displayed becomes the current line.
.LI "\*L[\*Vaddress\*O]\*L=\*O"
Displays the line number of the addressed line.  If you do not specify
an address, displays the line number of the last line.
.LI "\*L[\*Vaddress\*O]\*Lz\*O"
Displays a screen of text, beginning with the
current or specified line.
.LI "\*L[\*Vaddress\*O]\*Lz-\*O"
Displays a screen of text, with the specified (or current) line
at the bottom of the screen.
.LI "\*L[\*Vaddress\*O]\*Lz\&.\*O"
Displays a screen of text, with the specified (or current) line
in the middle of the screen.
.LE
.SS Editing Another File
.if n .PP
.VL 4m
.LI "\*Ledit\*O \*Vfile\*O (\*Le\*O)"
Begins an editing session on a new file.  The editor first checks to
see if the buffer was modified since the last
\*Lwrite\*O subcommand.  If it has, \*Ledit\*O issues a
warning and cancels the \*Ledit\*O subcommand.  Otherwise, it
deletes the complete contents of the editor buffer, makes the named file
the current file, and displays the new filename.  After ensuring that
this file can be edited, it reads the file into its buffer.  If
\*Ledit\*O reads the file without error, it displays the number of
lines and characters that it read.  The last line read becomes the new
current line.
.LI "\*Lnext\*O [\*Vfile\*O] (\*Ln\*O)"
Copies the next file in the command line argument list to the buffer
for editing.
.IP
You can edit a sequence or group of files.  You can
use the \*Lnext\*O subcommand to edit each file
on the command line in turn, or to specify
a list of filenames to edit
(using the shell pattern matching syntax) instead.
The wildcard character \*L%\*O represents the name of the current
edit file and can be used to form filenames.  If \*Vfile\*O is specified,
the command line argument list is replaced, and an \*Ledit\*O command
is performed on the first file.
.LE
.SS Making Global Changes
.if n .PP
.VL 4m
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lglobal/\*Vpattern\*O/\*Vcommand\*O \&.\&.\&. (\*Lg\*O)"
Marks each of the specified lines that matches the
\*Vpattern\*O, then carries out the specified
subcommands (\*Vcommands\*O) on each marked line.
.IP
A single \*Vcommand\*O or the first \*Vcommand\*O in a subcommand
list appears on the same line as \*Lglobal\*O.  The remaining
\*Vcommand\*Os must appear on separate lines, where each line (except
the last) ends with a \*L\e\*O (backslash).  The default subcommand is
\*Lprint\*O.
.IP
The subcommand list can include the \*Lappend\*O, \*Linsert\*O, and
\*Lchange\*O subcommands and their associated input.  In this case,
if the ending period comes on the last line of the command list, you can
omit it.  The \*Lundo\*O subcommand and the \*Lglobal\*O
subcommand itself, however, cannot appear in the command list.
See also \*LSubstituting Text\*O.
.LE
.SS Moving or Copying Text
.if n .PP
.VL 4m
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lmove\*O \*Vaddress3\*O (\*Lm\*O)"
Repositions the specified line or lines to follow \*Vaddress3\*O.
The first of the moved lines becomes the current line.
\*Vaddress1\*O and \*Vaddress2\*O are optional; you must specify
\*Vaddress3\*O.
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lyank\*O [\*Vbuffer\*O] (\*Lya\*O)"
Places the specified line or lines in \*Vbuffer\*O
(identified by a single alpha character name \*La\*O to \*Lz\*O).
.LI "[\*Vaddress\*O]\*Lput\*O \*Vbuffer\*O (\*Lpu\*O)"
Retrieves the contents of the specified buffer and places it after
\*Vaddress\*O.  If you do not specify a buffer, \*Ledit\*O
restores the last deleted or yanked text.  Thus, you can use this
subcommand together with \*Ldelete\*O to move lines or with
\*Lyank\*O to duplicate lines between files.
.LE
.if n .PP
.SS Quitting an Editing Session
.if n .PP
.VL 4m
.LI "\*Lquit\*O (\*Lq\*O)"
.LI "\*Lquit! (q!\*O)"
Ends the editing session.  The \*Lquit\*O command does \*Vnot\*O
write the editor buffer to a file; if you have modified the contents of the
buffer since the last \*Lwrite\*O, \*Ledit\*O displays a
warning message and does not end the session.  In this case, either use
the \*Lquit!\*O subcommand to discard the buffer or
\*Lwrite\*O the buffer and then \*Lquit\*O.
.LE
.SS Saving Text
.if n .PP
.VL 4m
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lwrite\*O \*Vfile\*O (\*Lw\*O)"
Writes the contents of the specified line or lines to
\*Vfile\*O.  The default range is all lines in the buffer.
\*Ledit\*O displays the number of lines and characters that it
writes.  If you do not specify a \*Vfile\*O, \*Ledit\*O uses
the current filename.  If \*Vfile\*O does not exist,
\*Ledit\*O creates it.
.LI "\*Lpreserve\*O (\*Lpre\*O)"
Saves the current editor buffer as though the system had just
crashed.  Use this command when a \*Lwrite\*O subcommand has
resulted in an error, and you do not know how to save your work.
.LI "\*Lrecover\*O \*Vfile\*O (\*Lrec\*O)"
Recovers \*Vfile\*O from the system save area.
Use this after a system crash, or a \*Lpreserve\*O subcommand.
.LE
.SS Substituting Text
.if n.PP
.VL 4m
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lsubstitute/\*Vpattern\*L/\*Vreplacement\*L/\*O (\*Ls\*O)"
.LI "[\*Vaddress1\*O[\*L,\*Vaddress2\*O]]\*Lsubstitute/\*Vpattern\*L/\*Vreplacement\*L/g\*O (\*Ls\*O)"
Replaces on each specified line the first instance of
\*Vpattern\*O with the replacement pattern \*Vreplacement\*O.  If you
add the global indicator \*Lg\*O, it replaces all instances of
\*Vpattern\*O on each specified line.
.LE
.SS Undoing a Change
.if n .PP
.VL 4m
.LI "\*Lundo\*O (\*Lu\*O)"
Reverses the changes made in the buffer by the last
buffer editing subcommand.  Note that \*Lglobal\*O subcommands are
considered a single subcommand to an \*Lundo\*O.
You cannot undo a \*Lwrite\*O or an \*Ledit\*O subcommand.
.LE
.SH RELATED INFORMATION
.PP
Commands:  \*Led\*O(1)/\*Lred\*O(1), \*Lex\*O(1),
\*Lvi\*O(1)/\*Lvedit\*O(1)/\*Lview\*O(1).
.EQ
delim off
.EN
