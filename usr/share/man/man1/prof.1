.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: prof.1,v $ $Revision: 3.2.4.3 $ (DEC) $Date: 1994/01/19 20:28:52 $
.\"
.\" -----------------------------------------------------
.\" | Copyright MIPS Computer Systems, Inc.  All Rights |
.\" | Reserved.                                         |
.\" -----------------------------------------------------
.\"  prof.1 3.1
.\"
.TH prof 1
.SH NAME
.PP
\*Lprof\*O \- analyze profile data
.SH SYNOPSIS
.PP
.sS
.in +.5i
.ti -.5i
\*Lprof\*O
[ \*Voptions\*O ] [ \*Vprog_name\*O [ \*Vpcsampling_data_file\*O ... ] ]
.\" .br ***the following was commented out for the TIN release
.\" \*Lprof-note\*O \*Vcomment string\*O
.PP
\*Lprof\*O \*L\-pixie\*O [\*V options\*O ]
.\" .br
.\"   [ \*Vprog_name\*O [ \*Vbbaddrs_file\*O [ \*Vbbcounts_file ...\*O ] ] ]
.sE
.SH DESCRIPTION
.PP
.iX "prof command"
The \*Lprof\*O command
analyzes one or more data files generated by the compiler's
execution-profiling system and produces a listing.
The \*Lprof\*O command can also combine
those data files or produce a feedback file that lets the optimizer
take into account the program's runtime behavior during a subsequent
compilation.  Profiling is a three-step process:
.AL
.LI
Compile the program
.LI
Execute the program
.LI
Run \*Lprof\*O to analyze the data.
.LE
.PP
The compiler system provides two kinds of profiling:
.PP
.ML
.LI "\*Vpc-sampling\*O"
Interrupts the program periodically, recording the value of the program
counter.
.LI "\*Vbasic-block counting\*O"
Divides the program into blocks delimited by labels, jump instructions,
and branch instructions. It counts the number of times each block
executes. This provides more detailed (line by line) information than
pc-sampling.
.LE
.PP
To use pc-sampling, compile your program with the option
\*L\-p\*O
(strictly speaking, it is sufficient to use this option only when
linking the program). Then run the program, which allocates extra
memory to hold the profile data, and (provided the program terminates
normally or calls \*Lexit\*O(2)) records
the data in a file at the end of execution.
.PP
The environment variable
\*LPROFDIR\*O determines the name of the pc-sampling data file and determines
whether pc-sampling takes place:
.ML
.LI
If it is not set, the pc-sampling data file is named \*Lmon.out\*O.
.LI
If it is set to the empty string, no profiling occurs.
.LI
If it is set to a non-empty string, the file is named
\*Vstring/\*Lpid.progname\*O, where \*Lpid\*O is the process id of the
executing program and "progname" is the program's name, as it appears
in argv[0]. The subdirectory \*Vstring\*O must already exist.
.LE
.PP
After running your program, use
\*Lprof\*O
to analyze the pc-sampling data file.
.PP
For example:
.oS
cc -c myprog.c
cc -p -o myprog myprog.o
myprog 			  (generates \*Lmon.out\*O)
prof myprog mon.out
.oE
.PP
When you use
\*Lprof\*O
for pc-sampling, the program name defaults to
\*Va.out\*O
and the pc-sampling data file name defaults to
\*Lmon.out\*O;
if you specify more than one pc-sampling data file,
\*Lprof\*O
reports the sum of the data.
.PP
To use basic-block counting, compile your program without the option
\*L\-p\*O. Use \*Lpixie\*O(1) to
translate your program into a profiling version and generate a file,
whose name ends in \*L.Addrs\*O, containing block addresses. Then run the
profiling version, which (assuming the program terminates normally or
calls \*Lexit\*O(2)) will
generate a file, whose name ends in \*L\.Counts\*O, containing block
counts.  Then use
\*Lprof\*O with the \*L\-pixie\*O
option to analyze the bbaddrs and bbcounts files. Notice that you must
tell \*Lprof\*O
the name of your original program, not the name of the profiling
version.
.PP
For example:
.oS
cc -c myprog.c
cc -o myprog myprog.o
pixie -o myprog.pixie myprog 		(generates \*Lmyprog.Addrs\*O)
myprog.pixie 				(generates \*Lmyprog.Counts\*O)
prof -pixie myprog myprog.Addrs myprog.Counts
.oE
.PP
When you use
\*Lprof\*O
with the
\*L\-pixie\*O
option, the program name defaults to
\*La.out\*O,
the \*Lbbaddrs\*O file name defaults to \*Vprogram_name\*L\O.Addrs\*O, and the
\*Lbbcounts\*O file name defaults to "\*Vprogram_name\*L\.Counts\*O. If you
specify more than one bbcounts file (never specify more than one
\*Lbbaddrs\*O file),
\*Lprof\*O
reports the sum of the data.
.SH FLAGS
.PP
For each
\*Lprof\*O
option, you need type only enough of the name to distinguish it from
the other options (usually the first character is sufficient).
.\" ***COMMENT OUT EVERYTHING BUT -pixie OPTION FOR TIN -- KCH***
.\" Unless otherwise noted, each part of the listing operates only on
.\" the set of procedures that results from the combination of the
.\" .B \-exclude
.\" and
.\" .B \-only
.\" options.
.\" .PP
.\" ***REPLACE THE FOLLOWING STATEMENT:
.\" If the options you specify would neither produce a listing nor
.\" generate a file,
.\" .B prof
.\" uses
.\" .B \-procedures
.\" plus
.\" .B \-heavy
.\" by default.
.\" ***REPLACEMENT STATEMENT:
If you do not specify any options, \*Lprof\*O uses \*L\-procedures\*O
by default.
.\" .TP
.\" \*L\-note \*V"comment string"\*O
.\" If you use this argument, the \*V"comment string"\*O appears near the
.\" beginning of the listing as a comment.
.PP
The \*Lprof\*O command accepts the following options:
.PP
.VL 4m
.LI "\*L\-pixie\*O"
Selects pixie mode, as opposed to pc-sampling mode.
.LI "\*L\-procedures\*O"
Reports time spent per procedure (using data obtained from pc-sampling
or basic-block counting; the listing tells which one).
For basic-block counting, this option also reports the number of
invocations per procedure.
.LI "\*L\-heavy\*O"
Reports the most heavily used lines in descending order of use (requires
basic-block counting).
.LI "\*L\-lines\*O"
Similar to \*L\-heavy\*O, but gives the lines in order of occurrence.
.LI "\*L\-asm\*O"
Causes the profiler to print the assembly instructions for each subroutine
along with the cycle counts for each instruction.
This output mode is similar to the
\*L\-lines\*L output. The instructions for each subroutine are printed in
order; they are not sorted by cycle count.  However, the order of the
subroutines themselves are sorted from highest cycle count to lowest.
.LI "\*L\-truecycles [0,1,2]\*O"
Generates more analysis of a program to provide a more accurate reading
of cycles. The higher the number chosen from the arguments, the more
accurate the reading, although the profiler will run slower. This
flag is valid only in \*L\-pixie\*O mode.
.LI "\*L\-invocations\*O"
For each procedure, reports how many times the procedure was invoked
from each of its possible callers (requires basic-block
counting).  For this listing, the
\*L\-exclude\*O
and
\*L\-only\*O
options apply to callees, but not to callers.
.LI "\*L\-zero\*O"
Prints a list of procedures that were never invoked (requires
basic-block counting).
.LI "\*L\-testcoverage\*O"
Reports all lines that never executed (requires basic-block counting).
.LI "\*L\-feedback \*Vfilename\*O"
Produces a file with information that the compiler system can use to
decide what parts of the program will benefit most from global
optimization and what parts will benefit most from in-line procedure
substitution (requires basic-block counting).
.LI "\*L\-merge \*Vfilename\*O"
Sums the pc-sampling data files (or, in pixie mode, the bbcounts files)
and writes the result into a new file with the specified name. The
\*L\-only\*O
and
\*L\-exclude\*O
options have no affect on the merged data.
.LI "\*L\-only  \*Vprocedure_name\*O"
If you use one or more
\*L\-only\*O
options, the profile listing includes only the named procedures, rather
than the entire program. If any option uses an uppercase "O" for
"Only,"
\*Lprof\*O
uses only the named procedures, rather than the entire program, as the
base upon which it calculates percentages.
.LI "\*L\-exclude  \*Vprocedure_name\*O"
If you use one or more
\*L\-exclude\*O
options, the profiler omits the specified procedure and its descendents
from the listing. If any option uses an uppercase "E" for "Exclude,"
\*Lprof\*O
also omits that procedure from the base upon which it calculates
percentages.
.LI "\*L\-clock \*Vmegahertz\*O"
Alters the appropriate parts of the listing to reflect the clock speed
of the CPU. If you do not specify
\*Vmegahertz\*O,
it defaults to "8.0".
.\"  need to check the above value for field test"
.LI "\*L\-quit \*Vn\*O"
Truncates the
\*L\-procedures\*O
.\" ***THE FOLLOWING IS NOT AVAILABLE FOR DEC OSF/1 (TIN Release)
.\" and
\*L\-heavy\*O
listings. It can truncate after
\*Vn\*O
lines (if
\*Vn\*O
is an integer), after the first entry that represents less than
\*Vn\*O
percent of the total (if
\*Vn\*O
is followed immediately by a "%" character), or after enough entries
have been printed to account for
\*Vn\*O
percent of the total (if
\*Vn\*O
is followed immediately by "cum%").  For example, "\-quit 15" truncates
each part of the listing after 15 lines of text, "\-quit 15%" truncates
each part after the first line that represents less than 15 percent of
the whole, and "\-quit 15cum%" truncates each part after the line that
brought the cumulative percentage above 15 percent.
.\" comment out for alpha eft as per len lattanzi's request
.\" .LI "\*L\-gprof\*O"
.\" generate gprof-like listing, it
.\" produces a dynamic call graph execution profile of programs.
.\" The effect of called routines is incorporated in the profile of each caller.
.LE
.\" the next section commented out as per greg lueck's request
.\" .SH RESTRICTIONS
.\" .PP
.\" The \*Lprof\*O program does not yet take into account interactions
.\" among floating-point instructions.
.SH FEATURES
.PP
Provided you do not use
\*L\-pixie\*O,
\*Lprof\*O
processes \*Lmon.out\*O files produced by earlier versions of the compiler
system using the obsolete
\*L\-p2\*O
or
\*L\-p3\*O
options.
.SH FILES
.PP
.VL 11m
.LI "\*Lcrt0.o\*O"
normal startup code
.LI "\*Lmcrt0.o\*O"
startup code for pc-sampling
.LI "\*Llibprof1.a\*O"
library for pc-sampling
.LI "\*Lmon.out\*O"
default pc-sampling data file
.LE
.SH RELATED INFORMATION
.PP
\*Las\*O(1), \*Lcc\*O(1),
.\" \*Lf77\*O(1), \*Lpc\*O(1), 
\*Lpixie\*O(1), \*Lprofil\*O(2)
.\" , \*Lmonitor\*O(3)
.EQ
delim off
.EN
