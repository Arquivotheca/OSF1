.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: as.1,v $ $Revision: 3.2.2.7 $ (DEC) $Date: 1993/01/28 20:46:54 $
.\"
.\" ------------------------------------------------------------------
.\" | Copyright Unpublished, MIPS Computer Systems, Inc.  All Rights |
.\" | Reserved.  This software contains proprietary and confidential |
.\" | information of MIPS and its suppliers.  Use, disclosure or     |
.\" | reproduction is prohibited without the prior express written   |
.\" | consent of MIPS.                                               |
.\" ------------------------------------------------------------------
.\" $Header: /usr/doc/osf1doc/refpages/rcs/src/./BASE/DEC/man1/as.1,v 3.2.2.7 1993/01/28 20:46:54 Jeff_Mandell Exp $
.TH as 1
.PP
.SH NAME
\*Las\*O \- assembler
.SH SYNOPSIS
.PP
.iX "as command"
.sS
\*Las\*O [ \*Voption\*O ] ... \*Vfile\*O
.sE
.SH DESCRIPTION
.PP
The assembler,
\*Las\*O, produces files in the following formats: object code in
extended \*Vcoff\*O format (the normal result) and binary assembly language.
The \*Las\*O command never runs the link editor (\*Lld\*O(1)).
The \*Las\*O command accepts one type of argument.
.PP
The argument \*Vfile\*O is assumed to be symbolic assembly language
source program.  It is assembled, producing an object file.
.PP
The assembler, \*Las\*O, always defines the C preprocessor macros
\*Lunix\*O, and \*LLANGUAGE_ASSEMBLY\*O
to the C macro preprocessor.
To see a list of predefined macros, use the \*L \-v option.
.SH FLAGS
.PP
The following options are interpreted by
\*Las\*O and have the same meaning in \*Lcc\*O(1).
.VL 4m
.LI "\*L\-g0\*O"
Produce no symbol table information for symbolic debugging.  This
is the default.
.LI "\*L\-g1\*O"
Produce additional symbol table information for accurate
but limited symbolic debugging of partially optimized code.
.LI "\*L\-g or \-g2\*O"
Produce additional symbol table information
for full symbolic debugging and not do optimizations that
limit full symbolic debugging.
.LI "\*L\-g3\*O"
Produce additional symbol table information for full
symbolic debugging for fully optimized code.  This option makes the
debugger inaccurate.
.LI "\*L\-O0\*O"
Performs no optimization.
.LI "\*L\-O1\*O"
Runs the instruction scheduler and peepholes.
.LI "\*L\-w\*O"
Suppress warning messages.
.LI "\*L\-P\*O"
Run only the C macro preprocessor and put the result in a file with the suffix
of the source file changed to \*L\.i\*O or if the file has no suffix
then a \*Li\*O is added to the source file name.  The \*L\.i\*O file has no
\*L#\*O lines in it.
This sets the \*L\-cpp\*O option.
.LI "\*L\-E\*O"
Run only the C macro preprocessor on the file and send the result to the
standard output.
This sets the \*L\-cpp\*O option.
.LI "\*L\-C\*O or \*L\-M\*O or \*L\-Q\*O"
These three options are passed directly to \*Lcpp\*O(1).  Please see
\*Lcpp\*O(1) for details.
.LI "\*L\-o \*Voutput\*O"
Name the final output file \*Voutput\*O.
If this option is used, the file \*La.out\*O is undisturbed.
.LI "\*L\-D\*Vname=def\*O"
.nL
"\*L\-D\*Vname\*O"
Define the \*Vname\*O to the C macro preprocessor, as if by \*L#define\*O.
If no definition is given, the name is defined as "1".
.LI "\*L\-U\*Vname\*O"
Remove any initial definition of
\*Vname\*O.
.LI "\*L\-I \*Vdir\*O"
\*L#include\*O files whose names do not begin with `/' are always
sought first in the directory
of the \*Vfile\*O argument, then in directories specified in
\*L\-I\*O options, and finally in the standard directory (\*L/usr/include\*O).
.LI "\*L\-I\*O"
This option will cause \*L#include\*O files never to be searched for in the standard
directory (\*L/usr/include\*O).
.\" next option commented out for alpha osf/1 v1.2 as per mjr
.\" .LI "\*L\-G\*Vnum\*O"
.\" Specify the maximum size, in bytes, of a data item that is to be placed
.\" in a small data section.
.\" \*VNum\*O is assumed to be a decimal number.  If
.\" \*Vnum\*O is zero, no data is placed in the small data sections. The default
.\" value for \*Vnum\*O is 8 bytes.
.LI "\*L\-v\*O"
Print the passes as they execute with their arguments and their input and output
files.
.LI "\*L\-V\*O"
Print the version of the driver and the versions of all passes.  This is done
with the \*Lwhat\*O(1) command.
.LI "\*L\-cpp\*O"
Run the C macro preprocessor on assembly source files before compiling.
This is the default for \*Las\*O.
.LI "\*L\-nocpp\*O"
Do not run the C macro preprocessor on assembly source files before compiling.
.LE
.PP
The following option is specific for \*Las\*O:
.VL 4m
.LI "\*L\-m\*O"
Apply the M4 preprocessor to the source file before assembling it.
.LE
.PP
The options described below primarily aid compiler
development and are not generally used:
.VL 4m
.LI "\*L\-H\*Vc\*O"
Halt compiling after the pass specified by the character
\*Lc\*O, producing an intermediate file for the next pass.  The
\*Vc\*O can be \*La\*O.
It selects the assembler pass in the same way as the \*L\-t\*O option.
If this option is used, the symbol table file produced and used by the passes,
is the last component of the source file with the suffix changed to \*L\.T\*O,
or a \*LT\*O is added if the source file has no suffix. This file is not
removed.
.LI "\*L\-K\*O"
Build and use intermediate file names with the last component of the
source file's  name replacing its suffix with the conventional suffix for the
type of file (for example
\*LG\*O file for binary assembly language).
If the source file has no suffix the conventional suffix is added to the source
file name.  These intermediate files are never removed
even when a pass encounters a fatal error.
.LI "\*L\-W\*vc\*O[\*Vc\*O...],\*Varg1\*O,[\*Varg2\*O...]"
Pass the argument[s] \*Vargi\*O
to the compiler pass[es] \*Vc\*O[\*Vc\*O..]. The \*Vc\*O
can be one of [\*L pab \*O].
The \*Lc\*O selects the compiler pass in the same way as the \*L\-t\*O option.
.LE
.PP
The options \*L\-t\*O[\*L hpab \*O], \*L\-h \*Vpath\*O,
and \*L\-B\*Vstring\*O
select a name to use for a particular pass.
These arguments are processed from left to right so their order is significant.
When the \*L\-B\*O
option is encountered, the selection of names takes place using the last
\*L\-h\*O and \*L\-t\*O options.  Therefore, the \*L\-B\*O
option is always required when using \*L\-h\*O or \*L\-t\*O.
Sets of these options can be used to select any combination of names.
.PP
.VL 4m
.LI "\*L\-t\*O[\*L hpab \*O]
Select the names.  The names selected are those designated by the characters
following the \*L\-t\*O
option according to the following table:
.sp 6p
.TS
tab(@);
lfHB lfHB
ll.
_
.sp 4p
Name@Character
.sp 4p
_
.sp 6p
include@h (see note following table)
.sp 6p
cpp@p
.sp 6p
as0@a
.sp 6p
as1@b
.sp 6p
_
.TE
.LE
.PP
If the character `h' is in the
\*L\-t\*O argument, a directory is added to the list of directories to
be used in searching for \*L#include\*O files.  This directory name has the form
\*LCOMP_TARGET_ROOT/usr/include\*Vstring\*O.
This directory is to contain the include files for the
\*Vstring\*O
release of the compiler.  The standard directory is still searched.
.\" there was a.LE here
.VL 4m
.LI "\*L\-h\*Vpath\*O"
Use \*Vpath\*O rather than the directory where the name is normally found.
.LI "\*L\-B\*Vstring\*O"
Append \*Vstring\*O to all names specified by the
\*L\-t\*O option.  If no \*L\-t\*O option has been processed before the
\*L\-B\*O, the \*L\-t\*O
option is assumed to be ``hpab''.  This list designates all
names.
.LE
.PP
Invoking the assembler with a name of the form
\*Las\*Vstring\*O has the same effect as using a \*L\-B\*Vstring\*O
option on the command line.
.PP
If the environment variable \*LCOMP_HOST_ROOT\*O
is set, the value is used as the root
directory for all pass names rather than the default
\*L /\*O.
If the environment variable \*LCOMP_TARGET_ROOT\*O
is set, the value is used as the root
directory for the includes rather than the default
\*L /\*O.
.PP
If the environment variable
\*LROOTDIR\*O is set, the value is used as the root
directory for all names rather than the default
\*L/usr/.\*O
This also affects the standard directory for \*L#include\*O files,
\*L/usr/include\*O.
.PP
If the environment variable
\*LTMPDIR\*O
is set, the value is used as the directory to place any temporary files
rather than the default \*V/tmp/\*O.
.PP
Other arguments are ignored.
.SH ERRORS
.PP
The diagnostics produced by the assembler are intended to be self-explanatory.
.SH FILES
.PP
.VL 11m
.LI "\*Vfile.o\*O"
object file
.LI "\*Va.out\*O"
assembler output
.LI "\*V/tmp/ctm?\*O"
temporary
.LI "\*L/usr/lib/cpp\*O"
C macro preprocessor
.LI "\*L/usr/lib/cmplrs/cc/as0\*O"
symbolic to binary assembly language translator
.LI "\*L/usr/lib/cmplrs/cc/as1\*O"
binary assembly language assembler and reorganizer
.LI "\*L/usr/include\*O"
standard directory for \*L#include\*O files
.LE
.SH RELATED INFORMATION
.PP
\*Lcc\*O(1), \*Lwhat\*O(1)
.PP
\*EProgrammer's Guide\*O,
\*EAssembly Language Programmer's Guide\*O
.EQ
delim off
.EN
