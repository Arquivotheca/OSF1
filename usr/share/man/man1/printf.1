.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: printf.1,v $ $Revision: 1.1.3.6 $ (DEC) $Date: 1994/01/13 12:41:53 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.\"build rmifdef
.\"
.\"
.\"build rmifdef tbl eqn
.TH printf 1
.SH NAME
.PP
\*Lprintf\*O \- Writes formatted output
.SH SYNOPSIS
.PP
.sS
\*Lprintf\*O
\*Vformat\*O
\*O[\*Vargument\*O\ \&.\&.\&.]
.sE
.SH DESCRIPTION
.iX "printf command"
.iX "formatted output, displaying"
.iX "displaying" "formatted output"
.PP
The \*Lprintf\*O command converts, formats, and writes its arguments
to the standard output. The values specified by \*Vargument\*O
are formatted under control of the \*Vformat\*O argument.
.\" .zA "review, R1.1.2, XPG4"
.PP
The \*LLC_NUMERIC\*O environment variable affects
the format of numbers written using the \*Le\*O, \*LE\*O, \*Lf\*O, \*Lg\*O,
and \*LG\*O conversion characters.
.\" .zZ "review, R1.1.2, XPG4"
.PP
The \*Vformat\*O argument is a character string that contains
three types of objects:
.ML
.LI
Plain characters that are copied to the output stream.
.LI
The following escape sequences are both copied to the output stream
and cause the associated action to occur on display devices that are capable of the action.
.VL 4m
.LI "\*L\e\e\*O"
Backslash
.LI "\*L\ea\*O"
Alert
.LI "\*L\eb\*O"
Backspace
.LI "\*L\ef\*O"
Formfeed
.LI "\*L\en\*O"
Newline
.LI "\*L\er\*O"
Carriage Return
.LI "\*L\et\*O"
Tab
.LI "\*L\ev\*O"
Vertical Tab
.LI "\*L\eddd\*O"
Where \*Vddd\*O is a one-, two-, or three-digit octal number.
These escape sequences are displayed as
a byte with the numeric value specified by the octal number.
.LE
.LI
A delta character in the format string is treated as a delta character, rather than as a space character.
.LE
.PP
The \*Vargument\*O variable
is a list of one or more strings to be written to
the standard output under the control of the \*Vformat\*O argument.
.\" .zA "review, R1.1.2, XPG4"
These are treated as strings if the corresponding conversion character
is \*Lb\*O, \*Lc\*O, or \*Ls\*O; otherwise, it is evaluated as a C
constant, with the following extensions:
.PP
A leading \*L+\*O (plus sign) or \*L-\*O (minus sign) is allowed.
.PP
If the leading character is a \*L'\*O (single quote) or \*L"\*O
(double quote), the value is the numeric value in the underlying code
set of the character following the single quote or double quote.
.\" .zZ "review, R1.1.2, XPG4"
.PP
The \*Vformat\*O variable is reused as often as necessary to satisfy the
\*Vargument\*Os. Any extra \*Lc\*O or \*Ls\*O conversion
specifications are evaluated as if a null string \*Vargument\*O were supplied;
other extra conversion specifications are evaluated as if a zero
\*Vargument\*O were supplied.
.PP
Each conversion specification in the \*Vformat\*O argument
has the following syntax:
.AL
.LI
A \*L%\*O (percent sign).
.LI
Zero or more options, which modify the meaning of the conversion specification.
The option characters and their meanings are as follows:
.VL 4m
.LI "\*L-\*O"
The result of the conversion is left aligned within the field.
.LI "\*L+\*O"
The result of a signed conversion always begins with a \*L+\*O (plus) or
\*L-\*O (minus).
.LI "\*Lblank\*O"
If the first character of a signed conversion is not a sign, a blank is prefixed
to the result. If both the \*Lblank\*O and \*L+\*O options appear,
then the \*Lblank\*O option is ignored.
.LI "\*L#\*O"
The value is converted to an alternative form.
For \*Lc\*O, \*Ld\*O, \*Li\*O, \*Lu\*O, and \*Ls\*O conversions, the option
has no effect. For \*Lo\*O conversion, it increases
the precision to force the first digit of the result to be a \*L0\*O
(zero). For \*Lx\*O and \*LX\*O conversions,
a nonzero result has \*L0x\*O, or \*L0X\*O
prefixed to it, respectively.  For \*Le\*O, \*LE\*O, \*Lf\*O, \*Lg\*O, and
\*LG\*O conversions, the result always contains a radix character, even if no
digits follow the radix character. For \*Lg\*O and \*LG\*O conversions, trailing
zeros are not removed from the result as they usually are.
.\" .zA "review, R1.1.2, XPG4"
.LI "\*L0\*O"
For \*Ld\*O, \*Li\*O, \*Lo\*O, \*Lu\*O, \*Lx\*O, \*LX\*O,
\*Le\*O, \*LE\*O, \*Lf\*O,
\*Lg\*O, and \*LG\*O conversions, leading zeros (following any indication of
sign or base) are used to pad to the field width, no space padding is performed.
If the \*L0\*O (zero) and \*L-\*O options appear,
the \*L0\*O (zero) option is ignored. For \*Ld\*O,
\*Li\*O, \*Lo\*O, \*Lu\*O, \*Lx\*O, and \*LX\*O conversions, if a
precision is specified, the \*L0\*O (zero) option is ignored.
.\" .zZ "review, R1.1.2, XPG4"
.LE
.LI
An optional decimal digit string that specifies the minimum field width. If the
converted value has fewer characters than the field width, the field is padded
on the left to the length specified by the field width. If the left-adjustment
option flag (-) is specified, the field is padded on the right.
.LI
An optional precision. The precision is a \*L\&.\*O (dot) followed by an
asterisk (*), or a decimal
digit string. If no precision is given, it is treated as \*L0\*O (zero).
The precision specifies:
.ML
.LI
The minimum number of digits to appear for the \*Ld\*O, \*Lo\*O, \*Li\*O,
\*Lu\*O, \*Lx\*O, or \*LX\*O conversions.
.LI
The number of digits to appear after the radix character for the \*Le\*O and
\*Lf\*O conversions.
.LI
The maximum number of significant digits for the \*Lg\*O conversion.
.\" .zA "review, R1.1.2, XPG4"
.LI
The maximum number of bytes to be printed from a string in the
\*Ls\*O conversion.
.\" .zZ "review, R1.1.2, XPG4"
.LE
.LI
A character that indicates the type of conversion to be applied, as follows:
.VL 4m
.LI "\*L%\*O"
Performs no conversion. Prints a \*L%\*O (percent sign).
.LI "\*Lb\*O"
Accepts a value as a string that may contain backslash-escape sequences. Bytes
from the converted string are printed until the end of the string or number of
bytes indicated by the precision specification is reached. If the precision is
omitted, all bytes until the first null character are printed.
.IP
The following backslash-escape sequences are supported:
.ML
.\" .zA "review, R1.1.2, XPG4"
.LI
The \*L\eO\*Vddd\*O sequence, where \*Vddd\*O is a zero-, one-, two-, or
three-digit octal number that is converted to a byte with the numeric value
specified by the octal number.
.\" .zZ "review, R1.1.2, XPG4"
.LI
The escape sequences previously
listed under the description of the \*Vformat\*O
argument. These are converted to the individual characters they represented.
.LI
The \*L\ec\*O sequence, which is not displayed and causes the \*Lprintf\*O
command to ignore any remaining characters in the string parameter
containing it, any remaining string parameters, and any additional
characters in the \*Vformat\*O argument.
.LE
.\" .zA "review, R1.1.2, XPG4"
.LI "\*Lc\*O"
Prints the first character of the argument.
.LI "\*Ld\*O,\*L i\*O"
Accepts an integer value and converts it
to a signed decimal notation in the style \*O[\*L-\*O]\*Vdddd\*O.
The precision specifies the minimum number
of digits to appear. If the value being converted can be represented
in fewer digits, it is expanded with leading zeros. The default precision
is 1. The result of converting a 0 (zero) value with a precision of 0 (zero)
is a null string. Specifying a field width with a 0 (zero) as a leading
character causes the field width value to be padded with leading zeros.
.\" .zZ "review, R1.1.2, XPG4"
.LI "\*Le\*O,\*L E\*O"
Accepts a float or double value and converts it to the exponential form
[\*L-\*O] \*Vd\*L.\*Vdd\*Le\*O \*L+\*O|\*L-\*O \*Vdd\*O. There is one digit
before the radix character (shown here as the decimal point),
and the number of digits
after the radix character is equal to the precision specification. The
\*LLC_NUMERIC\*O locale category determines the radix character to use
in this format. If no precision is specified, then six digits are
output. If the precision is \*L0\*O (zero), then no radix character appears.
The \*LE\*O conversion character produces a number with \*LE\*O instead
of \*Le\*O before the exponent. The exponent always contains at least two
digits. However, if the value to be printed requires an exponent greater
than two digits, additional exponent digits are printed as necessary.
.LI "\*Lf\*O"
Accepts a float or double value and converts it to
decimal notation in the format [\*L-\*O] \*Vddd\*L.\*Vddd\*O.
The number of digits after the radix character (shown here as the
decimal point) is equal to the precision specification. The \*LLC_NUMERIC\*O
locale category determines the radix character to use
in this format. If no precision is specified, then six digits are
output. If the precision is \*L0\*O (zero), then no radix character appears.
.LI "\*Lg\*O, \*LG\*O"
Accepts a float or double value and converts it in the style of the
\*Lf\*O or \*Le\*O conversion characters (or \*LE\*O in the case of the \*LG\*O
conversion), with the precision specifying the number of significant digits.
Trailing zeros are removed from the result. A radix character appears only if it
is followed by a digit. The style used depends on the value converted. Style
\*Lg\*O results only if the exponent resulting from the conversion is less than
-4, or if it is greater than or equal to the precision.
.LI "\*Lo\*O"
.\" .zA "review, R1.1.2, XPG4"
Accepts an integer value and converts it to unsigned
octal notation.
.\" .zZ "review, R1.1.2, XPG4"
The precision specifies the minimum number of digits
to appear. If the value being converted can be represented in fewer
digits, it is expanded with leading zeros. The default precision is
1. The result of converting a 0 (zero) value with a precision of 0 (zero)
is a null string. Specifying a field width with a 0 (zero) as a leading
character causes the field width value to be padded with leading zeros.
An octal value for field width is not implied.
.\" .zA "review, R1.1.2, XPG4"
.LI "\*Ls\*O"
Accepts a value as a string, and bytes from the
string are printed until the end of the string is encountered or the
number of bytes indicated by the precision is reached. If no precision is
specified, all characters up to the first null character are printed.
.\" .zZ "review, R1.1.2, XPG4"
.LI "\*Lu\*O"
Accepts an integer value and converts it to unsigned
decimal notation. The precision specifies the minimum number of digits
to appear. If the value being converted can be represented in fewer
digits, it is expanded with leading zeros. The default precision is
1. The result of converting a 0 (zero) value with a precision of 0 (zero)
is a null string. Specifying a field width with a 0 (zero) as a leading
character causes the field width value to be padded with leading zeros.
.\" .zA "review, R1.1.2, XPG4"
.LI "\*Lx\*O, \*LX\*O"
Accepts an integer value and converts it to unsigned
hexadecimal notation. The letters
\*Labcdef\*O are used for the \*Lx\*O conversion and the letters \*LABCDEF\*O
are used for the \*LX\*O conversion. The precision specifies the minimum
number of digits to appear. If the value being converted can be represented
in fewer digits, it is expanded with leading zeros. The default precision
is 1. The result of converting a 0 (zero) value with a precision of 0 (zero)
is a null string. Specifying a field width with a 0 (zero) as a leading
character causes the field width value to be padded with leading zeros.
.\" .zZ "review, R1.1.2, XPG4"
.LE
.LE
.IP
If the result of a conversion is wider than the field width, the
field is expanded to contain the converted result. No truncation occurs.
However, a small precision may cause truncation on the right.
.SH EXAMPLES
.PP
The following command
.iS
printf "%5d%4d\en" 1 21 321 4321 54321
.iE
.PP
produces the following output:
.oS
    1  21
  3214321
54321   0
.oE
.PP
The \*Vformat\*O argument
is used three times to print all of the given
strings. The \*L0\*O (zero) is
supplied by the \*Lprintf\*O command to satisfy the last
\*L%4d\*O conversion specification.
.SH RELATED INFORMATION
.PP
Commands: \*Lread\*O(1).
.PP
Functions: \*Lprintf\*O(3).
.EQ
delim off
.EN
