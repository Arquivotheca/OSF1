.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: cord.1,v $ $Revision: 3.2.4.2 $ (DEC) $Date: 1993/06/21 14:42:07 $
.\" 
.\" -----------------------------------------------------
.\" | Copyright MIPS Computer Systems, Inc.  All Rights |
.\" | Reserved. 	                                       |
.\" -----------------------------------------------------
.\"  cord.1 3.2
.TH cord 1
.SH NAME
.PP
\*Lcord\*O \- Rearrange procedures in an executable file to facilitate better cache mapping
.SH SYNOPSIS
.PP
.iX "cord command"
\*Lcord\*O [\*L\-v\*O] [\*L\-o\*O \*Voutfile\*O] [\*L\-f\*O] [\*L\-c\*O \*Vcachesize\*O] [\*L\-p \*Vmaxphases\*O] \*Vobj-file \*Vreorder-file\*O
.SH DESCRIPTION
.PP
The \*Lcord\*O command rearranges procedures in an executable
object file to maximize efficiency in a machine's cache.
By rearranging the
procedures properly, we end up reducing the instruction cache miss rates.
\*Lcord\*O does not attempt to determine the correct ordering, but is
given a \*Vreorder\*O file containing the desired procedure order.
The reorder file is generated by the \*Lftoc\*O program, which in turn
generates a \*Vreorder\*O file from a set of profile feedback files (see
\*Lprof\*O(1)).
.PP
Processed lines in the \*Vreorder\*O file are called procedure lines.
Each procedure line must
be on a separate source line.
Each procedure line must contain the
source name of the file, followed by a blank followed by a qualified
procedure name.
Nested procedures must be qualified x.y where x is
the outer procedure.
A newline or blank can follow the procedure name:
.sp
.B "foo.c bar"
(everything else following is ignored)
.sp
.PP
Lines beginning with \*L#\*O are comments, lines beginning with \*L$\*O
are considered \*Lcord\*O directive lines. The only directive currently
understood is \*L$\*Vphase\*O.
This directive will consider the rest of
the file (until the end of file or next \*L$\*Vphase\*O) as a new phase
of the program and will order the procedures accordingly.
A procedure
may appear in more than one phase, resulting in more than one copy of it
in the final binary.
First, \*Lcord\*O will try to relocate
procedure references to a copy of the procedure belonging to the
requesting phase;
otherwise it will relocate the references to a random copy.
.PP
We suggest you use the \*L-cord\*O option to a compiler driver like
\*Lcc\*O(1) rather than execute cord directly.
\*Lcord\*O options can be
specified with \*V-Wz,cordarg0,cordarg1,...\*O.
If you have to run
\*Lcord\*O by hand, you may want to run it once with the driver using the
\*L-v\*O flag on a simple program.  This will enable you to see the
exact passes and the arguments involved in using \*Lcord\*O.
.PP
\*VObj\*O
is an executable object file with its relocation information intact. This can
be achieved by passing the \*L-r -z -d\*O options to the linker,
\*Lld\*O(1).
The linker option \*L-r\*O maintains relocation information
in the object file, but will not make it a \*VZMAGIC\*O file (hence \*L-z\*O).
It also will not allocate common variables (hence \*L-d\*O) as it would
without the option.
.PP
.B "WARNING:"
Since \*Lcord\*O works from an input list of procedures generated from
profile output, the resulting binary is data dependent.
In other words, it
may only perform well on the same input data that generated the profile
information, and may perform worse than the original binary on other data.
Furthermore, if the hot areas in the cache do not fit well into
one cachepage, performance can degrade.
.PP
The
.B cord
command accepts these options:
.RS
.TP
.B -v
Print verbose information.
This includes listing those procedures considered
part of other procedures and cannot be rearranged (these are basically
assembler procedures that may contain relative branches to other procedures
rather than relocatable ones).
The listing also lists those procedures
in the flipped area (if any) and a mapping of old location to new.
.TP
.B -f
Flip the first cachepage size procedures.
The assumption when cord was
written was that procedures would be reordered by procedure density
(cycles/byte).
This option ensures that the densest part of each page
following the first cachepage would conflict with the least-dense part
of the first cachepage.
.TP
.BI \-c " cachesize"
Specify the cachesize (in bytes) of the machine on which you want to execute.
This only affects the \*L-f\*O option.
If not specified, 65536
is used.
.TP
.BI \-o " outputfile"
Specifies the output file. If not specified, \*La.out\*O is used.
.TP
.BI \-p " phasemax"
specifies the maximum number phases allowed. The default is 20.
.RE
.SH RELATED INFORMATION
.PP
\*Lcc\*O(1), \*Lftoc\*O(1), \*Lld\*O(1), \*Lprof\*O(1)
.PP
\*EProgrammer's Guide\*O
.EQ
delim off
.EN
