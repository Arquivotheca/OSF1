.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: gencat.1,v $ $Revision: 3.2.5.5 $ (DEC) $Date: 1994/01/14 22:18:31 $
.\"
.\" (c) Copyright 1990, 1991, 1992, 1993 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 1.2
.TH gencat 1
.SH "NAME"
.PP
\*Lgencat\*O - Creates and modifies a message catalog
.SH "SYNOPSIS"
.PP
.sS
\*Lgencat\*O
\*Vcatalog_file\*O
\*O[\*Vsource_file\*O\ \&...]
.sE
.SH "DESCRIPTION"
.PP
.iX "gencat command"
.iX "message catalogs" "creating"
The \*Lgencat\*O command can be used to
create a message catalog (usually ending in \*L\&.cat\*O) from a message text
source file (usually ending in \*L\&.msg\*O).
.PP
A message text source file is a text file that you create to hold messages
printed by your program.  You can use any text editor to enter messages into
the text source file.  Messages can be grouped into sets, generally to
represent functional subsets of your program.  Each message has a numeric
identifier, which must be unique within its set.  The message text source file
can also contain commands recognized by \*Lgencat\*O
for manipulating sets and individual messages.
.PP
Generally, programmers use symbolic names rather than numeric constants to
refer to messages within programs.  The \*Lgencat\*O
utility does not recognize symbolic names, but OSF/1 provides a utility named
\*Lmkcatdefs\*O that accepts messages preceded by a symbolic name
and assigns a numeric value to each.  Therefore, the most
convenient way to generate a message catalog is to pass
your symbolic constants and associated messages through \*Lmkcatdefs\*O
and then pass its output to \*Lgencat\*O.
.PP
If a message catalog with the name \*Vcatalog_file\*O exists, \*Lgencat\*O
modifies it according to the statements in the message
source files. If the catalog does not exist, \*Lgencat\*O
creates the catalog with the name \*Vcatalog_file\*O.
.PP
You can specify any number of message text source files. The \*Lgencat\*O
command processes multiple source files one after the other in
the sequence that you specify them.  Each successive source file modifies
the catalog. If you do not specify a source file, the \*Lgencat\*O
command accepts message source data from standard input.
.\" .zA "review, R1.1.2, XPG4"
Note that you can specify a \*L-\*O (dash) for the catalog file
(standard output) or the source file (standard input).
.\" .zZ "review, R1.1.2, XPG4"
.PP
The \*Vcatalog_file\*O can contain the following commands.  Each initial
keyword or number must be followed by white space.
.\" .zA "defect, 7849, R1.1.2, Added newline mention"
The \*Lgencat\*O utility ignores any line beginning with
a space, a tab, or a \*L$\*O (dollar sign) character followed by a
space, a tab, or a newline character.
.\" .zZ "defect, 7849, R1.1.2, Added newline mention"
Thus, you can use these sequences to start comments in your
\*Vcatalog_file\*O.  Blank lines are also ignored.  Finally, you can place
comments on the same line after the \*L$delset\*O, \*L$quote\*O,
\*L$len\*O, or \*L$set\*O commands, because the
\*Lgencat\*O utility ignores anything following the
preceding syntax elements.
.PP
.VL 4m
.LI "\*Vmessage_number text\*O"
Inserts \*Vtext\*O as a message with the identifier
\*Vmessage_number\*O.  Numbers must be ascending
within each set: you can skip a number, but you cannot go
back to add a missing number or replace an existing number during a
\*Lgencat\*O session.
.\" .zA "review, R1.1.2, XPG4"
If the message text is empty, and a space or tab field separator is present,
an empty string is stored in the message catalog.
If a message source line has a message number, but neither a field
separator nor message text, the existing message within that number
(if any) is deleted from the catalog.
.\" .zZ "review, R1.1.2, XPG4"
.LI "\*L$delset\*O \*Vset_number\*O"
Deletes the set of messages indicated by \*Vset_number\*O.
.LI "\*L$quote\*O \*Vcharacter\*O"
Sets the quote character to \*Vcharacter\*O.  See the
explanation later in this section.
.LI "\*L$len\*O [\*Vmax_length\*O]"
Sets the maximum length allowed for messages in your catalogue.  If this
command is not used, or if you use it without the \*Vmax_length\*O argument,
the maximum length is 8192 bytes (the value set by
\*LNL_TEXTMAX\*O).  Note that \*L$len\*O is an extension to
X/Open specifications and therefore may not be supported by all systems
that conform to XPG4.
.LI "\*L$set\*O \*Vset_number\*O"
Indicates that all messages entered after this command are placed in the set
indicated by \*Vset_number\*O.  You can change the set by entering another
\*L$set\*O command.  However, set numbers must be entered in ascending order;
you can not go back to a lower-numbered set during the
\*Lgencat\*O session. If the command is not used,
the default set number is 1.
.LE
.PP
A line beginning with a digit marks a message to be included in the catalog.
You can specify any amount of white space between the message ID number
and the message text; however, one space or tab character
is recommended when the message text is not delimited by quotes.
When message text is
not quoted, \*Lgencat\*O treats additional white space as part of the
message.  When message text is quoted, \*Lgencat\*O ignores all
spaces or tabs between the message ID and the first quotation
character.
.PP
Escape sequences, like those recognized by the C language, can be
used in \*Vtext\*O; these are listed after the commands.
Use a \*L\e\*O (backslash) character to continue message text on
the following line.
.PP
The \*Lgencat\*O command does not accept symbolic identifiers.
You must run the \*Lmkcatdefs\*O command if you want to use symbolic
identifiers.
.PP
The Escape character \*L\e\*O (backslash) can
be used to include the following special characters in the message text:
.VL 4m
.LI "\*L\en\*O"
Inserts a newline.
.LI "\*L\et\*O"
Inserts a horizontal tab character.
.LI "\*L\ev\*O"
Inserts a vertical tab.
.LI "\*L\eb\*O"
Performs a backspace function.
.LI "\*L\er\*O"
Inserts a carriage return.
.LI "\*L\ef\*O"
Inserts a formfeed character.
.LI "\*L\e\e\*O"
Inserts a \*L\e\*O (backslash) character.
.LI "\*L\e\*Vddd\*O"
Inserts the single-byte character associated
with the octal value represented by the octal digits \*Vddd\*O.
One, two, or three octal digits can be specified; however, you must
include leading zeros if the characters
following the octal digits are also valid octal digits. For
example, the octal value for \*L$\*O (dollar sign) is 44. To insert
\*L$5.00\*O into a message, use \*L\e0445.00\*O,
not \*L\e445.00\*O, or the \*L5\*O will be
parsed as part of the octal value.
.LI "\*L\ex\*Vdd\*O or \*L\ex\*Vdddd\*O"
Inserts the character
associated with the hexadecimal value represented by the
hexadecimal digits. The \*Lgencat\*O command inserts a
single-byte character when
you specify two valid digits (\*Vdd\*O) and a double-byte character
when you specify four valid digits (\*Vdddd\*O).
See \*L\e\*Vddd\*O for a way to avoid parsing
errors when the hexadecimal value precedes an actual digit.
This escape sequence is an extension to X/Open specifications.
.LE
.PP
You can also include \*Lprintf(\|)\*O conversion
specifications in messages that
are printed by the \*Lprintf(\|)\*O family of
calls in C code.  If you display a message from a shell script with
\*Ldspmsg\*O, the only conversion
specifications that can be used in the message are \*L%s\*O and
\*L%\*Vn\*L$s\*O.
.SH "EXAMPLES"
.PP
.AL
.LI
To use the \*L$set\*O command in a source file to give a group
of messages a set number, enter:
.IP
.iS
$set 10 Communication Error Messages
.iE
.IP
The message set number is \*L10\*O.  All messages
following the \*L$set\*O command are assigned that set number,
up until the next occurrence of a \*L$set\*O command.  (Set numbers
must be assigned in ascending order, but need not be contiguous.  Large
gaps in the number sequence are discouraged in order to increase efficiency
and performance.  There is no performance advantage to using more than
one set number in a catalog.)
.IP
You can include a comment in the \*L$set\*O command, but it
is not required.
.LI
To use the \*L$delset\*O command to remove all
of the messages belonging to the specified set from a catalog, enter:
.IP
.iS
$delset 10 Communication Error Messages
.iE
.IP
The message set is specified by \*Vn\*O. The \*L$delset\*O
command must be placed in the proper set number order with respect
to any \*L$set\*O commands in the same source file.  You can include
a comment in the \*L$delset\*O command also.
.LI
Enter the message text and assign message ID numbers
as follows:
.IP
.iS
12 "file removed"
.iE
.IP
This command assigns the message ID number \*L12\*O to the text that
follows it.
.IP
You must leave at least one space or tab character between
the message ID number and the message text, but you
can include more spaces or tabs if
you prefer. If you do include more spaces or tabs, they will
be ignored when message text is quoted and considered part of
the text when message text is not quoted.
.IP
Message numbers must be in ascending order within
a single message set, but need not be contiguous.
.IP
All text following the message number is included as message text, up to the
end of the line.  If you place the escape character \*L\e\*O (backslash) as
the last character on the line, the message text continues on the following
line.  Consider the following example:
.IP
.iS
This is the text associated with \e
message number 5.
.iE
.IP
The preceding two lines define the single-line message:
.IP
.oS
This is the text associated with message number 5.
.oE
.LI
The following example shows the effect of a quote character:
.IP
.oS
$quote "   Use a double quote to delimit message text
$set 10            Message Facility - Quote command messages
1 "Use the $quote command to define a character \e
\en for delimiting message text" \en
2 "You can include the \e"quote\e" character in a message \en \e
by placing a \e\e (backslash) in front of it" \en
3 You can include the "quote" character in a message \en \e
by having another character as the first nonspace \e
\en character after the message ID number \en
$quote
4 You can disable the quote mechanism by \en \e
using the $quote command without \en a character \e
after it \en
.oE
.IP
In this example, the \*L$quote\*O command defines the \*L"\*O (double
quote) as the quote character. The quote character must be the
first nonspace character following the message number. Any text following
the next occurrence of the quote character is ignored.
.IP
The example also shows two ways the quote character can be included
in the message text:
.ML
.LI
Place a \*L\e\*O in front of the quote character.
.LI
Use some other character as the first nonspace character following
the message number. This disables the quote character only for that
message.
.LE
.IP
The example also shows the following:
.ML
.LI
A \*L\e\*O is still required to split a quoted message across lines.
.LI
To display a \*L\e\*O in a message, you must place another \*L\e\*O
in front of it.
.LI
You can format your message with a newline character by using \*L\en\*O.
.LI
If you use the \*L$quote\*O command with no character argument,
you disable the quote mechanism.
.LE
.LE
.SH NOTES
.PP
.\" .zA "defect, 8184, R1.1.2, changed limits to NL_SETMAX and NL_MSGMAX"
The \*Lgencat\*O command conforms to X/Open specifications.  In an X/Open
conforming application, set numbers must be integers in the range of 1
to \*LNL_SETMAX\*O, inclusive, and message numbers must be integers
in the range of 1 to \*LNL_MSGMAX\*O, inclusive.
.\" .zA "defect, 8184, R1.1.2, changed limits to NL_SETMAX and NL_MSGMAX"
.SH DIAGNOSTICS
.PP
When \*Lgencat\*O reports an error, no action
is taken on any commands, and an existing catalog is left unchanged.
.SH "RELATED INFORMATION"
.PP
Commands:  \*Ldspcat\*O(1), \*Ldspmsg\*O(1), \*Lextract\*O(1),
\*Lmkcatdefs\*O(1), \*Lruncat\*O(1), \*Lstrextract\*O(1),
\*Lstrmerge\*O(1), \*Ltrans\*O(1).
.PP
Functions:  \*Lcatclose\*O(3), \*Lcatgets\*O(3), \*Lcatopen\*O(3).
.PP
Files: \*Lpatterns\*O(4).
.EQ
delim off
.EN
