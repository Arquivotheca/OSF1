.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: m4.1,v $ $Revision: 3.2.6.3 $ (DEC) $Date: 1993/11/16 12:43:00 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"build rmifdef
.TH m4 1
.SH NAME
\*Lm4\*O \- Preprocesses files, expanding macro definitions
.SH SYNOPSIS
.PP
.sS
.in +.5i
.ti -.5i
\*Lm4\*O
\*O[\*L-B\*Vnumber\*O]
\*O[\*L-es\*O]
\*O[\*L-H\*Vnumber\*O]
\*O[\*L-S\*Vnumber\*O]
\*O[\*L-T\*Vnumber\*O]
\*O[\*L-D\*Vmacro\*O][\*L=\*Vvalue]
\*O[\*L-U\*Vmacro\*O]
.nL
\*Vfile\*O
\&...
|
\*L-\*O
.in -.5i
.sE
.PP
The \*Lm4\*O command is a macro processor used as a preprocessor
for C and other languages.
.SH FLAGS
.PP
.VL 4m
.LI "\*L-B\*Vnumber\*O"
Makes \*Vnumber\*O the size of the push-back and parameter
collection buffers (the default is 4096).
.LI "\*L-e\*O"
Operates interactively.
Interrupts are ignored and the output is not buffered.
.LI "\*L-H\*Vnumber\*O"
Makes \*Vnumber\*O the size of the symbol table hash array
(the default is 199).  The size must be a prime number.
.LI "\*L-s\*O"
Enables the line sync output for the C preprocessor
(\*L#line\&.\&.\&.\*O).
.LI "\*L-S\*Vnumber\*O"
Makes \*Vnumber\*O the size of the call stack (the default
is 800 slots).  Macros take three slots, and nonmacro
arguments take one.
.LI "\*L-T\*Vnumber\*O"
Makes \*Vnumber\*O the size of the token buffer (the
default is 512 bytes).
.LE
.PP
The preceding flags must appear before any filenames and
before any \*L-D\*O or \*L-U\*O flags.
.VL 4m
.LI "\*L-D\*Vmacro\*O[\*L=\*Vvalue\*O]"
Defines \*Vmacro\*O as \*Vvalue\*O.  If \*Vvalue\*O is
not specified, \*Vmacro\*O becomes null.
.LI "\*L-U\*Vmacro\*O"
Undefines a built-in \*Vmacro\*O or one previously defined with the
\*L-D\*O flag.
.LE
.SH DESCRIPTION
.iX "m4 command"
.iX "files" "preprocessing"
.iX "expanding" "macro definitions"
.iX "definitions" "macro"
.iX "macro" "processor"
.iX "preprocessor" "macro"
.PP
You can use \*Lm4\*O to process built-in macros or user-defined macros.
Each file is processed in order.
If you do not specify a file or if you give a
\*L-\*O (dash) as a filename, \*Lm4\*O reads standard input.
It writes the processed macros to standard output.
.gL "built-in macros"
.gL "user-defined macros"
.gL "macros"
.PP
Macro calls follow the form:
.iS
\*Vmacro\*L(\*Vargument\*O\&.\&.\&.\*L)
\*O\c
.iE
.PP
The left parenthesis must immediately follow \*Vmacro\*O.
If the left parenthesis does not follow the name of a defined macro,
\*Lm4\*O reads it as a macro call with no arguments.
Macro names consist of ASCII alphabetic letters, digits, and the \*L_\*O
(underscore) character.  Extended characters are not allowed in macro names.
The first character cannot be a digit.
.PP
While collecting arguments, \*Lm4\*O ignores unquoted leading
spaces, tabs, and newline characters.
Use '' (single quotes) to quote strings.  The value of
a quoted string is the string with the quotation marks stripped off.
.PP
When \*Lm4\*O recognizes a macro, it collects arguments by
searching for a matching right parenthesis.
If you supply fewer arguments than appear in the macro definition,
\*Lm4\*O considers the trailing arguments in the definition to be null.
Macro evaluation proceeds normally during the collection of the arguments.
All commas or right parentheses within the value of a nested call are
translated literally; they do not need an escape character or quotation marks.
After collecting arguments, \*Lm4\*O pushes the value of the macro
back onto the input stream and scans again.
.SS Built-In Macros
The \*Lm4\*O command contains the following built-in macros.
You can redefine them, but they will then lose their original meanings.
The values of these macros are null unless otherwise stated:
.VL 4m
.LI "\*Ldefine(\*Vmacro\*L,\*Vnew\(ulname\*L)\*O"
Replaces the macro \*Vmacro\*O with the value of \*Vnew\(ulname\*O.
The \*Vnew\(ulname\*O string can include tokens of the form
\*L$\*Vn\*O\&.\&.\&. (where \*Vn\*O is a digit).
In this case, each occurrence of
\*L$\*Vn\*O in the replacement text is
replaced by the \*Vn\*O-th argument of \*Vmacro\*O.
The name of the macro is \*L$0\*O.  The null string replaces missing arguments.
The number of arguments replaces \*L$#\*O.
A list of all arguments, separated by commas, replaces \*L$*\*O.
The \*L$@\*O acts like \*L$*\*O, but each argument is quoted with
the current quotation character (see the \*Lchangequote\*O macro).
.LI "\*Lundefine(\*Vmacro\*O\&.\&.\&.\*L)\*O"
Removes the definition of \*Vmacro\*O (including those preserved using
the \*Lpushdef\*O macro).
.LI "\*Ldefn(\*Vmacro\*O\&.\&.\&.\*L)\*O"
Returns the quoted definition of \*Vmacro\*O.
.LI "\*Lifdef(\*Vmacro\*L,\*Vtrue\*L,\*O[\*Vfalse\*O]\*L)\*O"
If the first argument is defined, the value is the second argument.
Otherwise, the value is the third argument.  If there is no third
argument, the value is null.
.IP
Note that the word \*Lunix\*O is predefined.
.LI "\*Lpushdef(\*Vmacro\*L,\*Vnew\(ulname\*L)\*O"
Redefines \*Vmacro\*O with \*Vnew\(ulname\*O as
in \*Ldefine\*O, but saves any previous definition.
.LI "\*Lpopdef(\*Vmacro\*O\&.\&.\&.\*L)\*O"
Removes the current definition of \*Vmacro\*O and
returns to the previous definition, if one existed.
.LI "\*Lshift(\*Vargument\*O\&.\&.\&.\*L)\*O"
Returns all but the first argument.
The other arguments are quoted and pushed back with commas in between.
The quoting nullifies the effect of the extra scan that
is subsequently performed.
.LI "\*Lchangequote(\*Vleft\*L,\*Vright\*L)\*O"
The \*Lchangequote\*O macro sets the begin and end symbols. With no arguments, the
quote strings are set to the default values (that is, `', one grave accent and one
apostrophe). With a single argument, that argument becomes the begin-quote string and
the newline character becomes the end-quote string. With two arguments, the first
argument becomes the begin-quote string and the second argument becomes the end-quote
string. The symbols can be up to five bytes long.
.LI "\*Lchangecom\*O[\*Vleft_comment\*O][\*L,\*Vright_comment\*O]"
Changes left and right comment markers from the default #
and newline character to \*Vleft_comment\*O and \*Vright_comment\*O.
With no arguments, the comment mechanism is disabled.
With one argument, the left marker becomes the parameter and the right
marker becomes a newline character.
With two arguments, both markers are affected.
Comment markers can be up to 5 bytes long.
.LI "\*Ldivert(\*Vnumber\*L)\*O"
Changes the current output stream to stream \*Vnumber\*O.
There are 10 output streams, numbered 0 to 9.
The final output is the concatenation of the streams in numerical order.
Initially, stream 0 (zero) is the current stream.
The \*Lm4\*O command discards output diverted to a stream other than 0 to 9.
.LI "\*Lundivert(\*Vnumber\*O\&.\&.\&.\*L)\*O"
Causes immediate output of text from the specified diversions (or
all diversions if there is no argument).  Text can be undiverted into
another diversion.  Undiverting discards the diverted text.
.LI "\*Ldivnum\*O"
Returns the value of the current output stream.
.LI "\*Ldnl\*O"
Reads and discards characters up to and including the next
newline character.
.LI "\*Lifelse(\*O[\*Vstring1\*L,\*Vstring2\*L,\*Vtrue\*L,\*O[\*Vfalse\*O]]\&.\&.\&.\*L)\*O"
If \*Vstring1\*O and \*Vstring2\*O are the same, then the
value is \*Vtrue\*O.  If they are not and if there are more than
four arguments, \*Lm4\*O repeats the process with the additional
arguments (4, 5, 6, and so on).  Otherwise, the value is either
\*Vfalse\*O or null if you provide no value for \*Vfalse\*O.
.LI "\*Lincr(\*Vnumber\*L)\*O"
Returns the value of its argument incremented by 1.
.LI "\*Ldecr(\*Vnumber\*L)\*O"
Returns the value of its argument decreased by 1.
.LI "\*Leval(\*Vexpression\*O[\*L,\*Vnumber1\*O[\*L,\*Vnumber2\*O]]\*L)\*O"
Evaluates its first argument as an arithmetic expression, using
32-bit (long) arithmetic.  The operators you can use include \*L\(pl\*O,
\*L\-\*O, \*L*\*O,
\*L/\*O, \*L%\*O, \*L^\*O (exponentiation),
bitwise \*L&\*O, \*L|\*O, \*L~\*O, and \*L^\*O relationals, and parentheses.
.IP
Octal and hex numbers can be specified as in C. The optional \*Vnumber1\*O
specifies the radix for the result of the expression.
The default radix is 10.
The optional \*Vnumber2\*O specifies the
minimum number of digits in the result.  The default is 1.
.LI "\*Llen(\*Vstring\*L)\*O"
Returns the number of bytes in \*Vstring\*O.
.LI "\*Ldlen(\*Vstring\*L)\*O"
Returns the number of displayable characters in \*Vstring\*O;
that is, 2-byte extended characters are counted as one displayable
character.
.LI "\*Lindex(\*Vstring1\*L,\*Vstring2\*L)\*O"
Returns the first position in \*Vstring1\*O, where
\*Vstring2\*O begins (zero origin), or -1 if the second argument does not occur.
.LI "\*Lsubstr(\*Vstring\*L,\*Vposition\*L,\*O[\*Vnumber\*O]l\*L)\*O"
Returns a substring of \*Vstring\*O.
The beginning of the substring is selected with \*Vposition\*O, and
\*Vnumber\*O indicates the length of the substring.
Without \*Vnumber\*O, the substring includes everything to the end of
the first string.
.LI "\*Ltranslit(\*Vstring\*L,\*Vfrom\*L,\*Vto\*L)\*O"
Transliterates the characters in \*Vstring\*O from the set
given by \*Vfrom\*O to the set given by \*Vto\*O.
No abbreviations are permitted.  2-byte extended characters are
correctly mapped into the corresponding replacement characters.
.LI "\*Linclude(\*Vfile\*L)\*O"
Returns the contents of \*Vfile\*O or displays an error message
if it cannot access the file.
.LI "\*Lsinclude(\*Vfile\*L)\*O"
Returns the contents of \*Vfile\*O, but it gives no error
message if \*Vfile\*O is inaccessible.
.LI "\*Lsyscmd(\*Vcommand\*L)\*O"
Runs the specified operating system command.  No value is returned, but
\*Lsysval\*O can be used to retrieve the exit value.
.LI "\*Lsysval\*O"
Returns the return code from the last call to \*Lsyscmd\*O.
.LI "\*Lmaketemp(\&.\&.\&.\*Vxxxxx\*O\&.\&.\&.\*L)\*O"
Replaces \*Vxxxxx\*O in its argument with the current process ID number.
.LI "\*Lm4exit(\*Vvalue\*L)\*O"
Exits from \*Lm4\*O immediately, returning the specified
exit value (the default is 0 (zero)).
.LI "\*Lm4wrap(\*Vlast_macro\*L)\*O"
Sets or resets \*Vlast_macro\*O, which is run after reading the
End-of-File character.  For example:  \*Lm4wrap(`cleanup()')\*O sets
the \*Lcleanup\*O macro at the end of \*Lm4\*O.
.LI "\*Lerrprint(\*Vmessage\*L)\*O"
Includes \*Vmessage\*O on the diagnostic output file (standard error).
.LI "\*Ldumpdef(\*O[\*Vmacro\*O\&.\&.\&.]\*L)\*O"
Writes to standard output the current names and definitions for
the named items or for all items if no arguments are provided.
.LI "\*Ltraceon(\*Vmacro\*L)\*O"
Turns on tracing for \*Vmacro\*O.  If none is named,
tracing is turned on for all macro expansions.
.LI "\*Ltraceoff(\*Vmacro\*O\&.\&.\&.\*L)\*O"
Turns off trace globally and for any \*Vmacro\*O
specified.  Macros specifically traced by \*Ltraceon\*O
can be untraced only by specific calls to \*Ltraceoff\*O.
.LE
.\" .SS Japanese Language Support
.\" .PP 
.\" If Japanese Language Support is enabled on your system, this command
.\" is not available.
.SH EXAMPLES
.PP
To preprocess a C language program with \*Lm4\*O and compile it, enter:
.iS
m4  prog.m4  >prog.c
cc  prog.c
\*O\c
.iE
.SH EXIT VALUES
.PP
.VL 4m
.LI "0"
Successful completion
.LI ">0"
An error occurred
.LE
.PP
If you use the m4exit macro, the input file can specify the exit value.
.\" .SH RELATED INFORMATION
.PP
.\" Begin Digital-specific information - CORRECTION
.\" Added xref to Programming Support Tools guide
.PP
.\" The commands listed here are not mentioned elsewhere.  There is no
.\" need to disclaim anything.
.\" .PP 
.\" The \*Las\*O, \*Lgcc\*O (\*Lcc\*O), \*Lgdb\*O, and \*Lld\*O
.\" commands may be available on your system, but are not provided with OSF/1.
.\" End Digital-specific information - CORRECTION
.EQ
delim off
.EN
