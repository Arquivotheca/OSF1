.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: chmod.1,v $ $Revision: 3.5.5.3 $ (DEC) $Date: 1993/11/19 16:18:49 $
.\"
.\" (c) Copyright 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
.\" ALL RIGHTS RESERVED 
.\" OSF/1 Release 1.0.4
.\"build rmifdef
.TH chmod 1
.SH NAME
\*Lchmod\*O \- Changes permission codes
.SH SYNOPSIS
.PP
.sS
\*Lchmod\*O \*O[\*L\-fR\*O] \*Vabsolute_mode\*O \*Vfile\*O \&...
.PP
\*Lchmod\*O \*O[\*L\-fR\*O] \*O[\*Vwho\*O]\*L+\*Vpermission\*O \&...  \*Vfile\*O \&...
.PP
\*Lchmod\*O \*O[\*L\-fR\*O] \*O[\*Vwho\*O]\*L\-\*Vpermission\*O \&...  \*Vfile\*O \&...
.PP
\*Lchmod\*O \*O[\*L\-fR\*O] \*O[\*Vwho\*O]\*L=\*O[\*Vpermission\*O \&...] \*Vfile\*O \&...
.sE
.PP
The \*Lchmod\*O command modifies the read, write, and execute permissions
.gL "read permission"
.gL "write permission"
.gL "execute permission"
.gL "search permission"
.gL "permissions"
of specified files and the search permissions of
specified directories.
.SH DESCRIPTION
.iX "chmod command"
.iX "changing" "permission codes"
.iX "permission codes"
.iX "files" "changing permission codes"
.PP
You can use either symbolic or absolute
.gL "symbolic mode"
.gL "absolute mode"
.gL "superuser authority"
.gL "root user"
mode to specify the desired permission settings.
You can change the permission code of a file or directory only if
you own it or if you have superuser authority.
.\" Begin Digital-specific information - CORRECTION
.PP
If a named file is a symbolic link, \*Lchmod\*O changes the mode of the
link's target file unless the \*L\-R\*O flag is used.  If the \*L\-R\*O
flag is used, \*Lchmod\*O leaves links and their target files untouched.
.\" End Digital-specific information - CORRECTION
.SS Symbolic Mode
A symbolic mode has the form:
.PP
[\*Vwho\*O] \*Voperation permission\*O [\*Voperation permission\*O] ...
.PP
The \*Vwho\*O argument specifies whether you are defining permissions
for a user, group, or all others, or any combination of these.
The \*Voperation\*O argument specifies whether
the permission is being added, taken away, or assigned absolutely.
The \*Vpermission\*O argument identifies the operation that
the specified users can perform on \*Vfile\*O.
.PP
Valid options for the \*Vwho\*O argument are as follows:
.VL 4m
.LI "\*Lu\*O"
User (owner)
.LI "\*Lg\*O"
Group
.LI "\*Lo\*O"
All others
.LI "\*La\*O"
User, group, and all others (same effect as the combination \*Lugo\*O)
.LE
.PP
If the \*Vwho\*O argument is omitted, the default is \*La\*O,
but the setting of the file creation mask, \*Lumask\*O (see \*Lcsh\*O,
\*Lksh\*O, \*Lsh\*O), is applied.
.PP
Valid options for the \*Voperation\*O argument are as follows:
.VL 4m
.LI "\*L\-\*O"
Removes specified permissions.
.LI "\*L\(pl\*O"
Adds specified permissions.
.LI "\*L=\*O"
Clears the selected permission field and sets it to the code
specified.  If you do not specify a permission code
following \*L=\*O, \*Lchmod\*O removes all permissions from the
selected field.
.LE
.PP
Valid options for the \*Vpermission\*O argument are as follows:
.VL 4m
.LI "\*Lr\*O"
Read permission.
.LI "\*Lw\*O"
Write permission.
.LI "\*Lx\*O"
Execute permission for files, search permission for directories.
.LI "\*LX\*O"
Execute permission only if \*Vfile\*O is a directory or at
least one execute bit is set.
.LI "\*Ls\*O"
Set-user-ID or set-group-ID permission.
.gL "user ID"
.gL "group ID"
.IP
This permission bit sets
the effective user ID or group ID to that of the owner or
group owner of \*Vfile\*O
whenever the \*Vfile\*O is run.  Use this permission setting in
combination with the \*Lu\*O or \*Lg\*O option to allow
temporary or restricted access to files not normally accessible to other
users.  An \*Ls\*O appears in the user or group execute position of
a long listing (see \*Lls\*O)
to show that the file runs with set-user-ID or set-group-ID permission.
.LI "\*Lt\*O"
Save text permission.
.IP
In earlier versions of the UNIX system,
setting this permission bit caused the
text segment of a program to remain in virtual memory after its first
use.  The system thus avoided having to transfer the program code of
frequently accessed programs into the paging area.  A \*Lt\*O appears in
the execute position of the \*Lall others\*O option to indicate that the
file has this bit (the \*Vsticky\*O bit) set.
.IP
If a directory has this bit set, then deletion in it is restricted.
An entry in a sticky directory can only be removed or renamed by a
user if the user has write permission for the directory and the user
is the owner of the file, the owner of the directory,
or the superuser.
.LE
.PP
The \*Lu\*O, \*Lg\*O,
and \*Lo\*O options indicate that \*Vpermission\*O is to be taken
from the current mode.  Omitting \*Vpermission\*O is only useful
with \*L=\*O to take away all permissions.
.PP
All permission bits not explicitly specified are cleared.
.PP
You can specify multiple symbolic modes, separated with commas.  Do
not separate items in this list with spaces.  Operations are performed
in the order they appear from left to right.
.SS Absolute Mode
Absolute mode lets you use octal notation
to set each bit in the permission code.  The \*Lchmod\*O command
sets the permissions to the \*Vpermission_code\*O you provide.
The \*Vpermission_code\*O is constructed by combining (the logical OR of) the
following values:
.VL 4m
.LI "\*L4000\*O"
Sets user ID on execution.
.LI "\*L2000\*O"
Sets group ID on execution.
.LI "\*L1000\*O"
Sets sticky bit (see \*Lchmod\*O(2)):
.ML
.LI
Retains memory image after execution (executable file).
.LI
Restricts file removal (directory).
.LE
.LI "\*L0400\*O"
Permits read by owner.
.LI "\*L0200\*O"
Permits write by owner.
.LI "\*L0100\*O"
Permits execute or search by owner.
.LI "\*L0040\*O"
Permits read by group.
.LI "\*L0020\*O"
Permits write by group.
.LI "\*L0010\*O"
Permits execute or search by group.
.LI "\*L0004\*O"
Permits read by others.
.LI "\*L0002\*O"
Permits write by others.
.LI "\*L0001\*O"
Permits execute or search by others.
.LE
.\" Begin Digital-specific information
.\" Adding Environment Note
.SS "System V Compatibility"
The root of the directory tree that contains the commands modified
for SVID2 compliance is specified in the file \*L/etc/svid2_path\*O. You
can use \*L/etc/svid2_profile\*O as the basis for, or to include
in, your \*L.profile\*O.  The file \*L/etc/svid2_profile\*O reads
\*L/etc/svid2_path\*O and
sets the first entries in the \*LPATH\*O environment variable so that
the modified SVID2 commands are found first.
.PP
The SVID2 compliant version of the \*Lchmod\*O command
ignores the \*Lumask\*O value if
\*Vwho\*O is not specified
in the symbolic mode of the command
(\*Lchmod\*O [\*Vwho\*O] \*Voperation\*O \*Vpermission\*O).
In other words, if you omit \*Vwho\*O
from the \*Lchmod\*O command line, the version of the command that is compliant
with the SVID2 standard behaves exactly as if you specified the character
\*La\*O as the value for \*Vwho\*O.  The version of the \*Lchmod\*O
command that is SVID2 compliant
also supports equivalents in absolute mode for the
\*Ls\*O permission in symbolic mode.  In absolute mode,
setting the bits 04000 represents set-user-ID
and setting the bits 02000 represents set-group-ID.
.\" End Digital-specific information
.SH FLAGS
.PP
.VL 4m
.LI "\*L\-f\*O"
Does not report an error if \*Lchmod\*O fails to change the mode on a file.
.LI "\*L\-R\*O"
Causes \*Lchmod\*O to recursively
descend its directory arguments, setting the mode for each file as
described in the sections \*LSymbolic Mode\*O and \*LAbsolute Mode\*O.
When symbolic links are encountered, their mode is
not changed and they are not traversed.
.LE
.SH EXAMPLES
.PP
.AL
.LI
To add a type of permission to several files, enter:
.iS
chmod  g+w  chap1 chap2
\*O\c
.iE
.IP
This adds write permission for group members
to the files \*Lchap1\*O and \*Lchap2\*O.
.LI
To make several permission changes at once, enter:
.iS
chmod  go\-w+x  mydir
\*O\c
.iE
.IP
This denies group members and others the permission to create or
delete files in \*Lmydir\*O (\*Lgo\-w\*O).  It allows them to
search \*Lmydir\*O or use it in a pathname (\*Lgo+x\*O).
This is equivalent to the following command sequence:
.iS
chmod  g\-w  mydir
chmod  o\-w  mydir
chmod  g+x  mydir
chmod  o+x  mydir
\*O\c
.iE
.LI
To permit only the owner to use a shell procedure as a command, enter:
.iS
chmod  u=rwx,go=  cmd
\*O\c
.iE
.IP
This gives read, write, and execute permission to the user who owns
the file (\*Lu=rwx\*O).  It also denies the group and others the
permission to access \*Lcmd\*O in any way (\*Lgo=\*O).
.IP
If you have permission to execute the \*Lcmd\*O shell command file,
you can run it by entering:
.iS
cmd
\*O\c
.iE
.IP
or
.iS
\&./cmd
\*O\c
.iE
.LI
To use set-ID modes, enter:
.iS
chmod  ug+s  cmd
\*O\c
.iE
.IP
When \*Lcmd\*O is executed, this causes the effective user and
group IDs to be set to those that own the file \*Lcmd\*O.  Only the
effective IDs associated with the subprocess that runs \*Lcmd\*O
are changed.  The effective IDs of the shell session remain unchanged.
.IP
This feature allows you to permit restricted access to important
files.  Suppose that the file \*Lcmd\*O has the set-user-ID mode
enabled and is owned by a user called \*Ldbms\*O.  Although \*Ldbms\*O
is not actually a person, it might be associated with a database
management system.  The user \*Lbetty\*O does not have permission
to access any of \*Ldbms\*O's data files.  However, she does
have permission to execute \*Lcmd\*O.  When she does so, her
effective user ID is temporarily changed to \*Ldbms\*O, so that the
\*Lcmd\*O program can access the data files owned by \*Ldbms\*O.
.IP
This way \*Lbetty\*O can use \*Lcmd\*O to access the data
files, but she cannot accidentally damage them with the standard shell
commands.
.LI
To use the absolute mode form of the \*Lchmod\*O command, enter:
.iS
chmod  644  text
\*O\c
.iE
.IP
This sets read and write permission for the owner,
and it sets read-only mode for the group and all others.
.LE
.SH RELATED INFORMATION
.PP
Commands:  \*Lchgrp\*O(1), \*Lchown\*O(1), \*Lcsh\*O(1), \*Lksh\*O(1),
\*Lls\*O(1), \*Lsh\*O(1).
.PP
Functions:  \*Lchown\*O(2), \*Lchmod\*O(2), \*Lstat\*O(2), \*Lumask\*O(2).
.EQ
delim off
.EN
