.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: tsort.1,v $ $Revision: 3.2.4.2 $ (DEC) $Date: 1994/01/19 19:40:12 $
.\"
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.TH tsort 1
.SH NAME
.PP
\*Ltsort\*O \- Sorts an unordered list of ordered pairs (topological sort)
.SH SYNOPSIS
.PP
.sS
\*Ltsort\*O
\*O[\*Vfile\*O]
.sE
.SH DESCRIPTION
.PP
.iX "tsort command"
.iX "sorting" "ordered pairs"
.iX "sorting" "topological"
.iX "ordered pairs" "sorting"
.iX "topological sorting"
.iX "sorting" "unordered lists of ordered pairs"
The \*Ltsort\*O command reads from \*Vfile\*O or standard
input an unordered list of ordered pairs, builds an ordered
list, and writes it to standard output. For creating a subroutine
library, do not use \*Ltsort\*O; use the following command in its
place:
.iS
% ar -ts \*Vfile\*O.a
.iE
.PP
The input file should contain pairs of nonempty strings
separated by spaces.  Pairs of different items indicate a relative
order.  Pairs of identical items indicate presence, but no relative
order.  You can use \*Ltsort\*O to sort the output of the \*Llorder\*O command.
.PP
If \*Vfile\*O contains an odd number
of fields, \*Ltsort\*O writes the error
message \*Ctsorti odd number of data fields encountered\*O.
.SH EXAMPLES
.PP
To create a subroutine library, enter:
.iS
lorder charin.o scanfld.o scan.o scanln.o
	| tsort | xargs ar qv libsubs.a
\*O\c
.iE
.PP
(Enter the command entirely on one line, not on two lines as shown above.)
.PP
This creates a subroutine library named \*Llibsubs.a\*O that
contains \*Lcharin.o\*O, \*Lscanfld.o\*O, \*Lscan.o\*O,
and \*Lscanln.o\*O.  The ordering of the object modules in the
library is important.  The \*Lld\*O command requires each module
to precede all the other modules that it calls or references.
The \*Llorder\*O and \*Ltsort\*O commands together
add the subroutines to the library in the proper order.
.PP
Suppose that \*Lscan.o\*O calls \*Lscanfld.o\*O and
\*Lscanln.o\*O.  \*Lscanfld.o\*O also calls
\*Lcharin.o\*O.  First, the \*Llorder\*O command creates a
list of pairs that shows these dependencies:
.oS
charin.o charin.o
scanfld.o scanfld.o
scan.o scan.o
scanln.o scanln.o
scanfld.o charin.o
scanln.o charin.o
scan.o scanfld.o
\*O\c
.oE
.PP
Next, the \*L|\*O (vertical bar) sends this list to the
\*Ltsort\*O command, which converts it into the ordering you need:
.oS
scan.o
scanfld.o
scanln.o
charin.o
\*O\c
.oE
.PP
Note that each module precedes the module it calls.
\*Lcharin.o\*O, which does not call another module, is last.
.PP
The second \*L|\*O (vertical bar) then sends this list to
\*Lxargs\*O, which constructs and runs the following \*Lar\*O command:
.iS
ar qv libsubs.a scan.o scanfld.o scanln.o charin.o
\*O\c
.iE
.PP
This \*Lar\*O command creates the properly ordered library.
.SH RELATED INFORMATION
.PP
Commands:  \*Lar\*O(1), \*Llorder\*O(1), \*Lxargs\*O(1).
.\" .PP 
.\" The \*Las\*O, \*Lgcc\*O (\*Lcc\*O), \*Lgdb\*O, and \*Lld\*O
.\" commands may be available on your system, but are not provided with OSF/1.
.EQ
delim off
.EN
