.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: termios.4,v $ $Revision: 3.2.7.3 $ (DEC) $Date: 1993/12/15 19:32:57 $
.\" 
...\"
...\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\"
...\"
...\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\"
.TH termios 4
.SH NAME
\*Ltermios.h\*O \- Defines the structure of the \*Ltermios\*O file, which provides the terminal interface for POSIX compatibility.
.SH "DESCRIPTION"
.PP
.iX "termios file"
.iX "files" "termios"
.iX "terminal interface"
.iX "interface for terminals"
The \*L/usr/include/termios.h\*O header file is used to obtain and modify
attributes required by the terminal driver.  These attributes control input and
output processing.  The definition values and structure in the
\*L/usr/include/termios.h\*O file are required for P1003.1 POSIX compliance.
.PP
The primary mechanism for obtaining and setting terminal driver parameters
is through the following POSIX functions:
.ML
.LI
\*Ltcgetattr\*O()
.LI
\*Ltcsetattr\*O()
.LI
\*Lcfgetispeed\*O()
.LI
\*Lcfgetospeed\*O()
.LI
\*Lcfsetospeed\*O()
.LI
\*Lcfsetispeed\*O()
.LE
.PP
Optionally the
\*Ltermios\*O values can be obtained or set using the
.\" Changed ttys(4) to tty(7) in following line. QAR 16441. LW.
\*Ltermios\*O ioctls.  See the \*Ltty\*O(7) reference page.
For compatibility the system supports BSD and System V ioctls,
but they are internally translated into \*Ltermios\*O ioctls.
.\"
.\"
.\"The \*L/usr/include/termios.h\*O header file contains information
.\"used by system calls that apply to terminal files. The definitions,
.\"values, and structure in this file are required for P1003.1 POSIX compatibility.
.\".\"with the Institute of Electrical and Electronics Engineers (IEEE)
.\".\"P1003.1 Portable Operating System Interface for Computer Environments
.\".\"(POSIX) standard.
.\".PP
.\"The \*Ltermio.h\*O
.\"header file contains general terminal interface information.
.\"The \*Ltermio\*O structure in the \*Ltermio.h\*O
.\"header file defines the basic input, output, control, and line discipline
.\"modes. If a calling program requires POSIX compatibility, the system implements
.\"the \*Ltermios\*O structure and additional POSIX control packet
.\"information defined in the \*Ltermios.h\*O header file.
.\"Window and terminal size operations use the
.\"\(LI\*Lwinsize\(LI\*O structure, which
.\"is defined in the \*Lioctl.h\*O header file.  
.PP
The \*Ltermios\*O
structure in the <\*Ltermios.h\*O> header file contains
the following fields:
.VL
.LI "\*Lc_iflag\*O"
Describes the basic terminal input control.
.\" Begin Digital-specific information
.\" Commenting out the following sentence per Ron Menner.
.\" The initial input control value is all bits clear.
.\" End Digital-specific information
The possible input modes are:
.VL
.LI "IGNBRK"
Ignores the break condition. If set, the break condition
is not put on the input queue and is therefore not read by any process.
.LI "BRKINT"
Interrupts signal on the break condition. If set, the
break condition generates an interrupt signal and flushes both the
input and output queues.
.LI "IGNPAR"
Ignores characters with parity errors. If set, characters
with other framing and parity errors are ignored.
.LI "PARMRK"
Marks parity errors. If set, a character with a framing
or parity error that is not ignored is read as the 3-character
sequence: 0377, 0, \*Vx\*O, where the \*Vx\*O variable is the
data of the character received in error.
If the ISTRIP mode is not
set, then a valid character of 0377 is read as 0377, 0377 to avoid
ambiguity. If the PARMRK mode is clear, a framing or parity error
that is not ignored is read as the null character.
.LI "INPCK"
Enables input parity checking. If set, input parity
checking is enabled. If clear, input parity checking is disabled.
This allows for output parity generation without input parity errors.
.LI "ISTRIP"
Strips characters. If set, valid input characters are
first stripped to 7 bits; otherwise all 8 bits are processed.
.LI "INLCR"
Maps new-line character (NL) to carriage return (CR)
on input. If set, a received NL character is translated into a CR
character.
.LI "IGNCR"
Ignores CR character. If set, a received CR character
is ignored (not read).
.LI "ICRNL"
Maps CR character to NL character on input. If set,
a received CR character is translated into a NL character.
.LI "IUCLC"
Maps uppercase to lowercase on input. If set, a received
uppercase, alphabetic character is translated into the corresponding
lowercase character.
.LI "IXON"
Enables start and stop output control. If set, a received
STOP character suspends output, and a received START character restarts
output. The START and STOP characters perform flow control functions
but are not read.
.LI "IXANY"
Enables any character to restart output. If set, any
input character restarts output that was suspended.
.LI "IXOFF"
Enables start and stop input control. If set, the system
transmits a STOP character when the input queue is nearly full and
a START character when enough input has been read that the queue is
nearly empty again.
.LI "IMAXBEL"
Echoes the ASCII BEL character if the input stream
overflows. Further input is not stored, but any input received  prior to the
overflow condition is retained. If clear, the BEL character is not echoed,
and the input in the input queue is discarded if the input stream
overflows.
.LE
.LI "\*Lc_oflag\*O"
Specifies how the system treats output.
.\" Begin Digital-specific information
.\" Commenting out the following sentence per Ron Menner.
.\" The initial output control value is all bits clear.
.\" End Digital-specific information
The possible output modes are:
.VL
.LI "OPOST"
Postprocesses output. If set, output characters
are processed as indicated by the remaining flags; otherwise, characters
are transmitted without change.
.LI "OLCUC"
Maps lowercase to uppercase on output. If set, a lowercase
alphabetic character is transmitted as the corresponding uppercase
character. This function is often used in conjunction with the IUCLC
input mode.
.LI "ONLCR"
Maps NL to CR-NL on output. If set, the NL character
is transmitted as the CR\(hyNL character pair.
.LI "OCRNL"
Maps CR to NL on output. If set, the CR character is
transmitted as the NL character.
.LI "ONOCR"
Indicates no CR output at column 0. If set, no CR character
is transmitted at column 0 (first position).
.LI "ONLRET"
NL performs CR function. If set, the NL character is
assumed to do the carriage return function. The column pointer is
set to a value of 0 and the delay specified for carriage return is
used. Otherwise the NL character is assumed to do the line feed function
only; the column pointer remains unchanged. The column pointer is
also set to a value of 0 if the CR character is actually transmitted.
.IP
The delay bits specify how long a transmission stops to allow
for mechanical or other movement when certain characters are sent
to the terminal. The actual delays depend on line speed and system
load.
.LI "OFILL"
Uses fill characters for delay. If set, fill characters
are transmitted for a delay instead of a timed delay. This is useful
for high baud rate terminals that need only a minimal delay.
.LI "OFDEL"
Sets fill characters to the DEL value. If set, the fill
character is DEL. If this flag is clear, the fill character is null.
.LI "NLDLY"
Selects the newline character delays. This is a
mask to use before comparing to NL0 and NL1.
.VL
.LI "ONL0"
Specifies no delay.
.LI "NL1"
Specifies one delay of approximately 0.10 seconds. If
ONLRET is set, the carriage return delays are used instead of the
newline delays. If OFILL is set, two fill characters are transmitted.
.LE
.LI "CRDLY"
Selects the carriage return delays. This is a mask to
use before comparing to CR0, CR1, CR2, and CR3.
.VL
.LI "CR0"
Specifies no delay.
.LI "CR1"
Specifies that the delay is dependent on the current column
position. If OFILL is set, this delay transmits two fill characters.
.LI "CR2"
Specifies one delay of approximately 0.10 seconds. If
OFILL is set, this delay transmits four fill characters.
.LI "CR3"
Specifies one delay of approximately 0.15 seconds.
.LE
.LI "TABDLY"
Selects the horizontal tab delays. This is a
mask to use before comparing to TAB0, TAB1, TAB2, and TAB3. If OFILL
is set, any of these delays transmit two fill characters.
.VL
.LI "TAB0"
Specifies no delay.
.LI "TAB1"
Specifies that the delay is dependent on the current
column position. If OFILL is set, two fill characters are transmitted.
.LI "TAB2"
Specifies one delay of approximately 0.10 seconds.
.LI "TAB3"
Specifies that tabs are to be expanded into spaces.
.LE
.LI "BSDLY"
Selects the backspace delays. This is a mask to use
before comparing to BS0 and BS1.
.VL
.LI "BS0"
Specifies no delay.
.LI "BS1"
Specifies one delay of approximately 0.05 seconds. If
OFILL is set, this delay transmits one fill character.
.LE
.LI "VTDLY"
Selects the vertical\(hytab delays. This is a mask
to use before comparing to VT0 and VT1.
.VL
.LI "VT0"
Specifies no delay.
.LI "VT1"
Specifies one delay of approximately 2 seconds.
.LE
.LI "FFDLY"
Selects the formfeed delays. This is a mask to
use before comparing to FF0 and FF1.
.VL
.LI "FF0"
Specifies no delay.
.LI "FF1"
Specifies one delay of approximately 2 seconds.
.LE
.LE
.LI "\*Lc_cflag\*O"
Describes the hardware control of the terminal. In
addition to the basic control modes, this field uses the following
control characters:
.VL
.\".LI "CBAUD"
.\"Specifies baud rate. These bits specify the baud rate
.\"for a connection. For any particular hardware, impossible speed changes
.\"are ignored.
.LI "CSIZE"
Specifies the character size. These bits specify the
character size in bits for both transmit and receive operations. This
size does not include the parity bit, if any.
.VL
.LI "CS5"
5 bits.
.LI "CS6"
6 bits.
.LI "CS7"
7 bits.
.LI "CS8"
8 bits.
.LE
.LI "CSTOPB"
Specifies number of stop bits. If set, 2 stop bits
are sent; otherwise, only 1 stop bit is sent. Higher baud rates require
2 stop bits. (At 110 baud, for example, 2 stop bits are required.)
.LI "CREAD"
Enables receiver.  If set, the receiver is enabled.
Otherwise, characters are not received.
.LI "PARENB"
Enables parity. If set, parity generation and detection
is enabled and a parity bit is added to each character.
.LI "PARODD"
Specifies odd parity. If parity is enabled, this specifies
odd parity. If clear, even parity is used.
.LI "HUPCL"
Hangs up on last close. If set, the line is disconnected
when the last process closes the line or when the process terminates
(when the `data terminal ready' signal drops).
.LI "CLOCAL"
Specifies a local line. If set, the line is assumed
to have a local, direct connection with no modem control. If clear,
modem control (dialup) is assumed.
.\".LI "CIBAUD"
.\"Specifies the input baud rate if it is different than
.\"the output rate.
.\".LI "PAREXT"
.\"Specifies extended parity for mark and space parity.
.\"j.IP
.\" Begin Digital-specific information
.\" Changed B300 --> B9600; 'CREAD, and HUPCL' --> 'and CREAD.' per Ron Menner.
The initial hardware control value after an open is CS8
and CREAD.
.\" End Digital-specific information
.LE
.LI "\*Lc_lflag\*O"
Controls various terminal functions.
.\" Begin Digital-specific information
.\" Commenting out the following sentence per Ron Menner.
.\" The initial value after an open is all bits clear.
.\" End Digital-specific information.
In addition to the basic modes, this
field uses the following mask name symbols:
.VL
.LI "ISIG"
Enables signals. If set, each input character is checked
against the INTR and QUIT special control characters. If a character
matches one of these control characters, the function associated with
that character is performed. If the ISIG function is clear, checking
is not done.
.LI "ICANON"
Enables canonical input. If set, turns on canonical
processing, which enables the erase and kill edit functions as well
as the assembly of input characters into lines delimited by NL, EOF,
and EOL.
.IP
If the ICANON function is clear, read requests are satisfied
directly from the input queue. In this case, a read request is not
satisfied until one of the following conditions is met:  a) the minimum
number of characters specified by MIN are received; or b) the timeout
value specified by TIME has expired since the last character was received.
This allows bursts of input to be read, while still allowing single character
input.
.\" Begin Digital-specific information CORRECTION
.\" Changed 'in the position for EOF and EOL characters,' to
.\" 'in the VMIN and VTIME positions,' per Ron Menner.
The MIN and TIME values are stored in the VMIN and VTIME positions,
.\" End Digital-specific information CORRECTION
respectively. The time value represents
tenths of seconds.
.LI "XCASE"
Enables canonical uppercase and lowercase presentation.
If set along with the ICANON function, an uppercase letter (or the
uppercase letter translated to lowercase by the IUCLC input mode)
is accepted on input by preceding it with a \\ (backslash) character.
The output is then preceded by a backslash character.
.LI "ECHO"
Enables echo. If set, characters are displayed on the
terminal screen as they are received.
.LI "ECHOE"
Echoes erase character as BS-SP-BS. If the ECHO and
ECHOE functions are both set and ECHOPRT is clear, the erase character
is implemented as a backspace, a space, and then another backspace
(ASCII BS-SP-BS). This clears the last character from the screen.
If ECHOE is set, but ECHO is clear, the erase character is implemented
as ASCII SP-BS.
.LI "ECHOK"
Echoes NL after kill. If ECHOK is set and ECHOKE is
clear, a newline function is performed to clear the line
after a KILL character is received. This emphasizes that the line
is deleted. Note that an escape character preceding the ERASE or KILL
character removes any special function.
.LI "ECHONL"
Echoes NL. If ECHONL is set, the line is cleared when
a newline function is performed whether or not the ECHO function
is set. This is useful for terminals that are set to local echo (also
referred to as half-duplex). Unless an escape character precedes
an EOF, the EOF character is not displayed. Because the ASCII EOT
character is the default end-of-file character, this prevents
terminals that respond to the EOT character from hanging up.
.LI "NOFLSH"
Disables queue flushing. If set, the normal flushing
of the input and output queues associated with the quit and interrupt
characters is not done.
.IP
The ICANON, XCASE, ECHO, ECHOE, ECHOK, ECHONL, and NOFLSH special
input functions are possible only if the ISIG function is set. These
functions can be disabled individually by changing the value of the
control character to an unlikely or impossible value (for example,
0377 octal or 0xFF)
.LI "ECHOCTL"
Echoes control characters as ^\*VX\*O, where the \*VX\*O
variable is the character given by adding 100 octal to the code
of the control character. The ASCII DEL character is echoed as ^?
and the ASCII TAB, NL, and START characters are not echoed.
.IP
Unless
an escape character precedes an EOF, the EOF character is not displayed.
Because the ASCII EOT character is the default End-of-File
character, this mask prevents terminals that respond to the EOT character
from hanging up.
.LI "ECHOPRT"
Echoes the first ERASE and WERASE character in a sequence
as a \\ (backslash), and then erases the characters. Subsequent ERASE
and WERASE characters echo the characters being erased (in reverse
order).
.LI "ECHOKE"
Echoes the kill character by erasing from the screen
each character on the line.
.LI "FLUSHO"
Flushes the output. When this bit is set by typing
the FLUSH character, data written to the terminal is discarded. A
terminal can cancel the effect of typing the FLUSH character by clearing
this bit.
.LI "PENDIN"
Reprints any input that has not yet been read when
the next character arrives as input.
.LI "IEXTEN"
Enables extended (implementation-defined) functions
to be recognized from the input data. If this bit is clear,
implementation-defined functions are not recognized, and the
corresponding input characters are processed as described for
ICANON, ISIG, IXON, and IXOFF.
.LI "TOSTOP"
Sends a SIGTTOU signal when a process in a
background process group tries to write to its controlling terminal.
The SIGTTOU signal stops the members of the process group.
If job control is not supported, this symbol is ignored.
.LE
.LI "\*Lc_cc\*O"
Specifies an array that defines the special
control characters. The relative positions and initial values for
each function are:
.VL
.LI "VINTR"
Indexes the INTR control character (Ctrl-Backspace),
which sends a SIGINT signal to stop all processes controlled
by this terminal.
.LI "VQUIT"
Indexes the QUIT control character (Ctrl-v or Ctrl-|),
which sends a SIGQUIT signal to stop all processes controlled
by this terminal and writes a \*Lcore\*O image file into the current
working directory.
.LI "VERASE"
Indexes the ERASE control character (Backspace), which
erases the preceding character. The ERASE character does not erase
beyond the beginning of the line (delimited by a NL, EOL, EOF, or
EOL2 character).
.LI "VKILL"
Indexes the KILL control character (Ctrl-u), which deletes
the entire line (delimited by a NL, EOL, EOF, or EOL2 character).
.LI "VEOF"
Indexes the EOF control character (Ctrl-d), which can
be used at the terminal to generate an end-of-file. When this
character is received, all characters waiting to be read are immediately
passed to the program without waiting for a new line, and the EOF
is discarded. If the EOF is at the beginning of a line (no characters
are waiting), zero characters are passed back, which is the standard
End-of-File.
.LI "VEOL"
Indexes the EOL control character (Ctrl-@ or ASCII null),
which is an additional line delimiter that is not normally used.
.LI "VEOL2"
Indexes the EOL2 control character (Ctrl-@ or ASCII
null), which is an additional line delimiter that is not normally
used.
.LI "VSTART"
Indexes the START control character (Ctrl-q), which
resumes output that has been suspended by a STOP character. START
characters are ignored if the output is not suspended.
.LI "VSUSP"
Indexes the SUSP control character (Ctrl-z), which causes
a SIGTSTP signal to be sent to all foreground processes controlled
by this terminal. This character is recognized during input if the
ISIG flag is enabled. If job control is not supported, this character
is ignored.
.LI "VDSUSP"
Indexes the DSUSP control character (Ctrl-y), which
causes a SIGTSTP signal to be sent to all foreground processes
controlled by this terminal. This character is recognized when the
process attempts to read the DSUSP character. If job control is not
supported, this character is ignored.
.LI "VSTOP"
Indexes the STOP control character (Ctrl-s), which can
be used to temporarily suspend output. This character is recognized
during both input and output if the IXOFF (input control) or IXON (output
control) flag is set.
.LI "VREPRINT"
Indexes the REPRINT control character (Ctrl-r), which
reprints all characters that are preceded by a NL character and that
have not been read.
.\" Begin Digital-specific information CORRECTION
.\" Changed to "VDISCARD" per QAR 9420."
.LI "VDISCARD"
.\" End Digital-specific information CORRECTION
Indexes the DISCARD control character (Ctrl-o), which
causes all output to be discarded until another DISCARD character
is typed, more input is received, or the condition is cleared by a
program.
.LI "VWERASE"
Indexes the WERASE control character (Ctrl-w), which
erases the preceding word. The WERASE character does not erase beyond
the beginning of the line (delimited by a NL, EOL, EOF, or EOL2 character).
.LI "VLNEXT"
Indexes the LNEXT (literal next) control character
(Ctrl-v), which causes the special meaning of the next character to
be ignored, so that characters can be input without being interpreted
by the system.
.IP
The character values for INTR, QUIT, SWTCH, ERASE, KILL, EOF, and EOL
can be changed. The ERASE, KILL, and EOF characters can also be escaped
(preceded with a backslash) so that no special processing is done.
.LI "VMIN"
Indexes the minimum read value.  This value is used for noncanonical
processing.  See the previous description of the ICANON flag.
.LI "VTIME"
Indexes the time value.  This value is used for noncanonical processing.
See the previous description of the ICANON flag.
.LE
.LI "\*Lc_ispeed\*O"
Specifies the input baud rate.
.sp
The default input baud rate is 9600.  However, the
input baud rate can be specified to be one of the following:
.VL
.LI "B0"
Hangs up. The zero baud rate is used to hang up the connection.
If B0 is specified, the `data terminal ready' signal is not asserted.
Normally, this disconnects the line.
.LI "B50"
50 baud.
.LI "B75"
75 baud.
.LI "B110"
110 baud.
.LI "B134"
134.5 baud.
.LI "B150"
150 baud.
.LI "B200"
200 baud.
.LI "B300"
300 baud.
.LI "B600"
600 baud.
.LI "B600"
600 baud.
.LI "B1200"
1200 baud.
.LI "B1800"
1800 baud.
.LI "B2400"
2400 baud.
.LI "B4800"
4800 baud.
.LI "B9600"
9600 baud.
.LI "B19200"
19200 baud.
.LI "B38400"
38400 baud.
.LI "EXTA"
External A.
.LI "EXTB"
External B.
.LE
.LI "\*Lc_ospeed\*O"
Specifies the output baud rate.
.sp
The default output baud rate is 9600.  However, the
possible output baud rate values are the same as
for the input baud rate values listed above.
.LE
.PP
The following values for the \*Voptional-actions\*O parameter
of the \*Ltcsetattr(\|)\*O function are also defined in the \*Ltermios.h\*O
header file:
.VL
.LI "TCSANOW"
Immediately sets the parameters associated with the
terminal from the referenced \*Ltermios\*O structure.
.LI "TCSADRAIN"
Waits until all output written to the object file
has been transmitted before setting the terminal parameters from
the \*Ltermios\*O structure.
.br
.ne 9P
.LI "TCSAFLUSH"
Waits until all output written to the object file
has been transmitted and all input received but not read has been
discarded before setting the terminal parameters from the \*Ltermios\*O
structure.
.LE
.PP
The following values for the \*Vqueue-selector\*O parameter
of the \*Ltcflush(\|)\*O function are also defined in this header
file:
.VL
.LI "TCIFLUSH"
Flushes data that is received but not read.
.LI "TCOFLUSH"
Flushes data that is written but not transmitted.
.LI "TCIOFLUSH"
Flushes both data that is received but not read
and data that is written but not transmitted.
.LE
.PP
The following values for the \*Vaction\*O parameter of the \*Ltcflow(\|)\*O
system call are also defined in the \*Ltermios.h\*O header
file:
.VL
.LI "TCOOFF"
Suspends the output of data by the object file named
in the \*Ltcflow(\|)\*O function.
.LI "TCOON"
Restarts data output that was suspended by the TCOOFF
parameter.
.LI "TCIOFF"
Transmits a stop character to stop data transmission
by the terminal device.
.LI "TCION"
Transmits a start character to start or restart data
transmission by the terminal device.
.LE
.SH FILES
.PP
.VL
.LI "\*L/usr/include/sys/termios.h\*O"
The path to the \*Ltermios.h\*O header file.
.LE
.SH "RELATED INFORMATION"
.PP
Files:
\*Ltty\*O(7).
.PP
Functions:
\*Lioctl\*O(2),
\*Lcfgetispeed\*O(3),
\*Lcfgetospeed\*O(3),
\*Lcfsetispeed\*O(3),
\*Lcfsetospeed\*O(3),
\*Ltcsetattr\*O(3),
\*Ltcgetattr\*O(3),
\*Ltcflow\*O(3),
\*Ltcflush\*O(3).
.PP
Commands:
\*Lcsh\*O(1),
\*Lsh\*O(1),
\*Lstty\*O(1),
\*Ltset\*O(1),
\*Lgetty\*O(8).
.EQ
delim off
.EN
