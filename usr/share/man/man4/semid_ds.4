.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: semid_ds.4,v $ $Revision: 3.2.5.2 $ (DEC) $Date: 1993/12/21 15:39:15 $
.\" 
...\" 
...\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\" 
...\"
...\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
...\" ALL RIGHTS RESERVED
...\"
.TH semid_ds 4
.iX "semid_ds"
.SH NAME
\*Lsemid_ds\*O \- Defines a semaphore set
.SH SYNOPSIS 
.sS
.PP 
\*L#include <sys/sem.h>
.PP 
\*Lstruct semid_ds\*O{\*L
.nL
	\*Lstruct ipc_perm sem_perm\*O;\*L
.nL
	\*Lstruct sem *sem_base\*O;\*L
.nL
	\*Lu_short sem_nsems\*O;\*L
.nL
	\*Ltime_t sem_otime\*O;\*L
.nL
	\*Ltime_t sem_ctime\*O;\*L
.nL
};
.sE 
.SH "DESCRIPTION"
.PP 
The
\*Lsemid_ds\*O
structure defines a semaphore set associated with a semaphore ID.
There is one semaphore set per semaphore ID.
.PP 
A semaphore set is
implemented as an array of
\*Lsem_nsems\*O
semaphores, with
\*Lsem_base\*O
pointing to the first semaphore in the set.
.PP 
The IPC permissions for a semaphore set are implemented in a
separate, but associated,
\*Lipc_perm\*O
structure.
.PP 
A semaphore set is created indirectly via the
\*Lsemget()\*O
call.  If
\*Lsemget()\*O
is called with a non-existent semaphore ID, the kernel allocates a
new
\*Lsemid_ds\*O
structure, initializes it, and returns the semaphore ID that is to be
associated with the semaphore set.
.SH FIELDS
.PP 
.VL 
.LI "\*Lsem_perm\*O"
The
\*Lipc_perm\*O
structure that defines permissions for semaphore operations.  See NOTES.
.LI "\*Lsem_base\*O" 
A pointer to the first semaphore in the set.  Individual semaphores
are defined using the
\*Lsem\*O
structure.  See NOTES.
.LI "\*Lsem_nsems\*O" 
The number of semaphores in the set.  Each
semaphore in the set is referenced by a unique integer.  A
semaphore number is sometimes referred to as
\*Lsem_num\*O,
but this is not a field carried in any of the relevant data
structures.  Semaphore numbers run sequentially from zero to
\*Lsem_nsems\*O-1.
.LI "\*Lsem_otime\*O" 
The time of the last
\*Lsemop()\*O
operation on the set.
.LI "\*Lsem_ctime\*O" 
The time of the last
\*Lsemctl()\*O
operation that changed a semaphore in the set.
.LE 
.SH "NOTES"
.PP 
The
\*Lsem_perm\*O
field identifies the associated
\*Lipc_perm\*O
structure that defines the permissions for operations on the semaphore
set.  The
\*Lipc_perm\*O
structure (from the \*Lsys/ipc.h\*O header file) is shown here.
.sp
.rS
.... Ignore Bold in iS !!! 
\*Lstruct ipc_perm {
        ushort    uid;        /* owner's user id            */
        ushort    gid;        /* owner's group id           */
        ushort    cuid;       /* creator's user id          */
        ushort    cgid;       /* creator's group id         */
        ushort    mode;       /* access modes               */
        ushort    seq;        /* slot usage sequence number */
        key_t     key;        /* key                        */
};\*O
.rE
.PP 
The
\*Lmode\*O
field
is a 9-bit field that contains the permissions for semaphore
operations.  The first three bits identify owner permissions; the
second three bits identify group permissions; and the last three bits
identify other permissions.  In each group, the first bit indicates read
permission; the second bit indicates write permission; and the third bit
is not used.
.PP 
Individual semaphores are implemented with the
\*Lsem\*O
structure.  The
\*Lsem\*O
structure (from the \*Lsys/sem.h\*O header file) is shown here:
.sp
.rS
.... Ignore Bold in iS !!! 
\*Lstruct sem {
	u_short   semval;
	short     sempid;
	u_short   semncnt;
	u_short   semzcnt;
};\*O
.rE
.PP 
The
\*Lsem\*O
fields are defined as follows:
.VL 1i
.LI "\*Lsemval\*O"
A nonnegative integer that is the current value of the semaphore.
.LI "\*Lsempid\*O" 
The process ID of the last process to perform an operation on the semaphore.
.IP 
.ne 3i
.LI "\*Lsemncnt\*O" 
The number of processes that are currently suspended while waiting for
an operation to increment the current
\*Lsemval\*O
value.
.LI "\*Lsemzcnt\*O" 
The number of processes that are currently
suspended while waiting for
\*Lsemval\*O
to go to zero.
.LE 
.SH "RELATED INFORMATION"
.PP 
Functions:
\*Lsemctl\*O(2),
\*Lsemget\*O(2),
\*Lsemop\*O(2)
.EQ
delim off
.EN
