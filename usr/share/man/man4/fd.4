.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: fd.4,v $ $Revision: 1.1.2.4 $ (DEC) $Date: 1993/12/17 18:52:23 $
.\"
.TH fd 4
.SH NAME
.PP
\*Lfd\*O \- file descriptor files
.SH DESCRIPTION
.PP
The \*L/dev/fd\*O file system is a pseudo-file system
layered beneath the Virtual File System (VFS).  The
file descriptor files (\*Lfd*\*O) are those files that are accessible
.iX "file descriptor files"
.iX "fd
through file descriptors.  The file descriptors use the naming
convention \*L/dev/fd/0\*O, \*L/dev/fd/1\*O, \*L/dev/fd/2\*O
and so on up to any number.
.PP
To make the \*L/dev/fd\*O file system known to the operating
system, you must create the directory with the correct privileges,
then you must mount the file system.  The following steps describe
how to create the directory, mount the file system both manually
and automatically, and how to dismount the file system:
.AL
.LI
Create the directory using the \*Lmkdir\*O and \*Lchmod\*O
commands:
.oS
mkdir /dev/fd; chmod 777 /dev/fd
.oE
.LI
Mount the file system manually using the \*Lmount\*O command:
.oS
mount -t fdfs /dev/fd /dev/fd
.oE
.LI
Mount the file system automatically by editing either the
\*L/etc/fstab\*O file or the \*L/sbin/bcheckrc\*O file.
.IP
Add the following entry to the \*L/etc/fstab\*O file:
.oS
/dev/fd /dev/fd fdfs rw 0 0
.oE
This entry mounts the pseudodevice \*L/dev/fd\*O on the \*L/dev/fd\*O
directory with read/write privileges.  The file system type is
\*Lfdfs\*O and the zeros (0) in the remaining fields specify that
the file system is not be backed up nor can file system checks
be performed by the \*Lfsck\*O command as this is a virtual file
system.
.IP
Add the following entry to the \*L/sbin/bcheckrc\*O file:
.oS
#
# mount fdfs
#
echo 'Mounting /dev/fd filesystem'
/sbin/mount -a -v -t fdfs
.oE
Again, the \*L/dev/fd\*O file system should not be mounted in this manner if an
entire system is to be backed up starting from the \*Lroot\*O
directory.
.LI
Dismount the file system using the \*Lumount\*O command: :
.oS
umount /dev/fd
.oE
.LE
.SH RESTRICTIONS
.PP
The \*L/dev/fd\*O file descriptors should not be exported.
.SH EXAMPLES
.PP
The following example show how the \*Lopen\*O and \*Ldup\*O functions
have the same effect if file descriptor \*Vn\*O is opened:
.PP
.oS
fd = open("/dev/fd/\*Vn\*O", \*Vmode\*O);
.br
\*Lfd = dup(\*Vn\*O);
.oE
.PP
In the above example, the \*Lopen\*O function is equal to the \*Lcreat\*O
function and \*Vmode\*O is ignored.  Using the \*Ldup\*O function, subsequent
reads or writes on the \*Lfd\*O file descriptor files fail unless
the original file descriptor enables the operation.
.SH ERRORS
.PP
The following error condition exists:
.VL
.LI "[EBADF]"
The file descriptor is not valid.
.LE
.SH RELATED INFORMATION
.PP
Commands: \*Lchmod\*O(1), \*Lmkdir\*O(1), \*Lmount\*O(8).
.PP
Functions: \*Lcreat\*O(2), \*Ldup\*O(2), \*Lopen\*O(2).
.EQ
delim off
.EN
