.\" This manpage source uses rsml coding. 
.so /usr/share/lib/tmac/sml
.so /usr/share/lib/tmac/rsml
.\"
.\"
.\" *********************************************************************
.\" *                                                                   *
.\" *      Copyright (c) Digital Equipment Corporation, 1991, 1994      *
.\" *                                                                   *
.\" *                       All Rights Reserved.                        *
.\" *                                                                   *
.\" *********************************************************************
.\"
.\"
.\" HISTORY
.\"
.\" @(#)$RCSfile: msqid_ds.4,v $ $Revision: 3.2.2.2 $ (DEC) $Date: 1992/05/21 09:19:14 $
.\"
.\" 
.\" (c) Copyright 1991, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\" 
.\"
.\" Copyright (c) 1990, OPEN SOFTWARE FOUNDATION, INC.
.\" ALL RIGHTS RESERVED
.\"
.TH msqid_ds 4
.SH NAME
\*Lmsqid_ds\*O \- Defines a message queue
.SH SYNOPSIS 
.sS
\*L#include <sys/msg.h>
.sp .4v
\*Lstruct msqid_ds\*O{\*L
.nL
	\*Lstruct ipc_perm msg_perm\*O;\*L
.nL
	\*Lstruct msg *msg_first\*O;\*L
.nL
	\*Lstruct msg *msg_last\*O;\*L
.nL
	\*Lu_short msg_cbytes\*O;\*L
.nL
	\*Lu_short msg_qnum\*O;\*L
.nL
	\*Lu_short msg_qbytes\*O;\*L
.nL
	\*Lu_short msg_lspid\*O;\*L
.nL
	\*Lushort msg_lrpid\*O;\*L
.nL
	\*Ltime_t msg_stime\*O;\*L
.nL
	\*Ltime_t msg_rtime\*O;\*L
.nL
	\*Ltime_t msg_ctime\*O;\*L
.nL
};
.sE 
.SH "DESCRIPTION"
The
\*Lmsqid_ds\*O
structure defines a message queue associated with a message queue ID.
There is one queue per message queue ID.  Collectively, the queues are
stored as an array, with message queue IDs serving as an index into
the array.
.PP
A message queue is implemented as a linked list of messages, with
\*Lmsg_first\*O
amd
\*Lmsg_last\*O
pointing to the first and last messages on the queue.
.PP
The IPC permissions for the message queue are implemented in a
separate, but associated,
\*Lipc_perm\*O
structure.
.PP
A message queue is created indirectly via the
\*Lmsgget()\*O
call.  If
\*Lmsgget()\*O
is called with a non-existent message queue ID, the kernel allocates a
new
\*Lmsqid_ds\*O
structure, initializes it, and returns the message queue ID that is to be
associated with the message queue.
.PP
.SH FIELDS
.PP
.\"from TP 1i"  
.VL 1i
.LI "\*Lmsg_perm\*O"
The \*Lipc_perm\*O
structure that defines permissions for message operations.  See \*LNOTES\*V.
.\"from TP "  
.LI "\*Lmsg_first\*O" 
A pointer to the first message on the queue.
.\"from TP "  
.LI "\*Lmsg_last\*O" 
A pointer to the last message on the queue.
.\"from TP "  
.LI "\*Lmsg_cbytes\*O" 
The current number of bytes on the queue.
.\"from TP "  
.LI "\*Lmsg_qnum\*O" 
The number of messages currently on the queue.
.\"from TP "  
.LI "\*Lmsg_qbytes\*O" 
The maximum number of bytes allowed on the queue.
.\"from TP "  
.LI "\*Lmsg_lspid\*O" 
The process ID of the last process that called
\*Lmsgsnd()\*O for the queue.
.\"from TP "  
.LI "\*Lmsg_lrpid\*O" 
The process ID of the last process that called
\*Lmsgrcv()\*O for the queue.
.\"from TP "  
.LI "\*Lmsg_stime\*O" 
The time of the last
\*Lmsgsnd()\*O operation.
.\"from TP "  
.LI "\*Lmsg_rtime" 
The time of the last
\*Lmsgrcv()\*O operation.
.\"from TP "  
.LI "\*Lmsg_ctime\*O" 
The time of the last
\*Lmsgctl()\*O operation that changed a member of
the \*Lmsqid_ds\*O structure.
.LE 
.PP
.SH "NOTES"
.PP
The \*Vmsg_perm\*O field identifies the associated
\*Lipc_perm\*O
structure that defines the permissions for operations on the message
queue.  The \*Lipc_perm\*O
structure (from the \*Lsys/ipc.h\*O header file) is shown here.
.rS
\*Lstruct ipc_perm {
.nL
      ushort    uid;      /* owner's user id            */
.nL
      ushort    gid;      /* owner's group id           */
.nL
      ushort    cuid;     /* creator's user id          */
.nL
      ushort    cgid;     /* creator's group id         */
.nL
      ushort    mode;     /* access modes               */
.nL
      ushort    seq;      /* slot usage sequence number */
.nL
      key_t     key;      /* key                        */
.nL
};\*O
.rE
The
\*Lmode\*O
field
is a 9-bit field that contains the permissions for message
operations.  The first three bits identify owner permissions; the
second three bits identify group permissions; and the last three bits
identify other permissions.  In each group, the first bit indicates read
permission; the second bit indicates write permission; and the third bit
is not used.
.SH "RELATED INFORMATION"
Functions:
\*Lmsgctl\*O(2),
\*Lmsgget\*O(2),
\*Lmsgrcv\*O(2),
\*Lmsgsnd\*O(2)
.EQ
delim off
.EN
