/**/# 
/**/# *****************************************************************
/**/# *                                                               *
/**/# *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
/**/# *                                                               *
/**/# *   All Rights Reserved.  Unpublished rights  reserved  under   *
/**/# *   the copyright laws of the United States.                    *
/**/# *                                                               *
/**/# *   The software contained on this media  is  proprietary  to   *
/**/# *   and  embodies  the  confidential  technology  of  Digital   *
/**/# *   Equipment Corporation.  Possession, use,  duplication  or   *
/**/# *   dissemination of the software and media is authorized only  *
/**/# *   pursuant to a valid written license from Digital Equipment  *
/**/# *   Corporation.                                                *
/**/# *                                                               *
/**/# *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
/**/# *   by the U.S. Government is subject to restrictions  as  set  *
/**/# *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
/**/# *   or  in  FAR 52.227-19, as applicable.                       *
/**/# *                                                               *
/**/# *****************************************************************
/**/#
/**/# HISTORY
/**/# 
/**/# @(#)$RCSfile: Imakefile,v $ $Revision: 1.1.2.2 $ (DEC) $Date: 93/01/22 15:42:32 $
/**/# 

#define DoNormalLib NO
#define DoSharedLib YES
#define DoDebugLib DebugLibX
#define DoProfileLib NO
#include <Library.tmpl>

#define BuildLocalIM YES

#if BuildLocalIM
LIMSRCS = XLocalIM.c
LIMOBJS = XLocalIM.o
#endif

HEADERS = \
	XIMlibint.h \
	XIMproto.h \
	Xi18nint.h \
	Xlocaleint.h \
        wcharint.h \
        TextBody.c \
        TextEscBd.c \
        TextExtBd.c \
        TextPerBd.c


SRCS = \
	$(LIMSRCS) \
	ProtoFlt.c \
	XCnvCTToWC.c \
	XCnvMBToCT.c \
	XCnvToStr.c \
	XCnvWCToMB.c \
	XConnIM.c \
	XCrFntSet.c \
	XCrIC.c \
	XGetIMVal.c \
	XICFocus.c \
	XICGetVal.c \
	XICSetVal.c \
	XIMKeyBind.c \
	XIMProto.c \
	XIMQueue.c \
	XInitCT.c \
	XOpenIM.c \
	XParseCT.c \
	XlcAccess.c \
	XlcDefLd.c \
	XlcLoad.c \
	XmbDeGlyph.c \
	XmbPrpText.c \
	XmbText.c \
	XmbTextExt.c \
	XmbTextPer.c \
	XmbTextPrp.c \
	XwcDeGlyph.c \
	XwcPrpText.c \
	XwcText.c \
	XwcTextExt.c \
	XwcTextPer.c \
	XwcTextPrp.c 

OBJS = \
	$(LIMOBJS) \
	ProtoFlt.o \
	XCnvCTToWC.o \
	XCnvMBToCT.o \
	XCnvToStr.o \
	XCnvWCToMB.o \
	XConnIM.o \
	XCrFntSet.o \
	XCrIC.o \
	XGetIMVal.o \
	XICFocus.o \
	XICGetVal.o \
	XICSetVal.o \
	XIMKeyBind.o \
	XIMProto.o \
	XIMQueue.o \
	XInitCT.o \
	XOpenIM.o \
	XParseCT.o \
	XlcAccess.o \
	XlcDefLd.o \
	XlcLoad.o \
	XmbDeGlyph.o \
	XmbPrpText.o \
	XmbText.o \
	XmbTextExt.o \
	XmbTextPer.o \
	XmbTextPrp.o \
	XwcDeGlyph.o \
	XwcPrpText.o \
	XwcText.o \
	XwcTextExt.o \
	XwcTextPer.o \
	XwcTextPrp.o 

   EXTRA_INCLUDES=-I../X

LibraryObjectRule()

    CONN_DEFINES = ConnectionFlags
     NLS_DEFINES = -DXNLSPATHDEFAULT=\"$(NLSDIR)\"

SpecialLibObjectRule(XConnIM.o,$(ICONFIGFILES),$(CONN_DEFINES))
SpecialLibObjectRule(XlcLoad.o,$(ICONFIGFILES),$(NLS_DEFINES))
SpecialLibObjectRule(XLocalIM.o,$(ICONFIGFILES),$(NLS_DEFINES))

#if HasSharedLibraries
   SO_REQLIBS = $(DEPXLIB) $(DLLIB) -ldnet_stub -lc
#endif

#if DoSharedLib
   SO_REQLIBS = $(DEPXLIB) -lc
#if DoNormalLib
SharedLibraryTarget(Xsi,$(SOXSIREV),$(OBJS),shared,..)
#else
SharedLibraryTarget(Xsi,$(SOXSIREV),$(OBJS),.,.)
#endif
SharedLibraryDataTarget(Xsi,$(SOXSIREV),$(UNSHAREDOBJS))
InstallSharedLibrary(Xsi,$(SOXSIREV),$(USRSHLIBDIR))
InstallSharedLibraryData(Xsi,$(SOXSIREV),$(USRSHLIBDIR))
#endif
#if DoNormalLib
NormalLibraryTarget(Xsi,$(OBJS))
InstallLibrary(Xsi,$(USRLIBDIR))
#endif
#if DoProfileLib
ProfiledLibraryTarget(Xsi,$(OBJS))
InstallLibrary(Xsi_p,$(USRLIBDIR))
#endif
#if DoDebugLib
#if InstallStaticDebugLibraries
DebuggedLibraryTarget(Xsi,$(OBJS))
InstallLibrary(Xsi_d,$(DEBUGUSRLIBDIR))
#endif
#if DoSharedLib && InstallSharedDebugLibraries
SharedDebuggedLibraryTarget(Xsi,$(SOXSIREV),$(OBJS),debugged,..)
InstallNonExecFile(debugger/libXsi.so,$(DEBUGUSRLIBDIR))
#endif
#endif

LintLibraryTarget(Xsi,$(SRCS))
InstallLintLibrary(Xsi,$(LINTLIBDIR))

BuildIncludes($(HEADERS),Xsi,..)

InstallMultiple($(HEADERS),$(INCDIR)/Xsi)

DependTarget()

NormalLintTarget($(SRCS))

includes:: Locals

Locals:
	for i in $(SRCS) $(HEADERS); \
	do \
	ln -sf ../X/Xsi/$$i . ; \
	done
