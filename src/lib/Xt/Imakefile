XCOMM 
XCOMM *****************************************************************
XCOMM *                                                               *
XCOMM *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
XCOMM *                                                               *
XCOMM *   All Rights Reserved.  Unpublished rights  reserved  under   *
XCOMM *   the copyright laws of the United States.                    *
XCOMM *                                                               *
XCOMM *   The software contained on this media  is  proprietary  to   *
XCOMM *   and  embodies  the  confidential  technology  of  Digital   *
XCOMM *   Equipment Corporation.  Possession, use,  duplication  or   *
XCOMM *   dissemination of the software and media is authorized only  *
XCOMM *   pursuant to a valid written license from Digital Equipment  *
XCOMM *   Corporation.                                                *
XCOMM *                                                               *
XCOMM *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
XCOMM *   by the U.S. Government is subject to restrictions  as  set  *
XCOMM *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
XCOMM *   or  in  FAR 52.227-19, as applicable.                       *
XCOMM *                                                               *
XCOMM *****************************************************************
XCOMM
XCOMM HISTORY
XCOMM 
XCOMM $XConsortium: Imakefile,v 1.93 91/09/18 14:29:25 rws Exp $
#define DoNormalLib NormalLibXt
#define DoSharedLib SharedLibXt
#define DoDebugLib DebugLibXt
#define DoProfileLib ProfileLibXt
#include <Library.tmpl>

#define PassCDebugFlags 'CDEBUGFLAGS=$(CDEBUGFLAGS)'

#ifndef MotifBC
#define MotifBC NO
#endif

#ifdef RsArchitecture
REQUIREDLIBS = $(XLIBSRC)/libX11.a
#endif

/* config options */

XFILESEARCHPATHDEFAULT = XFileSearchPathDefault
/* don't place spaces at the beginning of these lines, hp bug */
XTERRORPREFIX = XtErrorPrefix
XTWARNINGPREFIX = XtWarningPrefix

#ifdef BuildDecX
 DEC_DEFINES = \
	-DSTRINGS_ALIGNED -DDEC_MOTIF_BUG_FIX -DDEC_MOTIF_EXTENSION \
	-DDEC_EXTENSION -DDEC_BUG_FIX -DI18N_BUG_FIX
 DECHEADERS = \
    DECWmHints.h \
    DECWmHintsP.h \
    XUICompat.h \
    DECwI18n.h \
    Descripu.h \
    I18N.h \
    I18nConverter.h 
 DECFILES = I18N.c I18N_EN.c I18N_EN_shared.c Getdechints.c Setdechints.c
 DECOBJ = I18N.o I18N_EN.o Getdechints.o Setdechints.o
 DECSOBJ = I18N.o I18N_EN_shared.o Getdechints.o Setdechints.o
#endif /* BuildDecX */

#if UnalignedReferencesAllowed
  ALIGN_DEFINES = -DUNALIGNED
#endif
#if DoSharedLib && defined(SharedAllocateLocalDefines)
#undef AllocateLocalDefines
#define AllocateLocalDefines SharedAllocateLocalDefines
#endif
        DEFINES = AllocateLocalDefines $(ALIGN_DEFINES) $(DEC_DEFINES)
     DB_DEFINES = -DERRORDB=\"$(LIBDIR)/XtErrorDB\" \
		  -DXTERROR_PREFIX=\"$(XTERRORPREFIX)\" \
		  -DXTWARNING_PREFIX=\"$(XTWARNINGPREFIX)\"
   SRCH_DEFINES = -DXFILESEARCHPATHDEFAULT=\"$(XFILESEARCHPATHDEFAULT)\"
#if Malloc0ReturnsNull
  ALLOC_DEFINES = -DMALLOC_0_RETURNS_NULL
#endif
#if MotifBC
     BC_DEFINES = -DMOTIFBC
#endif

   INSTALLFLAGS = $(INSTINCFLAGS)
       LINTLIBS = $(LINTXLIB)

HEADERS = \
	Composite.h \
	CompositeP.h \
	Constraint.h \
	ConstrainP.h \
	Core.h \
	CoreP.h \
	Intrinsic.h \
	IntrinsicP.h \
	Object.h \
	ObjectP.h \
	RectObj.h \
	RectObjP.h \
	Shell.h \
	ShellP.h \
	StringDefs.h \
	Vendor.h \
	VendorP.h $(DECHEADERS)

SRCS = \
	ActionHook.c \
	Alloc.c \
	ArgList.c \
	Callback.c \
	ClickTime.c \
	Composite.c \
	Constraint.c \
	Convert.c \
	Converters.c \
	Core.c \
	Create.c \
	Destroy.c \
	Display.c \
	EditresCom.c \
	Error.c \
	Event.c \
	EventUtil.c \
	Functions.c \
	GCManager.c \
	Geometry.c \
	GetActKey.c \
	GetResList.c \
	GetValues.c \
	Initialize.c \
	Intrinsic.c \
	Keyboard.c \
	Lower.c \
	Manage.c \
	NextEvent.c \
	Object.c \
	PassivGrab.c \
	Pointer.c \
	Popup.c \
	PopupCB.c \
	RectObj.c \
	Resources.c \
	Selection.c \
	SetSens.c \
	SetValues.c \
	SetWMCW.c \
	Shell.c \
	StringDefs.c \
	StringConverters.c \
	TMaction.c \
	TMgrab.c \
	TMkey.c \
	TMparse.c \
	TMprint.c \
	TMstate.c \
	VarCreate.c \
	VarGet.c \
	Varargs.c \
	Vendor.c \
	sharedlib.c $(DECFILES)

OBJS = \
	ActionHook.o \
	Alloc.o \
	ArgList.o \
	Callback.o \
	ClickTime.o \
	Composite.o \
	Constraint.o \
	Convert.o \
	Converters.o \
	Core.o \
	Create.o \
	Destroy.o \
	Display.o \
	EditresCom.o \
	Error.o \
	Event.o \
	EventUtil.o \
	Functions.o \
	GCManager.o \
	Geometry.o \
	GetActKey.o \
	GetResList.o \
	GetValues.o \
	Initialize.o \
	Intrinsic.o \
	Keyboard.o \
	Lower.o \
	Manage.o \
	NextEvent.o \
	Object.o \
	PassivGrab.o \
	Pointer.o \
	Popup.o \
	PopupCB.o \
	RectObj.o \
	Resources.o \
	Selection.o \
	SetSens.o \
	SetValues.o \
	SetWMCW.o \
	Shell.o \
	StringDefs.o \
	StringConverters.o \
	TMaction.o \
	TMgrab.o \
	TMkey.o \
	TMparse.o \
	TMprint.o \
	TMstate.o \
	VarCreate.o \
	VarGet.o \
	Varargs.o \
	Vendor.o 



#if SharedDataSeparation
UNSHAREDOBJS = StringDefs.o sharedlib.o
#else
UNSHAREDOBJS = sharedlib.o
#endif

LibraryObjectRule()

SpecialLibObjectRule(Intrinsic.o,$(ICONFIGFILES),$(SRCH_DEFINES))
SpecialLibObjectRule(Error.o,$(ICONFIGFILES),$(DB_DEFINES))
SpecialLibObjectRule(Alloc.o,NullParameter,$(ALLOC_DEFINES))
SpecialLibObjectRule(Converters.o,$(ICONFIGFILES),$(BC_DEFINES))
SpecialLibObjectRule(I18N_EN_shared.o,,-DMOTIF113_I18N_COMPAT)
#if DoSharedLib
SpecialObjectRule(sharedlib.o,,$(SHLIBDEF))
#endif

#if DoSharedLib
    SO_REQLIBS= $(DEPXLIB) -lc

libXt.so:: $(EXTENSIONSRC)/lib

ForceSubdirs($(EXTENSIONSRC)/lib)

#if DoNormalLib
SharedLibraryTarget(Xt,$(SOXTREV),$(OBJS) $(DECSOBJ),shared,..)
#else
SharedLibraryTarget(Xt,$(SOXTREV),$(OBJS) $(DECSOBJ),.,.)
#endif
SharedLibraryDataTarget(Xt,$(SOXTREV),$(UNSHAREDOBJS))
InstallSharedLibrary(Xt,$(SOXTREV),$(USRSHLIBDIR))
InstallSharedLibraryData(Xt,$(SOXTREV),$(USRSHLIBDIR))

#endif
#if DoNormalLib
NormalLibraryTarget(Xt,$(OBJS) $(DECOBJ))
InstallLibrary(Xt,$(USRLIBDIR))
#endif
#if ProfileLibXt
ProfiledLibraryTarget(Xt,$(OBJS) $(DECOBJ))
InstallLibrary(Xt_p,$(USRLIBDIR))
#endif
#if DebugLibXt
#if InstallStaticDebugLibraries
DebuggedLibraryTarget(Xt,$(OBJS) $(DECOBJ))
InstallLibrary(Xt_d,$(DEBUGUSRLIBDIR))
#endif
#if DoSharedLib && InstallSharedDebugLibraries
SharedDebuggedLibraryTarget(Xt,$(SOXTREV),$(OBJS) $(DECSOBJ),debugged,..)
InstallNonExecFile(debugger/libXt.so,$(DEBUGUSRLIBDIR))
#endif
#endif

LintLibraryTarget(Xt,$(SRCS))
InstallLintLibrary(Xt,$(LINTLIBDIR))

BuildIncludes($(HEADERS),.,.)
InstallMultiple($(HEADERS),$(INCDIR))

DependTarget()

NormalLintTarget($(SRCS))

includes:: Lower.c EditresCom.c I18N_EN_shared.c

Lower.c: ../Xmu/Lower.c
	$(RM) Lower.c
	$(LN) ../Xmu/Lower.c

EditresCom.c: ../Xmu/EditresCom.c
	$(RM) EditresCom.c
	$(LN) ../Xmu/EditresCom.c

I18N_EN_shared.c:: I18N_EN.c
	$(LN) I18N_EN.c I18N_EN_shared.c
