XCOMM 
XCOMM *****************************************************************
XCOMM *                                                               *
XCOMM *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
XCOMM *                                                               *
XCOMM *   All Rights Reserved.  Unpublished rights  reserved  under   *
XCOMM *   the copyright laws of the United States.                    *
XCOMM *                                                               *
XCOMM *   The software contained on this media  is  proprietary  to   *
XCOMM *   and  embodies  the  confidential  technology  of  Digital   *
XCOMM *   Equipment Corporation.  Possession, use,  duplication  or   *
XCOMM *   dissemination of the software and media is authorized only  *
XCOMM *   pursuant to a valid written license from Digital Equipment  *
XCOMM *   Corporation.                                                *
XCOMM *                                                               *
XCOMM *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
XCOMM *   by the U.S. Government is subject to restrictions  as  set  *
XCOMM *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
XCOMM *   or  in  FAR 52.227-19, as applicable.                       *
XCOMM *                                                               *
XCOMM *****************************************************************
XCOMM
XCOMM HISTORY
XCOMM 
XCOMM $XConsortium: Imakefile,v 1.19 91/09/18 14:28:52 rws Exp $
#define DoNormalLib NormalLibXdmcp
#define DoSharedLib SharedLibXdmcp
#define DoDebugLib DebugLibXdmcp
#define DoProfileLib ProfileLibXdmcp
#include <Library.tmpl>
#include <Server.tmpl>

XCOMM
XCOMM This library contains miscellaneous utility routines and is not part
XCOMM of the Xlib standard.
XCOMM

   INSTALLFLAGS = $(INSTINCFLAGS)

#if HasXdmAuth
AUTHDEFS = -DHASXDMAUTH
AUTHSRCS = Wrap.c Unwrap.c Wraphelp.c
AUTHOBJS = Wrap.o Unwrap.o Wraphelp.o
#endif

DEFINES = $(AUTHDEFS)

HEADERS = Xdmcp.h

SRCS = \
	A8Eq.c \
	AA8.c \
	AA16.c \
	AA32.c \
	AofA8.c \
	CA8.c \
	DA8.c \
	DA16.c \
	DA32.c \
	DAofA8.c \
	Fill.c \
	Flush.c \
	RA8.c \
	RA16.c \
	RA32.c \
	RAofA8.c \
	RC8.c \
	RC16.c \
	RC32.c \
	RHead.c \
	RR.c \
	RaA8.c \
	RaA16.c \
	RaA32.c \
	RaAoA8.c \
	WA8.c \
	WA16.c \
	WA32.c \
	WAofA8.c \
	WC8.c \
	WC16.c \
	WC32.c \
	Whead.c \
	CmpKey.c \
	DecKey.c \
	GenKey.c \
	IncKey.c \
	$(AUTHSRCS)

OBJS = \
	A8Eq.o \
	AA8.o \
	AA16.o \
	AA32.o \
	AofA8.o \
	CA8.o \
	DA8.o \
	DA16.o \
	DA32.o \
	DAofA8.o \
	Fill.o \
	Flush.o \
	RA8.o \
	RA16.o \
	RA32.o \
	RAofA8.o \
	RC8.o \
	RC16.o \
	RC32.o \
	RHead.o \
	RR.o \
	RaA8.o \
	RaA16.o \
	RaA32.o \
	RaAoA8.o \
	WA8.o \
	WA16.o \
	WA32.o \
	WAofA8.o \
	WC8.o \
	WC16.o \
	WC32.o \
	Whead.o \
	CmpKey.o \
	DecKey.o \
	GenKey.o \
	IncKey.o \
	$(AUTHOBJS)

STATIC_ONLY_SRCS = Alloc.c
STATIC_ONLY_OBJS = Alloc.o

LibraryObjectRule()

SpecialLibObjectRule(Fill.o,$(ICONFIGFILES),ConnectionFlags)
SpecialLibObjectRule(Flush.o,$(ICONFIGFILES),ConnectionFlags)

#if DoNormalLib
NormalLibraryTarget(Xdmcp,$(OBJS) $(STATIC_ONLY_OBJS))
InstallLibrary(Xdmcp,$(USRLIBDIR))
#endif
#if DoProfileLib
ProfiledLibraryTarget(Xdmcp,$(OBJS) $(STATIC_ONLY_OBJS))
InstallLibrary(Xdmcp_p,$(USRLIBDIR))
#endif
#if DoDebugLib
DebuggedLibraryTarget(Xdmcp,$(OBJS) $(STATIC_ONLY_OBJS))
InstallLibrary(Xdmcp_d,$(USRLIBDIR))
#endif

LintLibraryTarget(Xdmcp,$(SRCS) $(STATIC_ONLY_SRCS))
InstallLintLibrary(Xdmcp,$(LINTLIBDIR))

BuildIncludes($(HEADERS),.,.)

InstallMultiple($(HEADERS),$(INCDIR))

DependTarget()

NormalLintTarget($(SRCS))

#if SharedServerLibs
SharedLibraryTarget(Xdmcp,.,$(OBJS))
InstallSharedLibrary(Xdmcp,.,$(INSTALLSERVERLIBSDIR))
#endif
