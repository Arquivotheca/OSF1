/*
 * *****************************************************************
 * *                                                               *
 * *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
 * *                                                               *
 * *   All Rights Reserved.  Unpublished rights  reserved  under   *
 * *   the copyright laws of the United States.                    *
 * *                                                               *
 * *   The software contained on this media  is  proprietary  to   *
 * *   and  embodies  the  confidential  technology  of  Digital   *
 * *   Equipment Corporation.  Possession, use,  duplication  or   *
 * *   dissemination of the software and media is authorized only  *
 * *   pursuant to a valid written license from Digital Equipment  *
 * *   Corporation.                                                *
 * *                                                               *
 * *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
 * *   by the U.S. Government is subject to restrictions  as  set  *
 * *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
 * *   or  in  FAR 52.227-19, as applicable.                       *
 * *                                                               *
 * *****************************************************************
 */
/*
 * HISTORY
 */
/* SCCSID = "OSF/Motif: @(#)Motif.rules	3.2 90/07/20" */
/******************************************************************************
*******************************************************************************
*
*  (c) Copyright 1989, 1990, OPEN SOFTWARE FOUNDATION, INC.
*  ALL RIGHTS RESERVED
*  
*  	THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT
*  NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY OPEN SOFTWARE
*  FOUNDATION, INC. OR ITS THIRD PARTY SUPPLIERS  
*  
*  	OPEN SOFTWARE FOUNDATION, INC. AND ITS THIRD PARTY SUPPLIERS,
*  ASSUME NO RESPONSIBILITY FOR THE USE OR INABILITY TO USE ANY OF ITS
*  SOFTWARE .   OSF SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY
*  KIND, AND OSF EXPRESSLY DISCLAIMS ALL IMPLIED WARRANTIES, INCLUDING
*  BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
*  FITNESS FOR A PARTICULAR PURPOSE.
*  
*  Notice:  Notwithstanding any other lease or license that may pertain to,
*  or accompany the delivery of, this computer software, the rights of the
*  Government regarding its use, reproduction and disclosure are as set
*  forth in Section 52.227-19 of the FARS Computer Software-Restricted
*  Rights clause.
*  
*  (c) Copyright 1989, 1990, Open Software Foundation, Inc.  Unpublished - all
*  rights reserved under the Copyright laws of the United States.
*  
*  RESTRICTED RIGHTS NOTICE:  Use, duplication, or disclosure by the
*  Government is subject to the restrictions as set forth in subparagraph
*  (c)(1)(ii) of the Rights in Technical Data and Computer Software clause
*  at DFARS 52.227-7013.
*  
*  Open Software Foundation, Inc.
*  11 Cambridge Center
*  Cambridge, MA   02142
*  (617)621-8700
*  
*  RESTRICTED RIGHTS LEGEND:  This computer software is submitted with
*  "restricted rights."  Use, duplication or disclosure is subject to the
*  restrictions as set forth in NASA FAR SUP 18-52.227-79 (April 1985)
*  "Commercial Computer Software- Restricted Rights (April 1985)."  Open
*  Software Foundation, Inc., 11 Cambridge Center, Cambridge, MA  02142.  If
*  the contract contains the Clause at 18-52.227-74 "Rights in Data General"
*  then the "Alternate III" clause applies.
*  
*  (c) Copyright 1989, 1990, Open Software Foundation, Inc.
*  ALL RIGHTS RESERVED 
*  
*  
* Open Software Foundation is a trademark of The Open Software Foundation, Inc.
* OSF is a trademark of Open Software Foundation, Inc.
* OSF/Motif is a trademark of Open Software Foundation, Inc.
* Motif is a trademark of Open Software Foundation, Inc.
* DEC is a registered trademark of Digital Equipment Corporation
* DIGITAL is a registered trademark of Digital Equipment Corporation
* X Window System is a trademark of the Massachusetts Institute of Technology
*
*******************************************************************************
******************************************************************************/


/* 
 *  List of available rules from this file.
 * 
 * MSimpleProgramTarget		(program)
 * MSimpleUilTarget		(program)
 * MSimpleUidTarget		(program)
 * MComplexUidTarget_1		(program)
 * MComplexUidTarget_2		(program)
 * MComplexUidTarget_3		(program)
 * MComplexUidTarget_4		(program)
 * MComplexUidTarget_5		(program)
 * MComplexUidTarget_6		(program)
 * MComplexUidTarget_7		(program)
 * MComplexUidTarget_8		(program)
 * MComplexUidTarget_9		(program)
 * MComplexUidTarget_10		(program)
 * ComplexProgramTarget_4	(program,locallib,syslib)
 * ComplexProgramTarget_5	(program,locallib,syslib)
 * ComplexProgramTarget_6	(program,locallib,syslib)
 * ComplexProgramTarget_7	(program,locallib,syslib)
 * ComplexProgramTarget_8	(program,locallib,syslib)
 * ComplexProgramTarget_9	(program,locallib,syslib)
 * ComplexProgramTarget_10	(program,locallib,syslib)
 * 
 * Added by Alpha-OSF/1
 * 
 * MSimpleUidTargetInstOther	(program,instprogname)
 * MComplexUidTargetInstOther_1	(program,instprogname)
 * 
 */ 

#ifndef MSimpleProgramTarget
#define MSimpleProgramTarget(program)                                   @@\
	                                                                @@\
all:: program                                                           @@\
	                                                                @@\
program:: program.o $(DEPLIBS)                                          @@\
	$(RM) $@                                                        @@\
	$(CC) -o $@ program.o $(LOCAL_LIBRARIES) $(EXTRA_LIBRARIES) $(LDFLAGS) $(SYSLIBS)  @@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program                                                   @@\
	$(RM) program.o
#endif

#ifndef MSimpleUilTarget
#define MSimpleUilTarget(program)                                       @@\
	                                                                @@\
all:: program                                                           @@\
	                                                                @@\
program:: program.o program.uid $(DEPLIBS)                              @@\
	$(RM) $@                                                        @@\
	$(CC) -o $@ program.o $(LOCAL_LIBRARIES) $(LDFLAGS) $(SYSLIBS)  @@\
	                                                                @@\
program.uid:: program.uil                                                @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)             @@\
	                                                                @@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program                                                   @@\
	$(RM) program.uid                                               @@\
	$(RM) program.o 						@@\
	                                                                @@\
InstallProgram(program,$(BINDIR))					@@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MSimpleUidTarget
#define MSimpleUidTarget(program)                                       @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid:: program.uil                                                @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_1 
#define MComplexUidTarget_1(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS1)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_2
#define MComplexUidTarget_2(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS2)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid
#endif

#ifndef MComplexUidTarget_3
#define MComplexUidTarget_3(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS3)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_4
#define MComplexUidTarget_4(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS4)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_5
#define MComplexUidTarget_5(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS5)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_6
#define MComplexUidTarget_6(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS6)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_7
#define MComplexUidTarget_7(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS7)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_8
#define MComplexUidTarget_8(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS8)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_9
#define MComplexUidTarget_9(program)                                    @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS9)                                                  @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTarget_10
#define MComplexUidTarget_10(program)                                   @@\
	                                                                @@\
all:: program.uid                                                       @@\
	                                                                @@\
program.uid::  $(UILS10)                                                 @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) program.uid						@@\
	                                                                @@\
InstallNonExec(program.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexProgramTarget
#define MComplexProgramTarget(program,locallib,syslib)                  @@\
	PROGRAM = program                                               @@\
                                                                        @@\
AllTarget(program)                                                      @@\
                                                                        @@\
program: $(OBJS) $(DEPLIBS)                                             @@\
	RemoveTargetProgram($@)                                         @@\
	$(CC) -o $@ $(LDOPTIONS) $(OBJS) locallib $(LDLIBS) syslib $(EXTRA_LOAD_FLAGS)  @@\
                                                                        @@\
SaberProgramTarget(program,$(SRCS),$(OBJS),locallib,syslib)             @@\
                                                                        @@\
InstallProgram(program,$(BINDIR))                                       @@\
                                                                        @@\
install.man::                                                           @@\
	@echo To install documentation for $(PROGRAM), consult the Release Notes        @@\
	@echo and/or README file in the current directory.              @@\
DependTarget()                                                          @@\
LintTarget()                                                            @@\
                                                                        @@\
clean::                                                                 @@\
	$(RM) $(PROGRAM)
#endif

#ifndef MComplexProgramTarget_1
#define	MComplexProgramTarget_1(program,locallib,syslib)		@@\
            OBJS = $(OBJS1) $(OBJS2) $(OBJS3)				@@\
            SRCS = $(SRCS1) $(SRCS2) $(SRCS3)				@@\
									@@\
AllTarget($(PROGRAMS))							@@\
									@@\
program: $(OBJS1) $(DEPLIBS1)						@@\
	RemoveTargetProgram($@)						@@\
	$(CC) -o $@ $(LDOPTIONS) $(OBJS1) locallib $(LDLIBS) syslib $(EXTRA_LOAD_FLAGS)	@@\
									@@\
SaberProgramTarget(program,$(SRCS1),$(OBJS1),locallib,syslib)		@@\
									@@\
InstallProgram(program,$(BINDIR))					@@\
									@@\
install.man::								@@\
	@echo To install documentation for $(PROGRAMS), consult the Release Notes	@@\
	@echo and/or README file in the current directory.		@@\
DependTarget()								@@\
LintTarget()								@@\
									@@\
clean::									@@\
	$(RM) $(PROGRAMS)
#endif

#ifndef MComplexProgramTarget_2
#define MComplexProgramTarget_2(program,locallib,syslib)                @@\
program: $(OBJS2) $(DEPLIBS2)                                           @@\
	RemoveTargetProgram($@)                                         @@\
	$(CC) -o $@ $(LDOPTIONS) $(OBJS2) locallib $(LDLIBS) syslib $(EXTRA_LOAD_FLAGS) @@\
                                                                        @@\
SaberProgramTarget(program,$(SRCS2),$(OBJS2),locallib,syslib)           @@\
                                                                        @@\
InstallProgram(program,$(BINDIR))
#endif

#ifndef MComplexProgramTarget_3
#define MComplexProgramTarget_3(program,locallib,syslib)                @@\
	PROGRAM_3 = program                                     @@\
program: $(OBJS3) $(DEPLIBS3)                                           @@\
	RemoveTargetProgram($@)                                         @@\
	$(CC) -o $@ $(LDOPTIONS) $(OBJS3) locallib $(LDLIBS) syslib $(EXTRA_LOAD_FLAGS) @@\
                                                                        @@\
SaberProgramTarget(program,$(SRCS3),$(OBJS3),locallib,syslib)           @@\
                                                                        @@\
InstallProgram(program,$(BINDIR))
#endif

#ifndef ComplexProgramTarget_4
#define	ComplexProgramTarget_4(program,locallib,syslib)			@@\
program:: $(OBJS4) locallib						@@\
	$(RM) $@							@@\
	$(CC) -o $@ $(OBJS4) locallib $(LDFLAGS) syslib $(SYSLAST_LIBRARIES)			@@\
									@@\
InstallProgram(program,$(BINDIR))					@@\
InstallManPage(program,$(MANDIR))
#endif

#ifndef ComplexProgramTarget_5
#define	ComplexProgramTarget_5(program,locallib,syslib)			@@\
program:: $(OBJS5) locallib						@@\
	$(RM) $@							@@\
	$(CC) -o $@ $(OBJS5) locallib $(LDFLAGS) syslib $(SYSLAST_LIBRARIES)			@@\
									@@\
InstallProgram(program,$(BINDIR))					@@\
InstallManPage(program,$(MANDIR))
#endif

#ifndef ComplexProgramTarget_6
#define	ComplexProgramTarget_6(program,locallib,syslib)			@@\
program:: $(OBJS6) locallib						@@\
	$(RM) $@							@@\
	$(CC) -o $@ $(OBJS6) locallib $(LDFLAGS) syslib $(SYSLAST_LIBRARIES)			@@\
									@@\
InstallProgram(program,$(BINDIR))					@@\
InstallManPage(program,$(MANDIR))
#endif

#ifndef ComplexProgramTarget_7
#define	ComplexProgramTarget_7(program,locallib,syslib)			@@\
program:: $(OBJS7) locallib						@@\
	$(RM) $@							@@\
	$(CC) -o $@ $(OBJS7) locallib $(LDFLAGS) syslib $(SYSLAST_LIBRARIES)			@@\
									@@\
InstallProgram(program,$(BINDIR))					@@\
InstallManPage(program,$(MANDIR))
#endif

#ifndef ComplexProgramTarget_8
#define	ComplexProgramTarget_8(program,locallib,syslib)			@@\
program:: $(OBJS8) locallib						@@\
	$(RM) $@							@@\
	$(CC) -o $@ $(OBJS8) locallib $(LDFLAGS) syslib $(SYSLAST_LIBRARIES)			@@\
									@@\
InstallProgram(program,$(BINDIR))					@@\
InstallManPage(program,$(MANDIR))
#endif

#ifndef ComplexProgramTarget_9
#define	ComplexProgramTarget_9(program,locallib,syslib)			@@\
program:: $(OBJS9) locallib						@@\
	$(RM) $@							@@\
	$(CC) -o $@ $(OBJS9) locallib $(LDFLAGS) syslib $(SYSLAST_LIBRARIES)			@@\
									@@\
InstallProgram(program,$(BINDIR))					@@\
InstallManPage(program,$(MANDIR))
#endif

#ifndef ComplexProgramTarget_10
#define	ComplexProgramTarget_10(program,locallib,syslib)			@@\
program:: $(OBJS10) locallib						@@\
	$(RM) $@							@@\
	$(CC) -o $@ $(OBJS10) locallib $(LDFLAGS) syslib $(SYSLAST_LIBRARIES)			@@\
									@@\
InstallProgram(program,$(BINDIR))					@@\
InstallManPage(program,$(MANDIR))
#endif


/*
 * These rule was added for Alpha-OSF/1 to allow building of a UID
 * with it being installed with a different name.  This is done by 
 * building and installing with instprogname.
 */

#ifndef MSimpleUidTargetInstOther
#define MSimpleUidTargetInstOther(program,instprogname)                 @@\
	                                                                @@\
all:: instprogname.uid                                                  @@\
	                                                                @@\
instprogname.uid:: program.uil                                          @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) instprogname.uid						@@\
	                                                                @@\
InstallNonExecFile(instprogname.uid,$(LIBDIR)/uid)
#endif

#ifndef MComplexUidTargetInstOther_1 
#define MComplexUidTargetInstOther_1(program,instprogname)              @@\
	                                                                @@\
all:: instprogname.uid                                                  @@\
	                                                                @@\
instprogname.uid:: $(UILS1)                                             @@\
	$(RM) $@                                                        @@\
	$(UIL) -o $@ program.uil $(UILFLAGS) $(UILINCLUDES)	      	@@\
	                                                                @@\
clean::                                                                 @@\
	$(RM) instprogname.uid						@@\
	                                                                @@\
InstallNonExecFile(instprogname.uid,$(LIBDIR)/uid)
#endif

