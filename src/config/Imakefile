XCOMM 
XCOMM *****************************************************************
XCOMM *                                                               *
XCOMM *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
XCOMM *                                                               *
XCOMM *   All Rights Reserved.  Unpublished rights  reserved  under   *
XCOMM *   the copyright laws of the United States.                    *
XCOMM *                                                               *
XCOMM *   The software contained on this media  is  proprietary  to   *
XCOMM *   and  embodies  the  confidential  technology  of  Digital   *
XCOMM *   Equipment Corporation.  Possession, use,  duplication  or   *
XCOMM *   dissemination of the software and media is authorized only  *
XCOMM *   pursuant to a valid written license from Digital Equipment  *
XCOMM *   Corporation.                                                *
XCOMM *                                                               *
XCOMM *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
XCOMM *   by the U.S. Government is subject to restrictions  as  set  *
XCOMM *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
XCOMM *   or  in  FAR 52.227-19, as applicable.                       *
XCOMM *                                                               *
XCOMM *****************************************************************
XCOMM
XCOMM HISTORY
XCOMM 
/*
 * $XConsortium: Imakefile,v 1.14 91/12/02 11:24:14 rws Exp $
 * 
 * This is used to recreate imake.  Makefile.ini is used to generate imake
 * the first time.
 */

DEPLIBS = 
HEADERS = imakemdep.h 
#CFFILES = $(HEADERS) *.rules *.tmpl site.def *.bac *.cf
RULE_FILES = Dec.rules Imake.rules Motif.rules noop.rules osfLib.rules \
	Server.rules
TMPL_FILES = Dec.tmpl Imake.tmpl Library.tmpl Motif.tmpl  \
	Project.tmpl Server.tmpl osfLib.tmpl
CF_FILES = generic.cf osf1.cf 
CFFILES = $(HEADERS) $(RULE_FILES) $(TMPL_FILES) $(CF_FILES) site.def
CPP_PROGRAM = CppCmd
INCLUDES = -I$(BUILDINCDIR)
DEFINES = $(SIGNAL_DEFINES) $(BOOTSTRAPCFLAGS) -DCPP_PROGRAM=\"$(CPP_PROGRAM)\"

#undef ImakeDependency
#define ImakeDependency(dummy) @@\
Makefile::  imake.local 

SimpleProgramTarget(imake)

all:: imake.local

imake.local: imake.local.c
	$(RM) imake.local
	$(LOCCC) -o $@ imake.local.c $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) \
	$(EXTRA_LOAD_FLAGS)

imake.local.c:: imake.c
	$(LN) imake.c imake.local.c

BuildIncludes($(HEADERS),config,..)

InstallMultipleDestFlags(install,$(CFFILES),$(CONFIGDIR),$(INSTDATFLAGS))

depend::

clean::
	$(RM) ccimake
