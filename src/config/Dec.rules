/*
 * *****************************************************************
 * *                                                               *
 * *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
 * *                                                               *
 * *   All Rights Reserved.  Unpublished rights  reserved  under   *
 * *   the copyright laws of the United States.                    *
 * *                                                               *
 * *   The software contained on this media  is  proprietary  to   *
 * *   and  embodies  the  confidential  technology  of  Digital   *
 * *   Equipment Corporation.  Possession, use,  duplication  or   *
 * *   dissemination of the software and media is authorized only  *
 * *   pursuant to a valid written license from Digital Equipment  *
 * *   Corporation.                                                *
 * *                                                               *
 * *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
 * *   by the U.S. Government is subject to restrictions  as  set  *
 * *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
 * *   or  in  FAR 52.227-19, as applicable.                       *
 * *                                                               *
 * *****************************************************************
 */
/*
 * HISTORY
 */
XCOMM -------------------------------------------------------------------------
XCOMM DEC-Specific System Build Rules
XCOMM $Id: Dec.rules,v 1.1.2.8 92/12/08 19:29:22 Leela_Obilichetti Exp $

/*
 * InstallMultipleDestFlags - generate rules to install multiple files at
 * once during a particular step in the build using a specific set of install 
 * flags.
 *
 * OSF/1 make is broken: wildcards on the dependency line expand with
 * spurious characters.  This practice is used only in config/Imakefile.
 * Removing the dependency like this may cause incorrect installation
 * of x386 (?)
 */
#ifndef InstallMultipleDestFlags
#define InstallMultipleDestFlags(step,list,dest,flags)			@@\
step::									@@\
	MakeDir($(DESTDIR)dest)						@@\
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \			@@\
	for i in list; do \						@@\
		(set -x; $(INSTALL) -c flags $$i $(DESTDIR)dest); \	@@\
	done
#endif /* InstallMultipleDestFlags */

/* 
 * UudecodeTarget - uuedecode a file.
 */
#ifndef UudecodeTarget
#define UudecodeTarget(program)                                         @@\
all:: program                                                           @@\
program: program.uu                                                     @@\
	uudecode program.uu						@@\
									@@\
clean::									@@\
	$(RM) program
#endif	/* UudecodeTarget */

/* 
 * UudecodeMultipleTarget - uuedecode a list of files.
 */
#ifndef UudecodeMultipleTarget
#define UudecodeMultipleTarget(list)					@@\
all::									@@\
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \			@@\
	for i in list; do \						@@\
		(set -x; uudecode $$i.uu); \				@@\
	done								@@\
									@@\
clean::									@@\
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \			@@\
	for i in list; do \						@@\
		(set -x; $(RM) $$i); \					@@\
	done
#endif	/* UudecodeMultipleTarget */

/*
 * LocalComplexProgramTarget - generate rules for compiling and
 * linking the program specified by $(OBJS) and $(SRCS), generating
 * dependencies.  It should only be used in Imakefiles that describe a
 * single program built on a host and when you want it built locally.
 */
#ifndef LocalComplexProgramTargetNoInstall
#define	LocalComplexProgramTargetNoInstall(program)			@@\
        PROGRAM = program						@@\
									@@\
             CC = $(LOCCC)						@@\
         CFLAGS = $(LOCCFLAGS)						@@\
         LDLIBS = $(LOCLDLIBS)						@@\
									@@\
AllTarget(program)							@@\
									@@\
program: $(OBJS) $(DEPLIBS)						@@\
	RemoveTargetProgram($@)						@@\
	$(LOCCC) -o $@ $(OBJS) $(LOCLDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) $(EXTRA_LOAD_FLAGS) @@\
									@@\
SaberProgramTarget(program,$(SRCS),$(OBJS),$(LOCAL_LIBRARIES),NullParameter) @@\
									@@\
DependTarget()								@@\
LintTarget()								@@\
									@@\
clean::									@@\
	$(RM) $(PROGRAM)
#endif
