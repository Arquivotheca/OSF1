! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! SCCS_data: @(#) Box.ad 1.2 92/03/17 16:17:03
!  This provides similar functionality as that shown by the Xaw example
!  named xbuttonbox.  The Box widget is used to introduce the programmer to
!  a widget hierarchy.
!
!  Unlike the Shell widget a Box widget can accept more than one child.
!  By using boxes and other composites it is possible to create an
!  arbitrarily complex application with hundreds or event thousands of
!  widgets.
!
Ari.wcChildren:		box

*box.wcClassName:	Box
*box.wcChildren:	quit, \
			lab1, lab2, lab3, lab4, lab5, \
			lab6, lab7, lab8, lab9, lab10
*box.wcAfterChildren:	WcInstallAllAccelerators(this this)

*quit.wcClassName:	Command
*quit.callback:		WcExitCB
*Command.Label:    	Try Ctrl-A or Ctrl-B anywhere...
*quit.accelerators:	#override \n\
			Ctrl<Key>a:	WcSetValue(this.label: Try Ctrl-B) \
					WcTrace(cA) \n\
			Ctrl<Key>b:	WcSetValue(this.label: Try Ctrl-C) \
					WcTrace(cB) \n\
			Ctrl<Key>c:	set() notify() unset()

*lab1.wcClass:		labelWidgetClass
*lab2.wcClass:          labelWidgetClass
*lab3.wcClass:          labelWidgetClass
*lab4.wcClass:          labelWidgetClass
*lab5.wcClass:          labelWidgetClass
*lab6.wcClass:          labelWidgetClass
*lab7.wcClass:          labelWidgetClass
*lab8.wcClass:          labelWidgetClass
*lab9.wcClass:          labelWidgetClass
*lab10.wcClass:         labelWidgetClass
