! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! SCCS_data:    @(#) TableDialog.ad 1.3 92/06/10 06:17:02
!
! This example demonstrates XmpCreateTableDialog.

Mri.wcPopups:		dialog
Mri.wcChildren:		rc
Mri.wcCallback:		WcSetValue(Mri.title:TableDialog)

!--------------------------------------------------------------
! Top level box to popup the dialog shell
!
*rc.wcCreate:		XmRowColumn
*rc.wcChildren:		pop quit
*rc*alignment:		XmALIGNMENT_CENTER

*quit.wcClassName:	XmPushButton
*quit.labelString:	Quit
*quit.activateCallback:	WcExit

*pop.wcClassName:	XmPushButton
*pop.labelString:	Popup\nApplication Modal\nTable Dialog
*pop.activateCallback:	WcManage( *dialog )

!--------------------------------------------------------------
! Table in a Dialog Shell.
! The constructor creates a dialog shell with a table child.  The
! table child gets three children: a work area, a separator, and
! another area from control buttons.  This is a good typical layout.
! I use it alot.
! After the children are created, the defaultButton resource fot the
! dialog can be set.  We set it to be the ok button.
!
*dialog.wcCreate:	XmpCreateTableDialog

#if MOTIF_100
*dialog.dialogStyle:	DIALOG_APPLICATION_MODAL
#else
*dialog.dialogStyle:	DIALOG_PRIMARY_APPLICATION_MODAL
#endif

*dialog.marginWidth:		0
*dialog.marginHeight:		0
*dialog.wcChildren:		work sep ctrl
*dialog.wcAfterChildren:	WcSetValue( this.defaultButton: this*ok )
*dialog.layout:			work 0 0 ; sep 0 1 h ; ctrl 0 2 h

!--------------------------------------------------------------
! The work area within the dialog
!
*work.wcCreate:		XmpTable
*work.wcChildren:	one two three
*work.layout:		one 0 0 1 2 ; two 1 0 h ; three 1 1

*work*wcCreate:		XmPushButton
*one.labelString:	Try re-sizing\nthis dialog
*two.labelString:	little
*three.labelString:	another long label\nfor demonstrating\ntable resizing

!--------------------------------------------------------------
! A separator spanning the dialog between the work area and the 
! control button area.
!
*sep.wcClassName:	XmSeparator

!--------------------------------------------------------------
! The control buttons across the bottom, all the same original size,
! none are ever resized although they get spread out if the dialog
! is stretched horizontally.
!
*ctrl.wcCreate:		XmpTable
*ctrl.wcChildren:	ok cancel help
*ctrl.layout:		ok 0 0 WH ; cancel 1 0 WH ; help 2 0 WH
*ctrl.wcAfterChildren:	WcSameSize( .ok .cancel .help )

*ctrl*wcCreate:		XmPushButton
*ctrl*activateCallback:	WcUnmanage(~*dialog)
