! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! SCCS_data:    @(#) Dialogs.ad 1.2 92/03/18 10:44:33
!
!  Dialogs
!  -------
!
! This example creates an instance of each type of Motif dialog
!
! A row column hold buttons, one for each dialog type.
! Each button has a popup child, the dialog.
! Pressing the button causes the dialog to pop-up,
! pressing the OK buttons cause the dialogs to pop-down,
! pressing the Help buttons cause the dialogs to print out their widget tree.

Mri.wcCallback:		WcSetValue(this.title:Dialogs)
Mri.wcChildren:		rc

*rc.wcCreate:		XmRowColumn
*rc.wcChildren:		bbd ed fsd fd id md pd qd sd td wad wod exit

*WcCreate:		XmPushButton

! Shared by all or some of the Dialogs:
!
*autoUnmanage:		false
*Help.wcCreate:		XmPushButton
*Help.activateCallback:	WcPrintTree(~)
*helpCallback:		WcPrintTree(~)
*OK.wcCreate:		XmPushButton
*OK.activateCallback:	WcUnmanage(^)
*okCallback:		WcUnmanage(this)

*bbd.labelString:		BulletinBoardDialog
*bbd.wcPopups:			bbDialog
*bbDialog.wcCreate:		XmCreateBulletinBoardDialog
*bbDialog.wcChildren:			OK Help
*bbDialog.Help.y:			40
*bbd.activateCallback:		WcManage(this*bbDialog)

*ed.labelString:		ErrorDialog
*ed.wcPopups:			errDialog
*errDialog.wcCreate:		XmCreateErrorDialog
#ifdef MOTIF_100
*ed.activateCallback:		WcManage(this.errDialog.errDialog)
#else
*ed.activateCallback:		WcManage(this*errDialog)
#endif

*fsd.labelString:		FileSelectionDialog
*fsd.wcPopups:			fsDialog
*fsDialog.wcCreate:		XmCreateFileSelectionDialog
#ifdef MOTIF_100
*fsd.activateCallback:		WcManage(this.fsDialog.fsDialog)
#else
*fsd.activateCallback:		WcManage(this*fsDialog)
#endif

*fd.labelString:		FormDialog
*fd.wcPopups:			fDialog
*fDialog.wcCreate:		XmCreateFormDialog
*fDialog.wcChildren:			OK Help
*fDialog.XmPushButton.topAttachment:	ATTACH_FORM
*fDialog.XmPushButton.bottomAttachment:	ATTACH_FORM
*fDialog.OK.leftAttachment:		ATTACH_FORM
*fDialog.Help.rightAttachment:		ATTACH_FORM
*fDialog.Help.leftAttachment:		ATTACH_WIDGET
*fDialog.Help.leftWidget:		^OK
*fd.activateCallback:		WcManage(this*fDialog)

*id.labelString:		InformationDialog
*id.wcPopups:			iDialog
*iDialog.wcCreate:		XmCreateInformationDialog
#ifdef MOTIF_100
*id.activateCallback:		WcManage(this.iDialog.iDialog)
#else
*id.activateCallback:		WcManage(this*iDialog)
#endif

*md.labelString:		MessageDialog
*md.wcPopups:			mDialog
*mDialog.wcCreate:		XmCreateMessageDialog
#ifdef MOTIF_100
*md.activateCallback:		WcManage(this.mDialog.mDialog)
#else
*md.activateCallback:		WcManage(this*mDialog)
#endif

*pd.labelString:		PromptDialog
*pd.wcPopups:			pDialog
*pDialog.wcCreate:		XmCreatePromptDialog
#ifdef MOTIF_100
*pd.activateCallback:		WcManage(this.pDialog.pDialog)
#else
*pd.activateCallback:		WcManage(this*pDialog)
#endif

*qd.labelString:		QuestionDialog
*qd.wcPopups:			qDialog
*qDialog.wcCreate:		XmCreateQuestionDialog
#ifdef MOTIF_100
*qd.activateCallback:		WcManage(this.qDialog.qDialog)
#else
*qd.activateCallback:		WcManage(this*qDialog)
#endif

*sd.labelString:		SelectionDialog
*sd.wcPopups:			sDialog
*sDialog.wcCreate:		XmCreateSelectionDialog
*sd.activateCallback:		WcManage(this*sDialog)

*td.labelString:		TableDialog
*td.wcPopups:			tDialog
*tDialog.wcCreate:		XmpCreateTableDialog
*tDialog.wcChildren:		MessageLabel Separator OK Cancel Help
*tDialog.Spacing:		10
!				nm		c r cs rs opt
*tDialog.layout:		MessageLabel	0 0  3  1 ;	\
				Separator	0 1  3  1 H;	\
				OK		0 2  1  1 H;	\
				Cancel		1 2  1  1 ;	\
				Help		2 2  1  1 ;
*tDialog.MessageLabel.wcCreate:		XmLabel
*tDialog.Separator.wcCreate:		XmSeparator
*tDialog.Cancel.wcCreate:		XmPushButton
*tDialog.Cancel.activateCallback:	WcUnmanage(^)
*tDialog.wcAfterChildren:		WcSetValue(this.defaultButton: this.OK)
*td.activateCallback:		WcManage(this*tDialog)

*wad.labelString:		WarningDialog
*wad.wcPopups:			waDialog
*waDialog.wcCreate:		XmCreateWarningDialog
#ifdef MOTIF_100
*wad.activateCallback:		WcManage(this.waDialog.waDialog)
#else
*wad.activateCallback:		WcManage(this*waDialog)
#endif

*wod.labelString:		WorkingDialog
*wod.wcPopups:			woDialog
*woDialog.wcCreate:		XmCreateWorkingDialog
#ifdef MOTIF_100
*wod.activateCallback:		WcManage(this.woDialog.woDialog)
#else
*wod.activateCallback:		WcManage(this*woDialog)
#endif

Mri.rc.exit.activateCallback:	WcExit
