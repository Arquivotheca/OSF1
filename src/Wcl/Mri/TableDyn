Mri.wcChildren:	WcManage
Mri.wcPopups:	WcMan

! Everything is a push button unless otherwise specified.
*WcCreate:		XmPushButton


*Exit.activateCallback:	WcExit


! Shared by all XmpTables:
*XmpTable.Spacing:	5
*XmpTable.minimumSize:	True


!Shared by all dialogs:
*Label.wcCreate:		XmPushButton
*Label.activateCallback:	WcUnmanage(^)
*Sep.wcCreate:			XmSeparator
*Sep2.wcCreate:			XmSeparator
*autoUnmanage:			False
*okCallback:			WcUnmanage(this)
*OK.activateCallback:		WcUnmanage(^)


! ===========================================================================
! Test of Manage and Unmanage Callbacks and Actions:
! WcManageCB, WcManageACT,
! WcUnmanageCB, WcUnmanageACT,
! WcManageChildrenCB, WcManageChildrenACT,
! WcUnmanageChildrenCB, WcUnmanageChildrenACT
! =========================================================================== 
!
*WcManage.activateCallback:	WcManage(*WcMan)


*WcMan.wcCreate:	XmpCreateTableDialog
*WcMan.wcPopups:	indi indi2
*WcMan.wcChildren:	Label Sep \
			MaC1,MaC2,MaA1,MaA2,\
			UmC1,UmC2,UmA1,UmA2 \
			Sep2 UmCC UmCA MaCC MaCA
!			nm	c r cs rs opt
*WcMan.layout:		Label	0 0  2  1 ;	\
			Sep	0 1  2  1 H;	\
			MaC1	0 2;		UmC1	1 2;	\
			MaC2	0 3;		UmC2	1 3;	\
			MaA1	0 4;		UmA1	1 4;	\
			MaA2	0 5;		UmA2	1 5;	\
			Sep2	0 6  2  1 H;	\
			UmCC	0 7;		MaCC	1 7;	\
			UmCA	0 8;		MaCA	1 8;
*WcMan.Label.labelString: \
WcManage & WcUnmanage \n\
WcManageChildren & WcUnmanageChildren


*WcMan.indi.wcCreate:		XmCreateInformationDialog
*WcMan*indi.messageString:	WcManage \n worked!
*WcMan.indi2.wcCreate:		XmCreateInformationDialog
*WcMan*indi2.messageString:	WcManage \n worked\n with 2 widgets!


*WcMan.MaC1.labelString:	WcManageCB 1 Arg
*WcMan.MaC2.labelString:	WcManageCB 2 Args
*WcMan.MaA1.labelString:	WcManageACT 1 Arg
*WcMan.MaA2.labelString:	WcManageACT 2 Args
*WcMan.MaCC.labelString:	WcManageChildrenCB
*WcMan.MaCA.labelString:	WcManageChildrenACT
*WcMan.UmC1.labelString:	WcUnmanageCB 1 Arg
*WcMan.UmC2.labelString:	WcUnmanageCB 2 Args
*WcMan.UmA1.labelString:	WcUnmanageACT 1 Arg
*WcMan.UmA2.labelString:	WcUnmanageACT 2 Args
*WcMan.UmCC.labelString:	WcUnmanageChildrenCB
*WcMan.UmCA.labelString:	WcUnmanageChildrenACT
# 91 "" 


*WcMan.MaC1.activateCallback:	WcManage(^*indi)
*WcMan.MaC2.activateCallback:	WcManage(^*indi ^*indi2)
*WcMan.MaCC.activateCallback:	WcManageChildren(^,MaC1 , MaC2 )
*WcMan.UmC1.activateCallback:	WcUnmanage(^*indi)
*WcMan.UmC2.activateCallback:	WcUnmanage(^*indi , ^*indi2)
*WcMan.UmCC.activateCallback:	WcUnmanageChildren(^,MaC1 , MaC2 )
*WcMan.MaA1.translations:	<Btn1Up>:WcManage(^*indi)
*WcMan.MaA2.translations:	<Btn1Up>:WcManage(^*indi ^*indi2)
*WcMan.MaCA.translations:	<Btn1Up>: WcManageChildren(^ UmC1 UmC2)
*WcMan.UmA1.translations:	<Btn1Up>: WcUnmanage(^*indi)
*WcMan.UmA2.translations:	<Btn1Up>: WcUnmanage(^*indi , ^*indi2)
*WcMan.UmCA.translations:	<Btn1Up>: WcUnmanageChildren(^ UmC1 UmC2)



