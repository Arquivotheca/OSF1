! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
Mri.wcChildren:	rc

! Unless otherwise specified, everything is a push button.
!
*wcCreate:		XmPushButton

*rc.wcCreate:		XmRowColumn
*rc.wcChildren:		objs sep anObj

*sep.wcCreate:		XmSeparator

! Buttons: when created, they create objects of class TestObj.
! When pressed, they attach their object to the anObj widget.
!
*objs.wcCreate:		XmRowColumn
*objs.wcChildren:	obj1 obj2 obj3

*obj1.wcCallback:	TestObj::Create( object_1 )
*obj2.wcCallback:	TestObj::Create( second object )
*obj3.wcCallback:	TestObj::Create()

*objs*activateCallback:	TestObj::AttachTo(*anObj)

! Represents an object.  Buttons invoke methods on object
!
*anObj.wcCreate:	XmRowColumn
*anObj.wcChildren:	1st 2nd 3rd

*1st.activateCallback:	TestObj::1st(yeah)
*2nd.activateCallback:	TestObj::2nd()
*3rd.activateCallback:	TestObj::1st() TestObj::2nd( third	)
