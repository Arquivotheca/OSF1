! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! SCCS_data: @(#) Abbrev.ad 1.1 92/03/18 10:53:38
!          --------Demo 7--Abbreviated Menus -------------
! This example shows the use of an abbreviated menu with an exclusives
! widget.  Each rect button in the exclusives must have its own callback
! since there is no way to fetch the button`s label and use it to set the 
! display string.  This example is also copied from Mr. Miller's book.  The
! Univers button shows how to set defaults.

!*wcTrace:               True
Ori.wcChildren:		control
Ori.title:		O07_Abbreviated Menu

*threeD:		TRUE
*background:		grey

*control.wcClass:	controlAreaWidgetClass
*control.layoutType:	fixedrows
*control.measure:	1
*control.recomputeSize:	FALSE
*control.wcChildren:	clabel,aBtn,sel,quit

*clabel.wcClass:	staticTextWidgetClass
*clabel.borderWidth:	0
*clabel.string:		Font Family:

*sel.wcClass:		staticTextWidgetClass
*sel.width:		200
*sel.recomputeSize:	FALSE
*sel.gravity:		northwest
*sel.borderWidth:	1
*sel.string:		Univers

!! Don't know why their isn't a pushpin?
*aBtn.wcClass:		abbrevMenuButtonWidgetClass
*aBtn.pushpin:		out
*aBtn.wcCallback:	WcCreateChildrenCB(*pane, choices)

*choices.wcClass:	exclusivesWidgetClass
*choices.layoutType:	fixedcols
*choices.measure:	3
*choices.noneSet:	FALSE
*choices.wcChildren:	ag,bk,co,ga,gos,he,lg,lu,op,tr,un,zc

*choices.ag.wcClass:	rectButtonWidgetClass
*choices.ag.label:	Avant Garde
*choices.ag.select:	WcSetValueCB(*sel.string: Avant Garde)

*choices.bk.wcClass:	rectButtonWidgetClass
*choices.bk.label:	Bookman
*choices.bk.select:	WcSetValueCB(*sel.string: Bookman)

*choices.co.wcClass:	rectButtonWidgetClass
*choices.co.label:	Courier
*choices.co.select:	WcSetValueCB(*sel.string: Courier)

*choices.ga.wcClass:	rectButtonWidgetClass
*choices.ga.label:	Garamond
*choices.ga.select:	WcSetValueCB(*sel.string: Garamond)

*choices.gos.wcClass:	rectButtonWidgetClass
*choices.gos.label:	Goudy Old Style
*choices.gos.select:	WcSetValueCB(*sel.string: Goudy Old Style)

*choices.he.wcClass:	rectButtonWidgetClass
*choices.he.label:	Helvetica
*choices.he.select:	WcSetValueCB(*sel.string: Helvetica)

*choices.lg.wcClass:	rectButtonWidgetClass
*choices.lg.label:	Lubalin Graph
*choices.lg.select:	WcSetValueCB(*sel.string: Lubalin Graph)

*choices.lu.wcClass:	rectButtonWidgetClass
*choices.lu.label:	Lucida
*choices.lu.select:	WcSetValueCB(*sel.string: Lucida)

*choices.op.wcClass:	rectButtonWidgetClass
*choices.op.label:	Optima
*choices.op.select:	WcSetValueCB(*sel.string: Optima)

*choices.tr.wcClass:	rectButtonWidgetClass
*choices.tr.label:	Times Roman
*choices.tr.select:	WcSetValueCB(*sel.string: Times Roman)

!! This rect button is the default--must have one with noneSet FALSE
*choices.un.wcClass:	rectButtonWidgetClass
*choices.un.label:	Univers
*choices.un.set:	TRUE
*choices.un.default:	TRUE
*choices.un.select:	WcSetValueCB(*sel.string: Univers)

*choices.zc.wcClass:	rectButtonWidgetClass
*choices.zc.label:	Zap Chancery
*choices.zc.select:	WcSetValueCB(*sel.string: Zapf Chancery)

*quit.wcClass:		oblongButtonGadgetClass
*quit.label:		quit
*quit.select:		WcExitCB

