! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! @(#)$RCSfile: AccCommon.uil,v $ $Revision: 1.1.2.8 $ (DEC) $Date: 1993/12/20 21:31:12 $
! 

procedure
    AccCommonCreateMWCB();
    AccCommonGetWidgetCB(integer);

/******************************************************************************/
/* A C C O U N T S   S C R E E N   M A I N   W I N D O W */
/******************************************************************************/

object

    AccMainFRM: XmForm 
        {
        arguments
            {
            XmNmarginHeight = 5;
!           XmNmarginWidth = 2;
            XmNmarginWidth = 10;
            XmNy = 50;
            XmNdefaultPosition = false;
            };
        controls
            {
            XmForm AccInformationFRM;
            XmForm AccSecGroupFRM;
            XmSeparator AccMain1SP;
            XmForm AccLoginControlsFRM;
            XmForm AccPwdControlsFRM;
#ifdef SEC_PRIV
            XmSeparator AccMain2SP;
            XmForm AccCmdAuthFRM;
            XmForm AccKrnlAuthFRM;
            XmForm AccBasePrivFRM;
            XmLabel AccClearanceLBL;
	    XmPushButton AccClearancePB;
	    XmScrolledText AccClearanceTX;
#endif
            XmRowColumn AccCntrlButtonsRC;
            };
        };

/******************************************************************************/
/* M A I N   S E P A R A T O R S */
/******************************************************************************/

    AccMain1SP : XmSeparator
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNleftWidget = XmForm AccInformationFRM;
            XmNleftOffset = ACC_SP_X_OFFSET;
            XmNtopAttachment = XmATTACH_FORM;
            XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNbottomWidget = XmForm AccLoginControlsFRM;
            XmNorientation = XmVERTICAL;
            XmNshadowThickness = 4;
            };
        };
    AccMain2SP : XmSeparator
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNleftWidget = XmForm AccPwdControlsFRM;
            XmNleftOffset = ACC_SP_X_OFFSET;
            XmNtopAttachment = XmATTACH_FORM;
            XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNbottomWidget = XmSeparator AccMain1SP;
            XmNorientation = XmVERTICAL;
            XmNshadowThickness = 4;
            };
        };

/******************************************************************************/
/* A C C O U N T    I N F O R M A T I O N */
/******************************************************************************/
     
    AccInformationFRM: XmForm 
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmForm AccSecGroupFRM;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmForm AccSecGroupFRM; 
            XmNbottomOffset = ACC_STD_Y_OFFSET;
            };
        controls
            {
            XmLabel AccAccountInfoLBL;
            XmLabel AccUsernameLBL;
            user_defined AccUsernameTXL;
            XmLabel AccUIDLBL;
            XmTextField AccUIDTX;
            XmLabel AccTmpltnameLBL;
            user_defined AccTmpltnameTXL;
            XmLabel AccTmpltcountLBL;
            XmTextField AccTmpltcountTX;
            XmLabel AccHomeDirLBL;
            XmTextField AccHomeDirTX;
            XmLabel AccShellLBL;
            user_defined AccShellTXL;
            XmLabel AccCommentsLBL;
            XmTextField AccCommentsTX;
            XmLabel AccPriGrpLBL;
            user_defined AccPriGroupTXL;
            };
        };
    AccAccountInfoLBL: XmLabel
        {
        arguments
            {
            XmNlabelString = ACC_INFO_STR;
            XmNfontList = BIG_LABEL_FONT;
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_FORM;
            };
        };
    AccUsernameLBL: XmLabel 
        {
        arguments
            {
            XmNlabelString = USERNAME_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopOffset = StdDistanceFromTopOfLabel;
            XmNtopWidget = XmLabel AccAccountInfoLBL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_USERNAMELBL);
                };
            };
        };
    AccUIDLBL: XmLabel 
        {
        arguments
            {
            XmNlabelString = UID_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmLabel AccTmpltcountLBL;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccUsernameLBL;
            XmNsensitive = false;
            };
        };
    AccTmpltnameLBL: XmLabel 
        {
        arguments
            {
            XmNlabelString = TMPLTNAME_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmLabel AccUsernameLBL;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmLabel AccUsernameLBL;
            XmNtopOffset = ACC_TEXT_ENTRY_LABEL_TOP_OFFSET;
            };
        };
    AccTmpltcountLBL: XmLabel
        {
        arguments
            {
            XmNlabelString = TMPLTCOUNT_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNrightAttachment = XmATTACH_WIDGET;
            XmNrightWidget = XmTextField AccTmpltcountTX;
            XmNrightOffset = 5;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccTmpltnameLBL;
            XmNsensitive = false;
            };
        };
    AccHomeDirLBL: XmLabel 
        {
        arguments
            {
            XmNlabelString = HOME_DIR_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNleftWidget = XmLabel AccTmpltnameLBL;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmLabel AccTmpltnameLBL;
            XmNtopOffset = ACC_TEXT_ENTRY_LABEL_TOP_OFFSET;
            XmNsensitive = false;
            };
        };
    AccShellLBL: XmLabel 
        {
        arguments
            {
            XmNlabelString = SHELL_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmLabel AccHomeDirLBL;
            XmNtopOffset = ACC_TEXT_ENTRY_LABEL_TOP_OFFSET;
            XmNleftAttachment = XmATTACH_FORM;
            };
        };
    AccCommentsLBL: XmLabel 
        {
        arguments
            {
            XmNlabelString = COMMENTS_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNleftWidget = XmLabel AccShellLBL;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopOffset = ACC_TEXT_ENTRY_LABEL_TOP_OFFSET;
            XmNtopWidget = XmLabel AccShellLBL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_COMMENTSLBL);
                };
            };
        };
    AccUsernameTXL: user_defined procedure XmCreateTextList
        {
        arguments
            {
            XmNcolumns = MAX_NAME_LENGTH;
            XmNfontList = TEXT_ENTRY_FONT;
            XmNmaxLength = MAX_NAME_LENGTH;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNleftWidget = XmLabel AccHomeDirLBL;
            XmNleftOffset = 5;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccUsernameLBL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_USERNAME);
                };
            };
        };
    AccUIDTX: XmTextField 
        {
        arguments
            {
            XmNcolumns = 5;
            XmNfontList = TEXT_ENTRY_FONT;
            XmNrightAttachment = XmATTACH_FORM;
            XmNrightOffset = 25;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = user_defined AccUsernameTXL;
            XmNsensitive = false;
            XmNeditable = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_UID);
                };
            };
        };
    AccTmpltnameTXL: user_defined procedure XmCreateTextList
        {
        arguments
            {
            XmNcolumns = MAX_NAME_LENGTH;
            XmNfontList = TEXT_ENTRY_FONT;
            XmNmaxLength = MAX_NAME_LENGTH;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = user_defined AccUsernameTXL;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccTmpltnameLBL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_TEMPLATE);
                };
            };
        };
    AccTmpltcountTX: XmTextField 
        {
        arguments
            {
            XmNcolumns = MAX_TEMPLATE_COUNT_LENGTH;
            XmNmaxLength = MAX_TEMPLATE_COUNT_LENGTH;
            XmNfontList = TEXT_ENTRY_FONT;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField AccUIDTX;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = user_defined AccTmpltnameTXL;
            XmNsensitive = false;
            XmNeditable = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_TEMPLATE_COUNT);
                };
            };
        };
    AccHomeDirTX: XmTextField 
        {
        arguments
            {
            XmNfontList = TEXT_ENTRY_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = user_defined AccTmpltnameTXL;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField AccTmpltcountTX;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccHomeDirLBL;
            XmNsensitive = false;
            XmNeditable = false;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_HOME_DIR);
                };
            };
        };
    AccShellTXL: user_defined procedure XmCreateTextList
        {
        arguments
            {
            XmNfontList = TEXT_ENTRY_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmTextField AccHomeDirTX;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField AccHomeDirTX;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccShellLBL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_SHELL);
                };
            };
        };
    AccCommentsTX: XmTextField 
        {
        arguments
            {
            XmNfontList = TEXT_ENTRY_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = user_defined AccShellTXL;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = user_defined AccShellTXL;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccCommentsLBL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_COMMENTS);
                };
            };
        };
    AccPriGrpLBL: XmLabel 
        {
        arguments
            {
            XmNlabelString = PRI_GROUP_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmLabel AccCommentsLBL;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopOffset = ACC_TEXT_ENTRY_LABEL_TOP_OFFSET;
            XmNtopWidget = XmLabel AccCommentsLBL;
            };
        };
    AccPriGroupTXL: user_defined procedure XmCreateTextList
        {
        arguments
            {
            XmNfontList = TEXT_ENTRY_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmTextField AccCommentsTX;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmTextField AccCommentsTX;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccPriGrpLBL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_PRI_GROUP);
                };
            };
        };

/******************************************************************************/
/* S E C O N D A R Y   G R O U P S */
/******************************************************************************/

    AccSecGroupFRM: XmForm 
        {
        arguments
            {
            XmNmarginWidth = 0;
            XmNmarginHeight = 0;
            XmNleftAttachment = XmATTACH_FORM;
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmForm AccLoginControlsFRM;
            XmNbottomOffset = ACC_STD_Y_OFFSET;
            };
        controls
            {
            XmLabel AccSecGroupLBL;
            XmForm AccSecGroupSLFRM;
            };
        };
    AccSecGroupLBL: XmLabel 
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNlabelString = SEC_GROUPS_STR;
            XmNfontList = BIG_LABEL_FONT;
            };
        };
    AccSecGroupSLFRM: XmForm 
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget =  XmLabel AccSecGroupLBL;
!           XmNwidth = ACC_SL_FRM_WIDTH;
            XmNwidth = ACC_SEC_GRP_SL_WIDTH+45;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNmarginHeight = 4;
            XmNmarginWidth = 4;
            XmNshadowType = XmSHADOW_ETCHED_OUT;
            XmNshadowThickness = 2;
            };
        controls
            {
            user_defined AccSecGroupSL;
            };
        };
    AccSecGroupSL: user_defined procedure XmCreateSelectList
        {
        arguments
            {
            XmNbottomAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNleftPosition = 50;
            XmNrightAttachment = XmATTACH_FORM;
            XmNvisibleItemCount = 6;
            XmNselectionPolicy = XmSINGLE_SELECT;
            XmNalphabetizeLists = true;
            XmNselectListLabelString = "Selected";
            XmNavailableListLabelString = "Available";
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_SEC_GROUPS);
                };
            };
        };

/******************************************************************************/
/* L O G I N   C O N T R O L S */
/******************************************************************************/

    AccLoginControlsFRM: XmForm 
        {
        arguments
            {
            XmNbottomAttachment = XmATTACH_WIDGET;
            XmNbottomWidget = XmRowColumn AccCntrlButtonsRC;
            XmNbottomOffset = ACC_STD_Y_OFFSET;
            XmNleftAttachment = XmATTACH_FORM;
            };
        controls
            {
            XmLabel AccLoginControlLBL;
            XmLabel AccLoginAccountExpirationDateLBL;
            XmTextField AccLoginAccountExpirationDateTX;
            XmLabel AccLoginAccountTODLBL;
            XmTextField AccLoginAccountTODTX;
            XmRowColumn AccLoginControlsRC;
            XmToggleButton LoginAccountLockedTB;
            };
        };
    AccLoginControlLBL: XmLabel
        {
        arguments
            {
            XmNlabelString = LOGIN_CNTRLS_STR;
            XmNfontList = BIG_LABEL_FONT;
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            };
        };
    AccLoginAccountExpirationDateLBL: XmLabel
        {
        arguments
            {
            XmNlabelString = ACC_EXP_DATE_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopOffset = StdDistanceFromTopOfLabel+5;
            XmNtopWidget = XmLabel AccLoginControlLBL;
            };
        };
    AccLoginAccountExpirationDateTX: XmTextField
        {
        arguments
            {
!           XmNcolumns = 17;
            XmNwidth = 185;
            XmNmaxLength = 17;
            XmNfontList = TEXT_ENTRY_FONT;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNleftWidget = XmLabel AccLoginAccountExpirationDateLBL;
            XmNleftOffset = 5;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmLabel AccLoginAccountExpirationDateLBL;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_EXP_DATE);
                };
            };
        };
    AccLoginAccountTODLBL: XmLabel
        {
        arguments
            {
            XmNlabelString = ACC_TOD_STR;
            XmNfontList = SMALL_LABEL_FONT;
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmTextField AccLoginAccountTODTX;
            };
        };
    AccLoginAccountTODTX: XmTextField
        {
        arguments
            {
!           XmNcolumns = 17;
            XmNwidth = 185;
            XmNmaxLength = 49;
            XmNfontList = TEXT_ENTRY_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmTextField AccLoginAccountExpirationDateTX;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmTextField AccLoginAccountExpirationDateTX;
            XmNtopOffset = 15;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_TOD_DATE);
                };
            };
        };
    AccLoginControlsRC: XmRowColumn
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmLabel AccLoginControlLBL;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNleftWidget = XmTextField AccLoginAccountTODTX;
            XmNleftOffset = 10;
            XmNpacking = XmPACK_COLUMN;
            XmNorientation = XmVERTICAL;
            XmNnumColumns = 1;
            XmNspacing = 0;
            XmNmarginHeight = 0;
            };
        controls
            {
            XmScale AccMaxFailedLoginsSC;
            XmScale AccNiceValueSC;
            };
        };
    AccMaxFailedLoginsSC: XmScale
        {
        arguments
            {
            XmNfontList = SCALE_FONT;
            XmNmaximum = 100;
            XmNminimum = 0;
            XmNorientation = XmHORIZONTAL;
            XmNprocessingDirection = XmMAX_ON_RIGHT;
            XmNshowValue = true;
            XmNtitleString = MAX_FAILED_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_MAX_TRIES);
                };
            };
        };
    AccNiceValueSC: XmScale
        {
        arguments
            {
            XmNfontList = SCALE_FONT;
            XmNmaximum = NICE_MAX;
            XmNminimum = NICE_MIN;
            XmNorientation = XmHORIZONTAL;
            XmNprocessingDirection = XmMAX_ON_RIGHT;
            XmNshowValue = true;
            XmNtitleString = NICE_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_NICE);
                };
            };
        };
    LoginAccountLockedTB: XmToggleButton
        {
        arguments
            {
            XmNlabelString = ACC_LOCKED_STR;
            XmNfontList = TOGGLE_BUTTON_FONT;
            XmNleftAttachment = XmATTACH_FORM;
!           XmNtopAttachment = XmATTACH_WIDGET;
!           XmNtopWidget = XmTextField AccLoginAccountTODTX;
!           XmNtopOffset = 5;
            XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNbottomWidget = XmRowColumn AccLoginControlsRC;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_LOCKED);
                };
            };
        };

/******************************************************************************/
/* P A S S W O R D   C O N T R O L S                                          */
/******************************************************************************/

    AccPwdControlsFRM: XmForm 
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmForm AccInformationFRM;
            XmNleftAttachment = XmATTACH_WIDGET;
            XmNleftWidget = XmSeparator AccMain1SP;
            XmNleftOffset = ACC_SP_X_OFFSET;
            };
        controls
            {
            XmLabel AccPasswordParamLBL;
            XmRowColumn AccPasswordControlsRC;
            XmRowColumn AccPwdToggleButtonRC;
            };
        };
    AccPasswordParamLBL: XmLabel
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNlabelString = PWD_CNTRLS_STR;
            XmNfontList = BIG_LABEL_FONT;
            };
        };
    AccPasswordControlsRC: XmRowColumn
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmLabel AccPasswordParamLBL;
            XmNleftAttachment = XmATTACH_FORM;
            XmNpacking = XmPACK_COLUMN;
            XmNnumColumns = 1;
            XmNspacing = 0;
            XmNmarginHeight = 0;
            };
        controls
            {
            XmScale AccMinChangeTimeSC;
            XmScale AccExpirationTimeSC;
            XmScale AccLifetimeSC;
            XmScale AccMaxLengthSC;
            XmScale AccMinPwdLengthSC;
            XmScale AccPwdHistLimitSC;
            };
        };

    AccMinChangeTimeSC: XmScale 
        {
        arguments
            {
            XmNorientation = XmHORIZONTAL;
            XmNprocessingDirection = XmMAX_ON_RIGHT;
            XmNtitleString = MIN_CHNG_STR;
            XmNshowValue = true;
            XmNmaximum = MINCHANGE_MAX;
            XmNminimum = MINCHANGE_MIN;
            XmNfontList = SCALE_FONT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_CHG_TIME);
                };
            };
        };
    AccExpirationTimeSC: XmScale 
        {
        arguments
            {
            XmNfontList = SCALE_FONT;
            XmNorientation = XmHORIZONTAL;
            XmNprocessingDirection = XmMAX_ON_RIGHT;
            XmNmaximum = EXPIRE_MAX;
            XmNminimum = EXPIRE_MIN;
            XmNshowValue = true;
            XmNtitleString = EXP_TIME_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_EXP_TIME);
                };
            };
        };
    AccLifetimeSC: XmScale 
        {
        arguments
            {
            XmNfontList = SCALE_FONT;
            XmNmaximum = LIFETIME_MAX;
            XmNminimum = LIFETIME_MIN;
            XmNorientation = XmHORIZONTAL;
            XmNprocessingDirection = XmMAX_ON_RIGHT;
            XmNshowValue = true;
            XmNtitleString = LIFETIME_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_LIFETIME);
                };
            };
        };
    AccMaxLengthSC: XmScale 
        {
        arguments
            {
            XmNfontList = SCALE_FONT;
            XmNmaximum = PASSLEN_MAX;
            XmNminimum = PASSLEN_MIN;
            XmNorientation = XmHORIZONTAL;
            XmNprocessingDirection = XmMAX_ON_RIGHT;
            XmNshowValue = true;
            XmNtitleString = MAX_LENGTH_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_MAX_LENGTH);
                };
            };
        };
    AccMinPwdLengthSC: XmScale 
        {
        arguments
            {
            XmNfontList = SCALE_FONT;
            XmNmaximum = PASSLEN_MAX;
            XmNminimum = PASSLEN_MIN;
            XmNorientation = XmHORIZONTAL;
            XmNprocessingDirection = XmMAX_ON_RIGHT;
            XmNshowValue = true;
            XmNtitleString = MIN_PWD_LENGTH_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_MIN_LENGTH);
                };
            };
        };
    AccPwdHistLimitSC: XmScale 
        {
        arguments
            {
            XmNfontList = SCALE_FONT;
            XmNmaximum = HISTLIMIT_MAX;
            XmNminimum = HISTLIMIT_MIN;
            XmNorientation = XmHORIZONTAL;
            XmNprocessingDirection = XmMAX_ON_RIGHT;
            XmNshowValue = true;
            XmNtitleString = PWD_HIST_LIMIT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_HIST_LIMIT);
                };
            };
        };

    AccPwdToggleButtonRC: XmRowColumn 
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmRowColumn AccPasswordControlsRC;
            XmNtopOffset = 10;
            XmNleftAttachment = XmATTACH_FORM;
            XmNnumColumns = 1;
            XmNorientation = XmVERTICAL;
            XmNpacking = XmPACK_COLUMN;
            XmNborderColor = rgb(0,0,0);
            XmNborderWidth = 0;
            XmNspacing = 3;
            XmNmarginHeight = 0;
            };
        controls
            {
            XmToggleButton PwdReqTB;
            XmToggleButton PwdUsersChooseTB;
            XmToggleButton PwdSysGenTB;
            XmToggleButton PwdRandomCharsTB;
            XmToggleButton PwdRandomLettersTB;
            XmToggleButton PwdTrivialChecksTB;
            XmToggleButton PwdSiteTrivialChecksTB;
            };
        };
    PwdReqTB: XmToggleButton 
        {
        arguments
            {
            XmNlabelString = PWD_REQ_STR;
            XmNfontList = TOGGLE_BUTTON_FONT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_REQUIRED);
                };
            };
        };
    PwdUsersChooseTB: XmToggleButton 
        {
        arguments
            {
            XmNlabelString = USER_CHOOSES_STR;
            XmNfontList = TOGGLE_BUTTON_FONT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_USER_CHOOSE);
                };
            };
        };
    PwdSysGenTB: XmToggleButton 
        {
        arguments
            {
            XmNlabelString = SYS_GEN_STR;
            XmNfontList = TOGGLE_BUTTON_FONT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_GENERATED);
                };
            };
        };
    PwdRandomCharsTB: XmToggleButton 
        {
        arguments
            {
            XmNlabelString = RAND_CHARS_STR;
            XmNfontList = TOGGLE_BUTTON_FONT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_RAND_CHARS);
                };
            };
        };
    PwdRandomLettersTB: XmToggleButton 
        {
        arguments
            {
            XmNlabelString = RAND_LETTERS_STR;
            XmNfontList = TOGGLE_BUTTON_FONT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_RAND_LETTERS);
                };
            };
        };
    PwdTrivialChecksTB: XmToggleButton 
        {
        arguments
            {
            XmNlabelString = TRIV_CHCKS_STR;
            XmNfontList = TOGGLE_BUTTON_FONT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_TRIV_CHECKS);
                };
            };
        };
    PwdSiteTrivialChecksTB: XmToggleButton 
        {
        arguments
            {
            XmNlabelString = SITE_TRIV_CHCKS_STR;
            XmNfontList = TOGGLE_BUTTON_FONT;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_SITE_TRIV_CHECKS);
                };
            };
        };

/******************************************************************************/
/* C O M M A N D   A U T H O R I Z A T I O N S */
/******************************************************************************/

    AccCmdAuthFRM: XmForm 
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmForm AccInformationFRM;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmSeparator AccMain2SP;
            XmNleftOffset = ACC_SP_X_OFFSET+3;
            XmNmarginWidth = 0;
            XmNmarginHeight = 0;
            };
        controls
            {
            XmLabel AccCmdAuthLBL;
            XmForm AccCmdAuthSLFRM;
            };
        };
    AccCmdAuthLBL: XmLabel 
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNlabelString = CMD_AUTH_STR;
            XmNfontList = BIG_LABEL_FONT; 
            };
        };
    AccCmdAuthSLFRM: XmForm 
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget =  XmLabel AccCmdAuthLBL;
            XmNwidth = ACC_SL_FRM_WIDTH;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNmarginHeight = 4;
            XmNmarginWidth = 4;
            XmNshadowType = XmSHADOW_ETCHED_OUT;
            XmNshadowThickness = 2;
            };
        controls
            {
            user_defined AccCmdAuthSL;
            };
        };
    AccCmdAuthSL: user_defined procedure XmCreateSelectList
        {
        arguments
            {
            XmNbottomAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNleftPosition = 50;
            XmNrightAttachment = XmATTACH_FORM;
            XmNvisibleItemCount = 5;
            XmNselectionPolicy = XmSINGLE_SELECT;
            XmNalphabetizeLists = true;
            XmNselectListLabelString = "Selected";
            XmNavailableListLabelString = "Available";
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_CMD_AUTHS);
                };
            };
        };

/******************************************************************************/
/* K E R N E L / B A S E   P R I V I L E G E S */
/******************************************************************************/

    AccKrnlAuthFRM: XmForm 
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmForm AccCmdAuthFRM;
            XmNtopOffset = ACC_STD_Y_OFFSET-12;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmForm AccCmdAuthFRM;
            XmNmarginWidth = 0;
            XmNmarginHeight = 0;
            };
        controls
            {
            XmLabel AccKrnlAuthLBL;
            XmForm AccKrnlAuthSLFRM;
            };
        };
    AccKrnlAuthLBL: XmLabel 
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNlabelString = KRNL_AUTH_STR;
            XmNfontList = BIG_LABEL_FONT;
            };
        };
    AccKrnlAuthSLFRM: XmForm 
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget =  XmLabel AccKrnlAuthLBL;
            XmNwidth = ACC_SL_FRM_WIDTH;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNmarginHeight = 4;
            XmNmarginWidth = 4;
            XmNshadowType = XmSHADOW_ETCHED_OUT;
            XmNshadowThickness = 2;
            };
        controls
            {
            user_defined AccKrnlAuthSL;
            };
        };
    AccKrnlAuthSL: user_defined procedure XmCreateSelectList
        {
        arguments
            {
            XmNbottomAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNleftPosition = 50;
            XmNrightAttachment = XmATTACH_FORM;
            XmNvisibleItemCount = 5;
            XmNselectionPolicy = XmSINGLE_SELECT;
            XmNalphabetizeLists = true;
            XmNselectListLabelString = "Selected";
            XmNavailableListLabelString = "Available";
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_KERNEL_AUTHS);
                };
            };
        };
    AccBasePrivFRM: XmForm 
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmForm AccKrnlAuthFRM;
            XmNtopOffset = ACC_STD_Y_OFFSET-12;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmForm AccKrnlAuthFRM;
            XmNmarginWidth = 0;
            XmNmarginHeight = 0;
            };
        controls
            {
            XmLabel AccBasePrivLBL;
            XmForm AccBasePrivSLFRM;
            };
        };
    AccBasePrivLBL: XmLabel 
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNlabelString = BASE_PRIV_STR;
            XmNfontList = BIG_LABEL_FONT; 
            };
        };
    AccBasePrivSLFRM: XmForm 
        {
        arguments
            {
            XmNleftAttachment = XmATTACH_FORM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget =  XmLabel AccBasePrivLBL;
            XmNwidth = ACC_SL_FRM_WIDTH;
            XmNresizePolicy = XmRESIZE_NONE;
            XmNmarginHeight = 4;
            XmNmarginWidth = 4;
            XmNshadowType = XmSHADOW_ETCHED_OUT;
            XmNshadowThickness = 2;
            };
        controls
            {
            user_defined AccBasePrivSL;
            };
        };
    AccBasePrivSL: user_defined procedure XmCreateSelectList
        {
        arguments
            {
            XmNbottomAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_POSITION;
            XmNleftPosition = 50;
            XmNrightAttachment = XmATTACH_FORM;
            XmNvisibleItemCount = 5;
            XmNselectionPolicy = XmSINGLE_SELECT;
            XmNalphabetizeLists = true;
            XmNselectListLabelString = "Selected";
            XmNavailableListLabelString = "Available";
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_BASE_PRIVS);
                };
            };
        };

    AccClearanceLBL: XmLabel
        {
        arguments
            {
            XmNlabelString = CLEARANCE_STR;
            XmNfontList = BIG_LABEL_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmForm AccBasePrivFRM;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmForm AccBasePrivFRM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmForm AccBasePrivFRM;
            XmNtopOffset = ACC_STD_Y_OFFSET-2;
            };
        };

    AccClearanceTX: XmScrolledText 
        {
        arguments
            {
!           XmNcolumns = 21;
            XmNfontList = TEXT_ENTRY_FONT;
            XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNleftWidget = XmForm AccBasePrivFRM;
            XmNtopAttachment = XmATTACH_WIDGET;
            XmNtopWidget = XmLabel AccClearanceLBL;
            XmNscrollVertical = false;
            XmNscrollHorizontal = true;
            XmNeditMode = XmSINGLE_LINE_EDIT;
            XmNeditable = false;
            XmNwidth = 220;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_CLEARANCE_TX);
                };
            };
        };
    AccClearancePB: XmPushButton 
        {
        arguments
            {
            XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNtopWidget = XmScrolledText AccClearanceTX;
            XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNbottomWidget = XmScrolledText AccClearanceTX;
            XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
            XmNrightWidget = XmForm AccBasePrivFRM;
            XmNlabelString = CHANGE_CLEARANCE_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_CLEARANCE_PB);
                };
            };
        };

/******************************************************************************/
/* C O N T R O L   B U T T O N S */
/******************************************************************************/

    AccCntrlButtonsRC: XmRowColumn 
        {
        arguments
            {
            XmNbottomAttachment = XmATTACH_FORM;
            XmNleftAttachment = XmATTACH_POSITION;
#ifdef SEC_PRIV
            XmNleftPosition = 39;
#else 
            XmNleftPosition = 32;
#endif
            XmNorientation = XmHORIZONTAL;
            XmNpacking = XmPACK_COLUMN;
            XmNentryAlignment = XmALIGNMENT_CENTER;
            };
        controls
            {
            XmPushButton AccOKPB;
            XmPushButton AccApplyPB;
            XmPushButton AccCancelPB;
            XmPushButton AccHelpPB;
            };
        };
    AccApplyPB: XmPushButton 
        {
        arguments
            {
            XmNlabelString = APPLY_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_APPLY_PB);
                };
            };
        };
    AccCancelPB: XmPushButton 
        {
        arguments
            {
            XmNlabelString = CANCEL_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_CANCEL_PB);
                };
            };
        };
    AccOKPB: XmPushButton 
        {
        arguments
            {
            XmNlabelString = OK_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_OK_PB);
                };
            };
        };
    AccHelpPB: XmPushButton 
        {
        arguments
            {
            XmNlabelString = HELP_STR;
            };
        callbacks
            {
            MrmNcreateCallback = procedures
                {
                AccCommonGetWidgetCB(ACC_HELP_PB);
                };
            };
        };
