!+++
!  COPYRIGHT (c) 1993 BY
!  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
!  ALL RIGHTS RESERVED.
!
!  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
!  ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
!  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
!  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
!  OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
!  TRANSFERRED.
!
!  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
!  AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
!  CORPORATION.
!
!  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
!  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
!---
! 
! Facility:
!
!   DXpause
!
! Abstract:
!   UIL definitions for dxpause
!
! Modification History:
!	
!	09-nov-93 pjw	Allow PauseLabel to be specified in a resource file
! 	25-jun-93 lpr 	Added Motif 1.2 support
!       09-dec-92 dh 	Move screen above siblings instead of grabbing
! 

identifier
	passlabel_id;
	passtext_id;
	scdpasstext_id;
	pauselabel_id;
	pauseok_id;
	
procedure
	PauseCancelCallback();
	PauseOkCallback();
        widget_create_proc(any);

!
! Pause Session screen
!
object
	PauseContainer: XmDrawingArea {
	    arguments {
		XmNx = 0;
		XmNy = 0;
		XmNborderWidth = 0;
		XmNmarginHeight = 0;
		XmNmarginWidth = 0;
	    };
	};

object
	PauseDialog: XmForm {
	    arguments {
                XmNdefaultPosition = false;
		XmNhorizontalSpacing = k_adb_horizontal_offset;
		XmNverticalSpacing = k_adb_vertical_offset;
		XmNdefaultButton = XmPushButton PauseOK;
		XmNcancelButton = XmPushButton PauseClear;
		XmNborderWidth = 0;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = 5;
		XmNshadowType = XmSHADOW_OUT;
		XmNshadowThickness = 5;
	    };
	    controls {
		XmLabel PauseLabel;
		XmLabel PasswordLabel;
		XmText Password;
		XmPushButton PauseOK;
		XmPushButton PauseClear;
	    };
	};

object
        PauseLabel: XmLabel {
            arguments {
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_adb_vertical_offset;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNrightAttachment = XmATTACH_FORM;
		XmNrightOffset = k_adb_horizontal_offset;
! Move this to the resource file
!		XmNlabelString = k_pass_def_enter_text;
            };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (pauselabel_id);
            };
        };

object
        PasswordLabel: XmLabel {
            arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel PauseLabel;
		XmNtopOffset = k_adb_medium_vert_offset+5;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNlabelString = k_pause_pass1_text;
            };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (passlabel_id);
            };
        };

object
        Password: XmText {
            arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel PauseLabel;
		XmNtopOffset = k_adb_medium_vert_offset;
		XmNleftAttachment = XmATTACH_WIDGET;
        	XmNleftWidget = XmLabel PasswordLabel;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNrightAttachment = XmATTACH_FORM;
		XmNrightOffset = k_adb_horizontal_offset;
                XmNcolumns = k_pause_pass1_text_cols;
                XmNrows = k_pause_pass1_text_rows;
                XmNresizeHeight = false;
                XmNresizeWidth = false;
		XmNautoShowCursorPosition = false;
		XmNcursorPositionVisible = false;
		XmNeditMode = XmSINGLE_LINE_EDIT;
		XmNhighlightThickness = 0;
            };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (passtext_id);
            };
        };

object
	PauseOK: XmPushButton {
            arguments {
	        XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel PasswordLabel;
		XmNtopOffset = k_adb_medium_vert_offset;
!		XmNbottomAttachment = XmATTACH_FORM;
!		XmNbottomOffset = 5;
		XmNleftAttachment = XmATTACH_POSITION;
		XmNleftPosition = 24;
		XmNlabelString = k_pause_ok_text;
		XmNhighlightThickness = 0;
            };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (pauseok_id);
		XmNactivateCallback = procedure PauseOkCallback();
            };
        };

object
	PauseClear: XmPushButton {
            arguments {
	        XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel PasswordLabel;
		XmNtopOffset = k_adb_medium_vert_offset;
!		XmNbottomAttachment = XmATTACH_FORM;
!		XmNbottomOffset = 5;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmPushButton PauseOK;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNlabelString = k_pause_clear_text;
		XmNhighlightThickness = 0;
	    };
            callbacks {
		XmNactivateCallback = procedure PauseCancelCallback();
            };
        };

object
	end_quit_cb : XmWarningDialog {
	    arguments {
		XmNdialogTitle = k_caution_text;
		XmNdefaultPosition = true;
		XmNmessageString = k_end_quit_text;
		XmNokLabelString = k_end_quit_yes_text;
		XmNhelpLabelString = '';
		XmNcancelLabelString = k_end_quit_cancel_text;
	    };
	};

object
	end_save_cb : XmWarningDialog {
	    arguments {
		XmNdialogTitle= k_caution_text;
		XmNdefaultPosition = true;
		XmNmessageString = k_end_save_text;
		XmNokLabelString = k_end_save_yes_text;
		XmNhelpLabelString = k_end_save_no_text;
		XmNcancelLabelString = k_end_save_cancel_text;
	    };
	};

!
! Error Message Box
!
object
        PauseError : XmMessageBox {
	  arguments {
	    XmNdefaultPosition = true;
	    XmNokLabelString = k_message_button_text;
	    XmNdialogTitle = k_error_text;
	    XmNborderWidth = 0;
	    XmNshadowType = XmSHADOW_OUT;
	    XmNshadowThickness = 5;

	  };
        };

