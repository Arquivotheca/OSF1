! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! @(#)$RCSfile: sm_cust_appdef.src.uil,v $ $Revision: 1.1.2.3 $ (DEC) $Date: 93/01/05 17:05:16 $
! 
!	This module is part of the SESSION MANAGER component.  
!	It contains no translatable text.

!
! Customize Application Menu box
!

identifier
	appdef_listbox_id;
	appdef_command_field_id;
	appdef_name_field_id;
	appdef_remove_id;

procedure
        AppDefAddButton();
        AppDefRemoveButton();
        AppDefOkButton();
        AppDefDismissButton();
        AppDefApplyButton();
	AppDefListSelect();


object
	CustomizeAppDef: XmFormDialog {
	    arguments {
		XmNdefaultPosition = true;
		XmNhorizontalSpacing = k_adb_horizontal_offset*3;
		XmNverticalSpacing = k_adb_vertical_offset;
		XmNdialogTitle = k_appdef_title_text;
		XmNdialogStyle = XmDIALOG_MODELESS;
		XmNmarginHeight = k_appdef_db_mheight;
		XmNmarginWidth = k_appdef_db_mwidth;
		XmNautoUnmanage = false;
		XmNresizable = false;
                XmNdefaultButton = XmPushButton AppDefAdd;
                XmNcancelButton = XmPushButton AppDefDismiss;
	    };
    controls
      {
	XmForm ADRemoveContainer;
	XmForm ADAddContainer;
	XmForm ADButtonsContainer;
      };

  };

object ADRemoveContainer : XmForm
  {
    arguments
      {
        arguments top_form_args;
      };
     controls
       {
         XmLabel AppDefListLabel;
         XmScrolledList AppDefList;
         XmPushButton AppDefRemove;
       };
  };

object ADAddContainer : XmForm
  {
    arguments
      {
        arguments form_args;
	XmNtopWidget = XmForm ADRemoveContainer;
      };
     controls
       {
         XmLabel DefCommandLabel;
         XmLabel DefNameLabel;
         XmText DefNameField;
         XmText DefCommandField;
         XmPushButton AppDefAdd;
       };
  };

object ADButtonsContainer : XmForm
  {
    arguments
      {
        arguments form_button_args;
	XmNtopWidget = XmForm ADAddContainer;
        XmNdefaultButton = XmPushButton AppDefOK;
        XmNcancelButton = XmPushButton AppDefDismiss;
      };
  controls 
    {
      XmPushButton AppDefOK;
      XmPushButton AppDefApply;
      XmPushButton AppDefDismiss;
#ifdef HYPERHELP
      XmPushButton AppDefHelp;
#endif
    };
  };

object
	AppDefListLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_adb_vertical_offset;
		XmNlabelString = k_appdef_list_text;
		XmNresizable = false;
	    };
	};
object
	AppDefList: XmScrolledList {
	    arguments {
		XmNrightAttachment = XmATTACH_FORM;
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel AppDefListLabel;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel AppDefListLabel;
		XmNtopOffset = k_adb_lb_vert_offset;
		XmNwidth = k_appdef_list_lb_width;
		XmNvisibleItemCount = k_appdef_list_lb_items;
		XmNselectionPolicy = XmSINGLE_SELECT;
		XmNlistSizePolicy = XmCONSTANT;
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (appdef_listbox_id);
		XmNsingleSelectionCallback = procedure AppDefListSelect();
		XmNdefaultActionCallback = procedure AppDefListSelect();
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_appdef_help);
#endif
	    };
	};


object	AppDefOK: XmPushButton {
	    arguments {
		arguments ok_args;
		XmNtopWidget = XmPushButton AppDefApply;
		XmNrightWidget = XmPushButton AppDefApply;
	    };
            callbacks {
		XmNactivateCallback = procedure AppDefOkButton();
            };
	};

object
	AppDefApply: XmPushButton {
	    arguments {
		arguments apply_args;
	    };
            callbacks {
		XmNactivateCallback = procedure AppDefApplyButton();
            };
	};

object
	AppDefDismiss: XmPushButton {
	    arguments {
		arguments cancel_args;
		XmNtopWidget = XmPushButton AppDefOK;
		XmNleftWidget = XmPushButton AppDefApply;
	    };
            callbacks {
		XmNactivateCallback = procedure AppDefDismissButton();
            };
	};

object
	AppDefHelp: XmPushButton {
	    arguments {
		arguments help_args;
		XmNleftWidget = XmPushButton AppDefDismiss;
		XmNtopWidget = XmPushButton AppDefOK;               
	    };
            callbacks {
#ifdef HYPERHELP
		XmNactivateCallback
			= procedure help_system_proc(k_appdef_help);
#endif
            };
	};

object
	DefNameLabel: XmLabel {
	    arguments {
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_shadow_thickness*2;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_shadow_thickness*2;
		XmNlabelString = k_defname_text_text;
	    };
	};
object
	DefNameField: XmText {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel DefNameLabel;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel DefNameLabel;
		XmNtopOffset = 0;
		XmNrightAttachment = XmATTACH_FORM;
	 	XmNrightOffset = k_adb_horizontal_offset;
		XmNcolumns = k_defname_text_cols;
		XmNrows = k_defname_text_rows;
		XmNresizeHeight = false;
		XmNresizeWidth = false;
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (appdef_name_field_id);
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_appdef_help);
#endif
                      };
	};
object
	DefCommandLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmText DefNameField;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmText DefNameField;
		XmNtopOffset = k_adb_small_vert_offset;
		XmNlabelString = k_defcommand_text_text;
	    };
	};
object
	DefCommandField: XmText {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel DefCommandLabel;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel DefCommandLabel;
		XmNtopOffset = 0;
		XmNrightAttachment = XmATTACH_FORM;
	 	XmNrightOffset = k_adb_horizontal_offset;
		XmNcolumns = k_defcommand_text_cols;
		XmNrows = k_defcommand_text_rows;
		XmNresizeHeight = false;
		XmNresizeWidth = false;
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (appdef_command_field_id);
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_appdef_help);
#endif
                      };
	};
object
	AppDefRemove: XmPushButton {
	    arguments {
		arguments middle_button_args;
		XmNtopWidget = XmScrolledList AppDefList;
		XmNlabelString = k_appdef_remove_text;
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (appdef_remove_id);
		XmNactivateCallback = procedure AppDefRemoveButton();
                      };
	};
object
	AppDefAdd: XmPushButton {
	    arguments {
		arguments middle_button_args;
		XmNtopWidget = XmText DefCommandField;
		XmNlabelString = k_appdef_add_text;
	    };
            callbacks {
		XmNactivateCallback = procedure AppDefAddButton();
                      };
	};


