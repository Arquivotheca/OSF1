! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
!
!	This module is part of the SESSION MANAGER component.  
!	It contains no translatable text.

!
! Customize Screen Number box - only used on multi-head systems
!

identifier
	scrapplprompt_id;
	scrapplscale_id;
	confirmprtbox_id;
#ifdef DOPRINT
	scrprtprompt_id;
	scrprtscale_id;
#endif

procedure
        ScreenOkCallback();
        ScreenApplyCallback();
        ScreenCancelCallback();
	ConfirmScrOkCallback();
	ConfirmScrCancelCallback();

object
	CustomizeScreen: XmFormDialog {
	    arguments {
		XmNdefaultPosition = true;
		XmNdialogTitle = k_screen_title_text;
                XmNmarginHeight = k_screen_db_mheight;
                XmNmarginWidth = k_screen_db_mwidth;
                XmNautoUnmanage = false;
                XmNdefaultButton = XmPushButton Screen_OK;
                XmNcancelButton = XmPushButton Screen_Dismiss;
            };
            controls {
                XmLabel ApplicationLabel;
		XmToggleButton AppScreenPrompt;
		XmLabel AppDefaultLabel;
		XmRadioBox AppDefaultScreenBox;

#ifdef DOPRINT
                XmLabel PrintCaptureLabel;
		XmToggleButton PrintCapturePrompt;
		XmLabel PrtDefaultLabel;
		XmRadioBox PrtDefaultScreenBox;
#endif

                XmPushButton Screen_OK;
                XmPushButton Screen_Apply;
                XmPushButton Screen_Dismiss;
            };
	};

object
	ApplicationLabel: XmLabel {
	    arguments {
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_adb_vertical_offset;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNlabelString = k_screen_application_text;
	    };
	};

object
	AppScreenPrompt: XmToggleButton {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel ApplicationLabel;
		XmNtopOffset = 0;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset + 20;
		XmNlabelString = k_screen_appl_prompt_text;		
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (scrapplprompt_id);
            };
	};

object
	AppDefaultLabel: XmLabel {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmToggleButton AppScreenPrompt;
		XmNtopOffset = 0;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset + 20;
		XmNlabelString = k_screen_appdefault_text;
	    };
	};

object
	AppDefaultScreenBox: XmRadioBox {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel AppDefaultLabel;
		XmNtopOffset = 0;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset + 25;
		XmNborderWidth = 0;
		XmNradioBehavior = true;
		XmNorientation = XmHORIZONTAL;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (scrapplscale_id);
            };
	};

#ifdef DOPRINT
object
	PrintCaptureLabel: XmLabel {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmRadioBox AppDefaultScreenBox;
		XmNtopOffset = 0;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNlabelString = k_screen_printcapture_text;
	    };
	};

object
	PrintCapturePrompt: XmToggleButton {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel PrintCaptureLabel;
		XmNtopOffset = 0;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset + 20;
		XmNlabelString = k_screen_prtcapt_prompt_text;	
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (scrprtprompt_id);
            };
	};

object
	PrtDefaultLabel: XmLabel {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmToggleButton PrintCapturePrompt;
		XmNtopOffset = 0;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset + 25;
		XmNlabelString = k_screen_prtdefault_text;
	    };
	};

object
	PrtDefaultScreenBox: XmRadioBox {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel PrtDefaultLabel;
		XmNtopOffset = 0;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset + 25;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_adb_vertical_offset;
		XmNborderWidth = 0;
		XmNradioBehavior = true;
		XmNorientation = XmHORIZONTAL;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (scrprtscale_id);
            };
	};
#endif

object
	Screen_OK: XmPushButton {
	    arguments {
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_adb_vertical_offset;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmToggleButton AppScreenPrompt;
		XmNleftOffset = k_adb_horizontal_offset + 20;
		XmNrightAttachment = XmATTACH_FORM;
		XmNrightOffset = k_adb_horizontal_offset;
		XmNwidth = k_screen_ok_pb_width;
		XmNlabelString = k_general_ok_text;
	    };
            callbacks {
		XmNactivateCallback = procedure ScreenOkCallback();
            };
	};
object
	Screen_Apply: XmPushButton {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmPushButton Screen_OK;
		XmNtopOffset = k_adb_small_vert_offset;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmToggleButton AppScreenPrompt;
		XmNleftOffset = k_adb_horizontal_offset + 20;
		XmNrightAttachment = XmATTACH_FORM;
		XmNrightOffset = k_adb_horizontal_offset;
		XmNwidth = k_screen_apply_pb_width;
		XmNlabelString = k_general_apply_text;
	    };
            callbacks {
		XmNactivateCallback = procedure ScreenApplyCallback();
            };
	};

object
	Screen_Dismiss: XmPushButton {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmPushButton Screen_Apply;
		XmNtopOffset = k_adb_small_vert_offset;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmToggleButton AppScreenPrompt;
		XmNleftOffset = k_adb_horizontal_offset + 20;
		XmNrightAttachment = XmATTACH_FORM;
		XmNrightOffset = k_adb_horizontal_offset;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_adb_vertical_offset;
		XmNwidth = k_screen_dismiss_pb_width;
		XmNlabelString = k_general_dismiss_text;
	    };
            callbacks {
		XmNactivateCallback = procedure ScreenCancelCallback();
            };
	};

!
! confirm screennum popup
!
object
	ConfirmScreen: XmFormDialog {
	    arguments {
		XmNdialogTitle = k_screenconf_title_text;
		XmNmarginHeight = k_screenconf_db_mheight;
		XmNmarginWidth = k_screenconf_db_mwidth;
                XmNdefaultPosition = true;
		XmNdefaultButton = XmPushButton ConfirmScreenOK;
		XmNcancelButton = XmPushButton ConfirmScreenCancel;
	    };
	    controls {
		XmLabel ConfirmScreenLabel;
		XmRadioBox ConfirmScreenBox;
		XmPushButton ConfirmScreenOK;
		XmPushButton ConfirmScreenCancel;
	   };
	};

object
	ConfirmScreenLabel: XmLabel {
	    arguments {
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_adb_vertical_offset;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNlabelString = k_screenconf_label_text;
	    };
	};

object
	ConfirmScreenBox: XmRadioBox {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel ConfirmScreenLabel;
		XmNtopOffset = k_adb_vertical_offset;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_medium_horiz_offset;
		XmNborderWidth = 0;
		XmNradioBehavior = true;
		XmNorientation = XmHORIZONTAL;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (confirmprtbox_id);
            };
	};

object
	ConfirmScreenOK: XmPushButton {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmRadioBox ConfirmScreenBox;
		XmNtopOffset = k_adb_vertical_offset;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_adb_vertical_offset;
		XmNwidth = k_screenconf_ok_pb_width;
		XmNlabelString = k_screenconf_ok_text;
	    };
            callbacks {
		XmNactivateCallback = procedure ConfirmScrOkCallback();
            };
	};
object
	ConfirmScreenCancel: XmPushButton {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmRadioBox ConfirmScreenBox;
		XmNtopOffset = k_adb_vertical_offset;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_adb_vertical_offset;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmPushButton ConfirmScreenOK;
		XmNleftOffset = k_adb_vertical_offset;
		XmNrightAttachment = XmATTACH_FORM;
		XmNrightOffset = k_adb_horizontal_offset;
		XmNlabelString = k_screenconf_cancel_text;
	    };
            callbacks {
		XmNactivateCallback = procedure ConfirmScrCancelCallback();
            };
	};
