! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! @(#)$RCSfile: sm_cust_appmenu.src.uil,v $ $Revision: 1.1.2.2 $ (DEC) $Date: 92/12/28 13:01:29 $
! 
!	This module is part of the SESSION MANAGER component.  
!	It contains no translatable text.

!
! Customize Application Menu box
!

identifier
	appmenu_menu_listbox_id;
	appmenu_def_listbox_id;

procedure
        AppMenuOkCallback();
        AppMenuDismissCallback();
        AppMenuApplyCallback();
        AppMenuAddCallback();
        AppMenuRemoveCallback();

object
	CustomizeAppMenu: XmFormDialog {
	    arguments {
 		XmNnoResize = true;
		XmNdefaultPosition = true;
		XmNhorizontalSpacing = k_adb_horizontal_offset;
		XmNverticalSpacing = k_adb_vertical_offset;
		XmNdialogTitle = k_appmenu_title_text;
		XmNdialogStyle = XmDIALOG_MODELESS;
		XmNmarginHeight = k_appmenu_db_mheight;
		XmNmarginWidth = k_appmenu_db_mwidth;
		XmNautoUnmanage = false;
		XmNresizable = false;
                XmNdefaultButton = XmPushButton AppMenuOK;
                XmNcancelButton = XmPushButton AppMenuDismiss;
	    };
    controls
      {
	XmForm AMContainer;
	XmForm AMButtonsContainer;
      };
  };

object AMContainer : XmForm
  {
    arguments
      {
        arguments top_form_args;
      };
     controls
       {
	 XmForm DefContainer;
	 XmForm MenuContainer;
       };
  };
      
object AMButtonsContainer : XmForm
  {
    arguments
      {
        arguments form_button_args;
	XmNtopWidget = XmForm AMContainer;
        XmNdefaultButton = XmPushButton AppMenuOK;
        XmNcancelButton = XmPushButton AppMenuDismiss;
      };
  controls 
    {
      XmPushButton AppMenuOK;
      XmPushButton AppMenuApply;
      XmPushButton AppMenuDismiss;
#ifdef HYPERHELP
      XmPushButton AppMenuHelp;
#endif
    };
  };

object
	DefContainer: XmForm {
	    arguments {
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_shadow_thickness*2;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_shadow_thickness*2;
		XmNborderWidth = 0;
		XmNmarginHeight = 0;		
		XmNmarginWidth = 0;
	    };
            controls {
                XmLabel DefListLabel;
                XmScrolledList DefList;
	    };
	};

object
	DefListLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_FORM;
        	XmNleftOffset = k_shadow_thickness*2;
		XmNtopAttachment = XmATTACH_FORM;
        	XmNtopOffset = k_shadow_thickness*2;
		XmNlabelString = k_deflist_list_text;
	    };
	};

object
	DefList: XmScrolledList {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel DefListLabel;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel DefListLabel;
		XmNtopOffset = k_adb_lb_vert_offset;
!		XmNbottomAttachment = XmATTACH_FORM;
!		XmNbottomOffset = k_shadow_thickness*2;
		XmNwidth = k_deflist_list_lb_width;
		XmNvisibleItemCount = k_deflist_list_lb_items;
		XmNselectionPolicy = XmSINGLE_SELECT;
		XmNlistSizePolicy = XmCONSTANT;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (appmenu_def_listbox_id);
                XmNsingleSelectionCallback = procedure AppMenuAddCallback();
                XmNdefaultActionCallback = procedure AppMenuAddCallback();
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_appmenu_help);
#endif
	    };
	};

object
	MenuContainer: XmForm {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmForm DefContainer;
		XmNleftOffset = k_adb_medium_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmForm DefContainer;
		XmNtopOffset = k_shadow_thickness*2;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_shadow_thickness*2;
		XmNrightAttachment = XmATTACH_FORM;
		XmNrightOffset = k_adb_horizontal_offset + 5;
		XmNborderWidth = 0;
		XmNmarginHeight = 0;		
		XmNmarginWidth = 0;
		XmNresizable = false;
	    };
            controls {
                XmLabel MenuListLabel;
                XmScrolledList MenuList;
	    };
	};

object
	MenuListLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = 0;
		XmNlabelString = k_menulist_list_text;
	    };
	};

object
	MenuList: XmScrolledList {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel MenuListLabel;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel MenuListLabel;
		XmNtopOffset = k_adb_lb_vert_offset;
!		XmNbottomAttachment = XmATTACH_FORM;
!		XmNbottomOffset = k_shadow_thickness*2;
		XmNwidth = k_menulist_list_lb_width;
		XmNvisibleItemCount = k_menulist_list_lb_items;
		XmNselectionPolicy = XmSINGLE_SELECT;
		XmNlistSizePolicy = XmCONSTANT;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc(appmenu_menu_listbox_id);
                XmNsingleSelectionCallback = procedure AppMenuRemoveCallback();
                XmNdefaultActionCallback = procedure AppMenuRemoveCallback();
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_appmenu_help);
#endif
	    };
	};

object
	AppMenuOK: XmPushButton {
	    arguments {
		arguments ok_args;
		XmNtopWidget = XmPushButton AppMenuApply;
		XmNrightWidget = XmPushButton AppMenuApply;
	    };
            callbacks {
		XmNactivateCallback = procedure AppMenuOkCallback();
            };
	};

object
	AppMenuApply: XmPushButton {
	    arguments {
		arguments apply_args;
	    };
            callbacks {
		XmNactivateCallback = procedure AppMenuApplyCallback();
            };
	};

object
	AppMenuDismiss: XmPushButton {
	    arguments {
		arguments cancel_args;
		XmNtopWidget = XmPushButton AppMenuOK;
		XmNleftWidget = XmPushButton AppMenuApply;
	    };
            callbacks {
		XmNactivateCallback = procedure AppMenuDismissCallback();
            };
	};

object
	AppMenuHelp: XmPushButton {
	    arguments {
		arguments help_args;
		XmNtopWidget = XmPushButton AppMenuOK;
		XmNleftWidget = XmPushButton AppMenuDismiss;
	    };
            callbacks {
#ifdef HYPERHELP
		XmNactivateCallback = procedure help_system_proc(k_appmenu_help);
#endif
            };
	};

