! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
!	This module is part of the SESSION MANAGER component.  
!	It contains no translatable text.

!
! Customize Session box
!


identifier
    statebox_id;
    stateicon_id;
    statemapped_id;
    pausetext_id;
    endconfirm_id;

procedure
        SmOkCallback();
        SmApplyCallback();
        SmCancelCallback();

object
	CustomizeSession: XmFormDialog {
	    arguments {
		XmNdefaultPosition = true;
		XmNhorizontalSpacing = k_adb_horizontal_offset;
		XmNverticalSpacing = k_adb_vertical_offset;
		XmNdialogTitle = k_session_title_text;
                XmNdialogStyle = XmDIALOG_MODELESS;
                XmNmarginHeight = k_session_db_mheight;
                XmNmarginWidth = k_session_db_mwidth;
                XmNautoUnmanage = false;
                XmNdefaultButton = XmPushButton Session_OK;
                XmNcancelButton = XmPushButton Session_Dismiss;
	    };
    controls
      {
	XmForm Session_Container;      
        XmPushButton Session_OK;
        XmPushButton Session_Apply;
        XmPushButton Session_Dismiss;
#ifdef HYPERHELP
        XmPushButton Session_Help;
#endif
      };

  };

object Session_Container : XmForm
  {
    arguments
      {
        arguments top_form_args;
      };
     controls
       {
	 XmToggleButton EndConfirm;
         XmLabel StateLabel;
	 XmRadioBox StateBox;
	 XmLabel PauseTextLabel;
	 XmText PauseText;
       };
  };

object
	EndConfirm: XmToggleButton {
	    arguments {
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_shadow_thickness*2;
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_shadow_thickness*2;
		XmNlabelString = k_session_confirm_text;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (endconfirm_id);
#ifdef HYPERHELP
		XmNhelpCallback
			= procedure help_system_proc(k_conf_endprmpts_help);
#endif
            };
	};

object
	StateLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmToggleButton EndConfirm;
!		XmNleftOffset = k_adb_medium_horiz_offset;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmToggleButton EndConfirm;
		XmNtopOffset = 0;
		XmNlabelString = k_session_startup_text;
	    };
	};

object
	StateBox: XmRadioBox {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmLabel StateLabel;
		XmNleftOffset = k_adb_small_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmLabel StateLabel;
		XmNtopOffset = -2;
		XmNborderWidth = 0;
		XmNradioBehavior = true;
	    };
            controls {
                XmToggleButton WindowState;
                XmToggleButton IconState;
            };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (statebox_id);
#ifdef HYPERHELP
		XmNhelpCallback 
			= procedure help_system_proc(k_startup_state_help);
#endif
            };
	};

object
	WindowState: XmToggleButton {
	    arguments {
		XmNlabelString = k_session_startup_window_text;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (statemapped_id);
            };
	};

object
	IconState: XmToggleButton {
	    arguments {
		XmNlabelString = k_session_startup_icon_text;		
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (stateicon_id);
            };
	};

object
	PauseTextLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmToggleButton EndConfirm;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmRadioBox StateBox;
!		XmNtopOffset = k_adb_text_bottom_offset;
		XmNlabelString = k_session_pausetext_text;
	    };
	};

object
	PauseText: XmText {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel PauseTextLabel;
		XmNleftOffset = 0;
 		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel PauseTextLabel;
		XmNtopOffset =0;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_shadow_thickness*2;
		XmNrightAttachment = XmATTACH_FORM;
		XmNrightOffset = k_adb_horizontal_offset + 5;
		XmNcolumns = k_session_pausetext_text_cols;
		XmNrows = k_session_pausetext_text_rows;
		XmNresizeHeight = false;
		XmNresizeWidth = false;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (pausetext_id);
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_paus_text_help);
#endif
            };
	};

object
	Session_OK: XmPushButton {
	    arguments {
		arguments button_ok_args;
		XmNtopWidget = XmPushButton Session_Apply;
		XmNrightWidget = XmPushButton Session_Apply;
	    };
            callbacks {
		XmNactivateCallback = procedure SmOkCallback();
            };
	};

object
	Session_Apply: XmPushButton {
	    arguments {
		arguments button_apply_args;
    	        XmNtopWidget = XmForm Session_Container;
	    };
            callbacks {
		XmNactivateCallback = procedure SmApplyCallback();
            };
	};

object
	Session_Dismiss: XmPushButton {
	    arguments {
		arguments button_cancel_args;
		XmNtopWidget = XmPushButton Session_OK;
		XmNleftWidget = XmPushButton Session_Apply;
	    };
            callbacks {
		XmNactivateCallback = procedure SmCancelCallback();
            };
	};

object
	Session_Help: XmPushButton {
	    arguments {
		arguments button_help_args;
		XmNtopWidget = XmPushButton Session_OK;
		XmNleftWidget = XmPushButton Session_Dismiss;
	    };
            callbacks {
#ifdef HYPERHELP
		XmNactivateCallback = procedure help_system_proc( k_session_titles_help );
#endif
            };
	};
