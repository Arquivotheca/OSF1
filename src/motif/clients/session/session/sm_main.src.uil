! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
!	This module is part of the SESSION MANAGER component.  
!	It contains no translatable text.

!
! Main XmDrawingArea, menu bar
!
#ifdef HYPERHELP
#define DOHELP
#endif

identifier
    createmenu_id;
    pausebutton;
    quitbutton;
    appsdefbutton;
    appsmenubutton;
    autostartbutton;
    keybutton;
    internationalbutton;
    printerbutton;
    pointerbutton;
    screenbutton;
    securitybutton;
    smbutton;
    windowbutton;
    printesbutton;
    printposbutton;
    captureesbutton;
    captureposbutton;
    use_last_button;
    use_system_button;
    save_current_button;
#ifdef DOHELP
#ifndef HYPERHELP
    helpoverviewbutton;
    helpaboutbutton;
#endif
#endif

procedure
    create_menu_cb();
    session_menu_cb();
    setup_menu_cb();
    customize_menu_cb();
    print_menu_cb();
#ifdef DOHELP
#ifdef HYPERHELP
    help_menu_cb(integer);
    help_system_proc(string);
#else
    help_menu_cb();
#endif
#endif
    widget_create_proc(any);

object
	MainWindow: XmMenuBar {
	    arguments {
		XmNorientation = XmHORIZONTAL;
		XmNspacing = 10;
		XmNmenuHelpWidget = XmCascadeButton HelpPulldown;
	    };
            controls {
		XmCascadeButton SessionPulldown;
		XmCascadeButton CreatePulldown;
		XmCascadeButton CustomizePulldown;
#ifdef DOPRINT
		XmCascadeButton PrintPulldown;
#endif
#ifdef DOHELP
		XmCascadeButton HelpPulldown;
#endif
	   };
	};

!
! Session Menu pulldown
!
object
	sessionmenu: XmPulldownMenu {
            controls {
		XmPushButton PauseButton;
	        XmPushButton QuitButton;
	   };
            callbacks {
                XmNentryCallback = procedure session_menu_cb();
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_overview_help);
#endif
            };
	};

object
	SessionPulldown: XmCascadeButton {
	    arguments {
		XmNlabelString = k_session_menu_text;
		XmNmnemonic = keysym( "S" );
	    };
            controls {
		XmPulldownMenu sessionmenu;
	   };
#ifdef HYPERHELP
	    callbacks {
		XmNhelpCallback = procedure help_system_proc(k_overview_help);
	    };
#endif
	};

object
	PauseButton: XmPushButton {
	    arguments {
		XmNlabelString = k_session_pause_text;
		XmNmnemonic = keysym( "P" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (pausebutton);
#ifdef HYPERHELP
		XmNhelpCallback 
			= procedure help_system_proc(k_putting_hold_help);
#endif
            };
	};

object
	QuitButton: XmPushButton {
	    arguments {
		XmNlabelString = k_session_quit_text;
		XmNmnemonic = keysym( "E" );
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (quitbutton);
#ifdef HYPERHELP
		XmNhelpCallback 
			= procedure help_system_proc(k_ending_session_help);
#endif
            };
	};
!
! Create Menu pulldown
!
object
	createmenu: XmPulldownMenu {
	    arguments 
              {
/* ifdef ONE_DOT_TWO */
		XmNtearOffModel = XmTEAR_OFF_ENABLED;
   	      };
            controls {
/* ifdef ONE_DOT_TWO_TEMP
		XmPushButton WorkaroundButton; */
	   };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (createmenu_id);
                XmNentryCallback = procedure create_menu_cb();
#ifdef HYPERHELP
		XmNhelpCallback 
			= procedure help_system_proc(k_accessing_ap_help);
#endif
            };
	};

/* ifdef ONE_DOT_TWO_TEMP
object
	WorkaroundButton: XmPushButton {
	    arguments {
		XmNlabelString = k_session_workaround_text;
		XmNmnemonic = keysym( "W" );
	    };
	};
*/

object
	CreatePulldown: XmCascadeButton {
	    arguments {
		XmNlabelString = k_create_menu_text;
		XmNmnemonic = keysym( "A" );
	    };
            controls {
		XmPulldownMenu createmenu;
	   };
#ifdef HYPERHELP
	    callbacks {
		XmNhelpCallback 
			= procedure help_system_proc(k_accessing_ap_help);
	    };
#endif
	};

!
! Customize Menu pulldown
!
object
	customizemenu: XmPulldownMenu {
            controls {
		XmPushButton AutoStartButton;
		XmPushButton AppDefButton;
		XmPushButton AppMenuButton;
		unmanaged XmPushButton ScreenButton;
		XmPushButton SessionButton;
		XmSeparator SetupSeparator;
		XmPushButton WindowButton;
		XmPushButton KeyboardButton;
		XmPushButton InternationalButton;
		XmPushButton CursorButton;
#ifdef DOPRINT
		XmPushButton PrinterButton;
#endif
		XmPushButton SecurityButton;
		XmSeparator SetupSeparator;
		XmPushButton SaveCurrentButton;
		XmPushButton UseLastButton;
		XmPushButton UseSystemButton;
	   };
            callbacks {
                XmNentryCallback = procedure customize_menu_cb();
#ifdef HYPERHELP
		XmNhelpCallback 
			    = procedure help_system_proc(k_custom_decwin_help);
#endif
            };
	};

object
	CustomizePulldown: XmCascadeButton {
	    arguments {
		XmNlabelString = k_customize_menu_text;
		XmNmnemonic = keysym( "O" );
	    };
            controls {
		XmPulldownMenu customizemenu;
	   };
#ifdef HYPERHELP
	    callbacks {
		XmNhelpCallback 
			    = procedure help_system_proc(k_custom_decwin_help);
            };
#endif
	};

object
	AppDefButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_appdef_text;
		XmNmnemonic = keysym( "D" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (appsdefbutton);
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_appdef_help);
#endif
	    };
	};

object
	AppMenuButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_appmenu_text;
		XmNmnemonic = keysym( "M" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (appsmenubutton);
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_appmenu_help);
#endif
            };
	};

object
	AutoStartButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_autostart_text;
		XmNmnemonic = keysym( "A" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (autostartbutton);
#ifdef HYPERHELP
		XmNhelpCallback
			= procedure help_system_proc(k_autostart_help);
#endif
            };
	};

object
	KeyboardButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_keyboard_text;
		XmNmnemonic = keysym( "K" );
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (keybutton);
#ifdef HYPERHELP
		XmNhelpCallback
			= procedure help_system_proc(k_setting_keyboard_help);
#endif
            };
	};

object
	InternationalButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_international_text;
		XmNmnemonic = keysym( "L" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (internationalbutton);
#ifdef HYPERHELP
		XmNhelpCallback
			= procedure help_system_proc(k_setting_lang_help);
#endif
            };
	};

object
	CursorButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_pointer_text;
		XmNmnemonic = keysym( "P" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (pointerbutton);
#ifdef HYPERHELP
		XmNhelpCallback
			= procedure help_system_proc(k_setting_pointer_help);
#endif
            };
	};

object
	PrinterButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_printscreen_text;
		XmNmnemonic = keysym( "r" );
	    };
            callbacks {
                MrmNcreateCallback
			 = procedure widget_create_proc (printerbutton);
            };
	};

object
	ScreenButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_screen_text;
		XmNmnemonic = keysym( "c" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (screenbutton);
            };
	};

object
	SecurityButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_security_text;
		XmNmnemonic = keysym( "c" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (securitybutton);
#ifdef HYPERHELP
		XmNhelpCallback
			= procedure help_system_proc(k_setting_secure_help);
#endif
            };
	};

object
	SessionButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_session_text;
		XmNmnemonic = keysym( "e" );
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (smbutton);
#ifdef HYPERHELP
		XmNhelpCallback 
			= procedure help_system_proc(k_session_titles_help);
#endif
            };
	};

object
	WindowButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_window_text;
		XmNmnemonic = keysym( "W" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (windowbutton);
#ifdef HYPERHELP
		XmNhelpCallback
			= procedure help_system_proc(k_window_colors_help);
#endif
            };
	};

object
	SetupSeparator: XmSeparator { };

object
	UseLastButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_load_text;
		XmNmnemonic = keysym( "R" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (use_last_button);
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_buttons_help);
#endif
            };
	};

object
	UseSystemButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_default_text;
		XmNmnemonic = keysym( "f" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (use_system_button);
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_buttons_help);
#endif
            };
	};

object
	SaveCurrentButton: XmPushButton {
	    arguments {
		XmNlabelString = k_customize_save_text;
		XmNmnemonic = keysym( "S" );
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (save_current_button);
#ifdef HYPERHELP
		XmNhelpCallback = procedure help_system_proc(k_buttons_help);
#endif
            };
	};

!
! Print Screen Menu pulldown
!
object
	PrintPulldown: XmCascadeButton {
	    arguments {
		XmNlabelString= k_printscreen_menu_text;
		XmNmnemonic = keysym( "P" );
	    };
            controls {
		XmPulldownMenu printmenu;
	   };
	};

object
	printmenu: XmPulldownMenu {
            controls {
		XmPushButton PrintEntireButton;
		XmPushButton PrintPortionButton;
		XmPushButton CaptureEntireButton;
		XmPushButton CapturePortionButton;
	   };
            callbacks {
                XmNentryCallback = procedure print_menu_cb();
            };
	};

object
	PrintEntireButton: XmPushButton {
	    arguments {
		XmNlabelString = k_printscreen_entire_text;
		XmNmnemonic = keysym( "E" );
	    };
            callbacks {
                MrmNcreateCallback
                	= procedure widget_create_proc (printesbutton);
            };
	};

object
	PrintPortionButton: XmPushButton {
	    arguments {
		XmNlabelString = k_printscreen_portion_text;
		XmNmnemonic = keysym( "o" );
	    };
            callbacks {
                MrmNcreateCallback
                	= procedure widget_create_proc (printposbutton);
            };
	};

object
	CaptureEntireButton: XmPushButton {
	    arguments {
		XmNlabelString = k_capturescreen_entire_text;
		XmNmnemonic = keysym( "c" );
	    };
            callbacks {
                MrmNcreateCallback
                	 = procedure widget_create_proc (captureesbutton);
            };
	};

object
	CapturePortionButton: XmPushButton {
	    arguments {
		XmNlabelString = k_capturescreen_portion_text;
		XmNmnemonic = keysym( "o" );
	    };
            callbacks {
                MrmNcreateCallback
                	 = procedure widget_create_proc (captureposbutton);
            };
	};

#ifdef DOHELP
!
! Help Menu pulldown
!

#ifdef HYPERHELP

object
	HelpPulldown: XmCascadeButton {
	    arguments {
		XmNlabelString = k_help_menu_text;
		XmNmnemonic = keysym("H");
		XmNalignment = XmALIGNMENT_END;
	    };
            controls {
		XmPulldownMenu helpmenu;
	    };
	    callbacks {
		XmNhelpCallback = procedure help_system_proc(k_help_help);
	    };
	};
object
	helpmenu: XmPulldownMenu {
            controls {
#ifdef HYPERHELP
		XmPushButton HelpOnContext;
!<<< new style help menu - add a separator
		XmSeparator SetupSeparator;
		XmPushButton HelpOnWindow;
		XmPushButton HelpOnHelp;
		XmPushButton HelpOnVersion;
#else
		XmPushButton HelpAbout;
		XmPushButton HelpOverview;
#endif
	    };
            callbacks {
                XmNhelpCallback = procedure help_system_proc(k_help_help);
            };
	};
object
	HelpAbout : XmPushButton {
	    arguments {
		XmNlabelString  = k_help_about_menu_text;
		XmNmnemonic	= keysym("A");
	    };
            callbacks {
		XmNactivateCallback = procedure help_menu_cb(k_help_about);
		XmNhelpCallback	= procedure help_system_proc(k_about_help);
            };
	};
object
	HelpOverview : XmPushButton {
	    arguments {
		XmNlabelString  = k_help_overview_menu_text;
		XmNmnemonic	= keysym("O");
	    };
            callbacks {
		XmNactivateCallback = procedure help_menu_cb(k_help_overview);
		XmNhelpCallback	= procedure help_system_proc(k_overview_help);
            };
	};
object
	HelpOnContext : XmPushButton {
	    arguments {
		XmNlabelString  = k_help_oncontext_label_text;
		XmNmnemonic	= keysym("C");
!<<< new help menu type - add an accelerator
		XmNaccelerator = k_help_oncontext_accel;
		XmNacceleratorText = k_help_oncontext_accel_text;
	    };
            callbacks {
		XmNactivateCallback = procedure help_menu_cb(k_help_oncontext);
		XmNhelpCallback	= procedure help_system_proc(k_oncontext_help);
            };
	};
object
	HelpOnWindow : XmPushButton {
	    arguments {
		XmNlabelString  = k_help_onwindow_label_text;
		XmNmnemonic	= keysym("O");
	    };
            callbacks {
		XmNactivateCallback = procedure help_menu_cb(k_help_overview);
		XmNhelpCallback	= procedure help_system_proc(k_onwindow_help);
            };
	};
object
	HelpOnHelp : XmPushButton {
	    arguments {
		XmNlabelString  = k_help_onhelp_label_text;
		XmNmnemonic	= keysym("H");
	    };
            callbacks {
		XmNactivateCallback = procedure help_menu_cb(k_help_onhelp);
		XmNhelpCallback	= procedure help_system_proc(k_onhelp_help);
            };
	};
object
	HelpOnVersion : XmPushButton {
	    arguments {
		XmNlabelString  = k_help_onversion_label_text;
		XmNmnemonic	= keysym("P");
	    };
            callbacks {
		XmNactivateCallback = procedure help_menu_cb(k_help_about);
		XmNhelpCallback	= procedure help_system_proc(k_onversion_help);
            };
	};

#else

object
	helpmenu: XmPulldownMenu {
            controls {
		XmPushButton HelpOverviewButton;
		XmPushButton HelpAboutButton;
	};
            callbacks {
                XmNentryCallback = procedure help_menu_cb();
                XmNhelpCallback = procedure help_menu_cb();
            };
	};
object
	HelpPulldown: XmCascadeButton {
	    arguments {
		XmNlabelString = k_help_menu_text;
		XmNalignment = XmALIGNMENT_END;
	    };
            controls {
		XmPulldownMenu helpmenu;
	   };
	};
object
	HelpOverviewButton: XmPushButton {
	    arguments {
		XmNlabelString = k_help_overview_menu_text;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (helpoverviewbutton);
            };
	};
object
	HelpAboutButton: XmPushButton {
	    arguments {
		XmNlabelString = k_help_about_menu_text;
	    };
            callbacks {
                MrmNcreateCallback
			= procedure widget_create_proc (helpaboutbutton);
            };
	};

#endif /* HYPERHELP */

#endif

