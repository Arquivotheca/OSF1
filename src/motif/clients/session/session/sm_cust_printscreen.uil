! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
!	This module is part of the SESSION MANAGER component.  
!	It contains no translatable text.

!
! Customize Print screen box
!

identifier
    FormatBoxId;
    PostScriptId;
    SixelId;
    BitmapId;
    RatioBoxId;
    OnetoOneId;
    TwotoOneId;
    SaverBoxId;
    PositiveId;
    NegativeId;
    FilenameId; 
    FilePromptId;
    ColorBoxId;
    PSColorId;
    PSGreyId;
    PSBWId;
    RotatePromptId;
!
! callback procedure declarations
!
procedure
        PSOkButtonCallback();
        PSCancelButtonCallback();
        PSApplyButtonCallback();
	PSDDIFCallback();
	PSColorCallback();
	PSPostCallback();

object
	CustomizePrinter: XmFormDialog {
	    arguments {
                XmNdefaultPosition = true;
		XmNhorizontalSpacing = k_adb_horizontal_offset;
		XmNverticalSpacing = k_adb_vertical_offset;
		XmNdialogTitle = k_print_title_text;
		XmNdialogStyle = XmDIALOG_MODELESS;
		XmNmarginHeight = k_print_db_mheight;
		XmNmarginWidth = k_print_db_mwidth;
		XmNautoUnmanage = false; 
                XmNdefaultButton = XmPushButton PrintOK;
                XmNcancelButton = XmPushButton PrintDismiss;
	   };
            controls {
                XmLabel FormatLabel;
                XmRadioBox   FormatBox;
                XmLabel RatioLabel;
                XmRadioBox   RatioBox;
                XmLabel SaverLabel;
                XmRadioBox   SaverBox;
		XmLabel	FilenameLabel;
		XmText Filename;
		XmToggleButton	FilePrompt;
		XmToggleButton	RotatePrompt;
		XmLabel	    PSColorLabel;
		XmRadioBox   ColorBox;
                XmPushButton PrintOK;
                XmPushButton PrintApply;
                XmPushButton PrintDismiss;
		};
	};
object
	FormatLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset = k_adb_horizontal_offset;
		XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = k_adb_vertical_offset;
		XmNlabelString = k_print_format_text;
	    };
	};
object
	FormatBox: XmRadioBox {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel FormatLabel;
		XmNleftOffset = k_adb_small_horiz_offset;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel FormatLabel;
		XmNtopOffset = 0;
		XmNborderWidth = 0;
		XmNradioBehavior = true;
!		XmNisHomogenous = true;
	    };
            controls {
		XmToggleButton PostScript;
		XmToggleButton Sixel;
		XmToggleButton Bitmap;
		    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (FormatBoxId);
                      };
	};
object
	PostScript: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_format_ps_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (PostScriptId);
		XmNvalueChangedCallback = procedure PSPostCallback();
                      };
	};
object
	Sixel: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_format_sixel_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (SixelId);
                      };
	};
object
	Bitmap: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_format_ddif_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (BitmapId);
		XmNvalueChangedCallback = procedure PSDDIFCallback();
                      };
	};
object
	PSColorLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmRadioBox FormatBox;
		XmNleftOffset = k_adb_medium_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmLabel FormatLabel;
		XmNtopOffset = 0;
		XmNlabelString = k_print_color_text;
	    };
	};
object
	ColorBox: XmRadioBox {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel PSColorLabel;
		XmNleftOffset = k_adb_small_horiz_offset;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel PSColorLabel;
		XmNtopOffset = 0;
		XmNborderWidth = 0;
		XmNradioBehavior = true;
!		XmNisHomogenous = true;
	    };
            controls {
		XmToggleButton PSBW;
		XmToggleButton PSColor;
		XmToggleButton PSGreyScale;
		    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (ColorBoxId);
                      };
	};
object
	PSColor: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_color_color_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (PSColorId);
		XmNvalueChangedCallback = procedure PSColorCallback();
                      };
	};
object
	PSGreyScale: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_color_grey_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (PSGreyId);
                      };
	};
object
	PSBW: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_color_bw_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (PSBWId);
                      };
	};
object
	RatioLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmRadioBox ColorBox;
		XmNleftOffset = k_adb_medium_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmLabel PSColorLabel;
		XmNtopOffset = 0;
		XmNlabelString = k_print_aspect_text;
	    };
	};
object
	RatioBox: XmRadioBox {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel RatioLabel;
		XmNleftOffset = k_adb_small_horiz_offset;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel RatioLabel;
		XmNtopOffset = 0;
		XmNborderWidth = 0;
		XmNradioBehavior = true;
!		XmNisHomogenous = true;
	    };
            controls {
		XmToggleButton OnetoOne;
		XmToggleButton TwotoOne;
		    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (RatioBoxId);
                      };
	};
object
	OnetoOne: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_aspect_11_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (OnetoOneId);
                      };
	};
object
	TwotoOne: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_aspect_21_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (TwotoOneId);
                      };
	};
object
	SaverLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmRadioBox RatioBox;
		XmNleftOffset = k_adb_medium_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmLabel RatioLabel;
		XmNtopOffset = 0;
		XmNlabelString = k_print_saver_text;
	    };
	};
object
	SaverBox: XmRadioBox {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel SaverLabel;
		XmNleftOffset = k_adb_small_horiz_offset;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmLabel SaverLabel;
		XmNtopOffset = 0;
		XmNborderWidth = 0;
		XmNradioBehavior = true;
!		XmNisHomogenous = true;
	    };
            controls {
		XmToggleButton Positive;
		XmToggleButton Negative;
		    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (SaverBoxId);
                      };
	};
object
	Positive: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_saver_pos_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (PositiveId);
                      };
	};
object
	Negative: XmToggleButton {
	    arguments {
		XmNlabelString = k_print_saver_neg_text;		
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (NegativeId);
                      };
	};
object
	RotatePrompt: XmToggleButton {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmLabel FormatLabel;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmRadioBox FormatBox;
		XmNtopOffset = k_adb_radio_vert_offset;
		XmNlabelString = k_print_rotate_text;
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (RotatePromptId);
                      };
	};
object
	FilePrompt: XmToggleButton {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmToggleButton RotatePrompt;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmToggleButton RotatePrompt;
		XmNtopOffset = k_adb_radio_vert_offset;
		XmNlabelString = k_print_prompt_text;
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (FilePromptId);
                      };
	};
object
	FilenameLabel: XmLabel {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmToggleButton FilePrompt;
		XmNleftOffset = k_adb_medium_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmToggleButton FilePrompt;
		XmNtopOffset = 0;
		XmNlabelString = k_print_filename_text;
	    };
	};
object
	Filename: XmText {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmLabel FilenameLabel;
		XmNleftOffset = k_adb_text_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmLabel FilenameLabel;
		XmNtopOffset = k_adb_text_vert_offset;
		XmNcolumns = k_print_filename_text_cols;
		XmNrows = k_print_filename_text_rows;
		XmNresizeHeight = false;
		XmNresizeWidth = false;
	    };
            callbacks {
                MrmNcreateCallback = procedure widget_create_proc (FilenameId);
                      };
	};
object
	PrintOK: XmPushButton {
	    arguments {
		XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNleftWidget = XmToggleButton FilePrompt;
		XmNleftOffset = 0;
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget = XmToggleButton FilePrompt;
		XmNtopOffset = k_adb_medium_vert_offset;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_adb_vertical_offset;
		XmNwidth = k_print_ok_pb_width;
		XmNlabelString = k_general_ok_text;
	    };
            callbacks {
		XmNactivateCallback = procedure PSOkButtonCallback();
                      };
	};
object
	PrintApply: XmPushButton {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmPushButton PrintOK;
		XmNleftOffset = k_adb_button_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmPushButton PrintOK;
		XmNtopOffset = 0;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_adb_vertical_offset;
		XmNwidth = k_print_apply_pb_width;
		XmNlabelString = k_general_apply_text;
	    };
            callbacks {
		XmNactivateCallback = procedure PSApplyButtonCallback();
                      };
	};
object
	PrintDismiss: XmPushButton {
	    arguments {
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget = XmPushButton PrintApply;
		XmNleftOffset = k_adb_button_horiz_offset;
		XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
		XmNtopWidget = XmPushButton PrintApply;
		XmNtopOffset = 0;
		XmNbottomAttachment = XmATTACH_FORM;
		XmNbottomOffset = k_adb_vertical_offset;
		XmNwidth = k_print_dismiss_pb_width;
		XmNlabelString = k_general_dismiss_text;
	    };
            callbacks {
		XmNactivateCallback = procedure PSCancelButtonCallback();
                      };
	};



