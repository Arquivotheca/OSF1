!
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
!
/* VAX/DEC CMS REPLACEMENT HISTORY, Element BKR_SELECTION_WIDGETS.UIL*/
/* *11   17-NOV-1992 22:52:45 BALLENGER "Create CC-specific help menus."*/
/* *10    3-SEP-1992 13:01:47 GOSSELIN "added Keyboard and Contents items to Help Menus"*/
/* *9     3-MAR-1992 17:04:12 KARDON "UCXed"*/
/* *8    21-JAN-1992 14:55:58 KLUM "bl1"*/
/* *7     7-JAN-1992 14:18:08 PARMENTER "adding CBR/Search"*/
/* *6     2-JAN-1992 10:47:20 KLUM "BR Print - fixes to File menu"*/
/* *5    11-DEC-1991 11:25:03 GOSSELIN "finished adding help Index"*/
/* *4    14-NOV-1991 10:51:13 GOSSELIN "done"*/
/* *3    13-NOV-1991 15:06:58 KLUM "Green devel work"*/
/* *2     1-NOV-1991 12:39:42 BALLENGER "Reintegrate memex support"*/
/* *1    16-SEP-1991 12:50:09 PARMENTER "UIL definitions for Selection window pulldown"*/
/* VAX/DEC CMS REPLACEMENT HISTORY, Element BKR_SELECTION_WIDGETS.UIL*/
/* DEC/CMS REPLACEMENT HISTORY, Element BKR_SELECTION_WIDGETS.UIL*/
/* *8    29-MAY-1991 13:57:32 ACKERMAN "Removed Link helpcallback so external Link software will use correct help text"*/
/* *7    11-APR-1991 15:31:16 ACKERMAN "I18N string changes"*/
/* *6    28-MAR-1991 15:13:19 ACKERMAN "OnHelp callback"*/
/* *5    20-MAR-1991 08:20:26 ACKERMAN "Added on Help to pulldown"*/
/* *4    22-FEB-1991 07:59:58 ACKERMAN "Modified uil structure for Help Callbacks"*/
/* *3    25-JAN-1991 16:43:21 FITZELL "V3_EFT_24_JAN"*/
/* *2    12-DEC-1990 12:05:28 FITZELL "V3 IFT Update snapshot"*/
/* *1     8-NOV-1990 11:15:40 FITZELL "V3 IFT"*/
/* DEC/CMS REPLACEMENT HISTORY, Element BKR_SELECTION_WIDGETS.UIL*/

/*
***************************************************************
**  Copyright (c) Digital Equipment Corporation, 1988, 1990  **
**  All Rights Reserved.  Unpublished rights reserved	     **
**  under the copyright laws of the United States.  	     **
**  	    	    	    	    	    	    	     **
**  The software contained on this media is proprietary	     **
**  to and embodies the confidential technology of  	     **
**  Digital Equipment Corporation.  Possession, use,	     **
**  duplication or dissemination of the software and	     **
**  media is authorized only pursuant to a valid written     **
**  license from Digital Equipment Corporation.	    	     **
**  	    	    	    	    	    	    	     **
**  RESTRICTED RIGHTS LEGEND   Use, duplication, or 	     **
**  disclosure by the U.S. Government is subject to 	     **
**  restrictions as set forth in Subparagraph (c)(1)(ii)     **
**  of DFARS 252.227-7013, or in FAR 52.227-19, as  	     **
**  applicable.	    	    	    	    	    	     **
***************************************************************
*/


/*
**++
**  FACILITY:
**
**      Bookreader User Interface (BKR)
**
**  ABSTRACT:
**
**  	User Interface Language definitions for Selection window pulldown
**  	menus.
**
**  AUTHORS:
**
**      James A. Ferguson
**
**  CREATION DATE:     13-Nov-1989
**
**  MODIFICATION HISTORY:
**
**--
**/


/*
 * SELECTION Main Window widget
 */

object selectionMainWindow : XmMainWindow
{
    arguments
    {
    	XmNborderWidth	= k_main_window_border_width;
    };
    controls
    {
    	XmMenuBar   	selMenuBar;	    	    
    	DXmSvn	    	svnWorkArea;
    };
    callbacks
    {
    	MrmNcreateCallback = procedure bkr_save_widgets( W_MAIN_WINDOW );
 	XmNhelpCallback    = procedure bkr_help_on_widget( s_selection_svn_help);
    };
};

object selMenuBar : XmMenuBar
{
    arguments
    {
    	XmNborderWidth	    = k_menu_bar_border_width;
       	XmNmenuHelpWidget   = XmCascadeButton selHelpPulldownEntry;
    	XmNorientation 	    = XmHORIZONTAL;
    };
    controls
    {
    	XmCascadeButton     	selFilePulldownEntry;
    	XmCascadeButton widget	selLinkPulldownEntry;
    	XmCascadeButton     	selViewPulldownEntry;
    	XmCascadeButton     	selSearchPulldownEntry;	/* SEARCH */
    	XmCascadeButton     	selHelpPulldownEntry;
    };
    callbacks
    {
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_MENU_BAR );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_selection_menu_bar_help );
    };
};


/*
 *  Connection pulldown menu entry
 */

object selLinkPulldownEntry : XmCascadeButton widget
{
    arguments
    {
    	XmNlabelString  = s_link_label;
    	XmNmnemonic 	= s_link_mnemonic;
    };
    callbacks
    {
    	MrmNcreateCallback  = procedure bmi_save_connection_menu( tag );
    };
};

object selFilePulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString  = s_file_label;
    	XmNmnemonic 	= s_file_mnemonic;
    };

    /*
     *  Pulldown menu not included here because it will be fetched later
     *  in a work procedure to hopefully speed up startup time.   The work 
     *  procedure will fetch a different menu based on the window type.
     *
     *	    controls
     *	    {  
     *	    	XmPulldownMenu selectionFileMenu 	<OR> 
     *	    	    	       standardTopicFileMenu 	<OR>
     *	    	    	       formalTopicFileMenu 
     *	    };
     */

    callbacks
    {
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_FILE_PULLDOWN_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_selection_file_pm_help );
    };
};

object selViewPulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString  = s_view_label;
    	XmNmnemonic 	= s_view_mnemonic;
    };

    /*
     *  Pulldown menu not included here because it will be fetched later
     *  in a work procedure to hopefully speed up startup time.   The work 
     *  procedure will fetch a different menu based on the window type.
     *
     *	    controls
     *	    {  
     *	    	XmPulldownMenu selectionViewMenu     <OR>
     *	    	    	       standardTopicViewMenu <OR>
     *	    	    	       formalTopicViewMenu 
     *	    };
     */

    callbacks
    {
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_VIEW_PULLDOWN_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_selection_view_pm_help );
    };
};

object selHelpPulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString 	= s_help_label;
    	XmNmnemonic 	= s_help_mnemonic;
    };
    callbacks
    {
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_selection_help_pm_help );
    };
};

object selHelpMenu : XmPulldownMenu
{
    controls
    {
    	XmPushButton 	selOnContextEntry;
	XmSeparator 	{};
    	XmPushButton 	selOnWindowEntry;
    	XmPushButton 	selIndexEntry;
    	XmPushButton 	selKeyboardEntry;
    	XmPushButton 	selContentsEntry;
    	XmPushButton 	selOnHelpEntry;
    	XmPushButton 	selOnVersionEntry;
    };
};

/* Character cell version of the help menu that exclude the Help Mode /
 * Help-On-Context entry, since those don't work too well without a mouse.
 */
object selHelpMenuCC : XmPulldownMenu
{
    controls
    {
    	XmPushButton 	selOnWindowEntry;
    	XmPushButton 	selContentsEntry;
    	XmPushButton 	selIndexEntry;
    	XmPushButton 	selKeyboardEntry;
    	XmPushButton 	selOnHelpEntry;
    	XmPushButton 	selOnVersionEntry;
    };
};

object selOnContextEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_on_context_label;
    	XmNmnemonic 	= s_on_context_mnemonic;
	XmNaccelerator  = s_on_context_accel;
	XmNacceleratorText  = s_on_context_accel_text;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_context();
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_on_context_help );
    };
};

object selOnWindowEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_on_window_label;
    	XmNmnemonic 	= s_on_window_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_selection_window_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_on_window_help );
    };
};

object selContentsEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_contents_label;
    	XmNmnemonic 	= s_contents_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_contents_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_contents_help );
    };
};

object selIndexEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_index_label;
    	XmNmnemonic 	= s_index_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_index_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_index_help );
    };
};

object selKeyboardEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_keyboard_label;
    	XmNmnemonic 	= s_keyboard_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_keyboard_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_keyboard_help );
    };
};

object selOnHelpEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_on_help_label;
    	XmNmnemonic 	= s_on_help_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_on_help_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_on_help_help );
    };
};

object selOnVersionEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_on_version_label;
    	XmNmnemonic 	= s_on_version_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_on_version_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_on_version_help );
    };
};

object svnWorkArea : DXmSvn
{
    arguments
    {
	DXmSvnNexpectHighlighting = true;
    };
    callbacks
    {
    	MrmNcreateCallback  	     	= procedure bkr_save_widgets( W_SVN );
    	DXmSvnNdetachFromSourceCallback = procedure bkr_selection_detach_from_src( tag );
    	DXmSvnNgetEntryCallback 	= procedure bkr_selection_get_entry( tag );
 	DXmSvnNhelpRequestedCallback   	= procedure bkr_help_on_widget( s_selection_svn_help );
    	DXmSvnNselectAndConfirmCallback = procedure bkr_selection_double_click( tag );
    	DXmSvnNpopupMenuCallback    	= procedure bkr_selection_popup_menu( tag );
    	DXmSvnNtransitionsDoneCallback  = procedure bkr_selection_transitions_done( tag );
    };
};


/*
 * Selection window File Pulldown menu
 */
object selectionFileMenu : XmPulldownMenu
{
    controls
    {
        XmPushButton 	selOpenTopicInDefaultWindow;   
        XmPushButton 	selOpenTopicInNewWindow;	    
	XmSeparator {};
    	XmPushButton 	prtopic_button;      /* print-extract */
	XmSeparator {};			     /* print-extract */
    	XmPushButton 	selCloseBookEntry;
    };

    /*
     *  Not needed for deferred fetching
     * 
     *	 callbacks 
     *   {  
     *	    MrmNcreateCallback = procedure bkr_save_widgets( W_FILE_MENU );
     *	 };
     */
};

object selOpenTopicInDefaultWindow : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_topic_open_label;
    	XmNsensitive   	= false;
    	XmNmnemonic 	= s_open_in_default_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_topic_open_in_default( tag );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_OPEN_TOPIC_IN_DEFAULT );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_open_topic_in_default_help);
    };
};

object selOpenTopicInNewWindow : XmPushButton 
{
    arguments
    {
    	XmNlabelString 	= s_topic_in_new_label;
    	XmNsensitive   	= false;
    	XmNmnemonic 	= s_open_in_new_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_topic_open_in_new( tag );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_OPEN_TOPIC_IN_NEW );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_open_topic_in_new_help);
    };
};

object selCloseBookEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_close_book_label;
    	XmNmnemonic 	= s_close_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_close_selection_window( tag );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_CLOSE_BOOK_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_close_book_help );
    };
};


/*
 *  Selection window View Pulldown menu
 */
object selectionViewMenu : XmPulldownMenu
{
    controls
    {
    	XmPushButton     selExpandEntry;
    	XmPushButton     selFullyExpandEntry;
	XmSeparator {};
    	XmPushButton     selCollapseEntry;
    	XmPushButton     selCollapseAllEntry;
	XmSeparator {};
    };

    /*
     *  Not needed for deferred fetching
     * 
     *	 callbacks 
     *   {  
     *	    MrmNcreateCallback = procedure bkr_save_widgets( W_VIEW_MENU );
     *	 };
     */
};

object selExpandEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_expand_label;
    	XmNsensitive   	= false;
    	XmNmnemonic 	= s_expand_entry_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_selection_collapse_expand( tag );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_EXPAND_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_expand_help );
    };
};

object selFullyExpandEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_fully_expand_entry_label;
    	XmNsensitive   	= false;
    	XmNmnemonic 	= s_fully_expand_entry_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_selection_collapse_expand( tag );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_EXPAND_ALL_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_fully_expand_help );
    };
};

object selCollapseEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_collapse_label;
    	XmNsensitive   	= false;
    	XmNmnemonic 	= s_collapse_entry_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_selection_collapse_expand( tag );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_COLLAPSE_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_collapse_help );
    };
};

object selCollapseAllEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_collapse_all_label;
    	XmNsensitive   	= false;
    	XmNmnemonic 	= s_collapse_all_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_selection_collapse_expand( tag );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_COLLAPSE_ALL_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_collapse_all_help );
    };
};


/*
 *  TEMPLATE push button for dynamic buttons added to the end of the VIEW menu
 */

object pulldownMenuTemplateButton : XmPushButton
{
    callbacks
    {
 	XmNhelpCallback = procedure bkr_help_on_widget( s_sel_directory_buttons_help );
    };
};



/*
 *  SELECTION window popup menu
 */

object selectionPopupMenu : XmPopupMenu
{
    arguments  
    {
    };
    controls
    {
    	XmPushButton	OpenTopicPopupEntry;
    	XmPushButton	OpenTopicInNewPopupEntry;
    	XmPushButton 	collapsePopupEntry;
    	XmPushButton 	expandPopupEntry;
    	XmPushButton	OpenTopicMultiPopupEntry;
    };
    callbacks
    {
    	XmNunmapCallback	= procedure bkr_menu_unmap( tag );
    };
};

object collapsePopupEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString = s_popup_collapse_label;
    };
    callbacks
    {
  	XmNactivateCallback = procedure bkr_selection_collapse_expand();
    	MrmNcreateCallback = procedure bkr_selection_create_save_ids( W_COLLAPSE_POPUP_ENTRY );
 	XmNhelpCallback = procedure bkr_help_on_widget( s_sel_popup_collapse_help );
    };
};

object expandPopupEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_popup_expand_label;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_selection_collapse_expand();
    	MrmNcreateCallback = procedure bkr_selection_create_save_ids( W_EXPAND_POPUP_ENTRY );
 	XmNhelpCallback    = procedure bkr_help_on_widget( s_sel_popup_expand_help );
    };
};

object OpenTopicPopupEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_popup_topic_open_label;
    };
    callbacks
    {
  	XmNactivateCallback = procedure bkr_topic_open_in_default();
    	MrmNcreateCallback  = procedure bkr_selection_create_save_ids( W_TOPIC_POPUP_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_popup_open_topic_help );
    };
};

object OpenTopicInNewPopupEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_popup_topic_in_new_label;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_topic_open_in_new();
    	MrmNcreateCallback = procedure bkr_selection_create_save_ids( W_TOPIC_IN_NEW_POPUP_ENTRY );
 	XmNhelpCallback    = procedure bkr_help_on_widget( s_sel_popup_open_in_new_help );
    };
};

object OpenTopicMultiPopupEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_topic_open_3dots_label;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_topic_open_in_default();
    	MrmNcreateCallback  = procedure bkr_selection_create_save_ids( W_TOPIC_MULTI_POPUP_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_popup_open_multi_help );
    };
};


