!
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
!
/* VAX/DEC CMS REPLACEMENT HISTORY, Element BKR_WIDGETS.UIL*/
/* *6     8-NOV-1992 18:01:12 BALLENGER "Use work in progress box instead of wait cursor on character cell."*/
/* *5     5-AUG-1992 22:13:04 BALLENGER "Define action/translations with XtOverrideTranslations in bkr_topic_create.c"*/
/* *4    10-MAY-1992 21:09:11 BALLENGER "Add no LinkWorks message"*/
/* *3    16-APR-1992 18:18:36 BALLENGER "Add work-in-progress dialog"*/
/* *2    19-MAR-1992 12:01:15 FITZELL "mb1&2 motion and action stuff"*/
/* *1    16-SEP-1991 12:50:29 PARMENTER "UIL Language definitions shared widgets"*/
/* VAX/DEC CMS REPLACEMENT HISTORY, Element BKR_WIDGETS.UIL*/
/* DEC/CMS REPLACEMENT HISTORY, Element BKR_WIDGETS.UIL*/
/* *6    16-APR-1991 15:48:04 ACKERMAN "I18N font change"*/
/* *5    20-MAR-1991 08:19:19 ACKERMAN "Added On Help entry to pulldown"*/
/* *4    22-FEB-1991 07:51:19 ACKERMAN "Modified uil structure for Help Callbacks"*/
/* *3    25-JAN-1991 16:44:21 FITZELL "V3_EFT_24_JAN"*/
/* *2    12-DEC-1990 12:06:23 FITZELL "V3 IFT Update snapshot"*/
/* *1     8-NOV-1990 11:16:15 FITZELL "V3 IFT"*/
/* DEC/CMS REPLACEMENT HISTORY, Element BKR_WIDGETS.UIL*/

/*
***************************************************************
**  Copyright (c) Digital Equipment Corporation, 1988, 1990  **
**  All Rights Reserved.  Unpublished rights reserved	     **
**  under the copyright laws of the United States.  	     **
**  	    	    	    	    	    	    	     **
**  The software contained on this media is proprietary	     **
**  to and embodies the confidential technology of  	     **
**  Digital Equipment Corporation.  Possession, use,	     **
**  duplication or dissemination of the software and	     **
**  media is authorized only pursuant to a valid written     **
**  license from Digital Equipment Corporation.	    	     **
**  	    	    	    	    	    	    	     **
**  RESTRICTED RIGHTS LEGEND   Use, duplication, or 	     **
**  disclosure by the U.S. Government is subject to 	     **
**  restrictions as set forth in Subparagraph (c)(1)(ii)     **
**  of DFARS 252.227-7013, or in FAR 52.227-19, as  	     **
**  applicable.	    	    	    	    	    	     **
***************************************************************
*/


/*
**++
**  FACILITY:
**
**      Bookreader User Interface (BKR)
**
**  ABSTRACT:
**
**	User Interface Language definitions for widgets shared by all
**  	4 window types (LIBRARY, SELECTION, STANDARD Topic and FORMAL Topic).
**
**  AUTHORS:
**
**      James A. Ferguson
**
**  CREATION DATE:     24-Oct-1989
**
**  MODIFICATION HISTORY:
**
**--
**/


/*
 *  Note that the translation table for the drawing window is now 
 *  loaded via XtOverrideTranslations when the topic window is created
 *  at runtime.  This is necessary because translations specified in
 *  .uil/.uid file will not override the drawing area widgets default
 *  translations.
 */

/*
 * Topic Label widget -- shared by STANDARD and FORMAL Topic windows.
 */

object topicLabel : XmLabel widget
{
    arguments
    {
    	XmNmarginWidth 	    	= k_topic_label_margin_width;
    	XmNmarginHeight       	= k_topic_label_margin_height;
    	XmNborderWidth 	    	= k_topic_label_border_width;
    	XmNfontList	    	= library_label_font_list;
    	XmNlabelString	    	= s_library_label;
    	XmNalignment	    	= XmALIGNMENT_BEGINNING;
    	XmNtopAttachment  	= XmATTACH_FORM;
    	XmNleftAttachment  	= XmATTACH_FORM;
    	XmNleftOffset	    	= k_topic_label_left_offset;
    	XmNrightAttachment  	= XmATTACH_FORM;
    	XmNrightOffset	    	= k_topic_label_right_offset;
    	XmNrecomputeSize	= false;
    };
    callbacks
    {
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_LABEL );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_topic_label_help );
    };
};


/*
 *  Topic label separator
 */

object topicLabelSeparator : XmSeparator
{
    arguments
    {
    	XmNtopAttachment    	= XmATTACH_WIDGET;
    	XmNtopWidget	    	= XmLabel topicLabel;
    	XmNleftAttachment  	= XmATTACH_FORM;
    	XmNleftOffset	    	= 0;
    	XmNrightAttachment  	= XmATTACH_FORM;
    	XmNrightOffset	    	= 0;
    };
};


/*
 *  Horizontal scroll bar widget -- shared by STANDARD and FORMAL Topic windows.
 */

object horizScrollBar : XmScrollBar
{
    arguments
    {
    	XmNminimum   	    	= k_scroll_bar_min_value;
	XmNorientation	    	= XmHORIZONTAL;
    	XmNprocessingDirection	= XmMAX_ON_RIGHT;
    	XmNtraversalOn	    	= true;
    	XmNhighlightThickness	= 2;
    };
    callbacks
    {
    	MrmNcreateCallback  	 = procedure bkr_save_widgets( W_HSCROLL_BAR );
    	XmNdecrementCallback     = procedure bkr_scroll_horizontal_callback( tag );
    	XmNdragCallback	    	 = procedure bkr_scroll_horizontal_callback( tag );
 	XmNhelpCallback     	 = procedure bkr_help_on_widget( s_hscroll_bar_help );
    	XmNincrementCallback     = procedure bkr_scroll_horizontal_callback( tag );
    	XmNpageDecrementCallback = procedure bkr_scroll_horizontal_callback( tag );
    	XmNpageIncrementCallback = procedure bkr_scroll_horizontal_callback( tag );
    	XmNtoBottomCallback   	 = procedure bkr_scroll_horizontal_callback( tag );
    	XmNtoTopCallback    	 = procedure bkr_scroll_horizontal_callback( tag );
    	XmNvalueChangedCallback	 = procedure bkr_scroll_horizontal_callback( tag );
    };
};


/*
 *  Vertical scroll bar widget -- shared by STANDARD and FORMAL Topic windows.
 */

object vertScrollBar : XmScrollBar
{
    arguments
    {
    	XmNminimum   	    	= k_scroll_bar_min_value;
	XmNorientation 	    	= XmVERTICAL;
    	XmNprocessingDirection	= XmMAX_ON_BOTTOM;
    	XmNtraversalOn	    	= true;
    	XmNhighlightThickness	= 2;
    };
    callbacks
    {
    	MrmNcreateCallback  	 = procedure bkr_save_widgets( W_VSCROLL_BAR );
    	XmNdecrementCallback     = procedure bkr_scroll_vertical_callback( tag );
 	XmNdragCallback	    	 = procedure bkr_scroll_vertical_callback( tag );
 	XmNhelpCallback     	 = procedure bkr_help_on_widget( s_hscroll_bar_help );
    	XmNincrementCallback     = procedure bkr_scroll_vertical_callback( tag );
    	XmNpageDecrementCallback = procedure bkr_scroll_vertical_callback( tag );
    	XmNpageIncrementCallback = procedure bkr_scroll_vertical_callback( tag );
    	XmNtoBottomCallback   	 = procedure bkr_scroll_vertical_callback( tag );
    	XmNtoTopCallback	 = procedure bkr_scroll_vertical_callback( tag );
    	XmNvalueChangedCallback	 = procedure bkr_scroll_vertical_callback( tag );
    };
};


/*
 *  Window widget -- shared by SELECTION, and STANDARD and FORMAL Topic windows
 */

object drawingWindow : XmDrawingArea
{
    arguments
    {
    	XmNborderWidth	= k_drawing_window_border_width;
    	XmNwidth	= k_drawing_window_width;   /* initial; modified at runtime */
    	XmNheight	= k_drawing_window_height;  /* initial; modified at runtime */
    	XmNresizePolicy	= XmRESIZE_ANY;
        XmNnavigationType = XmTAB_GROUP;
    	XmNtraversalOn	= true;
    };
    callbacks
    {
    	MrmNcreateCallback 	= procedure bkr_save_widgets( W_WINDOW );
    	XmNexposeCallback	= procedure bkr_window_expose( tag );
!    	XmNinputCallback	= procedure bkr_topic_drawing_area_input( tag );
 	XmNhelpCallback         = procedure bkr_help_on_widget( s_topic_window_help );
    };
};


/*
 *  makeDefaultEntry --  shared by SELECTION and STANDARD Topic windows
 */

object makeDefaultEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_make_default_label;
    	XmNmnemonic 	= s_make_default_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_shell_make_default( tag );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_make_default_help );
    };
};


object bkr_api_wip_window : XmWorkingDialog {
    arguments {
        XmNwidth = 250;
        XmNdialogTitle = BkrApiWorkInProgressWindowTitle;
        XmNmessageString = BkrWorkInProgressMessage;
        XmNnoResize = true;
    };
};


object noLinkWorksMenu : XmPulldownMenu
{
    controls
    {
        XmPushButton noLinkWorksButton;
    };
};

object noLinkWorksButton : XmPushButton
{
    arguments
    {
        XmNlabelString = s_no_linkworks_label ;
    };
    callbacks
    {
  	XmNactivateCallback = procedure bmi_no_linkworks_msg_display( tag );
    };
};
