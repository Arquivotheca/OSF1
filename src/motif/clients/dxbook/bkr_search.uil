!
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
!
/* VAX/DEC CMS REPLACEMENT HISTORY, Element BKR_SEARCH.UIL*/
/* *15   24-NOV-1992 18:12:23 BALLENGER "Fix problems with search and result dialog."*/
/* *14   28-SEP-1992 15:24:08 KLUM "query string is now label intead of dxmcstext"*/
/* *13   28-SEP-1992 12:23:42 KLUM "set results title correctly"*/
/* *12   25-SEP-1992 17:12:25 KLUM "new xmlist results widget details"*/
/* *11   24-SEP-1992 17:05:16 KLUM "integrate CBR results widget into Bookreader"*/
/* *10    6-JUL-1992 09:35:40 ROSE "Stop search and search now the same button"*/
/* *9    15-JUN-1992 16:18:19 ROSE "Abort button added to Search dialog box"*/
/* *8     9-MAY-1992 16:50:52 FITZELL "take LIBRARY out of library search options"*/
/* *7    29-APR-1992 11:25:15 ROSE "Search text field not single line edit"*/
/* *6    25-MAR-1992 15:16:55 PARMENTER "adding results help callback"*/
/* *5    19-MAR-1992 16:27:42 PARMENTER "added search help callbacks"*/
/* *4     5-MAR-1992 14:25:53 PARMENTER "adding simple search"*/
/* *3     3-MAR-1992 17:03:36 KARDON "UCXed"*/
/* *2     7-JAN-1992 14:17:57 PARMENTER "adding CBR/Search"*/
/* *1    16-SEP-1991 12:50:05 PARMENTER "UIL definitions for Search"*/
/* VAX/DEC CMS REPLACEMENT HISTORY, Element BKR_SEARCH.UIL*/

/*
***************************************************************
**  Copyright (c) Digital Equipment Corporation, 1988, 1990  **
**  All Rights Reserved.  Unpublished rights reserved	     **
**  under the copyright laws of the United States.  	     **
**  	    	    	    	    	    	    	     **
**  The software contained on this media is proprietary	     **
**  to and embodies the confidential technology of  	     **
**  Digital Equipment Corporation.  Possession, use,	     **
**  duplication or dissemination of the software and	     **
**  media is authorized only pursuant to a valid written     **
**  license from Digital Equipment Corporation.	    	     **
**  	    	    	    	    	       	    	     **
**  RESTRICTED RIGHTS LEGEND   Use, duplication, or 	     **
**  disclosure by the U.S. Government is subject to 	     **
**  restrictions as set forth in Subparagraph (c)(1)(ii)     **
**  of DFARS 252.227-7013, or in FAR 52.227-19, as  	     **
**  applicable.	    	    	    	    	    	     **
***************************************************************
*/


/*
**++
**  FACILITY:
**
**      Bookrearder User Interface
**
**  ABSTRACT:
**
**	User Interface definitions for Search
**
**  AUTHORS:
**
**      David Parmenter
**
**  CREATION DATE:     10-Oct-1991
**
**  MODIFICATION HISTORY:
**
**--
**/

include file 'DXmCbrAppl.uil';

object librarySearchPulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString  = s_search_label;
    	XmNmnemonic 	= s_search_mnemonic;
    };
    controls
    {
	XmPulldownMenu	    librarySearchMenu;
    };
    callbacks
    {
    	MrmNcreateCallback = procedure bkr_save_widgets( W_SEARCH_PULLDOWN_ENTRY );
	XmNhelpCallback    = procedure bkr_help_on_widget( s_lib_search_pm_help );
    };
};


object selSearchPulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString  = s_search_label;
    	XmNmnemonic 	= s_search_mnemonic;
    };
    controls
    {
	XmPulldownMenu	    selSearchMenu;
    };
    callbacks
    {
    	MrmNcreateCallback = procedure bkr_save_widgets( W_SEARCH_PULLDOWN_ENTRY );
	XmNhelpCallback    = procedure bkr_help_on_widget( s_sel_search_pm_help );
    };
};


object topicSearchPulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString  = s_search_label;
    	XmNmnemonic 	= s_search_mnemonic;
    };
    controls
    {
	XmPulldownMenu	    topicSearchMenu;
    };
    callbacks
    {
    	MrmNcreateCallback = procedure bkr_save_widgets( W_SEARCH_PULLDOWN_ENTRY );
	XmNhelpCallback    = procedure bkr_help_on_widget( s_topic_search_pm_help );
    };
};



object librarySearchMenu : XmPulldownMenu
{
    controls
    {
! 	XmPushButton	librarySearchLibraryEntry;
    	XmPushButton	librarySearchBooksEntry;
    	XmPushButton	librarySearchWindowEntry;
!	XmSeparator 	{};
!    	XmPushButton	librarySearchConceptListEntry;
!    	XmPushButton	librarySearchEditConceptEntry;
    };
    callbacks
    {
    	MrmNcreateCallback = procedure bkr_save_widgets( W_SEARCH_MENU );
	XmNhelpCallback    = procedure bkr_help_on_widget( s_lib_search_menu_help );
    };
};


object selSearchMenu : XmPulldownMenu
{
    controls
    {
!    	XmPushButton	selSearchLibraryEntry;
    	XmPushButton	selSearchBookEntry;    
    	XmPushButton	selSearchTopicsEntry;    
    	XmPushButton	selSearchWindowEntry;    
!	XmSeparator 	{};
!    	XmPushButton	selSearchConceptListEntry;
!    	XmPushButton	selSearchEditConceptEntry;
    };
    callbacks
    {
    	MrmNcreateCallback = procedure bkr_save_widgets( W_SEARCH_MENU );
	XmNhelpCallback    = procedure bkr_help_on_widget( s_sel_search_menu );
    };
};


object topicSearchMenu : XmPulldownMenu
{
    controls
    {
!    	XmPushButton	topicSearchLibraryEntry;
    	XmPushButton	topicSearchBookEntry;
!	XmSeparator 	{};
!   	XmPushButton	topicSearchNextEntry;
!    	XmPushButton	topicSearchPreviousEntry;
!	XmSeparator 	{};
!    	XmPushButton	topicSearchConceptListEntry;
!    	XmPushButton	topicSearchEditConceptEntry;
    };
    callbacks
    {
    	MrmNcreateCallback = procedure bkr_save_widgets( W_SEARCH_MENU );
	XmNhelpCallback    = procedure bkr_help_on_widget( s_topic_search_menu );
    };
};


object librarySearchLibraryEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_library_label;
    	XmNmnemonic 	= s_search_library_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_LIBRARY );
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_SEARCH_LIBRARY_ENTRY);
	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_search_library_help );
    };
};



object librarySearchBooksEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_books_label;
    	XmNmnemonic 	= s_search_books_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_BOOKS );
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_SEARCH_BOOKS_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_search_books_help );
    };
};


object librarySearchWindowEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_library_window_label;
    	XmNmnemonic 	= s_search_library_window_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_LIBRARY_WINDOW );
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_SEARCH_LIBRARY_WINDOW_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_search_window_help );
    };
};

object librarySearchConceptListEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_concept_list_label;
    	XmNmnemonic 	= s_search_concept_list_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_concept_list_cb();
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_SEARCH_CONCEPT_LIST_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_search_c_list_help );
    };
};

object librarySearchEditConceptEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_edit_concept_label;
    	XmNmnemonic 	= s_search_edit_concept_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_edit_concept_cb();
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_SEARCH_EDIT_CONCEPT_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_search_edit_c_help );
    };
};

object selSearchLibraryEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_library_label;
    	XmNmnemonic 	= s_search_library_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_LIBRARY );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_LIBRARY_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_search_library_help );
    };
};

object selSearchBookEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_book_label;
    	XmNmnemonic 	= s_search_book_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_BOOK );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_BOOK_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_search_book_help );
    };
};

object selSearchTopicsEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_topics_label;
    	XmNmnemonic 	= s_search_topics_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_TOPICS );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_TOPICS_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_search_topics_help );
    };
};

object selSearchWindowEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_selection_window_label;
    	XmNmnemonic 	= s_search_selection_window_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_SELECTION_WINDOW );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_SELECTION_WINDOW_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_search_window_help );
    };
};

object selSearchConceptListEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_concept_list_label;
    	XmNmnemonic 	= s_search_concept_list_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_no_op_cb();
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_CONCEPT_LIST_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_search_c_list_help );
    };
};

object selSearchEditConceptEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_edit_concept_label;
    	XmNmnemonic 	= s_search_edit_concept_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_no_op_cb();
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_EDIT_CONCEPT_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_sel_search_edit_c_help );
    };
};

object topicSearchLibraryEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_library_label;
    	XmNmnemonic 	= s_search_library_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_LIBRARY );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_LIBRARY_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_topic_search_library_help );
    };
};

object topicSearchBookEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_book_label;
    	XmNmnemonic 	= s_search_book_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_search_everything_cb( K_SEARCH_BOOK );
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_BOOK_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_topic_search_book_help );
    };
};


object topicSearchNextEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_next_label;
    	XmNmnemonic 	= s_search_next_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_no_op_cb();
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_NEXT_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_topic_search_next_entry_help );
    };
};

object topicSearchPreviousEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_previous_label;
    	XmNmnemonic 	= s_search_previous_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_no_op_cb();
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_PREVIOUS_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_topic_search_prev_entry_help );
    };
};

object topicSearchConceptListEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_concept_list_label;
    	XmNmnemonic 	= s_search_concept_list_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_no_op_cb();
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_CONCEPT_LIST_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_topic_search_c_list_help );
    };
};

object topicSearchEditConceptEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_search_edit_concept_label;
    	XmNmnemonic 	= s_search_edit_concept_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_no_op_cb();
    	MrmNcreateCallback  = procedure bkr_save_widgets( W_SEARCH_EDIT_CONCEPT_ENTRY );
	XmNhelpCallback     = procedure bkr_help_on_widget( s_topic_search_edit_c_help );
    };
};



 /*
  * setup for search dialog box
  */

object SimpleSearchDialog : XmPromptDialog {
        arguments {
                XmNdialogStyle          = XmDIALOG_MODELESS;
                XmNselectionLabelString = s_search_box_label;
                XmNokLabelString        = s_search_button_label;
                XmNcancelLabelString    = s_cancel_label;
                XmNhelpLabelString      = s_help_label;
                XmNautoUnmanage         = false;
                XmNtextColumns          = 50;
        };
        callbacks {
                XmNokCallback           = procedure bkr_simple_search_ok(tag);
                XmNcancelCallback       = procedure bkr_simple_search_cancel(tag);
                XmNhelpCallback         = procedure bkr_help_on_widget( s_search_box_help );
        };
};
/*
 * Simple Results Dialog Box
 */
object SimpleResultsDialog : XmSelectionDialog {
        arguments {
                XmNdialogStyle          = XmDIALOG_MODELESS;
                XmNdialogTitle          = s_search_matching_entries_label;
                XmNselectionLabelString = s_search_box_label;
                XmNokLabelString        = s_ok_button_label;
                XmNapplyLabelString     = k_cbr_results_visit_label;
                XmNcancelLabelString    = s_cancel_label;
                XmNhelpLabelString      = s_help_label;
                XmNautoUnmanage         = false;
                XmNlistVisibleItemCount = 10;
        };
        callbacks {
                XmNokCallback           = procedure BkrCbrOK_button(tag);
                XmNapplyCallback        = procedure BkrCbrApply_button(tag);
                XmNcancelCallback       = procedure BkrCbrCancel_button(tag);
                XmNhelpCallback         = procedure bkr_help_on_widget(s_results_box_help);
        };
};






