!
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
!
/* VAX/DEC CMS REPLACEMENT HISTORY, Element BKR_LIBRARY_WIDGETS.UIL*/
/* *12   17-NOV-1992 22:52:33 BALLENGER "Create CC-specific help menus."*/
/* *11    3-SEP-1992 13:01:44 GOSSELIN "added Keyboard and Contents items to Help Menus"*/
/* *10   24-MAR-1992 10:32:26 KLUM "remove print ranges button"*/
/* *9     3-MAR-1992 17:00:45 KARDON "UCXed"*/
/* *8    23-JAN-1992 16:38:47 PARMENTER "fixing search cb's"*/
/* *7    21-JAN-1992 14:52:31 KLUM "bl1"*/
/* *6     7-JAN-1992 14:30:17 KLUM "fixed printbook button"*/
/* *5     7-JAN-1992 14:17:52 PARMENTER "adding CBR/Search"*/
/* *4     2-JAN-1992 10:46:51 KLUM "BR Print - fixes to File menu"*/
/* *3    11-DEC-1991 11:24:58 GOSSELIN "finished adding help Index"*/
/* *2     1-NOV-1991 12:39:36 BALLENGER "Reintegrate memex support"*/
/* *1    16-SEP-1991 12:49:46 PARMENTER "UIL definitions for Library window hierarchy"*/
/* VAX/DEC CMS REPLACEMENT HISTORY, Element BKR_LIBRARY_WIDGETS.UIL*/
/* DEC/CMS REPLACEMENT HISTORY, Element BKR_LIBRARY_WIDGETS.UIL*/
/* *10   29-MAY-1991 14:02:21 ACKERMAN "removed Link helpcallback so external Link software will use correct help text"*/
/* *9    11-APR-1991 15:31:48 ACKERMAN "I18N string changes"*/
/* *8    28-MAR-1991 15:10:58 ACKERMAN "OnHelp callback"*/
/* *7    27-MAR-1991 08:10:25 ACKERMAN "reorder popup menu"*/
/* *6    20-MAR-1991 08:21:05 ACKERMAN "Added On Help entry to pulldown"*/
/* *5    22-FEB-1991 10:35:58 ACKERMAN "Changed label for popup  in library window"*/
/* *4    22-FEB-1991 08:04:29 ACKERMAN "Modified uil structure for Help Callbacks"*/
/* *3    25-JAN-1991 16:42:10 FITZELL "V3_EFT_24_JAN"*/
/* *2    12-DEC-1990 12:04:28 FITZELL "V3 IFT Update snapshot"*/
/* *1     8-NOV-1990 11:15:05 FITZELL "V3 IFT"*/
/* DEC/CMS REPLACEMENT HISTORY, Element BKR_LIBRARY_WIDGETS.UIL*/

/*
***************************************************************
**  Copyright (c) Digital Equipment Corporation, 1988, 1990  **
**  All Rights Reserved.  Unpublished rights reserved	     **
**  under the copyright laws of the United States.  	     **
**  	    	    	    	    	    	    	     **
**  The software contained on this media is proprietary	     **
**  to and embodies the confidential technology of  	     **
**  Digital Equipment Corporation.  Possession, use,	     **
**  duplication or dissemination of the software and	     **
**  media is authorized only pursuant to a valid written     **
**  license from Digital Equipment Corporation.	    	     **
**  	    	    	    	    	    	    	     **
**  RESTRICTED RIGHTS LEGEND   Use, duplication, or 	     **
**  disclosure by the U.S. Government is subject to 	     **
**  restrictions as set forth in Subparagraph (c)(1)(ii)     **
**  of DFARS 252.227-7013, or in FAR 52.227-19, as  	     **
**  applicable.	    	    	    	    	    	     **
***************************************************************
*/


/*
**++
**  FACILITY:
**
**      Bookreader User Interface (BKR)
**
**  ABSTRACT:
**
**	 User Interface Language definitions for Library window hierarchy
**
**  AUTHORS:
**
**      James A. Ferguson
**
**  CREATION DATE:     11-Dec-1989
**
**  MODIFICATION HISTORY:
**
**--
**/


/*
 *  Library Window
 */

object libraryWindow : XmMainWindow
{
    arguments
    {
    	XmNborderWidth	= k_main_window_border_width;
    };
    controls
    {
    	XmMenuBar    	    libraryMenuBar;
    	DXmSvn	    	    svnArea;
    };
    callbacks
    {
    	MrmNcreateCallback = procedure bkr_library_save_widgets( W_MAIN_WINDOW );
 	XmNhelpCallback    = procedure bkr_help_on_widget( s_library_svn_help);
    };
};

object libraryMenuBar : XmMenuBar
{
    arguments
    {
    	XmNborderWidth	    = k_menu_bar_border_width;
       	XmNmenuHelpWidget   = XmCascadeButton libraryHelpPulldownEntry;
    	XmNorientation 	    = XmHORIZONTAL;
    };
    controls
    {
    	XmCascadeButton	       libraryFilePulldownEntry;
    	XmCascadeButton widget libraryLinkPulldownEntry;
    	XmCascadeButton	       libraryViewPulldownEntry;
    	XmCascadeButton        librarySearchPulldownEntry; /* SEARCH - CBR */
    	XmCascadeButton	       libraryHelpPulldownEntry;   
    };
    callbacks
    {
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_MENU_BAR );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_library_menu_bar_help );
    };
};

object svnArea : DXmSvn
{
    arguments
    {
	DXmSvnNexpectHighlighting = true;
    };
    callbacks
    {
    	MrmNcreateCallback  	     	= procedure bkr_library_save_widgets( W_SVN );
    	DXmSvnNattachToSourceCallback   = procedure bkr_library_attach_to_source();
    	DXmSvnNdetachFromSourceCallback	= procedure bkr_library_detach_from_source();
    	DXmSvnNgetEntryCallback 	= procedure bkr_library_get_entry();
 	DXmSvnNhelpRequestedCallback   	= procedure bkr_help_on_widget( s_library_svn_help );
    	DXmSvnNpopupMenuCallback    	= procedure bkr_library_popup_menu();
    	DXmSvnNselectAndConfirmCallback = procedure bkr_library_double_click();
    	DXmSvnNtransitionsDoneCallback  = procedure bkr_library_transitions_done();
    };
};


/*
 *  Connection pulldown menu entry
 */

object libraryLinkPulldownEntry : XmCascadeButton widget
{
    arguments
    {
    	XmNlabelString = s_link_label;
    	XmNmnemonic    = s_link_mnemonic;
    };
    callbacks
    {
    	MrmNcreateCallback  = procedure bmi_save_connection_menu( tag );
    };
};


/*
 * File pulldown menu entry
 */

object libraryFilePulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString 	= s_file_label;
    	XmNmnemonic 	= s_file_mnemonic;
    };

    /*
     *  Pulldown menu not included because it will be fetched in a
     *  work proc after the Library window is created.  This is done
     *  to hopefully save on startup time.
     *
     *	    controls
     *	    {  
     *	    	XmPulldownMenu libraryFileMenu;  
     *	    };
     */

    callbacks
    {
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_FILE_PULLDOWN_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_library_file_pm_help );
    };
};


/*
 *  File Pulldown menu
 */

object libraryFileMenu : XmPulldownMenu
{
    controls
    {
    	XmPushButton 	openBookInDefault;
    	XmPushButton 	openBookInNewWindow;
    	XmPushButton	openBookEntry;
	XmSeparator {};
    	XmPushButton 	openLibraryEntry;
    	XmPushButton	openDefaultLibraryEntry;
	XmSeparator {};
    	XmPushButton	prbook_button;
	XmSeparator {};
!    	XmPushButton	printranges_button;
!	XmSeparator {};
    	XmPushButton 	exitEntry;
    };

    /*
     *  Not needed for deferred fetching
     * 
     *	 callbacks 
     *   {  
     *	    MrmNcreateCallback = procedure bkr_library_save_widgets( W_FILE_MENU );
     *	 };
     */
};

object openLibraryEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_open_library_label;
    	XmNmnemonic 	= s_open_library_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_file_dialog_create( K_OPEN_LIBRARY_FILE );
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_OPEN_LIBRARY_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_open_library_help );
    };
};

object openDefaultLibraryEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_open_default_library_label;
    	XmNsensitive    = false;
    	XmNmnemonic 	= s_default_library_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_file_dialog_open_default();
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_OPEN_DEFAULT_LIBRARY_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_open_default_library_help );
    };
};

object openBookInDefault : XmPushButton
{
    arguments
    {
    	XmNlabelString = s_open_book;
    	XmNsensitive    = false;
    	XmNmnemonic 	= s_open_in_default_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_library_open_close_node( W_OPEN_BOOK_IN_DEFAULT );
    	MrmNcreateCallback = procedure bkr_library_save_widgets( W_OPEN_BOOK_IN_DEFAULT );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_open_book_in_default_help );
    };
};

object openBookInNewWindow : XmPushButton 
{
    arguments
    {
    	XmNlabelString  = s_open_book_in_new_label;
    	XmNsensitive    = false;
    	XmNmnemonic 	= s_open_in_new_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_library_open_close_node( W_OPEN_BOOK_IN_NEW );
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_OPEN_BOOK_IN_NEW );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_open_book_in_new_help );
    };
};

object openBookEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_open_book_3dots_label;
    	XmNmnemonic 	= s_open_book_dialog_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_file_dialog_create( K_OPEN_BOOK_FILE );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_open_book_dialog_help );
    };
};

object exitEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_exit_label;
    	XmNmnemonic 	= s_exit_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_close_quit_callback();
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_QUIT_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_exit_help );
    };
};



/*
 * View pulldown menu entry
 */

object libraryViewPulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString 	= s_view_label;
    	XmNmnemonic 	= s_view_mnemonic;
    };

    /*
     *  Pulldown menu not included because it will be fetched in a
     *  work proc after the Library window is created.  This is done
     *  to hopefully save on startup time.
     *
     *	    controls
     *	    {  
     *	    	XmPulldownMenu libraryViewMenu;
     *	    };
     */

    callbacks
    {
    	MrmNcreateCallback = procedure bkr_library_save_widgets( W_VIEW_PULLDOWN_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_library_view_pm_help );
    };
};


/*
 *  View Pulldown menu
 */

object libraryViewMenu : XmPulldownMenu
{
    controls
    {
    	XmPushButton     expandEntry;
/* XmPushButton     expandAllEntry;    REMOVED for V3 because of cycles in tree */
	XmSeparator {};
    	XmPushButton     collapseEntry;
    	XmPushButton     collapseAllEntry;
    };

    /*
     *  Not needed for deferred fetching
     * 
     *	 callbacks 
     *   {  
     *	    MrmNcreateCallback = procedure bkr_library_save_widgets( W_VIEW_MENU );
     *	 };
     */
};

object expandEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_expand_label;
    	XmNsensitive   	= false;
    	XmNmnemonic 	= s_expand_entry_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback  = procedure bkr_library_collapse_expand( W_EXPAND_ENTRY );
    	MrmNcreateCallback   = procedure bkr_library_save_widgets( W_EXPAND_ENTRY );
 	XmNhelpCallback      = procedure bkr_help_on_widget( s_library_expand_help );
    };
};

object expandAllEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString	= s_expand_all_label;
    	XmNmnemonic 	= s_expand_all_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_library_collapse_expand( W_EXPAND_ALL_ENTRY );
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_EXPAND_ALL_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_library_expand_all_help );
    };
};

object collapseEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString 	= s_collapse_label;
    	XmNsensitive   	= false;
    	XmNmnemonic 	= s_collapse_entry_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_library_collapse_expand( W_COLLAPSE_ENTRY );
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_COLLAPSE_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_library_collapse_help );
    };
};

object collapseAllEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_collapse_all_label;
    	XmNmnemonic 	= s_collapse_all_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback  = procedure bkr_library_collapse_expand( W_COLLAPSE_ALL_ENTRY );
    	MrmNcreateCallback   = procedure bkr_library_save_widgets( W_COLLAPSE_ALL_ENTRY );
 	XmNhelpCallback      = procedure bkr_help_on_widget( s_library_collapse_all_help);
    };
};

/*
 * Help pulldown menu entry and push buttons 
 */

object libraryHelpPulldownEntry : XmCascadeButton
{
    arguments
    {
    	XmNlabelString 	= s_help_label;
    	XmNmnemonic 	= s_help_mnemonic;
    };
    callbacks
    {
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_library_help_pm_help );
    };
};

object libraryHelpMenu : XmPulldownMenu
{
    controls
    {
    	XmPushButton 	libraryOnContextEntry;
	XmSeparator 	{};
    	XmPushButton 	libraryOnWindowEntry;
    	XmPushButton 	libraryIndexEntry;
    	XmPushButton 	libraryKeyboardEntry;
   	XmPushButton 	libraryContentsEntry;
    	XmPushButton 	libraryOnHelpEntry;
    	XmPushButton 	libraryOnVersionEntry;
    };
};

/* Character cell version of the help menu that exclude the Help Mode /
 * Help-On-Context entry, since those don't work too well without a mouse.
 */
object libraryHelpMenuCC : XmPulldownMenu
{
    controls
    {
    	XmPushButton 	libraryOnWindowEntry;
    	XmPushButton 	libraryContentsEntry;
    	XmPushButton 	libraryIndexEntry;
    	XmPushButton 	libraryKeyboardEntry;
    	XmPushButton 	libraryOnHelpEntry;
    	XmPushButton 	libraryOnVersionEntry;
    };
};

object libraryOnContextEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_on_context_label;
    	XmNmnemonic 	= s_on_context_mnemonic;
	XmNaccelerator  = s_on_context_accel;
   	XmNacceleratorText  = s_on_context_accel_text;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_context();
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_on_context_help );
    };
};

object libraryOnWindowEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_on_window_label;
    	XmNmnemonic 	= s_on_window_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_library_window_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_on_window_help );
    };
};

object libraryIndexEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_index_label;
    	XmNmnemonic 	= s_index_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_index_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_index_help );
    };
};

object libraryContentsEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_contents_label;
    	XmNmnemonic 	= s_contents_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_contents_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_contents_help );
    };
};

object libraryKeyboardEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_keyboard_label;
    	XmNmnemonic 	= s_keyboard_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_keyboard_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_keyboard_help );
    };
};

object libraryOnHelpEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_on_help_label;
    	XmNmnemonic 	= s_on_help_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_on_help_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_on_help_help );
    };
};

object libraryOnVersionEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString  = s_on_version_label;
    	XmNmnemonic 	= s_on_version_mnemonic;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_help_on_widget( s_on_version_help );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_on_version_help );
    };
};


/*
 *  Library Window Popup menu for a shelf entry
 */

object libraryWindowShelfEntryPopup : XmPopupMenu
{
    arguments  
    {
    };
    controls
    {
    	XmPushButton 	openEntry;
    	XmPushButton 	closeEntry;
    };
    callbacks
    {
    	XmNunmapCallback	= procedure bkr_menu_unmap( K_LIBRARY_WINDOW );
    };
};

object openEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString = s_popup_expand_label;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_library_open_close_node( W_OPEN_SHELF_POPUP_ENTRY );
    	MrmNcreateCallback = procedure bkr_library_save_widgets( W_OPEN_SHELF_POPUP_ENTRY );
 	XmNhelpCallback    = procedure bkr_help_on_widget( s_lib_popup_open_help );
    };
};

object closeEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString = s_popup_collapse_label;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_library_open_close_node( W_CLOSE_SHELF_POPUP_ENTRY );
    	MrmNcreateCallback = procedure bkr_library_save_widgets( W_CLOSE_SHELF_POPUP_ENTRY );
 	XmNhelpCallback    = procedure bkr_help_on_widget( s_lib_popup_close_help );
    };
};

/*
 *  Library Window Popup menu for a book entry
 */

object libraryWindowBookEntryPopup : XmPopupMenu
{
    arguments
    {
    };
    controls
    {
    	XmPushButton 	popupOpenBookEntry;
    	XmPushButton 	popupOpenBookInNewEntry;
    };
    callbacks
    {
    	XmNunmapCallback = procedure bkr_menu_unmap( K_LIBRARY_WINDOW );
    };
};

object popupOpenBookEntry : XmPushButton
{
    arguments
    {
    	XmNlabelString = s_popup_open_book;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_library_open_close_node( W_OPEN_IN_DEFAULT_POPUP_ENTRY );
    	MrmNcreateCallback = procedure bkr_library_save_widgets( W_OPEN_IN_DEFAULT_POPUP_ENTRY );
 	XmNhelpCallback    = procedure bkr_help_on_widget( s_lib_popup_open_book_help );
    };
};

object popupOpenBookInNewEntry : XmPushButton
{
    arguments                       
    {
    	XmNlabelString = s_popup_open_book_in_new_label;
    };
    callbacks
    {
    	XmNactivateCallback = procedure bkr_library_open_close_node( W_OPEN_IN_NEW_POPUP_ENTRY );
    	MrmNcreateCallback  = procedure bkr_library_save_widgets( W_OPEN_IN_NEW_POPUP_ENTRY );
 	XmNhelpCallback     = procedure bkr_help_on_widget( s_lib_popup_open_book_in_help );
    };
};



