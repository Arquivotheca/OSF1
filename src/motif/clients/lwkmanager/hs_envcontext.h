/*
 * *****************************************************************
 * *                                                               *
 * *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
 * *                                                               *
 * *   All Rights Reserved.  Unpublished rights  reserved  under   *
 * *   the copyright laws of the United States.                    *
 * *                                                               *
 * *   The software contained on this media  is  proprietary  to   *
 * *   and  embodies  the  confidential  technology  of  Digital   *
 * *   Equipment Corporation.  Possession, use,  duplication  or   *
 * *   dissemination of the software and media is authorized only  *
 * *   pursuant to a valid written license from Digital Equipment  *
 * *   Corporation.                                                *
 * *                                                               *
 * *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
 * *   by the U.S. Government is subject to restrictions  as  set  *
 * *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
 * *   or  in  FAR 52.227-19, as applicable.                       *
 * *                                                               *
 * *****************************************************************
 */
/*
 * HISTORY
 */
/*
** Generated by ODL Version X0.1 on Tue Jul 14 11:01:26 1992
*/

/*
** COPYRIGHT (c) 1989 BY
** DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
** ALL RIGHTS RESERVED.
**
** THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
** ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
** INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
** COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
** OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
** TRANSFERRED.
**
** THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
** AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
** CORPORATION.
**
** DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
** SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
*/

/*
** Private Type Definitions for the EnvContext Object
*/

/*
** Abstract Type Definitions for subtypes of Object
*/

typedef _Object _List, _PtrTo _ListPtr;
typedef _Object _Window, _PtrTo _WindowPtr;
typedef _Object _EnvWindow, _PtrTo _EnvWindowPtr;
typedef _Object _LbWindow, _PtrTo _LbWindowPtr;
typedef _Object _HsObject, _PtrTo _HsObjectPtr;

/*
** EnvContext Instance Structure Definition
*/

typedef struct __EnvContext {
        _Type type;
        _EnvWindow env_window;
        _HsObject networks;
        _HsObject active_networks;
        _HsObject current_network;
        _HsObject paths;
        _HsObject active_path_index;
        _HsObject active_paths;
        _HsObject trail;
        _HsObject attributes;
        lwk_linkbase hs_linkbase;
    } _EnvContextInstance, _PtrTo _EnvContext, _PtrTo _PtrTo _EnvContextPtr;

/*
** EnvContext Property Name Table Index Definitions
*/

#define _EnvWindowIndex 0
#define _NetworksIndex 1
#define _ActiveNetworksIndex 2
#define _CurrentNetworkIndex 3
#define _PathsIndex 4
#define _ActivePathIndexIndex 5
#define _ActivePathsIndex 6
#define _TrailIndex 7
#define _AttributesIndex 8
#define _P_HsLinkbase "$HsLinkbase"
#define _HsLinkbaseIndex 9

/*
** EnvContext Property Name Table Definition
*/

#define _EnvContextPropertyNameTable \
    _PropertyNameTableEntry _Constant EnvContextPropertyNameTable[] = { \
        {_P_EnvWindow, _EnvWindowIndex, _True}, \
        {_P_Networks, _NetworksIndex, _True}, \
        {_P_ActiveNetworks, _ActiveNetworksIndex, _True}, \
        {_P_CurrentNetwork, _CurrentNetworkIndex, _True}, \
        {_P_Paths, _PathsIndex, _True}, \
        {_P_ActivePathIndex, _ActivePathIndexIndex, _True}, \
        {_P_ActivePaths, _ActivePathsIndex, _True}, \
        {_P_Trail, _TrailIndex, _True}, \
        {_P_Attributes, _AttributesIndex, _True}, \
        {_P_HsLinkbase, _HsLinkbaseIndex, _False}, \
        {(_String) 0, 0, _False} \
    }

/*
** EnvContext Property Accessor Definitions
*/

#define _EnvWindow_of(Obj) ((_EnvContext) _Reference(Obj))->env_window
#define _Networks_of(Obj) ((_EnvContext) _Reference(Obj))->networks
#define _ActiveNetworks_of(Obj) ((_EnvContext) _Reference(Obj))->active_networks
#define _CurrentNetwork_of(Obj) ((_EnvContext) _Reference(Obj))->current_network
#define _Paths_of(Obj) ((_EnvContext) _Reference(Obj))->paths
#define _ActivePathIndex_of(Obj) ((_EnvContext) _Reference(Obj))->active_path_index
#define _ActivePaths_of(Obj) ((_EnvContext) _Reference(Obj))->active_paths
#define _Trail_of(Obj) ((_EnvContext) _Reference(Obj))->trail
#define _Attributes_of(Obj) ((_EnvContext) _Reference(Obj))->attributes
#define _HsLinkbase_of(Obj) ((_EnvContext) _Reference(Obj))->hs_linkbase

/*
** Include Generic Operation Support
*/

#include "hs_operation_prototypes.h"

/*
** EnvContext Method Declarations
*/

_DeclareFunction(_Void EnvOpObjIllOp, (_in _Object object));
_DeclareFunction(_EnvContext EnvOpObjCopy, (_in _EnvContext object));
_DeclareFunction(_EnvContext EnvOpObjCreate, (_in _Type type));
_DeclareFunction(_Void EnvOpObjDelete, (_inout _EnvContext object));
_DeclareFunction(_Void EnvOpEnvCtxtFree, (_inout _EnvContext object));
_DeclareFunction(_Void EnvOpEnvCtxtGetAttribute, (_in _EnvContext object,
    _in _Attribute attribute, _in _AnyPtr *value));
_DeclareFunction(_Void EnvOpEnvCtxtGetValue, (_in _EnvContext object,
    _in _String property_name, _in _Domain domain,
    _in _AnyPtr value));
_DeclareFunction(_Void EnvOpEnvCtxtInitialize, (_inout _EnvContext object,
    _in _EnvContext proto_object));
_DeclareFunction(_Boolean EnvOpObjIsType, (_in _EnvContext object, _in _Type type));
_DeclareFunction(_Void EnvOpEnvCtxtLoadDefaultAttr, (
    _in _EnvContext object));
_DeclareFunction(_Void EnvOpEnvCtxtResetAttributes, (_in _EnvContext object));
_DeclareFunction(_Void EnvOpEnvCtxtResetDefaultAttr, (
    _in _EnvContext object));
_DeclareFunction(_EnvContext EnvOpEnvCtxtRetrieve, (_in _Type type,
    _inout _Boolean *new_ctxt, _in _Boolean create_lb));
_DeclareFunction(_Void EnvOpEnvCtxtSaveAttributes, (_in _EnvContext object));
_DeclareFunction(_Void EnvOpEnvCtxtSaveList, (_in _EnvContext env_ctxt,
    lwk_domain domain, _AnyPtr head));
_DeclareFunction(_Void EnvOpEnvCtxtSetAttribute, (_in _EnvContext object,
    _in _Attribute attribute, _in _AnyPtr *value));
_DeclareFunction(_Void EnvOpEnvCtxtSetAttributeCurrent, (
    _in _EnvContext object, _in _Attribute attribute,
    _in _AnyPtr *value));
_DeclareFunction(_Void EnvOpEnvCtxtSetContextCurrency, (
    _inout _EnvContext env_ctxt, _in _CurrencyFlag currency,
    _in lwk_list list, _in _HsObject hs_object));
_DeclareFunction(_Void EnvOpEnvCtxtSetValue, (_inout _EnvContext object,
    _in _String property_name, _in _Domain domain,
    _in _AnyPtr value, _in _SetFlag flag));

/*
** EnvContext Type Instance Definition
*/

#define _EnvContextTypeInstance \
    _TypeInstance _Constant HS__EnvContextTypeInstance = { \
        &HS__ObjectTypeInstance, \
        sizeof(_EnvContextInstance), \
        { \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjCopy, \
        (_Method) EnvOpObjCreate, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjDelete, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtFree, \
        (_Method) EnvOpEnvCtxtGetAttribute, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtGetValue, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtInitialize, \
        (_Method) EnvOpObjIsType, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtLoadDefaultAttr, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtResetAttributes, \
        (_Method) EnvOpEnvCtxtResetDefaultAttr, \
        (_Method) EnvOpEnvCtxtRetrieve, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtSaveAttributes, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtSaveList, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtSetAttribute, \
        (_Method) EnvOpEnvCtxtSetAttributeCurrent, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtSetContextCurrency, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpEnvCtxtSetValue, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp, \
        (_Method) EnvOpObjIllOp \
        } \
    }

#define _EnvContextType \
    _Type _Constant HS__EnvContextType = &HS__EnvContextTypeInstance
