! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
!++
! COPYRIGHT (c) 1988, 1991 BY
! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
! ALL RIGHTS RESERVED.
!
! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
! ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
! INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
! COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
! OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
! TRANSFERRED.
!
! THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
! AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
! CORPORATION.
!
! DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
!--


!++
!
! Facility:
!   LinkWorks Manager
!
! Abstract:
!   DECwindows LinkWorks Manager Messages
!
! Author:
!   Andre Pavanello
!
! Creation Date:
!   31-Oct-89
!
! Modification History:
!
!--

!++
!   Define the error messages
!--

value
    StsUnknown : exported
	compound_string("Unknown Error Message");
    StsSuccess : exported
	compound_string("Success");
    StsFailure : exported
	compound_string("Failure");
    StsNotYetImplemented : exported
	compound_string("Not Yet Implemented");
    StsAllocationFailure : exported
	compound_string("Memory allocation failure");
    StsDeallocationFailure : exported
	compound_string("Memory deallocation failure");
    StsListEmpty : exported
	compound_string("List is empty.");
    StsDRMHierarchyOpenFailed : exported
	compound_string("DRM hierarchy open failed.");
    StsDRMHierarchyFetchFailed : exported
	compound_string("DRM hierarchy fetch failed.");
    StsDRMHierarchyCloseFailed : exported
	compound_string("DRM hierarchy close failed.");
    StsInvalidWidgetId : exported
	compound_string("Invalid widget id");
    StsInvalidOperation : exported
	compound_string("Invalid operation");
    StsInvalidDomain : exported
	compound_string("Invalid domain");
    StsNoSuchProperty : exported
	compound_string("No such property");
    StsPropertyIsReadOnly : exported
	compound_string("Property is read-only.");
    StsAbstractObject : exported
	compound_string("Abstract object");
    StsInvalidArgument : exported
	compound_string("Invalid argument");
    StsInvalidCompoundString : exported
	compound_string("Invalid compound string");
    StsSingleValuedProperty : exported
	compound_string("Single valued property");
    StsPropertyNotDeleted : exported
	compound_string("Property not deleted");
    StsInvalidSetOperation : exported
	compound_string("Invalid set operation");
    StsNoSuchElement : exported
	compound_string("No such element");
    StsInvalidObject : exported
	compound_string("Invalid object");
    StsInvalidCurrency : exported
	compound_string("Invalid currency");
    StsCurrencySetFailure : exported
	compound_string("Currency set failure");
    StsLbNotExist : exported
	compound_string("LinkWorks Manager default linkbase does not exist.");
    StsNewLinkbase : exported
	compound_string("New default linkbase created.");
    StsRetrieveError : exported
	compound_string("Environment setup failed.");
    StsWndOpenError : exported
	compound_string("Window creation failed.");
    StsWndDisplayError : exported
	compound_string("Window display failed.");
    StsStartupFailed : exported
	compound_string("LinkWorks Manager startup failed.");
    StsSetValueFailed : exported
	compound_string("Set value on object failed.");
    StsGetValueFailed : exported
	compound_string("Get value on object failed.");
    StsObjdscEncodeError : exported
	compound_string("Object descriptor encode error");
    StsObjdscDecodeError : exported
	compound_string("Object descriptor decode error");
    StsGetObjdscFailed : exported
	compound_string("Object not stored in linkbase.");
    StsAddEleFailed : exported
	compound_string("Add element to list failed.");
    StsCreateListFailed : exported
	compound_string("Create list failed.");
    StsCloseLbErr : exported
	compound_string("Close of linkbase failed.");
    StsOpenLbErr : exported
	compound_string("Open of linkbase failed.");
    StsStoreFailed : exported
	compound_string("Store failed.");
    StsSaveFailed : exported
	compound_string("Save failed.");
    StsOpenLbFailed : exported
	compound_string("Open of linkbase failed.");
    StsQuitFailed : exported
	compound_string("Exit failed.");
    StsMapMenuFailed : exported
	compound_string("Map menu callback failed.");
    StsActivateFailed : exported
	compound_string("Activate failed.");
    StsRecordFailed : exported
	compound_string("Record failed.");
    StsShowPropFailed : exported
	compound_string("View properties failed.");
    StsExpandFailed : exported
	compound_string("Expand failed.");
    StsSaveLbFailed : exported
	compound_string("Save linkbase failed.");
    StsPasteFailed : exported
	compound_string("Paste failed.");
    StsCutFailed : exported
	compound_string("Cut failed.");
    StsCopyFailed : exported
	compound_string("Copy failed.");
    StsDeleteFailed : exported
	compound_string("Delete failed.");
    StsGetDomainFailed : exported
	compound_string("Get object domain failed.");
    StsPersobjCreationFailed : exported
	compound_string("Object creation failed.");
    StsPersobjDeletionFailed : exported
	compound_string("Object deletion failed.");
    StsEncodeDeletionFailed : exported
	compound_string("Encode deletion failed.");
    StsEnvmgrDeletionFailed : exported
	compound_string("UI object deletion failed.");
    StsIterateFailed : exported
	compound_string("Iterate on list object failed.");
    StsSvnEntryNotFound : exported
	compound_string("Display entry not found");
    StsObjectNotFound : exported
	compound_string("Object not found");
    StsCopyFromClipFailed : exported
	compound_string("Copy from Clipboard failed.");
    StsCliplocked : exported
	compound_string("Clipboard is locked.");
    StsNoTimestamp : exported
	compound_string("No timestamp");
    StsLbAlreadyOpen : exported
	compound_string("Linkbase is already open.");
    StsNewWndNotOpen : exported
	compound_string("New window not created");
    StsSelConfCbFailed : exported
	compound_string("Select and Confirm callback failed.");
    StsSelectCbFailed : exported
	compound_string("Select callback failed.");
    StsDwUiCreationFailed : exported
	compound_string("Environment Manager object creation failed.");
    StsNoSelfInsert : exported
	compound_string("Cannot insert object into itself.");
    StsCreateLbErr : exported
	compound_string("Creation of linkbase failed.");
    StsUpdateErr : exported
	compound_string("Updating properties failed.");
    StsDeleteErr : exported
	compound_string("Object deletion error");
    StsSaveAttrFailed : exported
	compound_string("Save attributes function failed.");
    StsRestoreAttrFailed : exported
	compound_string("Restore attributes function failed.");
    StsRestoreSysAttrFailed : exported
	compound_string("Restore system attributes function failed.");
    StsObjectRetrieveFailed : exported
	compound_string("Retrieve operation on given object failed.");
    StsUnexpectedError : exported
	compound_string("Unexpected error");
    StsDuplicateObj : exported
	compound_string("Item is already in the list.");
    StsLinkbaseToBeSaved : exported
	compound_string("Deleted objects will be removed from the linkbase", separate=true) 
	& compound_string("when you perform a Save.", separate=true)
	& compound_string("To keep the deleted objects, close the Linkbase", separate=true) 
	& compound_string("window and do not save changes.");
    StsObjNameToBeChanged : exported
	compound_string("Copy resulted in two objects with the same name.", separate=true)
	& compound_string("You should change the name of one.", separate=true)
	& compound_string("(View menu, Properties... item).");
    StsCannotTestRecursive : exported
	compound_string("Cannot test to detect a recursive list.");
    StsRecursiveList : exported
	compound_string("You are trying to create a recursive list.");
    StsCannotLoadPath : exported
	compound_string("Cannot retrieve path list.");
    StsCannotLoadAttr : exported
	compound_string("Cannot retrieve environment attributes.");
    StsCannotLoadTrail : exported
	compound_string("Cannot retrieve trail.");

    
    MsgSaveLinkbaseChanges : exported
	compound_string("The linkbase contents have not been saved.", separate=true)
	& compound_string("Would you like to save the contents?");
    MsgSaveCustomChanges : exported
	compound_string("The current settings have not been saved.", separate=true)
	& compound_string("Would you like to save them before exiting?");
    MsgLbNewVersion : exported
	compound_string("The default personal linkbase is obsolete.", separate=true)
	& compound_string("Would you like to create a new one?");

value
    InformationTitle :
	compound_string(ApplicationNameBase & "Message");
    InitInformationTitle :
	compound_string(InitApplicationNameBase & "Message");

procedure 
    env_message_ok(any);
	    
!++
!   Define the message box
!--

    object message_window : XmInformationDialog {
	arguments {
	    XmNdefaultPosition = true;
	    XmNnoResize = true;
	    XmNautoUnmanage = false;
	    XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
	    XmNdialogTitle = InformationTitle; 
	};
	callbacks {
	    XmNokCallback = procedure env_message_ok(windowprivate);
	    XmNhelpCallback = 
		procedure env_context_sensitive_help(MessageBoxHelpKey);
	};
    };

!++
!   Define the message box for the root message
!--

    object root_message_window : XmInformationDialog {
	arguments {
	    XmNdefaultPosition = false;
	    XmNx = 200;
	    XmNy = 200;
	    XmNnoResize = true;
	    XmNautoUnmanage = false;
	    XmNdialogTitle = InitInformationTitle; 
	};
	callbacks {
	    XmNhelpCallback = 
		procedure env_context_sensitive_help(MessageBoxHelpKey);
	};
    };

!++
!   Define the message box for the root dialog
!--

    object root_dialog_window : XmMessageDialog {
	arguments {
	    XmNdefaultPosition = false;
	    XmNx = 200;
	    XmNy = 200;
	    XmNnoResize = true;
	    XmNautoUnmanage = true;
	    XmNdialogTitle = InitInformationTitle; 
	};
	callbacks {
	    XmNhelpCallback = 
		procedure env_context_sensitive_help(MessageObsoleteBoxHelpKey);
	};
    };

