!++
! COPYRIGHT (c) 1989,1992 BY
! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
! ALL RIGHTS RESERVED.
!
! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
! ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
! INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
! COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
! OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
! TRANSFERRED.
!
! THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
! AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
! CORPORATION.
!
! DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
!--

!++
! Facility:
!   LinkWorks Manager
!
! Abstract:
!   DECwindows LinkWorks Manager common user interface definitions
!
! Author:
!   Andr Pavanello, MEMEX Project
!   W. Ward Clark, MEMEX Project
!   Pascale Dardailler, MEMEX Project
!
! Creation Date:  31-Oct-89
!
! Modification History:
!   X0.9    WWC  23-Feb-90  add windowprivate identifier
!   X0.10   lg   23-may-90  Add mnemonic and accelerator values
!   X0.11   lg	 5-Dec-90   Put mnemonics with associated text, 
!			    leave mnemonic value definitions here
!--


! Object identifier
!
identifier
	windowprivate;


! Help procedures
!
value

    EnvDefaultPBShadow		    : 1;
    EnvDefaultHighlightThickness    : 2;
    EnvDefaultShadowThickness	    : 3;
    EnvDefaultDialogBorder	    : 12;
    EnvDefaultMarginBetweenForms    : 8;
    EnvDefaultShadowType	    : XmSHADOW_IN;
    EnvDefaultMarginWidth	    : 6;
    EnvDefaultMarginHeight	    : 6;
    EnvDefaultHeightBetweenLabels   : 7;
			

!
!  Accelerators
! 	Each accelerator has two parts, a DECwindows translation which
!	defines the precise keycodes to activate the corresponding
! 	menu entry, and the accelerator text which is displayed in
! 	the corresponding menu entry.
! 

value
    CutAccelerator :
	'Shift<Key>0x1000FF00:';
    CutAcceleratorText :
	compound_string('Shift+Remove');

    CopyAccelerator :
	'Ctrl<Key>Insert:';
    CopyAcceleratorText :
	compound_string('Ctrl+Insert');

    PasteAccelerator :
	'Shift<Key>Insert:';
    PasteAcceleratorText :
	compound_string('Shift+Insert');
	

! Values for Mnemonics 

value
    mneumonic_A:	keysym("A");
    mneumonic_B:	keysym("B");
    mneumonic_C:	keysym("C");
    mneumonic_D:	keysym("D");
    mneumonic_E:	keysym("E");
    mneumonic_F:	keysym("F");
    mneumonic_G:	keysym("G");
    mneumonic_H:	keysym("H");
    mneumonic_I:	keysym("I");
    mneumonic_J:	keysym("J");
    mneumonic_K:	keysym("K");
    mneumonic_L:	keysym("L");
    mneumonic_M:	keysym("M");
    mneumonic_N:	keysym("N");
    mneumonic_O:	keysym("O");
    mneumonic_P:	keysym("P");
    mneumonic_Q:	keysym("Q");
    mneumonic_R:	keysym("R");
    mneumonic_S:	keysym("S");
    mneumonic_T:	keysym("T");
    mneumonic_U:	keysym("U");
    mneumonic_V:	keysym("V");
    mneumonic_W:	keysym("W");
    mneumonic_X:	keysym("X");
    mneumonic_Y:	keysym("Y");
    mneumonic_Z:	keysym("Z");
    mneumonic_a:	keysym("a");
    mneumonic_b:	keysym("b");
    mneumonic_c:	keysym("c");
    mneumonic_d:	keysym("d");
    mneumonic_e:	keysym("e");
    mneumonic_f:	keysym("f");
    mneumonic_g:	keysym("g");
    mneumonic_h:	keysym("h");
    mneumonic_i:	keysym("i");
    mneumonic_j:	keysym("j");
    mneumonic_k:	keysym("k");
    mneumonic_l:	keysym("l");
    mneumonic_m:	keysym("m");
    mneumonic_n:	keysym("n");
    mneumonic_o:	keysym("o");
    mneumonic_p:	keysym("p");
    mneumonic_q:	keysym("q");
    mneumonic_r:	keysym("r");
    mneumonic_s:	keysym("s");
    mneumonic_t:	keysym("t");
    mneumonic_u:	keysym("u");
    mneumonic_v:	keysym("v");
    mneumonic_w:	keysym("w");
    mneumonic_x:	keysym("x");
    mneumonic_y:	keysym("y");
    mneumonic_z:	keysym("z");
