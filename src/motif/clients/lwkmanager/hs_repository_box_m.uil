! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
!++
! COPYRIGHT (c) 1988 BY
! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
! ALL RIGHTS RESERVED.
!
! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
! ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
! INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
! COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
! OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
! TRANSFERRED.
!
! THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
! AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
! CORPORATION.
!
! DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
!--
!++
!
! Facility:
!   LinkWorks Manager
!
! Abstract:
!   DECwindows LinkWorks Manager User Interface Linkbase file selection and 
!   creation boxes description file.
!
! Author:
!   Patricia Avigdor
!   Pascale Dardailler
!
! Creation Date:
!   10-Nov-89
!
! Modification History:
!
!--
!++
!   callback procedures
!--

value
    LbBoxTitle :
	compound_string(ApplicationNameBase & "Open Linkbase");
    LbBoxLabel :
	compound_string("Linkbases");
	
    lb_create_box_title : 
	compound_string(ApplicationNameBase & "Create Linkbase");

    lb_create_title_label_label :
	compound_string("Create new linkbase: ");
	
    lb_create_name_label_label :
	compound_string("Name");

    lb_create_file_label_label :
	compound_string("File");

    lb_create_ok_label :
	compound_string("OK");

    lb_close_yes_label :
	compound_string("Yes");
	
    lb_close_no_label : 
	compound_string("No");
	
    lb_cancel_label :
	compound_string("Cancel");

    lb_help_label :
	compound_string("Help");

    lb_close_quest_box_title :
	    compound_string(ApplicationNameBase & "Question");

value	    
    lb_max_button_width : 60;

    LbCreateCancelBLeftPos : 37;
    LbCreateHelpBLeftPos   : 70;
    
    LbCloseQNoBLeftPos	    : 30;
    LbCloseQCancelBLeftPos : 55;
    LbCloseQHelpBLeftPos   : 80;
        
procedure
    lb_select_box_ok(any);
    lb_select_box_cancel(any);
    lb_create_create_name(any);
    lb_create_change_name(any);
    lb_create_create_file(any);
    lb_create_create_ok(any);
    lb_create_activate_ok(any);
    lb_create_activate_cancel(any);
    question_create_label(any);
    question_create_yes(any);
    question_create_no(any);
    question_activate_cancel(any);

!++
!   Linkbase file selection dialog box description
!--

object lb_select_box : XmFileSelectionDialog {
    arguments {
	XmNdialogTitle		= LbBoxTitle;
	XmNlistLabelString	= LbBoxLabel;
    };
    callbacks {
	XmNokCallback = procedure lb_select_box_ok(windowprivate);
	XmNcancelCallback = procedure lb_select_box_cancel(windowprivate);
	XmNhelpCallback = procedure env_context_sensitive_help(LbBoxHelpKey);
    };
};


!  Linkbase Creation box
!

object 
    lb_create_box : XmFormDialog {
        arguments {
	    XmNhorizontalSpacing    = EnvDefaultDialogBorder;
	    XmNverticalSpacing	    = EnvDefaultDialogBorder;
	    XmNdefaultPosition = true;
	    XmNresizePolicy = XmRESIZE_ANY;
	    XmNautoUnmanage = false;
	    XmNdialogTitle = lb_create_box_title;      
	    XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
            XmNdefaultButton = XmPushButton lb_create_lb_ok;
            XmNcancelButton = XmPushButton lb_create_lb_cancel;
        };
	controls {
	    XmForm	 lb_create_prop_controls;
	    XmPushButton lb_create_lb_ok;
	    XmPushButton lb_create_lb_cancel;
	    XmPushButton lb_create_lb_help;
	    XmSeparator	 lb_create_margin_separator;
	};
 
	callbacks {
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_box_HelpKey);
	};
    };              

object
    lb_create_prop_controls : XmForm {
	arguments {
	    XmNhorizontalSpacing    = EnvDefaultMarginWidth;
	    XmNverticalSpacing	    = EnvDefaultMarginHeight;
	    XmNshadowType	    = EnvDefaultShadowType;
	    XmNshadowThickness	    = EnvDefaultShadowThickness;
	    XmNtopAttachment        = XmATTACH_FORM;
	    XmNrightAttachment      = XmATTACH_FORM;
	    XmNleftAttachment       = XmATTACH_FORM;
	};
    
	controls {
	    XmLabel	lb_create_title_label;
	    XmForm	lb_create_label_control;
	    XmForm	lb_create_text_control;
	};

	callbacks {
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_box_HelpKey);
	};
    };

object
    lb_create_label_control : XmForm {
	arguments {
	    XmNverticalSpacing      = EnvDefaultMarginHeight;
	    XmNresizable	    = false;
	    XmNtopAttachment        = XmATTACH_WIDGET;
	    XmNtopWidget	    = XmLabel lb_create_title_label;
	    XmNleftAttachment       = XmATTACH_FORM;
	    XmNbottomAttachment     = XmATTACH_FORM;
	};
	
        controls {
	    XmLabel lb_create_name_label;
            XmLabel lb_create_lb_file_label;
	};

	callbacks {
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_box_HelpKey);
	};
    };

object
    lb_create_text_control : XmForm {
	arguments {
	    XmNresizable	    = false;
	    XmNtopAttachment        = XmATTACH_WIDGET;
	    XmNtopWidget	    = XmLabel lb_create_title_label;
	    XmNleftAttachment       = XmATTACH_WIDGET;
	    XmNleftWidget	    = XmForm lb_create_label_control;
	    XmNrightAttachment      = XmATTACH_FORM;
	    XmNbottomAttachment     = XmATTACH_FORM;
	};
	
        controls {
	    DXmCSText lb_create_name_text;
	    DXmCSText lb_create_lb_file_text;
	};

	callbacks {
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_box_HelpKey);
	};
    };

object
    lb_create_title_label : XmLabel {
	arguments {
	    XmNlabelString = lb_create_title_label_label;
	    XmNalignment = XmALIGNMENT_BEGINNING;
	    XmNrightAttachment = XmATTACH_FORM;
	    XmNtopAttachment = XmATTACH_FORM;
	    XmNleftAttachment = XmATTACH_FORM;
	};

	callbacks {
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_name_HelpKey);
	};
    };
    
object
    lb_create_name_label : XmLabel {
	arguments {
	    XmNlabelString = lb_create_name_label_label;
	    XmNalignment = XmALIGNMENT_BEGINNING;
	    XmNtopAttachment = XmATTACH_FORM;
	    XmNleftAttachment = XmATTACH_FORM;
	    XmNrightAttachment = XmATTACH_FORM;
	};

	callbacks {
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_name_HelpKey);
	};
    };

object
    lb_create_lb_file_label : XmLabel {
	arguments {
	    XmNlabelString = lb_create_file_label_label;
	    XmNalignment = XmALIGNMENT_BEGINNING;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmLabel lb_create_name_label;
	    XmNleftAttachment = XmATTACH_FORM;
	    XmNrightAttachment = XmATTACH_FORM;
	};

	callbacks {
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_file_HelpKey);
	};
    };

object 
    lb_create_name_text : DXmCSText {
	arguments {
	    XmNeditable = true;
	    XmNcursorPositionVisible = true;
	    XmNtopAttachment = XmATTACH_FORM;
	    XmNleftAttachment = XmATTACH_FORM;
	    XmNrightAttachment = XmATTACH_FORM;
	    XmNhighlightThickness = EnvDefaultHighlightThickness;
	};

	callbacks {
	    MrmNcreateCallback = procedure lb_create_create_name(windowprivate);
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_name_text_HelpKey);
	};
    };                        

object 
    lb_create_lb_file_text : DXmCSText {
	arguments {
	    XmNwordWrap = false;
	    XmNeditable = false;
	    XmNshadowThickness = 0;
	    XmNcursorPositionVisible = false;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = DXmCSText lb_create_name_text;
	    XmNleftAttachment = XmATTACH_FORM;
	    XmNrightAttachment = XmATTACH_FORM;
	};

	callbacks {
	    MrmNcreateCallback = procedure lb_create_create_file(windowprivate);
	    XmNhelpCallback = procedure env_context_sensitive_help(lb_create_file_text_HelpKey);
	};
    };

object 
    lb_create_lb_ok : XmPushButton {
	arguments {
	    XmNlabelString = lb_create_ok_label;
	    XmNwidth = lb_max_button_width;
	    XmNrecomputeSize = false;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmForm lb_create_prop_controls;
	    XmNleftAttachment= XmATTACH_FORM;
	    XmNdefaultButtonShadowThickness = EnvDefaultPBShadow;
	};

	callbacks {
	    MrmNcreateCallback = procedure lb_create_create_ok(windowprivate);
            XmNactivateCallback = procedure lb_create_activate_ok(windowprivate);
            XmNhelpCallback = procedure env_context_sensitive_help(lb_create_ok_HelpKey);
	};
    };

object 
    lb_create_lb_cancel : XmPushButton {
	arguments {
	    XmNlabelString = lb_cancel_label;
	    XmNwidth = lb_max_button_width;
	    XmNrecomputeSize = false;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmForm lb_create_prop_controls;
	    XmNleftAttachment= XmATTACH_POSITION;
	    XmNleftPosition = LbCreateCancelBLeftPos;
	    XmNdefaultButtonShadowThickness = EnvDefaultPBShadow;
	};

	callbacks {
            XmNactivateCallback = procedure lb_create_activate_cancel(windowprivate);
            XmNhelpCallback = procedure env_context_sensitive_help(lb_create_cancel_HelpKey);
	};
    };

object 
    lb_create_lb_help : XmPushButton {
	arguments {
	    XmNlabelString = lb_help_label;
	    XmNwidth = lb_max_button_width;
	    XmNrecomputeSize = false;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = XmForm lb_create_prop_controls;
	    XmNleftAttachment= XmATTACH_POSITION;
	    XmNleftPosition = LbCreateHelpBLeftPos;
	    XmNdefaultButtonShadowThickness = EnvDefaultPBShadow;
	};

	callbacks {
            XmNactivateCallback = procedure env_context_sensitive_help(lb_create_box_HelpKey);
            XmNhelpCallback = procedure env_context_sensitive_help(lb_create_help_HelpKey);
	};
    };

object
    lb_create_margin_separator : XmSeparator {
	arguments {
	    XmNseparatorType	= XmNO_LINE;
	    XmNtopAttachment	= XmATTACH_WIDGET;
	    XmNtopWidget	= lb_create_lb_ok;
	 };
    };
     
    
! 4 buttons Linkbase Close Question Dialog box
!

object 
    lb_close_quest_box : XmFormDialog {
        arguments {
	    XmNdefaultPosition = true;
	    XmNnoResize = true;
	    XmNautoUnmanage = false;
	    XmNdialogTitle = lb_close_quest_box_title;      
	    XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
	    XmNhorizontalSpacing = EnvDefaultDialogBorder;
	    XmNverticalSpacing = EnvDefaultDialogBorder;
            XmNdefaultButton = XmPushButton lb_close_quest_yes;
            XmNcancelButton = XmPushButton lb_close_quest_cancel;
        };
	controls {
	    XmLabel lb_close_quest_pixmap;
	    XmLabel lb_close_quest_label;
	    XmSeparator lb_close_separator;
            XmPushButton lb_close_quest_yes;
            XmPushButton lb_close_quest_no;
	    XmPushButton lb_close_quest_cancel;
	    XmPushButton lb_close_quest_help;
	    XmSeparator  lb_close_margin_separator;
	};
 
	callbacks {
	    XmNhelpCallback = procedure env_context_sensitive_help(question_box_HelpKey);
	};
    };              

object 
    lb_close_quest_pixmap : XmLabel {
	arguments {
	    XmNlabelType = XmPIXMAP;
	    XmNlabelPixmap = DwtQuestionMarkIcon;
	    XmNalignment = XmALIGNMENT_BEGINNING;
	    XmNwidth = 22;
	    XmNtopAttachment = XmATTACH_FORM;
	    XmNleftAttachment = XmATTACH_FORM;
	};
    };
    
object 
    lb_close_quest_label : XmLabel {
	arguments {
	    XmNalignment = XmALIGNMENT_BEGINNING;
	    XmNtopAttachment = XmATTACH_FORM;
	    XmNleftAttachment = XmATTACH_WIDGET;
	    XmNleftWidget = XmLabel lb_close_quest_pixmap;
	    XmNrightAttachment = XmATTACH_FORM;
	};
	
	callbacks {
	    MrmNcreateCallback = procedure question_create_label(windowprivate);
	};
    };
    
object
    lb_close_separator : XmSeparator {
	arguments {
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = lb_close_quest_label;
	    XmNleftAttachment = XmATTACH_FORM;
	    XmNrightAttachment = XmATTACH_FORM;
	    XmNleftOffset = 0;
	    XmNrightOffset = 0;
	};
    };
    
object 
    lb_close_quest_yes : XmPushButton {
	arguments {
	    XmNlabelString = lb_close_yes_label;
	    XmNwidth = lb_max_button_width;
	    XmNrecomputeSize = false;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = lb_close_separator;
	    XmNleftAttachment= XmATTACH_FORM;
	    XmNdefaultButtonShadowThickness = EnvDefaultPBShadow;
	};

	callbacks {
	    MrmNcreateCallback = procedure question_create_yes(windowprivate);
!            XmNactivateCallback = procedure question_activate_yes(windowprivate);
            XmNhelpCallback = procedure env_context_sensitive_help(lb_close_yes_HelpKey);
	};
    };

object 
    lb_close_quest_no : XmPushButton {
	arguments {
	    XmNlabelString = lb_close_no_label;
	    XmNwidth = lb_max_button_width;
	    XmNrecomputeSize = false;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = lb_close_separator;
	    XmNleftAttachment= XmATTACH_POSITION;
	    XmNleftPosition = LbCloseQNoBLeftPos;
	    XmNdefaultButtonShadowThickness = EnvDefaultPBShadow;
	};

	callbacks {
	    MrmNcreateCallback = procedure question_create_no(windowprivate);
!            XmNactivateCallback = procedure question_activate_no(windowprivate);
            XmNhelpCallback = procedure env_context_sensitive_help(lb_close_no_HelpKey);
	};
    };

object 
    lb_close_quest_cancel : XmPushButton {
	arguments {
	    XmNlabelString = lb_cancel_label;
	    XmNwidth = lb_max_button_width;
	    XmNrecomputeSize = false;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = lb_close_separator;
	    XmNleftAttachment= XmATTACH_POSITION;
	    XmNleftPosition = LbCloseQCancelBLeftPos;
	    XmNdefaultButtonShadowThickness = EnvDefaultPBShadow;
	};

	callbacks {
            XmNactivateCallback = procedure question_activate_cancel(windowprivate);
            XmNhelpCallback = procedure env_context_sensitive_help(lb_close_cancel_HelpKey);
	};
    };

object 
    lb_close_quest_help : XmPushButton {
	arguments {
	    XmNlabelString = lb_help_label;
	    XmNwidth = lb_max_button_width;
	    XmNrecomputeSize = false;
	    XmNtopAttachment = XmATTACH_WIDGET;
	    XmNtopWidget = lb_close_separator;
	    XmNleftAttachment= XmATTACH_POSITION;
	    XmNleftPosition = LbCloseQHelpBLeftPos;
	    XmNdefaultButtonShadowThickness = EnvDefaultPBShadow;
	};

	callbacks {
            XmNactivateCallback = procedure env_context_sensitive_help(question_box_HelpKey);
            XmNhelpCallback = procedure env_context_sensitive_help(lb_create_help_HelpKey);
	};
    };

object
    lb_close_margin_separator : XmSeparator {
	arguments {
	    XmNseparatorType	= XmNO_LINE;
	    XmNtopAttachment	= XmATTACH_WIDGET;
	    XmNtopWidget	= lb_close_quest_yes;
	 };
    };
