! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! DECWindows Motif window manager V1.2.2
!
! Copyright 1990, 1993 Digital Equipment Corporation.  All rights reserved.
!
!----------------------------------------------------------------------------
!
! Motif window manager resource file for a color monitor
!
! If you have a black and white monitor, to customize your color-specific 
! resources,
!
! copy /usr/lib/X11/app-defaults/Mwm_bw to ~/Mwm_bw
!
!----------------------------------------------------------------------------
!
! Active border colors
Mwm*activeForeground: #000000000000
Mwm*activeBackground: #9851785167AD
Mwm*activeBackgroundPixmap: unspecified_pixmap
Mwm*activeTopShadowColor: #AF4199C18E2E
Mwm*activeTopShadowPixmap: unspecified_pixmap
Mwm*activeBottomShadowColor: #529737652849
Mwm*activeBottomShadowPixmap: unspecified_pixmap
Mwm*activeAutoShade: True
!
! Window manager menu colors
! This is used for color customization to match the menu colors to
! the active or inactive borders.  If this is set to 0,
! the menu colors will not be changed during customization
Mwm*matchMenuColors : 1
Mwm*menu*foreground: #000000000000
Mwm*menu*background: #9851785167AD
Mwm*menu*backgroundPixmap: unspecified_pixmap
Mwm*menu*topShadowColor: #AF4199C18E2E
Mwm*menu*topShadowpixmap: unspecified_pixmap
Mwm*menu*bottomShadowColor: #529737652849
Mwm*menu*bottomShadowPixmap: unspecified_pixmap
!
! Icon image and box colors
Mwm*iconImageForeground: #000000000000
Mwm*iconImageBackground: #CA94AA469193
Mwm*iconImageBackgroundPixmap: unspecified_pixmap
Mwm*iconImageTopShadowColor: #DC28BC3DA3D6
Mwm*iconImageTopShadowPixmap: unspecified_pixmap
Mwm*iconImageBottomShadowColor: #9851785167AD
Mwm*iconImageBottomShadowPixmap: unspecified_pixmap
Mwm*iconImageAutoShade: True
!
! The Iconbox color is set in V1.2 or later via the background resource
! rather than the scrollbar trough color
Mwm*iconbox.background:
!
! Inactive border colors
Mwm*foreground: #000000000000
Mwm*background: #CA94AA469193
Mwm*backgroundPixmap: unspecified_pixmap
Mwm*topShadowColor: #DC28BC3DA3D6
Mwm*topShadowPixmap: unspecified_pixmap
Mwm*bottomShadowColor: #9851785167AD
Mwm*bottomShadowPixmap: unspecified_pixmap
Mwm*autoShade: True
!
! Matte colors
Mwm*matteForeground: #000000000000
Mwm*matteBackground: #CA94AA469193
Mwm*matteTopShadowColor: #DC28BC3DA3D6
Mwm*matteTopShadowPixmap: unspecified_pixmap
Mwm*matteBottomShadowColor: #9851785167AD
Mwm*matteBottomShadowPixmap: unspecified_pixmap
Mwm*matteAutoShade: True
!
!
! Set to greater than 0 pixels to add an additional border between
! border and the window
Mwm*matteWidth: 0
!
! Mwm fonts
Mwm*fontList: -*-Menu-Medium-R-Normal--*-120-*-*-P-*-ISO8859-1
!
! Set to Explicit to determine focus by clicking on the window or border
! Set to Pointer to determine focus based on the location of the pointer
Mwm*keyboardFocusPolicy: Explicit
!
! Policy when the window with focus is minimized or removed
! if focuspolicy is explicit, set to true to give focus to
! the window with previous focus
Mwm*autoKeyFocus: True
!
! Policy when the window with focus is raised
! if focuspolicy is explicit, set to true to give focus to
! the window that is raised
Mwm*raiseKeyFocus: True
!
! if focuspolicy is explicit, set to true to give a window focus 
! when it is restored from an icon
Mwm*deiconifyKeyFocus: True
!
! Set to True to raise a window when it is given focus
! Set to False to keep the stacking order the same when a window is given focus
Mwm*focusAutoRaise: True
!
! if focuspolicy is explicit, 
! set to true to give input focus to a window when it is mapped
Mwm*startupKeyFocus: True
!
! Set to True to place and size windows interactively
! false to use default placement
Mwm*interactivePlacement: False
!
! Delay time to retry interactive placement if it fails
Mwm*interPlaceDelay: 1000
!
! Number of retries for interactive placement before using default
! placement
Mwm*interPlaceRetries: 4
!
! This determines default placement of window when there is
! no specification by the user
! Set to true to have Mwm stagger the positions of a window 
! from the top left corner                               
Mwm*clientAutoPlace: True
!
! Set to true to include the border when positioning a window
! Set to false to exclude the border
Mwm*positionIsFrame: False
!
! Set to true to gray icons in the iconbox 
! when the icons are not in the minimized state
Mwm*fadeNormalIcon: True
!
! Border decorations
! Set to all for all decorations
! Set to any of the following to limit decorations:
!    maximize minimize resizeh border menu title
! Set to none for no decorations
Mwm*clientDecoration: all
!
! Border functions
! Set to all for all functions
! Set to any of the following to limit functions:
!    resize move minimize maximize close
! Set to none for no functions
Mwm*clientFunctions: all    
!
! Set to True for compatibility for running XUI applications
Mwm*useDECMode: True
!
! Set to True to display icon box
! Set to False to displays icons without the icon box
Mwm*useIconBox: False
!
Mwm*iconBoxSBDisplayPolicy:	vertical
!
! Icon decorations
! Set to all or any of the following to control what is displayed with an icon
! activelabel label image
Mwm*iconDecoration: activelabel label image
!
! Position of Icon box 
! width x height + x position + y position
Mwm*iconBoxGeometry: 14x1-0-0
!
! Size of resize border
Mwm*resizeBorderWidth: 10
!
! When moving a window,
! if this is set to True, the entire window will move
! if this is set to False, an outline will move
Mwm*moveOpaque: False
!
! Set this to True to ignore MOD2 and MOD3 keys for window
! manager operations
Mwm*ignoreModKeys: False
!
Mwm*transientDecoration: Title resize
!
! How to place icons when a window is minimized
! Set to left top for top of screen left to right
! Set to left bottom for bottom of screen left to right
! Set to right top for top of screen right to left
! Set to right bottom for bottom of screen right to left
! Set to top left for left of screen top to bottom 
! Set to top right for right of screen top to bottom
! Set to bottom left for left of screen bottom to top
! Set to bottom right for right of screen bottom to top
Mwm*iconPlacement: Bottom Right
!
! Set to True to place icons according to iconPlacement resource
! Set to False for interactive arrangement
Mwm*iconAutoPlace: True             
!
! Set to numbers of pixels between the edge of screen and the icons
Mwm*iconPlacementMargin: 1
!
! Title for icon box
Mwm*iconBoxTitle: Icon box
!
Mwm*restartSettings: True
!
! Feedback information
! options are all or none or behavior move resize placement quit restart kill
Mwm*showFeedback:	behavior placement quit restart kill
!
! Uncomment this resource to resize Mwm dialog boxes to fit on any screen
!*DXmfitToScreenPolicy:	as_needed
!
! Double-click on window menu (on border of window)
! Set to False to disable double-click on window menu to "close" a window
Mwm*wMenuButtonClick2: True
!
! Click on icon
! Set to true to post window when you click on the icon
Mwm*iconClick: True
!
! Configuration file
! contains definition of window and root menus and bindings
! Here is a sample definition: 
! Mwm*configFile: ~/.mwmrc
! If this is not defined, Mwm first searches for .mwmrc in
! your home directory and then /usr/lib/X11/system.mwmrc
! This may vary depending on the language and certain environment
! variables
!
! Default bindings as defined in the configuration file
Mwm*buttonBindings: DefaultButtonBindings
Mwm*keyBindings: DefaultKeyBindings
!
! Definition for Window menu on the border of a window
Mwm*windowMenu: DefaultWindowMenu
!
! Definition for Window menu on iconbox
Mwm*iconbox*windowMenu: IconBoxMenu
!        
! Definition for System menu when MB1 is pressed on the screen
Mwm*systemMenu: RootMenu
