! $Id$
!
! dwc_ui_calendar_objects.uil
!!!!!! help messages for MEMEX stuff need to be defined
!++
!
!   Naming conventions: objects (widgets or gadgets) are given a name formed 
!   by collapsing a descriptive name with the abbreviated object type. The
!   constant used in the MrmNcreateCallback callback is formed by prefixing the widget's 
!   name with 'k_'
!
!--


!++
!
!   Procedures
!
!--

procedure

    generic_modal_create   ( string );
    destroy_modal_help( );
    errorbox_lastchance();
    errorbox_destroy();
    file_menu_map ();
    do_open_file( integer );
    do_close();                  

    do_nameas( string );
        file_nameas_ok();
	file_nameas_cancel();
    do_delete( string );
	caution_delete_file();
    file_print_menu();
    do_include();
    bye_bye();

    do_edit_menu	();
	do_cut		();
	do_copy		();
	do_paste	();
	do_clear	();
	do_selall	();
	mark_menu	();
	    mark_item	();

    do_view_menu();
	view_selected();
	view_today();
	view_day();
	view_month();
	view_year();

    do_schedule_menu();
	schedule_entry_edit();
	schedule_entry_delete();
	schedule_entry_close();
	schedule_entry_reset();

    custom_menu();
	do_general_display();
	do_dayview_display();
	do_iconbox_display();
	do_alarms_display();
	do_save_current_settings();
	do_restore_settings();
	do_use_default_settings();

    !++
    !	For the XmNhelpCallback box
    !--
    alarm_dismiss ();
    alarm_pb_fixup ();
    alarm_widget_create( integer );

    repeat_questions ( integer );
    repeat_cancel ( integer );

!++
!
!   Identifiers
!
!--

identifier
    diu;
    alarm_out;


!++
!
!
!
!--
object calendar_nomemex : XmMainWindow
{
    arguments
    {
	XmNunitType = XmPIXELS;
	XmNwidth = 400;
	XmNheight = 400;
	XmNmenuBar = XmMenuBar main_nomemex_bar;
    };
    controls
    {
	XmMenuBar main_nomemex_bar;
    };
}; 
		    
object main_nomemex_bar : XmMenuBar
{
    arguments
    {
	XmNmenuHelpWidget = XmCascadeButton help_widget_entry;
	XmNnavigationType	= XmSTICKY_TAB_GROUP;
    };
    callbacks
    {
	MrmNcreateCallback = procedure generic_create_proc( k_menu_bar );
	XmNhelpCallback = procedure dwc_help_for_widget_activate
			   (hlp_overview) ;
    };
    controls
    {
	XmCascadeButton file_cascade;
	XmCascadeButton edit_cascade;
	XmCascadeButton view_cascade;
	XmCascadeButton entry_cascade;
	XmCascadeButton options_cascade;
	XmCascadeButton help_widget_entry;
    };
};

object calendar : XmMainWindow
{
    arguments
    {
	XmNunitType = XmPIXELS;
	XmNwidth = 400;
	XmNheight = 400;
	XmNmenuBar = XmMenuBar main_bar;
    };
    controls
    {
	XmMenuBar main_bar;
    };
};

!
! currently not used.
!
object wrapper_bb : XmBulletinBoard
{
    arguments
    {
	XmNshadowThickness = 0;
	XmNborderWidth = 0;
    };
    callbacks
    {
	MrmNcreateCallback = procedure generic_create_proc (k_wrapper);
    };
};

object main_bar : XmMenuBar widget
{
    arguments
    {
	XmNmenuHelpWidget = XmCascadeButton help_widget_entry;
	XmNnavigationType	= XmSTICKY_TAB_GROUP;
    };
    callbacks
    {
	MrmNcreateCallback = procedure generic_create_proc (k_menu_bar);
	XmNhelpCallback = procedure dwc_help_for_widget_activate
	    (hlp_overview);
    };
    controls
    {
	XmCascadeButton file_cascade;
	XmCascadeButton edit_cascade;
	XmCascadeButton widget memex_cascade;
	XmCascadeButton view_cascade;
	XmCascadeButton entry_cascade;
	XmCascadeButton options_cascade;
	XmCascadeButton help_widget_entry;
    };
};

object file_cascade : XmCascadeButton
{
    arguments
    {
	XmNlabelString = k_file_label_text;
	XmNmnemonic = k_file_label_mn;
    };
    controls
    {
	XmPulldownMenu file_pulldown;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_widget_activate
	   (hlp_ovr_calmen);
    };
};

object edit_cascade : XmCascadeButton
{
    arguments
    {
	XmNlabelString = k_edit_label_text;
	XmNmnemonic = k_edit_label_mn;
    };
    controls
    {
	XmPulldownMenu edit_pulldown;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_widget_activate
	   (hlp_ovr_edimen);
    };
};

object memex_cascade : XmCascadeButton widget
{
    arguments
    {
	XmNlabelString = k_memex_label_text;
	XmNmnemonic = k_memex_label_mn;
    };
    controls
    {
    };
    callbacks
    {
	MrmNcreateCallback = procedure generic_create_proc (k_memex_pull);
    };
};

object view_cascade : XmCascadeButton
{
    arguments
    {
	XmNlabelString = k_view_label_text;
	XmNmnemonic = k_view_label_mn;
    };
    controls	
    {
	XmPulldownMenu view_pulldown;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_widget_activate
	   (hlp_ovr_vewmen);
    };
};

object entry_cascade : XmCascadeButton
{
    arguments
    {
	XmNlabelString = k_entry_label_text;
	XmNmnemonic = k_entry_label_mn;
    };
    controls
    {
	XmPulldownMenu entry_pulldown;
    };
    callbacks
    {
	MrmNcreateCallback = procedure 
	    generic_create_proc( k_entry_pull );
	XmNhelpCallback = procedure dwc_help_for_widget_activate
	    (hlp_ovr_schedule);
    };
};
object options_cascade : XmCascadeButton
{
    arguments
    {
	XmNlabelString = k_customize_label_text;
	XmNmnemonic = k_customize_label_mn;
    };
    controls
    {
	XmPulldownMenu customize_pulldown;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
	    (hlp_ovr_optmen);
    };
};

object help_widget_entry : XmCascadeButton
{
    arguments
    {
	XmNlabelString = k_help_label_text;
	XmNmnemonic = k_help_label_mn;
    };
    controls
    {
	XmPulldownMenu help_pulldown;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
	    (hlp_ovr_help_menu);
    };
};

!++
!
!   File Menu pulldowns
!
!--

object file_pulldown : XmPulldownMenu
{
    arguments
    {
	argument ('DXmdelayPopupMenuRealization') = true;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
			   (hlp_ovr_calmen);
	XmNmapCallback = procedure file_menu_map( ) ;
    };
    controls
    {
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_open_label_text;
		XmNmnemonic	= k_open_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
			       (hlp_ovr_calmen_open);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_open_pb );
		XmNactivateCallback = procedure generic_modal_create
				    ( "open_filebox" );	 ! name of widget
	    };
	};
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_open_new_label_text;
		XmNmnemonic	= k_open_new_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
			       (hlp_ovr_calmen_open);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_open_new_pb );
		XmNactivateCallback = procedure generic_modal_create
				    ( "open_new_filebox" );	! name of widget
	    };
	};
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_include_label_text;
		XmNmnemonic	= k_include_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
			   (hlp_ovr_calmen_incl);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_include_pb ); 
		XmNactivateCallback = procedure generic_modal_create
				    ("include_filebox");
	    };
	};
	XmSeparator
	{
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		    (hlp_ovr_calmen);
	    };
	};
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_close_label_text;
		XmNmnemonic	= k_close_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
			   (hlp_ovr_calmen_close);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_close_pb );
		XmNactivateCallback = procedure do_close();
	    };
	};
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_nameas_label_text;
		XmNmnemonic	= k_nameas_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_calmen_nameas);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_nameas_pb );
		XmNactivateCallback = procedure do_nameas
				    ("nameas_box");
	    };
	};
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_delete_label_text;
		XmNmnemonic	= k_delete_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_calmen_delete);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_delete_pb ); 
		XmNactivateCallback = procedure do_delete
				    ("delete_caution");
	    };
	};
	XmSeparator
	{
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_calmen);
	    };
	};
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_print_label_text;
		XmNmnemonic	= k_print_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_calmen_print);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_print_pb ); 
		XmNactivateCallback = procedure file_print_menu;
	    };
	};
	XmSeparator
	{
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_calmen);
	    };
	};
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_exit_label_text;
		XmNmnemonic	= k_exit_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_calmen_exit);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_exit_pb );
		XmNactivateCallback = procedure bye_bye ();
	    };
	}; ! end of push button
    };
};

object edit_pulldown : XmPulldownMenu
{
    arguments
    {
	argument ('DXmdelayPopupMenuRealization') = true;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen);
	XmNmapCallback = procedure do_edit_menu ();
    };
    controls
    {
	XmPushButton
	{
	    arguments
	    {
		XmNlabelString	= k_cut_label_text;
		XmNmnemonic	= k_cut_label_mn;
	        XmNaccelerator	= k_cut_accelerator;
		XmNacceleratorText = k_cut_accelerator_text;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen_cut);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_cut_pb );
		XmNactivateCallback = procedure do_cut ();
	    };
	};
	XmPushButton {
	    arguments {
		XmNlabelString	= k_copy_label_text;
		XmNmnemonic	= k_copy_label_mn;
	        XmNaccelerator	= k_copy_accelerator;
		XmNacceleratorText = k_copy_accelerator_text;
	    };
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen_copy);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_copy_pb );
		XmNactivateCallback = procedure do_copy ();
		 };
	    };
	XmPushButton {
	    arguments {
		XmNlabelString	= k_paste_label_text;
		XmNmnemonic	= k_paste_label_mn;
	        XmNaccelerator	= k_paste_accelerator;
		XmNacceleratorText = k_paste_accelerator_text;
	    };
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen_paste);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_paste_pb );
		XmNactivateCallback	= procedure do_paste ();
		 };
	    };
	XmPushButton {
	    arguments {
		XmNlabelString  = k_clear_label_text;
		XmNmnemonic	= k_clear_label_mn;
	    };
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen_clear);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_clear_pb );
		XmNactivateCallback	= procedure do_clear ();
		 };
	    };
	XmSeparator {
	    callbacks {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen);
		} ;
	    };
	XmPushButton {
	    arguments { 
		XmNlabelString  = k_selall_label_text; 
		XmNmnemonic	= k_selall_label_mn;
		};
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen_select_all);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_selall_pb ); 
		XmNactivateCallback	= procedure do_selall();
		};
	    };
	XmSeparator {
	    callbacks {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen);
		} ;
	    };	
	XmCascadeButton	dwc_mark_pulldown_entry;
	};
    };


object
    dwc_mark_pulldown_entry : XmCascadeButton {
	arguments {
	    XmNlabelString	= k_mark_label_text;
	    XmNmnemonic		= k_mark_label_mn;
	};
	controls {
	    XmPulldownMenu dwc_mark_pulldown;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen_mark);
            MrmNcreateCallback = procedure  generic_create_proc ( k_mark_pb );
	};
    };


object
    dwc_mark_pulldown : XmPulldownMenu {
	arguments {
	    argument ('DXmdelayPopupMenuRealization') = true;
	};
	controls {
	    XmPushButton dwc_default_mark_menu_item;
	    XmPushButton dwc_work_mark_menu_item;
	    XmPushButton dwc_nonwork_mark_menu_item;
	    XmSeparator {
		callbacks {
		    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen_mark);
		} ;
	    };
	    XmPushButton dwc_normal_mark_menu_item;
	    XmPushButton	dwc_special_mark_menu_item;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_edimen_mark);
	    XmNmapCallback = procedure mark_menu();
	};
    };


object
    dwc_default_mark_menu_item : XmPushButton {
	arguments {
	    XmNlabelString	= k_default_label_text;
	    XmNmnemonic		= k_default_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_edimen_mark_default);
	    MrmNcreateCallback	= procedure generic_create_proc ( k_default_pb );
	    XmNactivateCallback	= procedure mark_item();
	};
    };


object
    dwc_work_mark_menu_item : XmPushButton widget {
	arguments {
	    XmNlabelString	= k_work_label_text;	    
	    XmNmnemonic		= k_work_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_edimen_mark_workday);
	    MrmNcreateCallback	= procedure generic_create_proc ( k_work_pb );
	    XmNactivateCallback	= procedure mark_item();
	};
    };


object
    dwc_nonwork_mark_menu_item : XmPushButton widget {
	arguments {
	    XmNlabelString	= k_non_work_label_text;	    
	    XmNmnemonic		= k_non_work_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_edimen_mark_non_workday);
	    MrmNcreateCallback	= procedure generic_create_proc ( k_non_work_pb );
	    XmNactivateCallback	= procedure mark_item();
	};
    };


object
    dwc_normal_mark_menu_item : XmPushButton {
	arguments {
	    XmNlabelString	= k_normal_label_text;	    
	    XmNmnemonic		= k_normal_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_edimen_mark_normal);
	    MrmNcreateCallback	= procedure generic_create_proc ( k_normal_pb );
	    XmNactivateCallback	= procedure mark_item();
	};
    };


object
    dwc_special_mark_menu_item : XmPushButton widget {
	arguments {
	    XmNlabelString	= k_special_label_text;	    
	    XmNmnemonic		= k_special_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_edimen_mark_special);
	    MrmNcreateCallback	= procedure generic_create_proc ( k_special_pb );
	    XmNactivateCallback	= procedure mark_item();
	};
    };





!++
!
!
!
!--

object view_pulldown : XmPulldownMenu {
    arguments {
	argument ('DXmdelayPopupMenuRealization') = true;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_vewmen);
	XmNmapCallback = procedure do_view_menu();
    };
    controls {
	XmPushButton {
	    arguments {
		XmNlabelString	= k_selected_label_text;
		XmNmnemonic	= k_selected_label_mn;
	    };
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_vewmen_selected);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_selected_pb );
		XmNactivateCallback	= procedure view_selected();
		};
	    };
	XmPushButton {
	    arguments {
		XmNlabelString  = k_today_label_text;
		XmNmnemonic	= k_today_label_mn;
	    };
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_vewmen_today);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_today_pb );
		XmNactivateCallback	= procedure view_today();
		};
	    };
	XmSeparator {
	    callbacks {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_vewmen);
		} ;
	    };
	XmPushButton {
	    arguments {
		XmNlabelString	= k_day_label_text;
		XmNmnemonic	= k_day_label_mn;
	    };
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_vewmen_day);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_day_pb );
		XmNactivateCallback	= procedure view_day();
		 };
	    };
	XmPushButton {
	    arguments {
		XmNlabelString = k_month_label_text;
	        XmNmnemonic	= k_month_label_mn;
	    };
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_vewmen_month);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_month_pb ); 
		XmNactivateCallback	= procedure view_month();
		};
	    };
	XmPushButton {
	    arguments {
		XmNlabelString = k_year_label_text;
	        XmNmnemonic	= k_year_label_mn;
	    };
	    callbacks { 
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_vewmen_year);
		MrmNcreateCallback = procedure generic_create_proc
				    ( k_year_pb ); 
		XmNactivateCallback	= procedure view_year();
		};
	    };
	};
    };



object entry_pulldown : XmPulldownMenu {
    arguments {
	argument ('DXmdelayPopupMenuRealization') = true;
	};
    controls {
        XmPushButton	dwc_edit_entry_menu_item;
        XmPushButton	dwc_close_entry_menu_item;
        XmPushButton	dwc_delete_entry_menu_item;
	XmSeparator {
	    callbacks {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		   (hlp_ovr_schedule);
	    } ;
	};
        XmPushButton	dwc_reset_entry_menu_item;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
	    (hlp_ovr_schedule);
	XmNmapCallback = procedure do_schedule_menu();
	};
    };


object
    dwc_edit_entry_menu_item : XmPushButton {
	arguments { 
	    XmNlabelString	= k_edit_entry_label_text; 
	    XmNmnemonic		= k_edit_entry_label_mn;
	};
    callbacks { 
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
	    (hlp_ovr_schedule);
	MrmNcreateCallback = procedure generic_create_proc
			    ( k_edit_entry_pb );
	XmNactivateCallback	= procedure schedule_entry_edit();
	};
    };

object
    dwc_close_entry_menu_item : XmPushButton {
	arguments { 
	    XmNlabelString	= k_close_entry_label_text; 
	    XmNmnemonic		= k_close_entry_label_mn;
	};
    callbacks { 
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
	    (hlp_ovr_schedule);
	MrmNcreateCallback	    = procedure generic_create_proc
			    ( k_close_entry_pb );
	XmNactivateCallback    = procedure schedule_entry_close();
	};
    };

object
    dwc_delete_entry_menu_item : XmPushButton {
	arguments { 
	    XmNlabelString	= k_delete_entry_label_text; 
	    XmNmnemonic		= k_delete_entry_label_mn;
	};
    callbacks { 
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
	    (hlp_ovr_schedule);
	MrmNcreateCallback = procedure generic_create_proc
			    ( k_delete_entry_pb );
	XmNactivateCallback	= procedure schedule_entry_delete();
	};
    };

object
    dwc_reset_entry_menu_item : XmPushButton {
        arguments { 
	    XmNlabelString	= k_reset_entry_label_text; 
	    XmNmnemonic		= k_reset_entry_label_mn;
        };
    callbacks { 
	XmNhelpCallback   = procedure dwc_help_for_widget_activate
	    (hlp_ovr_schedule);
	MrmNcreateCallback	 = procedure generic_create_proc
			    ( k_reset_entry_pb );
	XmNactivateCallback = procedure schedule_entry_reset();
	};
    };





object
    customize_pulldown : XmPulldownMenu {
	arguments
	{
	    argument ('DXmdelayPopupMenuRealization') = true;
	};
	controls {
	    XmPushButton	    dwc_general_menu_item;
	    XmPushButton	    dwc_dayview_menu_item;
	    XmPushButton	    dwc_icon_box_menu_item;
	    XmPushButton	    dwc_alarms_menu_item;
	    XmSeparator {
		callbacks {
		    XmNhelpCallback   = procedure dwc_help_for_widget_activate
		       (hlp_ovr_optmen);
		} ;
	    };
	    XmPushButton	    dwc_save_menu_item;
	    XmPushButton	    dwc_restore_menu_item;
	    XmPushButton	    dwc_defaults_menu_item;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_optmen);
	    XmNmapCallback = procedure custom_menu ();
	};
    };


object
    dwc_general_menu_item : XmPushButton {
	arguments { 
	    XmNlabelString	= k_general_label_text; 
	    XmNmnemonic		= k_general_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_optmen_gen);
	    XmNactivateCallback = procedure do_general_display();
	    MrmNcreateCallback = procedure generic_create_proc( k_general_pb );
	};
    };


object 
    dwc_dayview_menu_item : XmPushButton {
	arguments {
	    XmNlabelString	= k_dayview_label_text;
	    XmNmnemonic		= k_dayview_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_optmen_day);
	    XmNactivateCallback = procedure do_dayview_display();
	    MrmNcreateCallback = procedure generic_create_proc( k_dayview_pb );
	};
    };


object 
    dwc_icon_box_menu_item : XmPushButton {
	arguments {
	    XmNlabelString	= k_icon_box_label_text;
	    XmNmnemonic		= k_icon_box_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_optmen_icon);
	    XmNactivateCallback = procedure do_iconbox_display();
	    MrmNcreateCallback = procedure generic_create_proc( k_iconbox_pb );
	};
    };


object 
    dwc_alarms_menu_item : XmPushButton {
	arguments {
	    XmNlabelString	= k_alarms_label_text;
	    XmNmnemonic		= k_alarms_label_mn;
	};
	callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_optmen_alarm);
	    XmNactivateCallback = procedure do_alarms_display();
	    MrmNcreateCallback = procedure generic_create_proc( k_alarms_pb );
	};
    };


object
    dwc_save_menu_item : XmPushButton {
	arguments { 
	    XmNlabelString	= k_save_label_text; 
	    XmNmnemonic		= k_save_label_mn;
	};
	callbacks { 
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_optmen);
	    MrmNcreateCallback = procedure generic_create_proc
				( k_save_settings_pb );
	    XmNactivateCallback	= procedure do_save_current_settings();
	};
    };


object
    dwc_restore_menu_item : XmPushButton {
	arguments { 
	    XmNlabelString	= k_restore_label_text; 
	    XmNmnemonic		= k_restore_label_mn;
	};
	callbacks { 
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_optmen);
	    XmNactivateCallback	= procedure do_restore_settings();
	};
    };


object
    dwc_defaults_menu_item : XmPushButton {
	arguments { 
	    XmNlabelString	= k_use_label_text;
	    XmNmnemonic		= k_use_label_mn;
	};
	callbacks { 
	    XmNhelpCallback   = procedure dwc_help_for_widget_activate
	       (hlp_ovr_optmen);
	    XmNactivateCallback	= procedure do_use_default_settings();
	};
    };



!+
! Help menu
! Conformance with the style guide requires the following ordering 
! of help menu items:
! 	Context-Sensitive Help
!	<separator>
!	Overview
!	Index (NYI)
!	Keyboard (NYI)
!	Tutorial (NYI)
!	Using Help (NYI)
!	Product Information
! Additional items are placed between Index and Using Help. 
! In our case the additional item is:
! 	Glossary
!-
object help_pulldown : XmPulldownMenu
{
    arguments
    {
	argument ('DXmdelayPopupMenuRealization') = true;
    };
    controls
    {
	XmPushButton			! Context-Sensitive Help
	{
	    arguments
	    {
		XmNlabelString	= k_oncontext_label_text;
		XmNmnemonic	= k_oncontext_label_mn;
		XmNaccelerator	= k_oncontext_accelerator;
		XmNacceleratorText = k_oncontext_accelerator_text;
	    };
	    callbacks
	    {
		XmNhelpCallback = procedure dwc_help_for_widget_activate
		    (hlp_overview);
		XmNactivateCallback = procedure dwc_help_from_menu_activate
		    (k_oncontext);
	    };
	};
! pjw - Is this separator style guide conformant? Can't really tell from the 
! picture in the 1.2 style guide. The Supplement uses one. 
	XmSeparator {};	
	XmPushButton			! Overview
	{
	    arguments
	    {
		XmNlabelString	= k_onwindow_label_text;
		XmNmnemonic	= k_onwindow_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback = procedure dwc_help_for_widget_activate
		    (hlp_overview);
		XmNactivateCallback = procedure dwc_help_from_menu_activate
		    (k_onwindow);
	    };
	};
	XmPushButton			! Glossary
	{
	    arguments
	    {
		XmNlabelString	= k_onterms_label_text;
		XmNmnemonic	= k_onterms_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback = procedure dwc_help_for_widget_activate
		    (hlp_overview);
		XmNactivateCallback = procedure dwc_help_from_menu_activate
		    (k_onterms);
	    };
	};
	XmPushButton			! Using Help
	{
	    arguments
	    {
		XmNlabelString	= k_onhelp_label_text;
	        XmNmnemonic	= k_onhelp_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		    (hlp_overview);
		XmNactivateCallback = procedure dwc_help_from_menu_activate
		    (k_onhelp);
	    };
	};
	XmPushButton			! Product Information
	{
	    arguments
	    {
		XmNlabelString	= k_onversion_label_text;
	        XmNmnemonic	= k_onversion_label_mn;
	    };
	    callbacks
	    {
		XmNhelpCallback   = procedure dwc_help_for_widget_activate
		    (hlp_overview);
		XmNactivateCallback = procedure dwc_help_from_menu_activate
		    (k_onversion);
	    };
	};
    };
};

!+
! Dialog boxes and stuff
!-

object open_filebox : XmFileSelectionDialog {
    arguments {
	XmNdialogTitle		= k_open_dialog_title;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_ovr_calmen_open);
	XmNcancelCallback = procedure do_open_file ( k_open_replace );
	XmNokCallback = procedure do_open_file( k_open_replace );
	XmNunmapCallback = procedure destroy_modal_help( );
	};
    };

object open_new_filebox : XmFileSelectionDialog {
    arguments {
	XmNdialogTitle		= k_open_new_dialog_title;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_ovr_calmen_open);
	XmNcancelCallback = procedure do_open_file ( k_open_new );
	XmNokCallback = procedure do_open_file( k_open_new );
	XmNunmapCallback = procedure destroy_modal_help( );
	};
    };

object include_filebox : XmFileSelectionDialog {
    arguments {
	XmNdialogTitle		= k_include_dialog_title;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	       (hlp_ovr_calmen_incl);
	XmNcancelCallback = procedure do_include ();
	XmNokCallback = procedure do_include ();
	XmNunmapCallback = procedure destroy_modal_help();
	};
    };

object nameas_box : XmFormDialog
{
    arguments
    {
	XmNdialogTitle		= k_nameas_dialog_title;
	XmNhorizontalSpacing	= k_left_margin;
	XmNverticalSpacing	= k_top_margin;
	XmNallowOverlap		= false;
	XmNdefaultButton	= XmPushButton nameas_ok_button;
	XmNcancelButton		= XmPushButton nameas_cancel_button;
	XmNautoUnmanage		= false;
	XmNnoResize		= true;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
    };
    controls
    {
	XmForm			nameas_misc_form;
	XmForm			nameas_buttons_form;
	XmLabel			nameas_misc_pad;
	XmLabel			nameas_buttons_pad;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	       (hlp_ovr_calmen_nameas);
	XmNunmapCallback = procedure destroy_modal_help();
    };
};

object nameas_misc_pad : XmLabel
{
    arguments
    {
	XmNlabelString = "";
	XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
	XmNtopWidget = XmForm nameas_misc_form;
	XmNtopOffset = 0;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmForm nameas_misc_form;
	XmNleftOffset = k_left_margin;
    };
};

object nameas_buttons_pad : XmLabel
{
    arguments
    {
	XmNlabelString = "";
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmForm nameas_buttons_form;
	XmNtopOffset = k_top_margin;
	XmNleftAttachment = XmATTACH_FORM;
	XmNleftOffset = k_left_margin;
    };
};

object nameas_misc_form : XmForm
{
    arguments
    {
	XmNhorizontalSpacing	= k_left_margin;
	XmNverticalSpacing	= k_top_margin;
	XmNresizePolicy	= XmRESIZE_GROW;
	XmNtopAttachment	= XmATTACH_FORM;
	XmNleftAttachment	= XmATTACH_FORM;
    };
    controls
    {
	XmLabel			nameas_prompt_lb;
	DXmCSText		nameas_tw;
!	XmText			nameas_tw;
    };
};

object nameas_prompt_lb : XmLabel
{
    arguments
    {
	XmNlabelString = k_nameas_prompt_text;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_FORM;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_ovr_calmen_nameas);
    } ;

};

object nameas_tw : DXmCSText
{
    arguments
    {
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmLabel nameas_prompt_lb;
	XmNrightAttachment = XmATTACH_FORM;
	XmNresizeWidth = true;
    };
    callbacks
    {
	MrmNcreateCallback = procedure generic_create_proc ( k_nameas_tw );
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	       (hlp_ovr_calmen_nameas);
    };
};

object nameas_buttons_form : XmForm
{
    arguments
    {
	XmNhorizontalSpacing = k_left_margin;
	XmNverticalSpacing = k_top_margin;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmForm nameas_misc_form;
	XmNleftAttachment = XmATTACH_FORM;
	XmNleftOffset = 2;
	XmNrightOffset = 2;
    };
    controls
    {
	XmPushButton		nameas_ok_button;
	XmPushButton		nameas_cancel_button;
	XmPushButton		nameas_help_button;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_ovr_calmen_nameas);
	MrmNcreateCallback = procedure generic_create_proc (k_nameas_controls);
    };
};	

object nameas_ok_button : XmPushButton
{
    arguments
    {
	XmNlabelString = k_ok_label_text;
	XmNdefaultButtonShadowThickness = 2;
	XmNshowAsDefault = 1;
	XmNrecomputeSize = false;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_FORM;
    }; 
    callbacks
    {
	XmNactivateCallback = procedure file_nameas_ok ();
    };
};

object nameas_cancel_button : XmPushButton
{
    arguments
    {
	XmNlabelString = k_cancel_text;
        XmNdefaultButtonShadowThickness = 2;
	XmNshowAsDefault	= 0;
	XmNrecomputeSize = false;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmPushButton nameas_ok_button;
    };
    callbacks
    {
	XmNactivateCallback = procedure file_nameas_cancel ();
    };
};

object nameas_help_button : XmPushButton
{
    arguments
    {
	XmNlabelString = k_help_text;
        XmNdefaultButtonShadowThickness = 2;
	XmNshowAsDefault = 0;
	XmNrecomputeSize = false;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmPushButton nameas_cancel_button;
    };
    callbacks
    {
	XmNactivateCallback = procedure dwc_help_for_modal_activate
	       (hlp_ovr_calmen_nameas);
    };
};

object repeat_questions_box : XmFormDialog
{
    arguments
    {
	XmNmarginHeight		= k_top_margin;
	XmNmarginWidth		= k_left_margin;
	XmNhorizontalSpacing	= k_left_margin;
	XmNverticalSpacing	= k_top_margin;
	XmNallowOverlap		= false;
	XmNdefaultButton	= XmPushButton repeat_cancel_pb;
	XmNcancelButton		= XmPushButton repeat_cancel_pb;
	XmNdialogTitle		= k_repeat_dialog_title;
	XmNautoUnmanage		= false;
	XmNnoResize		= true;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
    };
    controls
    {
	XmForm repeat_stuff_form;
	XmForm repeat_buttons_form;
	XmLabel repeat_dummy_label;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_repeatquestions);
	XmNunmapCallback = procedure destroy_modal_help ();
    };
};

object repeat_dummy_label : XmLabel gadget
{
    arguments
    {
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmForm repeat_buttons_form;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmForm repeat_stuff_form;
	XmNlabelString = "";
    };
};

object repeat_stuff_form : XmForm
{
    arguments
    {
	XmNhorizontalSpacing = k_left_margin;
	XmNverticalSpacing = 0;
	XmNresizePolicy	= XmRESIZE_GROW;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_FORM;
    };
    controls
    {
	XmLabel repeat_prompt_lb;
	XmRadioBox repeat_radio;
    };
};

	    
object repeat_prompt_lb : XmLabel
{
    arguments
    {
	XmNlabelString = k_empty_string;
	XmNleftAttachment = XmATTACH_FORM;
	XmNtopAttachment = XmATTACH_FORM;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_repeatquestions);
	MrmNcreateCallback = procedure generic_create_proc (k_repeat_prompt_lb);
    };
};

object repeat_radio : XmRadioBox
{
    arguments
    {
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel repeat_prompt_lb;
	XmNleftAttachment = XmATTACH_FORM;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_repeatquestions);
	MrmNcreateCallback = procedure generic_create_proc (k_repeat_rb);
    };
    controls
    {
	XmToggleButton repeat_this_tb;
	XmToggleButton repeat_future_tb;
	XmToggleButton repeat_all_tb;
    };
};

object repeat_this_tb : XmToggleButton
{
    arguments
    {
	XmNlabelString = k_repeat_this_text;
	XmNset = true;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_repeatquestions);
	MrmNcreateCallback = procedure generic_create_proc (k_repeat_this_tb);
    };
};

object repeat_future_tb : XmToggleButton
{
    arguments
    {
	XmNlabelString = k_repeat_future_text;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_repeatquestions);
	MrmNcreateCallback = procedure generic_create_proc (k_repeat_future_tb);
    };
};

object repeat_all_tb : XmToggleButton
{
    arguments
    {
	XmNlabelString = k_repeat_all_text;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_repeatquestions);
	MrmNcreateCallback = procedure generic_create_proc (k_repeat_all_tb);
    };
};

object repeat_buttons_form : XmForm
{
    arguments
    {
	XmNmarginHeight = k_top_margin;
	XmNmarginWidth = k_left_margin;
	XmNhorizontalSpacing = k_left_margin;
	XmNverticalSpacing = k_top_margin;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmForm repeat_stuff_form;
	XmNleftAttachment = XmATTACH_FORM;
	XmNleftOffset = 2;	! match with typical shadow width of parent.
	XmNrightOffset = 2;	! match with typical shadow width of parent.
    };
    controls
    {
	XmPushButton repeat_ok_pb;
	XmPushButton repeat_cancel_pb;
	XmPushButton repeat_help_pb;
    };
};	

object repeat_ok_pb : XmPushButton
{
    arguments
    {
	XmNlabelString = k_repeat_ok_text;
        XmNdefaultButtonShadowThickness = 2;
	XmNshowAsDefault = 0;
	XmNrecomputeSize = false;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_FORM;
    };
    callbacks
    {
	XmNactivateCallback = procedure repeat_questions (diu);
	MrmNcreateCallback = procedure generic_create_proc (k_repeat_ok_pb);
    };
};

object repeat_cancel_pb : XmPushButton
{
    arguments
    {
	XmNlabelString = k_repeat_cancel_text;
        XmNdefaultButtonShadowThickness = 2;
	XmNshowAsDefault = 1;
	XmNrecomputeSize = false;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmPushButton repeat_ok_pb;
    };
    callbacks
    {
	XmNactivateCallback = procedure repeat_cancel (diu);
	MrmNcreateCallback = procedure generic_create_proc (k_repeat_cancel_pb);
    };
};

object repeat_help_pb : XmPushButton
{
    arguments
    {
	XmNlabelString = k_help_text;
        XmNdefaultButtonShadowThickness = 2;
	XmNshowAsDefault = 0;
	XmNrecomputeSize = false;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmPushButton repeat_help_pb;
    };
    callbacks
    {
	XmNactivateCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_repeatquestions);
    };
};



!++
!
! Error Dialog Boxes
!
!--


object delete_caution : XmWarningDialog {
    arguments {
	XmNnoResize		= true;
	XmNmessageString	= k_delete_caution_text;
	XmNdialogTitle		= k_delete_dialog_title;
	XmNokLabelString	= k_yes_text;
	XmNcancelLabelString	= k_no_text;
	XmNdefaultButtonType	= XmDIALOG_CANCEL_BUTTON;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
    };
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
			   (hlp_csh_cautiondelete_database);
	XmNokCallback = procedure caution_delete_file();
        XmNcancelCallback = procedure caution_delete_file();
	XmNunmapCallback = procedure destroy_modal_help();
	};
};

object ErrorBadfile : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorBadfile_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_badfile);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorCantCreate : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorCantCreate_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_cantcreate);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorCantOpen : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorCantOpen_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_cantopen);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorCantPrint : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorCantPrint_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_cantprint);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorCantRename : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorCantRename_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_cantrename);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorCantUpgrade : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorCantUpgrade_text;
	XmNokLabelString	= k_yes_text;
	XmNcancelLabelString	= k_no_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_cantupgrade);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorClipCopy : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorClipCopy_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_err_copying_clipboard);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};

object ErrorClipGet : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorClipGet_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_err_copying_clipboard);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorClipNoData : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorClipNoData_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_err_copying_clipboard);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorClipParse : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorClipParse_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_err_copying_clipboard);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorClipTruncate : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorClipTruncate_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_err_copying_clipboard);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorConvertFail : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorConvertFail_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
!	XmNhelpCallback   = procedure dwc_help_for_modal_activate
!		   (hlp_csh_err_copying_clipboard);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorDatabase : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorDatabase_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorDayAttr : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorDayAttr_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorDeleteFile : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorDeleteFile_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_cantdelete);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorFatalRename : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorFatalRename_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_cantrename);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorFileOpenSpec : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorFileOpenSpec_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_includespec);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorGetProfile : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorGetProfile_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorInclude : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorInclude_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_errorinclude);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorIncludeSpec : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNmessageString	= k_ErrorIncludeSpec_text;
	XmNdialogTitle		= k_information_title;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_includespec);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorLocked : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNmessageString	= k_ErrorLocked_text;
	XmNdialogTitle		= k_information_title;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_locked);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};

object ErrorNeedNew : XmWarningDialog
 {
    arguments {
	XmNautoUnmanage		= false;
	XmNnoResize		= true;
	XmNmessageString	= k_ErrorNeedNew_text;
	XmNdialogTitle		= k_warning_title;
	XmNokLabelString	= k_yes_text;
	XmNcancelLabelString	= k_no_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_neednew);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorPrintWont : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorPrintWont_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorPutAttr : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNmessageString	= k_ErrorPutAttr_text;
	XmNdialogTitle		= k_information_title;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorPutItem : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorPutItem_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorUpgrade : XmWarningDialog
 {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_warning_title;
	XmNmessageString	= k_ErrorUpgrade_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_cantupgrade);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorWriteProfile : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorWriteProfile_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorZeroTime : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNmessageString	= k_ErrorZeroTime_text;
	XmNdialogTitle		= k_ErrorZeroTime_title;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_zero_time);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object CautionDelete : XmWarningDialog
 {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_warning_title;
	XmNmessageString	= k_CautionDelete_text;
	XmNokLabelString	= k_yes_text;
	XmNcancelLabelString	= k_no_text;
	XmNdefaultButtonType	= XmDIALOG_CANCEL_BUTTON;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_cautiondelete_entry);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object CautionDeleteFile : XmWarningDialog
 {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_warning_title;
	XmNmessageString	= k_CautionDeleteFile_text;
	XmNokLabelString	= k_yes_text;
	XmNcancelLabelString	= k_no_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_cautiondelete_database);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorDatabaseError : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorDatabaseError_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorGetDayItems : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorGetDayItems_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorInsdisk : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorInsdisk_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		   (hlp_csh_dberr_fatal);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorInclSyntax : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorInclSyntax_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_includespec);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorClipSyntax : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorClipSyntax_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_clip_bad_format);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorCloseDaynote : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorCloseDaynote_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_close_entries);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorCloseAllMark : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorCloseAllMark_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_close_entries);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorCloseAllRestore : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorCloseAllRestore_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_close_entries);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorUnconfigurable : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorUnconfigurable_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_unconfigurable);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorEmptyInclude : XmInformationDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_information_title;
	XmNmessageString	= k_ErrorEmptyInclude_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_empty_file);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorTooBig : XmErrorDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_error_title;
	XmNmessageString	= k_ErrorTooBig_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_entry_too_big);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};


object ErrorDayFull : XmErrorDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_error_title;
	XmNmessageString	= k_ErrorDayFull_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_day_too_big);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};

object ErrorCantGetProlog : XmErrorDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_error_title;
	XmNmessageString	= k_ErrorCantGetProlog_text;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_cant_get_prolog);
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};

object ErrorLastChance : XmErrorDialog {
    arguments {
	XmNnoResize		= true;
	XmNdialogTitle		= k_error_title;
	XmNmessageString	= k_ErrorLastChance_text;
	XmNdefaultPosition	= false;
	XmNx			= 100;
	XmNy			= 100;
	XmNdialogStyle		= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
    callbacks {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_err_fatal);
        XmNokCallback = procedure errorbox_lastchance( );
	XmNunmapCallback = procedure errorbox_destroy( );
    };
};

!MEMEX errors
!MEMEX user recoverable errors

object
    ErrorColdStart : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorColdStart_text;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
        callbacks {
	    XmNhelpCallback   = procedure dwc_help_for_modal_activate
		(hlp_csh_err_cold_start_fail);
	    XmNunmapCallback = procedure errorbox_destroy( );
        };
};


object
    ErrorDanglingConnection : XmWarningDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_warning_title;
	    XmNmessageString	= k_ErrorDanglingConnection_text;
	    XmNdefaultPosition	= false;
	    XmNokLabelString	= k_yes_text;
	    XmNcancelLabelString	= k_no_text;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_dang_conn);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};

object
    ErrorHisDrmNotFound : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorHisDrmNotFound_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisdrmnotfnd);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorHisInitFail : XmWarningDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_warning_title;
	    XmNmessageString	= k_ErrorHisInitFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
!	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
!					(hlp_csh_err_hisinit_fail);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};

object
    ErrorNetQueryFail : XmWarningDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_warning_title;
	    XmNmessageString	= k_ErrorNetQueryFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_netquery_fail);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};

!MEMEX HIS Services error (because of repository corruption or simply bugs)

object
    ErrorCreateSurrogateFail : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorCreateSurrogateFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorDwUICreateFail : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorDwUICreateFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorGetNetFail : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorGetNetFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorGetSurSubtypeFail : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorGetSurSubtypeFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorIterateConnectionSetFail : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorIterateConnSetFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorQuerySurFail : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorQuerySurFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorQuerySurItemsFail : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorQuerySurItemsFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorSetCallbackFail: XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorSetCallbackFail_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorUnkSurrogate : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorUnkSurrogate_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorUnkSubtype : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorUnkSubtype_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorUnsupOp : XmErrorDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_error_title;
	    XmNmessageString	= k_ErrorUnsupOp_text;
	    XmNdefaultPosition	= false;
	    XmNdialogStyle	= XmDIALOG_PRIMARY_APPLICATION_MODAL;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_fatal);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};

!MEMEX Minor services error (things may be okay)
object
    ErrorDeleteConnFail : XmWarningDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_warning_title;
	    XmNmessageString	= k_ErrorDeleteConnFail_text;
	    XmNdefaultPosition	= false;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_warn);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};
object
    ErrorDeleteSurConnFail : XmWarningDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_warning_title;
	    XmNmessageString	= k_ErrorDeleteSurConnFail_text;
	    XmNdefaultPosition	= false;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_warn);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};

object
    ErrorGetDefHighFail : XmWarningDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_warning_title;
	    XmNmessageString	= k_ErrorGetDefHighFail_text;
	    XmNdefaultPosition	= false;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_warn);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};

object
    ErrorSetCurHighFail: XmWarningDialog {
        arguments {
	    XmNnoResize		= true;
	    XmNdialogTitle	= k_warning_title;
	    XmNmessageString	= k_ErrorSetCurHighFail_text;
	    XmNdefaultPosition	= false;
	};
	callbacks {
	    XmNhelpCallback	= procedure dwc_help_for_modal_activate
					(hlp_csh_err_hisservices_warn);
	    XmNunmapCallback	= procedure errorbox_destroy();
	};	
};

!++
!
!   Help box
!
!--

object
    help_box : DXmHelpDialog {
	arguments {
	    DXmNapplicationName	= k_help_application_name;
	    DXmNoverviewTopic	= k_help_onwindow_topic;
	    DXmNglossaryTopic	= k_help_onterms_topic;
	};
    };


!+
!
!   Alarm dialog box
!
!   ( _adb_ means Alarm Dialog Box )
!
!-
object EntryAlarmOld : XmFormDialog
{
    arguments
    {
	XmNuserData = alarm_out;
	XmNx = 350;
	XmNy = 300;
	XmNhorizontalSpacing = k_left_margin;
	XmNverticalSpacing = k_top_margin;
	XmNdefaultButton = XmPushButton alarm_dismiss_pb;
	XmNcancelButton = XmPushButton alarm_dismiss_pb;
	XmNdefaultPosition = false;
    };
    controls
    {
	XmLabel		alarm_date_lb;
	XmLabel		alarm_start_lb;
	XmLabel		alarm_finish_lb;
	XmPushButton	alarm_dismiss_pb;
	user_defined	alarm_ibw;
	DXmScrolledCSText	alarm_tw;
!	XmScrolledText	alarm_tw;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	   (hlp_csh_alarm_box);
    };
};

object EntryAlarm : XmForm
{
    arguments
    {
	XmNuserData = alarm_out;
	XmNx = 350;
	XmNy = 300;
	XmNhorizontalSpacing = k_left_margin;
	XmNverticalSpacing = k_top_margin;
	XmNdefaultButton = XmPushButton alarm_dismiss_pb;
	XmNcancelButton = XmPushButton alarm_dismiss_pb;
	XmNdefaultPosition = false;
    };
    controls
    {
	XmLabel		alarm_date_lb;
	XmLabel		alarm_start_lb;
	XmLabel		alarm_finish_lb;
	XmPushButton	alarm_dismiss_pb;
	user_defined	alarm_ibw;
	DXmScrolledCSText	alarm_tw;
!	XmScrolledText	alarm_tw;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	   (hlp_csh_alarm_box);
    };
};

object alarm_date_lb : XmLabel widget
{
    arguments
    {
	XmNlabelString = k_empty_string;
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNtopAttachment = XmATTACH_FORM;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_alarm_box);
	MrmNcreateCallback = procedure alarm_widget_create (k_adb_date_lb);
    };
};

object alarm_start_lb : XmLabel widget
{
    arguments
    {
	XmNlabelString = k_empty_string;
	XmNleftAttachment = XmATTACH_FORM;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel alarm_date_lb;
	XmNtopOffset = 0;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_alarm_box);
	MrmNcreateCallback = procedure alarm_widget_create (k_adb_start_lb);
    };
};

object alarm_finish_lb : XmLabel widget
{
    arguments
    {
	XmNlabelString = k_empty_string;
	XmNrightAttachment = XmATTACH_FORM;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel alarm_date_lb;
	XmNtopOffset = 0;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_alarm_box);
	MrmNcreateCallback = procedure alarm_widget_create (k_adb_finish_lb);
    };
};

object alarm_ibw : user_defined procedure IconBoxLowLevelCreate
{
    arguments
    {
	dwc_ibw_icon_box_style = DwcIbwOrderList;
	dwc_ibw_off_icons = sloteditor_off_pixmap_array;
	dwc_ibw_icon_height = 17;
	dwc_ibw_icon_width = 17;
	dwc_ibw_number_of_icons = 24;
	dwc_ibw_columns = 1;
	dwc_ibw_rows = 6;
	dwc_ibw_editable = false;

	XmNleftAttachment = XmATTACH_FORM;
	XmNleftOffset = k_left_margin;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel alarm_finish_lb;
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget = XmPushButton alarm_dismiss_pb;
    };
    callbacks
    {
	XmNhelpCallback = procedure dwc_help_for_modal_activate
	    (hlp_csh_alarm_box);
	MrmNcreateCallback = procedure alarm_widget_create (k_adb_alarm_ibw);
    };
};

object alarm_tw : DXmScrolledCSText
!object alarm_tw : XmScrolledText
{
    arguments
    {
	XmNcursorPositionVisible = false;
	XmNeditable = false;
	XmNeditMode = XmMULTI_LINE_EDIT;
	XmNwordWrap = true;
	XmNscrollHorizontal = false;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = user_defined alarm_ibw;
	XmNrightAttachment = XmATTACH_FORM;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel alarm_finish_lb;
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget	= XmPushButton alarm_dismiss_pb;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
	    (hlp_csh_alarm_box);
	MrmNcreateCallback = procedure alarm_widget_create (k_adb_alarm_tw);
    };
};

object alarm_dismiss_pb : XmPushButton
{
    arguments
    {
	XmNlabelString = k_alarm_dismiss_text;
	XmNleftAttachment = XmATTACH_POSITION;
	XmNleftPosition = 50;
	XmNbottomAttachment = XmATTACH_FORM;
    };
    callbacks
    {
	XmNhelpCallback   = procedure dwc_help_for_modal_activate
		       (hlp_csh_alarm_box);
	XmNactivateCallback = procedure alarm_dismiss();
	MrmNcreateCallback = procedure alarm_pb_fixup();
    };
};
