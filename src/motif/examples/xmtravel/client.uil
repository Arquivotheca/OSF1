! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! @(#)$RCSfile: client.uil,v $ $Revision: 1.1.2.2 $ (DEC) $Date: 1993/11/05 22:03:43 $
! 
! (c) Copyright 1989, 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
! ALL RIGHTS RESERVED 
! 
! Motif Release 1.2

module client
	version = 'v1.0'
	names = case_sensitive

! Register the callbacks here. 
! These values correspond to definitions in xmtravel.h
! The values must match those in xmtravel.h

value

         aisle:             1;
         client_bboard:     2;
         client_main_w:     3;
         coach:             4;
         kosher:            5;
         none_meal:         6;
         none_seat:         7;
         seafood:           8;
         smoking:           9;
         vegetarian:        10;
         window:            11;
         airlines:          12;
         cancel_b:          13;
         destination:       14;
         find_b:            15;
         origin:            16;
         trip_bboard:       17;
         trip_main_w:       18;
         trip_name:         19;
         first_class:       20;
         non_smoking:       21;
         business_class:    22;
         save_b:            33;
         client_name:       24;

         menu_c_brief:      25;
         menu_c_business:   26;
         menu_c_detail:     27;
         menu_c_home:       28;
         menu_c_save:       29;
         menu_c_schedule:   30;
         menu_t_find:       31;

         address_1:         32;
         address_2:         33; 
         address_3:         34;
         homephone:         35;
         workphone:         36;



procedure
    select_client_activate();
    save_client_activate();
    schedule_trip_activate();
    first_class_changed();
    business_class_changed();
    coach_changed();
    non_smoking_changed();
    smoking_changed();
    aisle_changed();
    window_changed();
    none_seat_changed();
    name_changed();
    data_changed();
    c_create_widgets (integer);
    move_down() ;
    move_up() ;
    move_left() ;
    move_right() ;

object 
    c_menubar: imported XmMenuBar;

object
    client_main_window: XmMainWindow {
	controls {
		XmMenuBar		c_menubar;
		XmForm                  c_backbone_form;                
	};
	arguments {
!               XmNscrollingPolicy = XmAUTOMATIC;
		XmNmenuBar = c_menubar;
		XmNworkWindow = c_backbone_form ;
	};
        callbacks {
               MrmNcreateCallback = procedure c_create_widgets (client_main_w);
        };
    };

object
    c_data_board: XmForm {
	controls {
                XmLabel                 c_agency_name_label;
		XmLabel			c_name_label;
		XmTextField		c_name_text;
		XmLabel			c_address_label1;
		XmTextField		c_address_text1;
		XmTextField		c_address_text2;
		XmTextField		c_address_text3;
		XmLabel			c_home_phone_label;
		XmTextField		c_home_phone_text;
		XmLabel			c_work_phone_label;
		XmTextField		c_work_phone_text;
	};
	arguments {
                XmNfractionBase = 100 ;
                XmNhorizontalSpacing = 0 ;
                XmNverticalSpacing = 0 ;

		XmNmarginWidth = 0;
		XmNmarginHeight = 0;

!   constraints for its parent
                XmNleftAttachment = XmATTACH_POSITION;
                XmNleftPosition = 0;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNrightPosition = 100;
                XmNtopAttachment =  XmATTACH_FORM;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
		XmNtopOffset = 0;
                XmNbottomOffset = -300;
	};
        callbacks {
               MrmNcreateCallback = procedure c_create_widgets (client_bboard);
        };
    };

object
    c_airline_pref_board: XmRowColumn {
        controls {
                XmLabel                 c_airline_pref_label;
                XmList                  c_airline_pref_list;
        };
        arguments {
                XmNborderWidth = 1 ;
                XmNpacking = XmPACK_TIGHT;
                XmNorientation = XmVERTICAL;
                XmNspacing = 0;
!   constraints for its parent
                XmNleftAttachment = XmATTACH_POSITION;
                XmNleftPosition = 0 ;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNrightPosition = 33 ;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = 300;
                XmNbottomOffset = -575;
        } ;
    } ;


object
    c_airline_pref_label: XmLabel {
	arguments {
	};
    };


object
    c_airline_pref_list: XmList {
        arguments {
              XmNselectionPolicy = XmMULTIPLE_SELECT ;
              XmNvisibleItemCount = 8 ;
        } ;
    } ;

object
    c_middle_rowc: XmRowColumn { 
	controls {
                XmLabel                 c_seating_label;
                XmRadioBox              c_class_radio_box;
                XmSeparator             c_seating_sep1;
                XmRadioBox              c_smoke_radio_box;
                XmSeparator             c_seating_sep2;
                XmRadioBox              c_seat_pref_radio_box;
        } ;
        arguments {
                XmNborderWidth = 1 ;
		XmNpacking = XmPACK_TIGHT;
		XmNorientation = XmVERTICAL;
		XmNspacing = 0;

!   constraints for its parent
                XmNleftAttachment = XmATTACH_POSITION;
                XmNleftPosition = 33 ;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNrightPosition = 66 ;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
		XmNtopOffset = 300;
                XmNbottomOffset = -575;
        } ;
    } ;

object
    c_smoke_radio_box: XmRadioBox  { 
	controls {
		XmToggleButton		c_first_class_button;
		XmToggleButton		c_business_class_button;
		XmToggleButton		c_coach_button;
        } ;
        arguments {
		XmNpacking = XmPACK_COLUMN;
		XmNorientation = XmVERTICAL;
		XmNnumColumns = 1;
		XmNspacing = 0;
        } ;
    } ;

object 
    c_class_radio_box: XmRadioBox  { 
	controls {
		XmToggleButton		c_non_smoking_button;
		XmToggleButton		c_smoking_button;
        } ;
        arguments {
		XmNpacking = XmPACK_COLUMN;
		XmNorientation = XmVERTICAL;
		XmNnumColumns = 1;
		XmNspacing = 0;
        } ;
    } ; 

object
    c_seat_pref_radio_box: XmRadioBox  { 
	controls {
		XmToggleButton		c_aisle_button;
		XmToggleButton		c_window_button;
		XmToggleButton		c_none_seat_button;
        } ;
        arguments {
		XmNpacking = XmPACK_COLUMN;
		XmNorientation = XmVERTICAL;
		XmNnumColumns = 1;
		XmNspacing = 0;
        } ;
    } ; 


object
    c_name_label: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_POSITION;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNrightPosition = 32 ;
                XmNleftPosition = 12;
                XmNbottomOffset = -90;
                XmNtopOffset = 60;                 
	};
    };

object
    c_agency_name_label: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_POSITION;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNleftPosition = 20;
                XmNrightPosition = 80;
                XmNbottomOffset = -45;
                XmNtopOffset = 15;                 
	};
    };

object
    c_name_text: XmTextField {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_WIDGET;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNleftWidget = XmLabel c_name_label;
                XmNrightPosition = 88;
                XmNbottomOffset = -95;
                XmNtopOffset = 60;                 
	};
        callbacks {
                XmNactivateCallback = procedure move_down();
        };
    };

object
    c_address_label1: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_POSITION;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNrightPosition = 32;
                XmNleftPosition = 12;
                XmNbottomOffset = -135;
                XmNtopOffset = 105;                 
	};
    };


object
    c_address_text1: XmTextField {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_WIDGET;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNleftWidget = XmLabel c_address_label1 ;
                XmNrightPosition = 88;
                XmNbottomOffset = -135;
                XmNtopOffset = 105;                 
		XmNrows = 4;
	};
        callbacks {
		XmNvalueChangedCallback = procedure data_changed();
                XmNactivateCallback = procedure move_down();
        };
    };

object
    c_address_text2: XmTextField {
        arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_WIDGET;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNleftWidget = XmLabel c_address_label1 ;
                XmNrightPosition = 88;
                XmNbottomOffset = -166;
                XmNtopOffset = 136;
                XmNrows = 4;
        };
        callbacks {
                XmNvalueChangedCallback = procedure data_changed();
                XmNactivateCallback = procedure move_down();
        };
    };


object
    c_address_text3: XmTextField {
        arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_WIDGET;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNleftWidget = XmLabel c_address_label1 ;
                XmNrightPosition = 88;
                XmNbottomOffset = -197;
                XmNtopOffset = 167;
                XmNrows = 4;
        };
        callbacks {
                XmNvalueChangedCallback = procedure data_changed();
                XmNactivateCallback = procedure move_down();
        };
    };


object
    c_home_phone_label: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_POSITION;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNrightPosition = 32;
                XmNleftPosition = 12;
                XmNbottomOffset = -240;
                XmNtopOffset = 210;                 
	};
    };

object
    c_home_phone_text: XmTextField {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_WIDGET;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNleftWidget = XmLabel c_home_phone_label;
                XmNrightPosition = 60;
                XmNbottomOffset = -245;
                XmNtopOffset = 210;                 
		XmNcolumns = 15;
	};
        callbacks {
		XmNvalueChangedCallback = procedure data_changed();
                XmNactivateCallback = procedure move_down();
        };
    };

object
    c_work_phone_label: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_POSITION;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNrightPosition = 32;
                XmNleftPosition = 12;
                XmNbottomOffset = -285;
                XmNtopOffset = 255;                 
	};
    };

object
    c_work_phone_text: XmTextField {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment = XmATTACH_FORM;
                XmNleftAttachment = XmATTACH_WIDGET;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNleftWidget = XmLabel c_work_phone_label;
                XmNrightPosition = 60;
                XmNbottomOffset = -290;
                XmNtopOffset = 255;                 
		XmNcolumns = 15;
	};
        callbacks {
		XmNvalueChangedCallback = procedure data_changed();
                XmNactivateCallback = procedure move_down();
        };
    };


object
   c_backbone_form: XmForm {
	controls {
                XmForm                  c_data_board;
                XmRowColumn             c_airline_pref_board;
                XmRowColumn             c_middle_rowc;
                XmRadioBox              c_meal_buttons;   
        } ;
        arguments {
                XmNfractionBase = 100 ;
                XmNhorizontalSpacing = 0 ;
                XmNverticalSpacing = 0 ;

		XmNmarginWidth = 0;
		XmNmarginHeight = 0;
        } ;
   } ;  

object
    c_seating_label: XmLabel {
	arguments {
	};
    };


object
    c_first_class_button: XmToggleButton {
	arguments {
		XmNindicatorType = XmONE_OF_MANY;
	};
	callbacks {
                MrmNcreateCallback= procedure c_create_widgets (first_class);
		XmNvalueChangedCallback = procedures { 
			first_class_changed();
			data_changed();
		};
	};
    };

object
    c_business_class_button: XmToggleButton {
	arguments {
		XmNindicatorType = XmONE_OF_MANY;
	};
	callbacks {
               MrmNcreateCallback=procedure c_create_widgets(business_class);
		XmNvalueChangedCallback = procedures {
			business_class_changed();
			data_changed();
		};
	};
    };

object
    c_coach_button: XmToggleButton {
	arguments {
		XmNindicatorType = XmONE_OF_MANY;
	};
	callbacks {
                MrmNcreateCallback = procedure c_create_widgets (coach);
		XmNvalueChangedCallback = procedures { 
			coach_changed();
			data_changed();
		};
	};
    };

object
    c_seating_sep1: XmSeparator {
	arguments {
		XmNseparatorType = XmSINGLE_LINE;
	};
    };

object
    c_non_smoking_button: XmToggleButton {
	arguments {
		XmNindicatorType = XmONE_OF_MANY;
	};
	callbacks {
                MrmNcreateCallback= procedure c_create_widgets (non_smoking);
		XmNvalueChangedCallback = procedures { 
			non_smoking_changed();
			data_changed();
		};
	};
    };

object
    c_smoking_button: XmToggleButton {
	arguments {
		XmNindicatorType = XmONE_OF_MANY;
	};
	callbacks {
               MrmNcreateCallback = procedure c_create_widgets (smoking);
		XmNvalueChangedCallback = procedures { 
			smoking_changed();
			data_changed();
		};
	};
    };

object
    c_seating_sep2: XmSeparator {
	arguments {
		XmNseparatorType = XmSINGLE_LINE;
	};
    };

object
    c_aisle_button: XmToggleButton {
	arguments {
		XmNindicatorType = XmONE_OF_MANY;
	};
	callbacks {
                MrmNcreateCallback = procedure c_create_widgets (aisle);
		XmNvalueChangedCallback = procedures {
			aisle_changed();
			data_changed();
		};
	};
    };

object
    c_window_button: XmToggleButton {
	arguments {
		XmNindicatorType = XmONE_OF_MANY;
	};
	callbacks {
                MrmNcreateCallback = procedure c_create_widgets (window);
		XmNvalueChangedCallback = procedures {
		 	window_changed();
			data_changed();
		};
	};
    };

object
    c_none_seat_button: XmToggleButton {
	arguments {
		XmNindicatorType = XmONE_OF_MANY;
	};
	callbacks {
                MrmNcreateCallback = procedure c_create_widgets (none_seat);
		XmNvalueChangedCallback = procedures { 
			none_seat_changed();
			data_changed();
		};
	};
    };

object
    c_meal_label: XmLabel {
	arguments {
	};
    };

object
    c_meal_buttons: XmRadioBox {
	controls {
		XmLabel                 c_meal_label;
		XmToggleButton		c_vegetarian_button;
		XmToggleButton		c_kosher_button;
		XmToggleButton		c_seafood_button;
		XmToggleButton		c_none_meal_button;
	};
	arguments {
                XmNisHomogeneous = false ;
                XmNborderWidth = 1 ;
		XmNpacking = XmPACK_COLUMN;
		XmNorientation = XmVERTICAL;
		XmNnumColumns = 1;
		XmNspacing = 0;


!   constraints for its parent
                XmNleftAttachment = XmATTACH_POSITION;
                XmNleftPosition = 66;
                XmNrightAttachment = XmATTACH_POSITION;
                XmNrightPosition = 100;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM;
                XmNtopAttachment =XmATTACH_FORM;
		XmNtopOffset = 300;
                XmNbottomOffset = -575;
	};
    };

object
    c_vegetarian_button: XmToggleButton {
	arguments {
	};
	callbacks {
                MrmNcreateCallback = procedure c_create_widgets (vegetarian);
		XmNvalueChangedCallback = procedure data_changed();
	};
    };

object
    c_kosher_button: XmToggleButton {
	arguments {
	};
	callbacks {
                MrmNcreateCallback = procedure c_create_widgets (kosher);
		XmNvalueChangedCallback = procedure data_changed();
	};
    };

object
    c_seafood_button: XmToggleButton {
	arguments {
	};
	callbacks {
                MrmNcreateCallback = procedure c_create_widgets (seafood);
		XmNvalueChangedCallback = procedure data_changed();
	};
    };

object
    c_none_meal_button: XmToggleButton {
	arguments {
	};
	callbacks {
                MrmNcreateCallback = procedure c_create_widgets (none_meal);
		XmNvalueChangedCallback = procedure data_changed();
	};
    };

end module;













