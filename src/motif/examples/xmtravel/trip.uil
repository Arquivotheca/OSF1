! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! @(#)$RCSfile: trip.uil,v $ $Revision: 1.1.2.2 $ (DEC) $Date: 1993/11/05 22:06:24 $
! 
! (c) Copyright 1989, 1990, 1991, 1992 OPEN SOFTWARE FOUNDATION, INC. 
! ALL RIGHTS RESERVED 
! 
! Motif Release 1.2


module trip
	version = 'v1.0'
	names = case_sensitive

! These values correspond to definitions in xmtravel.h
! The values must match those in xmtravel.h

value
         aisle:             1;
         client_bboard:     2;
         client_main_w:     3;
         coach:             4;
         kosher:            5;
         none_meal:         6;
         none_seat:         7;
         seafood:           8;
         smoking:           9;
         vegetarian:        10;
         window:            11;
         airlines:          12;
         cancel_b:          13;
         destination:       14;
         find_b:            15;
         origin:            16;
         trip_bboard:       17;
         trip_main_w:       18;
         trip_name:         19;
         first_class:       20;
         non_smoking:       21;
         business_class:    22;
         save_b:            33;
         client_name:       24;

         address_1:          32;
         address_2:          33; 
         address_3:          34;
         homephone:          35;
         workphone:          36;





value
    place_list: string_table ('Atlanta', 'Boston', 'Chicago', 'Dallas',
        'Denver', 'Houston', 'Los Angeles', 'New York', 'Phoenix',
        'San Francisco', 'Seattle', 'Washington');

procedure
	t_create_widgets (integer);
	number_changed ();
	date_changed ();
	airlines_selected ();
	origin_selected ();
	destination_selected ();
	find_flights_activate ();
	cancel_activate ();
        move_down() ;
        move_up() ;
        move_left() ;
        move_right() ;


object 
    t_menubar: imported XmMenuBar;

object
    trip_main_window: XmMainWindow {
	controls {
		XmMenuBar		t_menubar;
		XmScrolledWindow	t_work_region;
	};
	arguments {
                XmNwidth = 1025 ;
                XmNheight = 425 ;
		XmNmenuBar = t_menubar;
		XmNworkWindow = t_work_region;
	};
        callbacks {
                MrmNcreateCallback = procedure t_create_widgets (trip_main_w);
        };
    };

object
    t_work_region: XmScrolledWindow {
        controls {
                 XmMessageBox            t_main_menu;
        };
        arguments {
                XmNscrollingPolicy = XmAUTOMATIC;
                XmNscrollBarDisplayPolicy = XmAS_NEEDED;
        };
    };


object
   t_main_menu: XmMessageBox {
        controls {
                XmForm                  t_data_board;
        } ;
        callbacks {
!               MrmNcreateCallback = procedure t_create_widgets (t_main_menu);
               XmNcancelCallback = procedure cancel_activate();
               XmNokCallback = procedure find_flights_activate();
        };
        arguments {
                XmNdefaultButtonType = XmDIALOG_OK_BUTTON ;
        } ;
   } ;


object
    t_data_board: XmForm {
	controls {
		XmLabel			t_name_label;
		XmLabel			t_name_text;
		XmLabel			t_number_label;
		XmTextField		t_number_text;
		XmLabel			t_date_label;
		XmTextField		t_date_text;
		XmLabel			t_return_label;
		XmTextField		t_return_text;
		XmSeparator		t_client_sep;
		XmLabel			t_airline_label;
		XmScrolledList		t_airline_list;
		XmLabel			t_origin_label;
		XmScrolledList		t_origin_list;
		XmLabel			t_destination_label;
		XmScrolledList		t_destination_list;
	};
	arguments {
		XmNmarginHeight = 0;
		XmNmarginWidth = 100;
		XmNallowOverlap = false;
	};
        callbacks {
                MrmNcreateCallback = procedure t_create_widgets (trip_bboard);
        };
    };

object
    t_name_label: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -45 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 2 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 20 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 15 ;  
	};
    };

object
    t_name_text: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -45 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 20 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 38  ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 15 ;  
	};
        callbacks {
                MrmNcreateCallback = procedure t_create_widgets (trip_name);
        };
    };

object
    t_number_label: XmLabel {
	arguments {
                XmNalignment = XmALIGNMENT_END ;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -105  ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 2 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 20  ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset =  75 ;  
	};
    };

object
    t_number_text: XmTextField {
	arguments {
		XmNcolumns = 3;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -105 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 20 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 38 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 75 ;  
	};
        callbacks {
		XmNvalueChangedCallback = procedure number_changed ();
                XmNactivateCallback = procedure move_down();
        };
    };

object
    t_date_label: XmLabel {
	arguments {
                XmNalignment = XmALIGNMENT_END ;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -165 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 2  ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 20 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 135 ;  
	};
    };

object
    t_date_text: XmTextField {
	arguments {

		XmNcolumns = 10;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -165 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 20 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 38  ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 135 ;  
	};
        callbacks {
		XmNvalueChangedCallback = procedure date_changed ();
                XmNactivateCallback = procedure move_down();
        };
    };

object
    t_return_label: XmLabel {
	arguments {
                XmNalignment = XmALIGNMENT_END ;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -225 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 2 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 20 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 195 ;  
	};
    };

object
    t_return_text: XmTextField {
	arguments {
		XmNcolumns = 10;

                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -225 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 20 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 38 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 195 ;  
	};
        callbacks {
                XmNactivateCallback = procedure move_down();
        };
    };

object
    t_client_sep: XmSeparator {
	arguments {
		XmNorientation = XmVERTICAL;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -285  ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 39 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 41 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 0 ;  
	};
    };

object
    t_airline_label: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -45 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 42 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 56 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 15 ;  
	};
    };

object
    t_airline_list: XmScrolledList {
	arguments {
		XmNselectionPolicy = XmBROWSE_SELECT;
		XmNlistSizePolicy = XmCONSTANT;
!                XmNwidth = 140 ;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -285 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 42  ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 56 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 75 ;  
	};
        callbacks {
                MrmNcreateCallback = procedure t_create_widgets (airlines);
		XmNextendedSelectionCallback = procedure airlines_selected ();
        };
    };

object
    t_origin_label: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -45 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 62 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 78 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 15 ;  
	};
    };

object
    t_origin_list: XmScrolledList {
	arguments {
		XmNselectionPolicy = XmBROWSE_SELECT;
		XmNlistSizePolicy = XmVARIABLE;
		XmNvisibleItemCount = 6;
		XmNitems = place_list;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -285 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 62 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 78 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 75 ;  
	};
        callbacks {
                MrmNcreateCallback = procedure t_create_widgets (origin);
		XmNbrowseSelectionCallback = procedure origin_selected ();
        };
    };

object
    t_destination_label: XmLabel {
	arguments {
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -45 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 82 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 98 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 15 ;  
	};
    };

object
    t_destination_list: XmScrolledList {
	arguments {
		XmNselectionPolicy = XmBROWSE_SELECT;
		XmNlistSizePolicy = XmVARIABLE;
		XmNvisibleItemCount = 6;
		XmNitems = place_list;
                XmNbottomAttachment = XmATTACH_OPPOSITE_FORM ;
                XmNbottomOffset = -285 ;  
                XmNleftAttachment = XmATTACH_POSITION  ;
                XmNleftPosition = 82 ;
                XmNrightAttachment = XmATTACH_POSITION  ;
                XmNrightPosition = 98 ;
                XmNtopAttachment = XmATTACH_FORM ;      
                XmNtopOffset = 75 ;  
	};
        callbacks {
                MrmNcreateCallback = procedure t_create_widgets (destination);
		XmNbrowseSelectionCallback = procedure destination_selected ();
        };
    };

end module;
















