! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! FILE:	ddif$csw.uil
!
!
! COPYRIGHT (C) 1990
! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS 01754
!
! THIS SOFTWARE IS FURNISHED  UNDER A LICENSE FOR USE ONLY ON A SINGLE
! COMPUTER  SYSTEM AND  MAY BE  COPIED ONLY WITH  THE INCLUSION OF THE
! ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE, OR ANY OTHER COPIES THEREOF,
! MAY NOT BE PROVIDED OR  OTHERWISE MADE AVAILABLE TO ANY OTHER PERSON
! EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE
! TERMS.  TITLE TO AND  OWNERSHIP OF THE  SOFTWARE  SHALL AT ALL TIMES
! REMAIN IN DEC.
!
! THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT NOTICE
! AND SHOULD  NOT BE CONSTRUED  AS A COMMITMENT  BY DIGITAL  EQUIPMENT
! CORPORATION.
!
! DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE USE OR  RELIABILITY OF ITS
! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
!
!++
! FACILITY:
!	DVR: CDA (DDIF) VIEWER APPLICATION
!
! ABSTRACT:
!	This is the uil file used to create the user interface
!	for the cda converter file selection widget. It does not contain any
!	thing which needs to be translated; it includes the following
!	files:
!
!		dvrcswcn.uil	contains all constant arguments
!		dvrcswtx.uil 	contains text strings to be translated
!
! ENVIRONMENT:
!	UIL
!
! AUTHOR:	Roy F Stone	CREATION DATE:	    16-Aug-1990
!
! MODIFICATION HISTORY:
!
!		Roy F. Stone			    10-Jul-1991
!		Changed reference to Options file filter mask.
!
!		Roy F. Stone			    20-May-1991
!		Changed from DXmHelp to DXmHelpDialog
!
!		Roy F. Stone			     9-Apr-1991
!		Changed included file names for portability.
!
module converter_selection
        version = 'v1.0'
        names = case_sensitive
        objects = {
                XmLabel = gadget;
                XmPushButton = widget;
                }

include file 'XmAppl.uil';
include file 'dvrcswcn.uil';
include file 'dvrcswtx.uil';

procedure
	csw_create_proc(integer);
	csw_selection_proc(integer);
	csw_list_sel_proc(integer);
	csw_options_activate_proc(integer);
	csw_options_ok_proc(integer);
	csw_options_cancel_proc(integer);
	csw_help_proc(integer);
	csw_destroy_proc(integer);

value
	! Default icon for optional icon push button.

	cvd$icon_color_table	:	color_table(foreground color = 'x',
						    background color = '-');

	small_icon	: icon (color_table = cvd$icon_color_table,
				'----------------------',
				'----------------------',
				'--------xxxxxx--------',
			  	'------xxxxxxxxxx------',
				'-----xx--------xx-----',
				'----xx----------xx----',
				'---xx------------xx---',
				'---xx------------xx---',
				'--xx------xx------xx--',
				'--xx-----xxxx-----xx--',
	 			'--xx----xxxxxx----xx--',
				'--xx----xxxxxx----xx--',
			  	'--xx-----xxxx-----xx--',
				'--xx------xx------xx--',
				'---xx------------xx---',
				'---xx------------xx---',
		      		'----xx----------xx----',
				'-----xx--------xx-----',
				'------xxxxxxxxxx------',
				'--------xxxxxx--------',
	    			'----------------------',
				'----------------------');


object		! File XmSelectionDialog box widget.

	file_sel_box : XmFileSelectionDialog {

	    arguments {
		XmNx 			= csw_sel_x;
		XmNy			= csw_input_sel_y;
		XmNdialogStyle 		= XmDIALOG_MODELESS;
		XmNdirMask		= compound_string("*.*");
	     	XmNmarginWidth		= csw_sel_mwidth;
      		XmNmarginHeight		= csw_sel_mheight;
       	    };

	    callbacks {
		XmNokCallback = procedure csw_selection_proc (file_sel_id);
		XmNcancelCallback
				= procedure csw_selection_proc (file_sel_id);
		XmNhelpCallback = procedure csw_help_proc (help_button_id);
		XmNunmapCallback = procedure csw_help_proc (help_exit);
		XmNdestroyCallback  = procedure csw_destroy_proc (file_sel_id);
	    };
	};

object		! File format box.

	file_format_box : XmForm{

	    arguments {
		XmNdefaultPosition  	= true;
		XmNborderWidth 	= csw_format_at_box_bwid;
		XmNdefaultButton  = XmPushButton dummy_button;
	    };

    	controls {
	    XmLabel		format_label;
	    XmText 		format_text_box;
	    XmScrolledList	format_list_box;
	    XmPushButton 	options_sel_button;
	    XmPushButton	optional_label_button;
	    XmPushButton	optional_icon_button;
      	    XmPushButton 	dummy_button;
	    };
	};

object		! Format label widget.

	format_label : XmLabel {

	    arguments {
		XmNtopAttachment = XmATTACH_FORM;
		XmNleftAttachment = XmATTACH_FORM;
	   };

            callbacks {
		MrmNcreateCallback =
				procedure csw_create_proc (format_label_id);
            };
	};

object		! Format text box.

	format_text_box : XmText {
       	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget	= XmLabel format_label;
		XmNleftAttachment = XmATTACH_FORM;
		XmNeditable 	= true;
		XmNrows 	  	= csw_format_stext_rows;
	     	XmNresizeHeight 	= false;
	    };

        callbacks {
	    MrmNcreateCallback  = procedure csw_create_proc (format_text_id);
            };
	};

object		! Format list box widget.

	format_list_box : XmScrolledList {
	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget	= XmText format_text_box;
		XmNleftAttachment = XmATTACH_FORM;
		XmNleftOffset	= 2;
		XmNborderWidth 	= csw_format_lbox_bwidth;
		XmNvisibleItemCount = csw_format_lbox_v_cnt;
		XmNscrollBarDisplayPolicy = XmAS_NEEDED;
		XmNselectionPolicy = XmSINGLE_SELECT;
	};

	    callbacks {
	  	MrmNcreateCallback = procedure csw_create_proc (list_box_id);
		XmNsingleSelectionCallback =
				procedure csw_list_sel_proc (list_box_id);
	    };
	};

object		! Options button.

	options_sel_button	: XmPushButton {

	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget	= XmText format_text_box;
		XmNtopOffset	= csw_button_offset;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget	= XmScrolledList format_list_box;
		XmNleftOffset	= csw_button_offset;
		XmNlabelString = csw_op_button_label;
    	    };
 	    callbacks {
		MrmNcreateCallback =
				procedure csw_create_proc (options_button_id);
                XmNactivateCallback =
			procedure csw_options_activate_proc (options_button_id);
	    };
	};

object		! Optional button.

	optional_label_button	: XmPushButton {

	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopWidget	= XmPushButton options_sel_button;
		XmNtopOffset	= csw_button_offset;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget	= XmScrolledList format_list_box;
		XmNleftOffset	= csw_button_offset;
		XmNlabelString = csw_optional_button_label;
    	    };
 	    callbacks {
		MrmNcreateCallback =
				procedure csw_create_proc(opt_label_button_id);
	    };
	};
object		! Optional icon button.

	optional_icon_button	: XmPushButton {

	    arguments {
		XmNtopAttachment = XmATTACH_WIDGET;
		XmNtopOffset	= csw_button_offset;
		XmNtopWidget	= XmPushButton options_sel_button;
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftWidget	= XmScrolledList format_list_box;
		XmNleftOffset	= csw_button_offset;
		XmNlabelType = XmPIXMAP;
		XmNlabelPixmap = small_icon;
    	    };
 	    callbacks {
		MrmNcreateCallback =
				procedure csw_create_proc(opt_icon_button_id);
	    };
	};

object		! Dummy button to handle format CR event.

	dummy_button	: XmPushButton {

	    arguments {
		XmNmappedWhenManaged = false;
	    };
	};

object		! Options File Selection box widget.

	options_file_sel_box : XmFileSelectionDialog {

	    arguments {
		XmNdialogStyle 		= XmDIALOG_MODELESS;
		XmNdefaultPosition	= false;
		XmNdirMask		= csw_sel_opt_vms_mask;
		XmNdialogTitle		= csw_sel_opt_title;
       	    };

	    callbacks {
		XmNokCallback =
			procedure csw_options_ok_proc (options_file_sel_id);
		XmNcancelCallback   =
			procedure csw_options_cancel_proc(options_file_sel_id);
		XmNhelpCallback = procedure csw_help_proc(options_file_sel_id);
	    };
	};

object		! Help information box.

	help_box : DXmHelpDialog {
	    arguments {
		DXmNlibrarySpec = csw_help_library_file;
                DXmNhelptitleLabel = csw_main_help_title;
		DXmNlibraryType = 1;
		DXmNfirstTopic = csw_main_help_topic;
            };
	};

end module;
