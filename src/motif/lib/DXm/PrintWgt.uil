! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
!************************************************************************
!*									*
!*	Copyright (c) Digital Equipment Corporation, 1990  		*
!*	All Rights Reserved.  Unpublished rights reserved		*
!*	under the copyright laws of the United States.			*
!*									*
!*	The software contained on this media is proprietary		*
!*	to and embodies the confidential technology of 			*
!*	Digital Equipment Corporation.  Possession, use,		*
!*	duplication or dissemination of the software and		*
!*	media is authorized only pursuant to a valid written		*
!*	license from Digital Equipment Corporation.			*
!*									*
!*	RESTRICTED RIGHTS LEGEND   Use, duplication, or 		*
!*	disclosure by the U.S. Government is subject to			*
!*	restrictions as set forth in Subparagraph (c)(1)(ii)		*
!*	of DFARS 252.227-7013, or in FAR 52.227-19, as			*
!*	applicable.							*
!*									*
!************************************************************************
!******************************************************************************
!*									      *
!*   FACILITY:								      *
!*									      *
!*        Print Widget			                                      *
!*									      *
!*   ABSTRACT:								      *
!*									      *
!*	This module contains the gadget and widget definitions for the UIL    *
!*      portion of the Print Widget.					      *
!*									      *
!*   AUTHORS:								      *
!*									      *
!*	Print Widget Team	                                              *
!*									      *
!*   MODIFICATION HISTORY:						      *
!*									      *
!*	024	WDW			03-Apr-1991			      *
!*		Add constants for maximum length of CSText fields.	      *
!*	023	WDW			13-Dec-1990			      *
!*		Remove all references to "font" to avoid QAR.		      *
!*	022	WDW			13-Dec-1990			      *
!*		Make sure orientation works correctly.			      *
!*	021	WDW			19-Nov-1990			      *
!*		More Style Guide Compliancy.				      *
!*	020	WDW			19-Nov-1990			      *
!*		More Style Guide Compliancy.				      *
!*	019	WDW			02-Nov-1990			      *
!*		Style Guide compliancy.					      *
!*	018	WDW			30-Oct-1990			      *
!*		Fix up attachments in secondary box to be two columns.        *
!*		The top of each column is the "anchor" widget.	              *
!*	017	WDW			29-Oct-1990			      *
!*		Fix up attachment of right hand column to left hand column.   *
!*		It used to attach to job name field.  Now attach to sheet size*
!*	016	WDW			12-Sep-1990			      *
!*		Make push buttons Widgets.				      *
!*	015	WDW			30-Aug-1990			      *
!*		Add default button code.				      *
!*	014	WDW			28-Aug-1990			      *
!*		Make message box be an application modal error message box.   *
!*	013	WDW			28-Aug-1990			      *
!*		Make all scrolled window/list boxes be scrolled lists	      *
!*	012	WDW			16-Aug-1990			      *
!*		Add extra constants for widget labels.			      *
!*	011	WDW			15-Aug-1990			      *
!*		Change attachments in the 2ndary box so number up is OK.      *
!*		Also, since the CSText widget has a bug, make the job name    *
!*		field width be 30 columns instead of xxx pixels.	      *
!*	010	WDW			09-Aug-1990			      *
!*		Work on I14Y.  The primary box doesn't seem to want to	      *
!*		work, but the 2ndary works fine.  The secondary box was	      *
!*		modified to be a FormDialog which controls a scrolled	      *
!*		window which controls a Form.  Upon manage, the scrolled      *
!*		window's size is set to match the screen size.		      *
!*	009	WDW			19-Jul-1990			      *
!*		Make push buttons and labels gadgets again.		      *
!*	008	WDW			15-Jul-1990			      *
!*		Adjust indeces for widgets.				      *
!*	007	WDW			13-Jul-1990			      *
!*		I18N work.						      *
!*	006	WDW			06-Jul-1990			      *
!*		Put DXmCSText in interface instead of XmText.  Make	      *
!*		resources be XmString's instead of char *'s.		      *
!*	005	WDW			25-Jun-1990			      *
!*		Add support for name of 2ndary dialog box.                    *
!*		Make pass all string be "Yes" instead of "OK."                *
!*	004	WDW			21-Jun-1990			      *
!*		Changes names to match the naming conventions of Xm.          *
!*	003	WDW			19-Mar-1990			      *
!*		Changes names to match the naming conventions of Xm.          *
!*	002	WDW			15-Mar-1990			      *
!*              Change name of DxmPrintWidgetCreate to DxmCreatePrintWidget   *
!*	001	WDW			15-Mar-1990			      *
!*		Make 2ndary box have dialog style XmDIALOG_MODELESS.  Make    *
!*		the orientation radio box be non-homogeneous.		      *
!*								   	      *
!******************************************************************************
module printwgt
    version = 'V3.0'
    names = case_sensitive
    character_set = iso_latin1
    objects =
    {
	XmSeparator=gadget;
!	XmPushButton=gadget;
	XmToggleButton=gadget;
	XmLabel=gadget;
    }

!************************************************************************
!*									*
!* INCLUDE FILES							*
!*									*
!************************************************************************
include file 'PwStrings.uil'; ! Contains all the visible text as well as fetched string values.
include file 'PwCoords.uil';  ! Contains all the coordinate position values and visible size values.
include file 'PwIcons.uil';   ! Contains icons for the print widget.

!************************************************************************
!*									*
!* Define what procedures will be expected to be defined in the .C code	*
!*									*
!************************************************************************
procedure
    DXmCreatePrintWgt ();
    DXmCreatePrintWgt_DXm ();
    pw_create_proc(integer);
    pw_pulldown_menu_create_proc(integer);
    pw_activate_proc (integer);
    pw_help_proc(compound_string);
    pw_resource_activate_proc (integer);
    pw_pulldown_menu_activate_proc (integer);

!************************************************************************
!*									*
!* Literal value for each widget in the interface		      	*
!*									*
!* NOTE:  THESE ABSOLUTELY POSITIVELY MUST MATCH THE NUMBERS IN THE	*
!*	  HEADER FILES.							*
!*									*
!************************************************************************
value
	!****************************************************************
	!*								*
	!* Resource mappings.						*
	!*								*
	!****************************************************************
	K_PW_NUMBER_COPIES_MAP		:	0;
	K_PW_PAGE_RANGE_FROM_MAP	:	1;
	K_PW_PAGE_RANGE_TO_MAP		:	2;
	K_PW_PRINT_FORMAT_CONTENTS_MAP	:	3;
	K_PW_PRINT_FORMAT_CHOICE_MAP	:	4;
	K_PW_ORIENTATION_MAP		:	5;
	K_PW_PRINTER_CONTENTS_MAP	:	6;
	K_PW_PRINTER_CHOICE_MAP		:	7;
	K_PW_PRINT_AFTER_MAP		:	8;
	K_PW_DELETE_FILE_MAP		:	9;

	K_PW_PAGE_SIZE_MAP		:       10;
	K_PW_SIDES_MAP			:	11;
	K_PW_NUMBER_UP_MAP		:	12;
	K_PW_SHEET_COUNT_MAP		:	13;
	K_PW_FILE_START_SHEET_MAP	:	14;
	K_PW_FILE_END_SHEET_MAP		:	15;
	K_PW_FILE_BURST_SHEET_MAP	:	16;
	K_PW_MESSAGE_LOG_MAP		:	17;
	K_PW_HOLD_JOB_MAP		:	18;
	K_PW_NOTIFY_MAP			:	19;
	K_PW_SHEET_SIZE_MAP		:	20;
	K_PW_INPUT_TRAY_MAP		:	21;
	K_PW_OUTPUT_TRAY_MAP		:	22;
	K_PW_JOB_NAME_MAP		:	23;
	K_PW_OPERATOR_MESSAGE_MAP	:	24;
	K_PW_HEADER_MAP			:	25;
	K_PW_AUTOMATIC_PAGINATION_MAP	:	26;
	K_PW_DOUBLE_SPACING_MAP		:	27;
	K_PW_LAYUP_DEFINITION_MAP	:	28;
	K_PW_START_SHEET_COMMENT_MAP	:	29;
	K_PW_PASS_ALL_MAP		:	30;
	K_PW_PRINTER_FORM_CONTENTS_MAP	:	31;
	K_PW_PRINTER_FORM_CHOICE_MAP	:	32;
	K_PW_PRIORITY_MAP		:	33;
	K_PW_SETUP_MAP			:	34;

	!****************************************************************
	!*								*
	!* Mappings for creating pulldown menus.			*
	!*								*
	!****************************************************************
	K_PW_PAGE_SIZE_PULLDOWN_MAP	:	0;
	K_PW_SIDES_PULLDOWN_MAP		:	1;
	K_PW_FILE_START_SHEET_PULLDOWN_	:	2;
	K_PW_FILE_END_SHEET_PULLDOWN_MA	:	3;
	K_PW_FILE_BURST_SHEET_PULLDOWN_	:	4;
	K_PW_MESSAGE_LOG_PULLDOWN_MAP	:	5;
	K_PW_SHEET_SIZE_PULLDOWN_MAP	:	6;
	K_PW_INPUT_TRAY_PULLDOWN_MAP	:	7;
	K_PW_OUTPUT_TRAY_PULLDOWN_MAP	:	8;
	
	!****************************************************************
	!*								*
	!* To be used for referencing widget IDs.			*
	!*								*
	!****************************************************************
	K_PW_PRIMARY_BOX	       	: 	1;

	K_PW_NUMBER_COPIES	       	: 	2;
	K_PW_PAGE_RANGE_FROM	       	: 	3;
	K_PW_PAGE_RANGE_TO	       	: 	4;
	K_PW_PRINT_FORMAT	       	: 	5;
	K_PW_ORIENTATION	       	: 	6;
	K_PW_DEFAULT_ORIENTATION       	: 	7;
	K_PW_PORTRAIT		       	: 	8;
	K_PW_LANDSCAPE		       	: 	9;
	K_PW_PRINTER		       	: 	10;
	K_PW_PRINT_AFTER	       	: 	11;
	K_PW_DELETE_FILE	       	: 	12;

	K_PW_OK			       	: 	13;
	K_PW_CANCEL		       	: 	14;
	K_PW_OPTIONS		       	: 	15;

	K_PW_2NDARY_BOX		       	: 	16;

	K_PW_PAGE_SIZE		       	: 	17; 	! /*Reserve 30 spots for buttons*/
	K_PW_SIDES		       	: 	48;	! /*Reserve 10 spots for buttons*/
	K_PW_NUMBER_UP		       	: 	59;
	K_PW_SHEET_COUNT	       	: 	60;
	K_PW_FILE_START_SHEET	       	: 	61; 	! /*Reserve 5 spots for buttons*/
	K_PW_FILE_END_SHEET	       	: 	67; 	! /*Reserve 5 spots for buttons*/
	K_PW_FILE_BURST_SHEET	       	: 	73; 	! /*Reserve 5 spots for buttons*/
	K_PW_MESSAGE_LOG	       	: 	79; 	! /*Reserve 5 spots for buttons*/
	K_PW_HOLD_JOB		       	: 	85;
	K_PW_NOTIFY		       	: 	86;
	K_PW_SHEET_SIZE		       	: 	87; 	! /*Reserve 30 spots for buttons*/
	K_PW_INPUT_TRAY		       	: 	118;	! /*Reserve 10 spots for buttons*/
	K_PW_OUTPUT_TRAY	       	: 	129;	! /*Reserve 10 spots for buttons*/
	K_PW_JOB_NAME		       	: 	140;
	K_PW_OPERATOR_MESSAGE	       	: 	141;
	K_PW_HEADER		       	: 	142;
	K_PW_AUTOMATIC_PAGINATION     	: 	143;
	K_PW_DOUBLE_SPACING	       	: 	144;
	K_PW_LAYUP_DEFINITION	       	: 	145;
	K_PW_START_SHEET_COMMENT       	: 	146;
	K_PW_PASS_ALL		       	: 	147;
	K_PW_PRINTER_FORM	       	: 	153;
	K_PW_PRIORITY		       	: 	154;
	K_PW_SETUP		       	: 	155;
	
	K_PW_2NDARY_OK		       	: 	156;
	K_PW_2NDARY_CANCEL	       	: 	157;

	K_PW_MSG		       	: 	158;
	K_PW_MSG_YES		       	: 	159;
 	K_PW_HELP_WIDGET	       	: 	160;

	K_PW_PRIMARY_WINDOW		:	161;
	K_PW_PRIMARY_FORM		:	162;
	K_PW_2NDARY_WINDOW		:	163;
	K_PW_2NDARY_FORM		:	164;

	K_PW_NUMBER_COPIES_LABEL	:	165;
	K_PW_PAGE_RANGE_FROM_LABEL	:	166;
	K_PW_PAGE_RANGE_TO_LABEL	:	167;
	K_PW_PRINT_FORMAT_LABEL		:	168;
	K_PW_ORIENTATION_LABEL		:	169;
	K_PW_PRINTER_LABEL		:	170;
	K_PW_PRINT_AFTER_LABEL		:	171;
	K_PW_NUMBER_UP_LABEL		:	172;
	K_PW_SHEET_COUNT_LABEL		:	173;
	K_PW_JOB_NAME_LABEL		:	174;
	K_PW_OPERATOR_MESSAGE_LABEL	:	175;
	K_PW_LAYUP_DEFINITION_LABEL	:	176;
	K_PW_START_SHEET_COMMENT_LABEL	:	177;
	K_PW_PRINTER_FORM_LABEL		:	178;
	K_PW_PRIORITY_LABEL		:	179;
	K_PW_SETUP_LABEL		:	180;

	K_PW_TOP_PRIMARY_INFO_FORM	:	181;
	K_PW_MIDDLE_PRIMARY_INFO_FORM	:	182;
	K_PW_BOTTOM_PRIMARY_INFO_FORM	:	183;
	K_PW_VIRTUAL_PAGE_BOX		:	184;
	K_PW_PHYSICAL_PAGE_BOX		:	185;
	K_PW_PAGE_LAYOUT_BOX		:	186;
	K_PW_JOB_PARAMETERS_BOX		:	187;
	K_PW_PAGE_SIZE_LABEL		:	188;
	K_PW_SIDES_LABEL		:	189;
	K_PW_SHEET_SIZE_LABEL		:	190;
	K_PW_INPUT_TRAY_LABEL		:	191;
	K_PW_OUTPUT_TRAY_LABEL		:	192;
	K_PW_FILE_START_SHEET_LABEL	:	193;
	K_PW_FILE_END_SHEET_LABEL	:	194;
	K_PW_FILE_BURST_SHEET_LABEL	:	195;
	K_PW_MESSAGE_LOG_LABEL		:	196;

	K_PW_HELP			:	197;
	K_PW_2NDARY_HELP		:	198;
	
	K_PW_VIRTUAL_PAGE_LABEL		:	199;
	K_PW_PHYSICAL_PAGE_LABEL	:	200;
	K_PW_PAGE_LAYOUT_LABEL		:	201;
	K_PW_JOB_PARAMETERS_LABEL	:	202;

        K_PW_DROP_HELP                  :       203;

identifier
	pw_optionmenu_pb_label;
	pw_optionmenu_pb_help_tag;
	pw_optionmenu_pb_activate_tag;


!************************************************************************
!*									*
!* Argument lists which apply to each class of widget.		        *
!*									*
!************************************************************************
list
    all_optionmenu_args : arguments
	{
	XmNmarginHeight = 0;
	XmNborderWidth = 0;
	};

    push_button_args : arguments
	{
!	XmNwidth = k_pw_push_button_width;
	};

    cs_field_label_args : arguments
	{
!	XmNwidth = k_pw_cs_field_label_width;
	};

    optionmenu_label_args : arguments
	{
!	XmNwidth = k_pw_cs_field_label_width;
	};

    cs_field_args : arguments
	{
	XmNrows = 1;
	XmNresizeWidth = false;
	XmNresizeHeight = false;
	};

    numeric_cs_field_label_args : arguments
	{
	};

    numeric_cs_field_args : arguments
	{
	XmNcolumns = 5;
	XmNmaxLength = 5;
	};

    page_range_cs_field_args : arguments
	{
	XmNcolumns = 10;
	XmNmaxLength = 20;
	XmNvalue = null_string;
	};

    secondary_optionmenu_args : arguments
	{
	};

    secondary_cs_field_label_args : arguments
	{
	};

    scrolled_window_args : arguments
	{
	XmNscrollBarDisplayPolicy = XmSTATIC;
	};

    scrolled_list_args : arguments
	{
	XmNborderWidth = 0;
        XmNscrollBarDisplayPolicy = XmSTATIC;
	XmNlistSizePolicy = XmCONSTANT;
        XmNscrolledWindowMarginHeight = 0;
        XmNscrolledWindowMarginWidth = 0;
	};

list
    list_args : arguments
	{
	XmNborderWidth = 0;
	};

    pulldown_menu_args : arguments
	{
	};

    little_form_args : arguments
    {
	    XmNnavigationType		= XmSTICKY_TAB_GROUP;
	    XmNmarginWidth		= k_pw_little_form_margin_wid;
	    XmNmarginHeight		= k_pw_little_form_margin_hei;
	    XmNallowOverlap		= false;
	    XmNshadowType		= XmSHADOW_IN;
	    XmNshadowThickness		= k_pw_shadow_thickness;
    };

!********************************************************************************
!*										*
!* The proto-typical push button for the option menus.				*
!*										*
!********************************************************************************
object
    proto_optionmenu_pb : XmPushButtonGadget
    {
	arguments
	{
	    arguments 			push_button_args;
	    XmNlabelString 		= pw_optionmenu_pb_label;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(pw_optionmenu_pb_help_tag);
	    XmNactivateCallback 	= procedure pw_pulldown_menu_activate_proc(pw_optionmenu_pb_activate_tag);
	};
    };	

!********************************************************************************
!*										*
!* The primary form box								*
!*										*
!********************************************************************************
object
    pw_primary_box : XmForm
    {
    	arguments
	{
	    XmNnavigationType		= XmSTICKY_TAB_GROUP;
	    XmNmarginHeight		= k_pw_box_margin_wid;
	    XmNmarginWidth		= k_pw_box_margin_wid;
	    XmNallowOverlap		= false;
	    XmNdefaultButton 		= XmPushButton OK_button;
	    XmNcancelButton 		= XmPushButton primary_cancel_button;
        };
    	controls
	{
	    XmForm 			top_primary_info_form;
	    XmForm 			middle_primary_info_form;
	    XmForm			bottom_primary_info_form;
	    XmPushButton 		OK_button;
	    XmPushButton 		primary_cancel_button;
	    XmPushButton 		options_button;
	    XmPushButton 		help_button;
	};
	callbacks
	{
	    XmNhelpCallback     	= procedure pw_help_proc(K_PW_PRIMARY_BOX_KEY);
	    MrmNcreateCallback   	= procedure pw_create_proc(K_PW_PRIMARY_FORM);
	};	    
    };

object
    top_primary_info_form : XmForm
    {
    	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    arguments			little_form_args;
        };
    	controls
	{
            XmForm                      top_primary_label_form;
	    DXmCSText 			number_copies_field;
	    DXmCSText 			page_range_from_field;
	    XmLabel 			page_range_to_label;
	    DXmCSText 			page_range_to_field;
	    XmLabel 			orientation_label;
	    XmRadioBox 			orientation_radio;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_TOP_PRIMARY_INFO_FORM);
	};	    
    };

object
    top_primary_label_form : XmForm 
    {
        arguments 
	{
            XmNleftAttachment 		= XmATTACH_FORM;
            XmNtopAttachment  		= XmATTACH_FORM;
        };
        controls 
	{
            XmLabel 			number_copies_label;
            XmLabel 			page_range_from_label;
        };
    };

object
    number_copies_label	:   XmLabel
    {
	arguments
	{
	    arguments 			cs_field_label_args;    

	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;
	    XmNtopOffset 		= k_pw_little_form_margin_hei;

	    XmNlabelString 		= number_copies_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback	 	= procedure pw_create_proc(K_PW_NUMBER_COPIES_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_NUMBER_COPIES_KEY);
	};
    };

object
    number_copies_field	:   DXmCSText
    {
	arguments
	{
	    arguments 			cs_field_args;
	    arguments 			numeric_cs_field_args;

	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= XmForm top_primary_label_form;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNvalue 			= null_string;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_NUMBER_COPIES);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_NUMBER_COPIES_KEY);
	};
    };

object
    page_range_from_label:	XmLabel
    {
	arguments
	{
	    arguments cs_field_label_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmLabel number_copies_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel number_copies_label;
	    XmNtopOffset 		= k_pw_cs_delta_y + k_pw_label_cs_adjust_y;
	    
	    XmNlabelString 		= page_range_from_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PAGE_RANGE_FROM_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PAGE_RANGE_FROM_KEY);
	};
    };

object
    page_range_from_field   :	DXmCSText
    {
	arguments
	{
	    arguments 			cs_field_args;
	    arguments 			page_range_cs_field_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;	
	    XmNleftWidget 		= DXmCSText number_copies_field;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= DXmCSText number_copies_field;
	    XmNtopOffset 		= k_pw_label_cs_adjust_y - 2;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PAGE_RANGE_FROM);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PAGE_RANGE_FROM_KEY);
	};
    };

object
    page_range_to_label	:   XmLabel
    {
	arguments
	{
	    arguments 			cs_field_label_args;    

	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= DXmCSText page_range_from_field;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget 		= DXmCSText page_range_from_field;
	    XmNtopOffset 		= k_pw_label_cs_adjust_y;
	    
	    XmNlabelString 		= page_range_to_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PAGE_RANGE_TO_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PAGE_RANGE_TO_KEY);
	};
    };

object
    page_range_to_field	:   DXmCSText
    {
	arguments
	{
	    arguments 			cs_field_args;
	    arguments 			page_range_cs_field_args;

	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= XmLabel page_range_to_label;
	    XmNrightAttachment 		= XmATTACH_FORM;
	    XmNrightOffset 		= k_pw_little_form_margin_hei;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget 		= DXmCSText page_range_from_field;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PAGE_RANGE_TO);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PAGE_RANGE_TO_KEY);
	};
    };

object
    orientation_label : XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmForm top_primary_label_form;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmForm top_primary_label_form;
	    XmNtopOffset 		= k_pw_cs_delta_y + k_pw_label_cs_adjust_y;
	    XmNbottomAttachment 	= XmATTACH_FORM;

	    XmNlabelString 		= orientation_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_ORIENTATION_LABEL);
	    XmNhelpCallback   		= procedure pw_help_proc(K_PW_ORIENTATION_KEY);
	};
    };

object
    orientation_radio : XmRadioBox
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= XmLabel orientation_label;
	    XmNrightAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget		= XmLabel orientation_label;
	    XmNbottomAttachment 	= XmATTACH_FORM;

	    XmNorientation 		= XmHORIZONTAL;
	    XmNpacking 			= XmPACK_TIGHT;
	    XmNradioAlwaysOne 		= true;

	    XmNisHomogeneous		= false;
	};
	controls
	{
	    XmToggleButton 		default_orientation;
	    XmToggleButton 		vertical_orientation;
	    XmToggleButton 		horizontal_orientation;
	};
	callbacks
	{
            XmNhelpCallback 		= procedure pw_help_proc (K_PW_ORIENTATION_KEY);
            MrmNcreateCallback 		= procedure pw_create_proc (K_PW_ORIENTATION);
	};
    };

object
    default_orientation : XmToggleButton widget
    {
	arguments
	{
	    XmNlabelString 		= default_label;
	    XmNset 			= on;
	};
	callbacks
	{
            XmNhelpCallback 		= procedure pw_help_proc (K_PW_ORIENTATION_KEY);
            XmNvalueChangedCallback 	= procedure pw_resource_activate_proc(K_PW_DEFAULT_ORIENTATION + 
									      (K_PW_ORIENTATION_MAP << 16));
            MrmNcreateCallback 		= procedure pw_create_proc (K_PW_DEFAULT_ORIENTATION);
	};
    };

object
    vertical_orientation : XmToggleButton widget
    {
        arguments
	{
!	    XmNlabelType		= XmPIXMAP;
!            XmNlabelPixmap 		= vertical_orient_icon;
!            XmNselectPixmap 		= vertical_orient_icon_hilite;
	    XmNlabelString 		= portrait_label;
	};
        callbacks
	{
            XmNhelpCallback 		= procedure pw_help_proc (K_PW_ORIENTATION_KEY);
            XmNvalueChangedCallback 	= procedure pw_resource_activate_proc (K_PW_PORTRAIT + 
									       (K_PW_ORIENTATION_MAP << 16));
            MrmNcreateCallback 		= procedure pw_create_proc (K_PW_PORTRAIT);
	};
    };

object
    horizontal_orientation : XmToggleButton widget
    {
        arguments
	{
!	    XmNlabelType		= XmPIXMAP;
!            XmNlabelPixmap 		= horizontal_orient_icon;
!            XmNselectPixmap 		= horizontal_orient_icon_hilite;
	    XmNlabelString 		= landscape_label;
	};
        callbacks
	{
            XmNhelpCallback 		= procedure pw_help_proc (K_PW_ORIENTATION_KEY);
            XmNvalueChangedCallback 	= procedure pw_resource_activate_proc (K_PW_LANDSCAPE + 
									       (K_PW_ORIENTATION_MAP << 16));
            MrmNcreateCallback 		= procedure pw_create_proc (K_PW_LANDSCAPE);
	};
    };

object
    middle_primary_info_form : XmForm
    {
    	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmForm top_primary_info_form;
	    XmNrightAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNrightWidget		= XmForm top_primary_info_form;
	    XmNtopAttachment		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmForm top_primary_info_form;
	    XmNtopOffset 		= k_pw_major_region_delta_y;

	    arguments			little_form_args;
        };
    	controls
	{
	    XmLabel 			print_format_box_label;
	    XmScrolledList 		print_format_box;
	    XmLabel 			printer_box_label;
	    XmScrolledList 		printer_box;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_MIDDLE_PRIMARY_INFO_FORM);
	};	    
    };

object
    print_format_box_label : XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNlabelString 		= print_format_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRINT_FORMAT_LABEL);
	    XmNhelpCallback   		= procedure pw_help_proc(K_PW_PRINT_FORMAT_KEY);
	};
    };

object
    print_format_box : XmScrolledList
    {
	arguments
	{
	    arguments scrolled_list_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmLabel print_format_box_label;
	    XmNleftOffset		= k_pw_listbox_adjust_x;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel print_format_box_label;
	    XmNrightAttachment 		= XmATTACH_POSITION;
	    XmNrightPosition 		= 48;
	    XmNbottomAttachment		= XmATTACH_FORM;
	    XmNbottomOffset		= k_pw_little_form_margin_hei + k_pw_listbox_adjust_y;

	    XmNselectionPolicy 		= XmBROWSE_SELECT;
	    XmNvisibleItemCount 	= k_pw_print_format_visible;
	};
	callbacks
	{
	    XmNhelpCallback   		= procedure pw_help_proc(K_PW_PRINT_FORMAT_KEY);
	    XmNbrowseSelectionCallback  = procedure pw_resource_activate_proc(K_PW_PRINT_FORMAT_CONTENTS_MAP << 16);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRINT_FORMAT);
	};
    };

object
    printer_box_label : XmLabel
    {
	arguments
	{
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget 		= XmLabel print_format_box_label;
	    XmNleftAttachment 		= XmATTACH_POSITION;
	    XmNleftPosition 		= 50;

	    XmNlabelString 		= printer_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRINTER_LABEL);
	    XmNhelpCallback   		= procedure pw_help_proc(K_PW_PRINTER_KEY);
	};
    };

object
    printer_box : XmScrolledList
    {
	arguments
	{
	    arguments 			scrolled_list_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmLabel printer_box_label;
	    XmNleftOffset		= k_pw_listbox_adjust_x;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget	 	= XmLabel printer_box_label;
	    XmNrightAttachment 		= XmATTACH_FORM;
	    XmNrightOffset		= k_pw_little_form_margin_wid + k_pw_listbox_adjust_x;
	    XmNbottomAttachment		= XmATTACH_FORM;
	    XmNbottomOffset		= k_pw_little_form_margin_hei + k_pw_listbox_adjust_y;

	    XmNselectionPolicy 		= XmBROWSE_SELECT;
	    XmNvisibleItemCount 	= k_pw_print_format_visible;
	};
	callbacks
	{
	    XmNbrowseSelectionCallback  = procedure pw_resource_activate_proc(K_PW_PRINTER_CONTENTS_MAP << 16);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRINTER);
	    XmNhelpCallback   		= procedure pw_help_proc(K_PW_PRINTER_KEY);
	};
    };

object
    bottom_primary_info_form : XmForm
    {
    	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmForm top_primary_info_form;
	    XmNrightAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNrightWidget		= XmForm top_primary_info_form;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmForm middle_primary_info_form;
	    XmNtopOffset		= k_pw_major_region_delta_y;

	    arguments			little_form_args;
        };
    	controls
	{
	    XmLabel 			print_after_label;
	    DXmCSText 			print_after_field;
	    XmToggleButton 		delete_file_toggle;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_BOTTOM_PRIMARY_INFO_FORM);
	};	    
    };


object
    print_after_label	:   XmLabel
    {
	arguments
	{
	    arguments 			cs_field_label_args;    

	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;
	    XmNtopOffset 		= k_pw_label_cs_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= print_after_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRINT_AFTER_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PRINT_AFTER_KEY);
	};
    };

object
    print_after_field	:   DXmCSText
    {
	arguments
	{
	    arguments cs_field_args;

	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= XmLabel print_after_label;
	    XmNrightAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopOffset 		= -k_pw_label_cs_adjust_y;
	    XmNtopWidget 		= XmLabel print_after_label;
	    XmNbottomOffset 		= k_pw_little_form_margin_wid;

	    XmNvalue 			= now_string;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRINT_AFTER);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PRINT_AFTER_KEY);
	};
    };

object
    delete_file_toggle	:   XmToggleButton
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmLabel print_after_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= DXmCSText print_after_field;
	    XmNtopOffset 		= k_pw_cs_delta_y;
	    XmNbottomAttachment 	= XmATTACH_FORM;
	    XmNbottomOffset 		= k_pw_little_form_margin_wid;

	    XmNlabelString 		= delete_file_toggle_label;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_DELETE_FILE_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_DELETE_FILE);
	    XmNvalueChangedCallback 	= procedure pw_resource_activate_proc(K_PW_DELETE_FILE_MAP << 16);
	};
    };

object
    OK_button : XmPushButton
    {
	arguments
	{
	    arguments push_button_args;

	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= XmForm top_primary_info_form;
	    XmNleftOffset 		= k_pw_major_region_delta_x;
	    XmNrightAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment		= XmATTACH_FORM;
	    XmNtopOffset		= k_pw_major_region_delta_y;

	    XmNlabelString 		= OK_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_OK);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_OK_KEY);
	    XmNactivateCallback 	= procedure pw_activate_proc (K_PW_OK);
	};
    };	

object
    primary_cancel_button : XmPushButton
    {
	arguments 
	{
	    arguments 			push_button_args; 

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmPushButton OK_button;
            XmNrightAttachment          = XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmPushButton OK_button;
	    XmNtopOffset 		= k_pw_push_button_delta_y;

	    XmNlabelString 		= cancel_label;
	};
	callbacks 
	{
	    XmNhelpCallback   		= procedure pw_help_proc(K_PW_CANCEL_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_CANCEL);
	    XmNactivateCallback 	= procedure pw_activate_proc (K_PW_CANCEL); 
	};
    };	

object
    options_button : XmPushButton
    {
	arguments 
	{
            XmNmarginWidth = 15;
	    arguments 			push_button_args; 

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmPushButton primary_cancel_button;
            XmNrightAttachment          = XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmPushButton primary_cancel_button;
	    XmNtopOffset 		= k_pw_push_button_delta_y;

	    XmNlabelString 		= options_label;
	};
	callbacks 
	{
	    XmNhelpCallback   		= procedure pw_help_proc(K_PW_OPTIONS_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_OPTIONS);
	    XmNactivateCallback 	= procedure pw_activate_proc (K_PW_OPTIONS); };
    	};	

object
    help_button : XmPushButton
    {
	arguments
	{
	    arguments 			push_button_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftOffset 		= 0;
	    XmNleftWidget 		= XmPushButton options_button;
            XmNrightAttachment          = XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopOffset 		= k_pw_push_button_delta_y;
	    XmNtopWidget 		= XmPushButton options_button;

	    XmNlabelString 		= help_label;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PRIMARY_BOX_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_HELP);
	    XmNactivateCallback 	= procedure pw_help_proc(K_PW_PRIMARY_BOX_KEY);
	};
    };	


!********************************************************************************
!*										*
!* 2ndary box									*
!*										*
!********************************************************************************
object
    pw_2ndary_box : XmFormDialog 
    {
	arguments 
        {
	    XmNautoUnmanage		= false;
	    XmNmarginHeight		= 0;
	    XmNmarginWidth		= 0;
	    XmNallowOverlap		= false;
	    XmNnoResize 		= true;
	    XmNdialogTitle 		= k_pw_print_options;
	    XmNborderWidth		= 0;
	};
	controls 
        {
	    XmScrolledWindow		pw_2ndary_window;
	};
	callbacks
	{
	    XmNhelpCallback     	= procedure pw_help_proc(K_PW_2NDARY_BOX_KEY);
	    MrmNcreateCallback   	= procedure pw_create_proc(K_PW_2NDARY_BOX);
	};	    
    };

!width and height is adjusted at runtime
object
    pw_2ndary_window : XmScrolledWindow
    {
	arguments 
        {
	    XmNborderWidth		= 0;
	    XmNscrollBarDisplayPolicy	= XmAS_NEEDED;
	    XmNscrollingPolicy		= XmAUTOMATIC;
	    XmNscrolledWindowMarginHeight = 0;
	    XmNscrolledWindowMarginWidth = 0;
	    XmNspacing			= 0;
	    XmNtopAttachment		= XmATTACH_FORM;
	    XmNleftAttachment		= XmATTACH_FORM;
	    XmNrightAttachment		= XmATTACH_FORM;
	    XmNbottomAttachment		= XmATTACH_FORM;
	};
	controls 
        {
	    XmForm pw_2ndary_form;
	};
	callbacks
	{
	    XmNhelpCallback     	= procedure pw_help_proc(K_PW_2NDARY_BOX_KEY);
	    MrmNcreateCallback   	= procedure pw_create_proc(K_PW_2NDARY_WINDOW);
	};	    
    };

object
    pw_2ndary_form: XmForm
    {
        arguments
        {
	    XmNnavigationType		= XmSTICKY_TAB_GROUP;
	    XmNborderWidth		= 0;
	    XmNdefaultButton 		= XmPushButton secondary_OK_button;
	    XmNcancelButton 		= XmPushButton secondary_cancel_button;
	    XmNallowOverlap		= false;
        };
    	controls
	{
            XmForm                      pw_2ndary_info_form;

	    XmPushButton 		secondary_OK_button;
	    XmPushButton 		secondary_cancel_button;
	    XmPushButton 		secondary_help_button;
        };
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_2NDARY_BOX_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_2NDARY_FORM);
	};
    };

object
    pw_2ndary_info_form: XmForm 
    {
        arguments 
	{
            XmNmarginHeight 		= k_pw_2ndary_box_margin_hei;
            XmNmarginWidth 		= k_pw_2ndary_box_margin_wid;
        };
        controls 
	{
            XmLabel 			virtual_page_label;
            XmForm  			virtual_page_box;
            XmLabel 			physical_page_label;
            XmForm  			physical_page_box;
            XmLabel 			page_layout_label;
            XmForm  			page_layout_box;
            XmLabel 			job_parameters_label;
            XmForm  			job_parameters_box;
        };
    };

object
    virtual_page_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;
	    XmNtopOffset		= k_pw_little_form_margin_wid;

	    XmNlabelString 		= virtual_page;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_VIRTUAL_PAGE_LABEL);
	};
    };

object
    virtual_page_box : XmForm
    {
    	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNrightAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
            XmNtopWidget		= XmLabel virtual_page_label;

	    arguments			little_form_args;
        };
    	controls
	{
	    XmForm			virtual_page_label_form;

	    XmOptionMenu 		page_size_option;
	    XmOptionMenu 		sides_option;
	    DXmCSText 			number_up_field;
	    DXmCSText 			sheet_count_field;
	    XmToggleButton 		header_toggle;
	    XmToggleButton 		auto_pagination_toggle;
	    XmToggleButton 		double_spacing_toggle;
	    XmToggleButton		pass_all_toggle;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_VIRTUAL_PAGE_BOX);
	};	    
    };

object
    virtual_page_label_form : XmForm 
    {
        arguments 
	{
            XmNleftAttachment 		= XmATTACH_FORM;
            XmNtopAttachment  		= XmATTACH_FORM;
	    XmNbottomAttachment		= XmATTACH_FORM;
	    XmNbottomOffset		= k_pw_little_form_margin_hei;
        };
        controls 
	{
            XmLabel 			page_size_label;
            XmLabel 			sides_label;
            XmLabel 			number_up_label;
            XmLabel 			sheet_count_label;
        };
    };

object
    page_size_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNlabelString 		= page_size_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_PAGE_SIZE_LABEL);
	};
    };

object
    sides_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmLabel page_size_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel page_size_label;
	    XmNtopOffset 		= k_pw_label_option_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= sides_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_SIDES_LABEL);
	};
    };

object
    number_up_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmLabel page_size_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel sides_label;
	    XmNtopOffset 		= k_pw_label_option_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= number_up_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_NUMBER_UP_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_NUMBER_UP_KEY);
	};
    };

object
    sheet_count_label	:   XmLabel
    {
	arguments
	{
	    arguments 			numeric_cs_field_label_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmLabel page_size_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel number_up_label;
	    XmNtopOffset 		= k_pw_label_option_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= sheet_count_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_SHEET_COUNT_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_SHEET_COUNT_KEY);
	};
    };

object
    page_size_option	:   XmOptionMenu
    {
	arguments
	{
	    XmNleftAttachment		= XmATTACH_WIDGET;
	    XmNleftWidget		= XmForm virtual_page_label_form;
	    XmNtopAttachment		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget		= XmForm virtual_page_label_form;
	};
	controls
	{
	    XmPulldownMenu  		page_size_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PAGE_SIZE_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PAGE_SIZE);
	};
    };

object
    page_size_option_pulldown	:   XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PAGE_SIZE_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_PAGE_SIZE_PULLDOWN_MAP);
	};
    };

object
    sides_option	:   XmOptionMenu
    {
	arguments
	{
	    arguments all_optionmenu_args;

	    XmNleftAttachment		= XmATTACH_WIDGET;
	    XmNleftWidget		= XmForm virtual_page_label_form;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmOptionMenu page_size_option;
	};
	controls
	{
	    XmPulldownMenu  		sides_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_SIDES_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_SIDES);
	};
    };

object
    sides_option_pulldown   :	XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_SIDES_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_SIDES_PULLDOWN_MAP);
	};
    };

object
    number_up_field	:   DXmCSText
    {
	arguments
	{
	    arguments 			cs_field_args;
	    arguments 			numeric_cs_field_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmOptionMenu sides_option;
	    XmNleftOffset		= k_pw_option_adjust_delta_x;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmOptionMenu sides_option;

	    XmNvalue 			= null_string;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_NUMBER_UP);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_NUMBER_UP_KEY);
	};
    };

object
    sheet_count_field	:   DXmCSText
    {
	arguments
	{
	    arguments 			cs_field_args;
	    arguments 			numeric_cs_field_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= DXmCSText number_up_field;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= DXmCSText number_up_field;
	    XmNbottomAttachment		= XmATTACH_FORM;
	    XmNbottomOffset		= k_pw_little_form_margin_hei;
	    XmNvalue 			= null_string;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_SHEET_COUNT);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_SHEET_COUNT_KEY);
	};
    };

object
    pass_all_toggle	:   XmToggleButton
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= XmOptionMenu sides_option;
	    XmNleftOffset		= k_pw_little_form_margin_wid;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNlabelString 		= pass_all_option_label;
	    XmNset 			= false;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PASS_ALL_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PASS_ALL);
	    XmNvalueChangedCallback 	= procedure pw_resource_activate_proc(K_PW_PASS_ALL_MAP << 16);
	};
    };

object
    header_toggle	:   XmToggleButton
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmToggleButton pass_all_toggle;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmToggleButton pass_all_toggle;

	    XmNlabelString 		= header_toggle_label;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_HEADER_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_HEADER);
	    XmNvalueChangedCallback 	= procedure pw_resource_activate_proc(K_PW_HEADER_MAP << 16);
	};
    };

object
    double_spacing_toggle   :	XmToggleButton
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmToggleButton pass_all_toggle;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmToggleButton header_toggle;

	    XmNlabelString 		= double_spacing_toggle_label;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_DOUBLE_SPACING_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_DOUBLE_SPACING);
	    XmNvalueChangedCallback 	= procedure pw_resource_activate_proc(K_PW_DOUBLE_SPACING_MAP << 16);
	};
    };

object
    auto_pagination_toggle	:   XmToggleButton
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmToggleButton pass_all_toggle;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmToggleButton double_spacing_toggle;

	    XmNlabelString 		= auto_pagination_toggle_label;
	    XmNset 			= false;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_AUTO_PAGINATION_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_AUTOMATIC_PAGINATION);
	    XmNvalueChangedCallback 	= procedure pw_resource_activate_proc(K_PW_AUTOMATIC_PAGINATION_MAP << 16);
	};
    };

object
    physical_page_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmForm virtual_page_box;
	    XmNtopOffset		= k_pw_little_form_margin_wid;

	    XmNlabelString 		= physical_page;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_PHYSICAL_PAGE_LABEL);
	};
    };

object
    physical_page_box : XmForm
    {
    	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNrightAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmLabel physical_page_label;

	    arguments			little_form_args;
        };
    	controls
	{
	    XmForm 			pysical_page_left_label_form;
	    XmForm 			pysical_page_left_option_form;
	    XmForm 			pysical_page_right_label_form;
	    XmForm 			pysical_page_right_option_form;

	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_PHYSICAL_PAGE_BOX);
	};	    
    };

object
    pysical_page_left_label_form : XmForm 
    {
        arguments 
	{
            XmNleftAttachment 		= XmATTACH_FORM;
            XmNtopAttachment  		= XmATTACH_FORM;
	    XmNbottomAttachment 	= XmATTACH_FORM;
	    XmNbottomOffset 		= k_pw_little_form_margin_hei;
        };
        controls 
	{
            XmLabel 			sheet_size_label;
            XmLabel 			input_tray_label;
            XmLabel 			output_tray_label;
	};
    };

object
    pysical_page_left_option_form : XmForm 
    {
        arguments 
	{
            XmNleftAttachment 		= XmATTACH_WIDGET;
            XmNleftWidget 		= XmForm pysical_page_left_label_form;
            XmNtopAttachment  		= XmATTACH_FORM;
	    XmNbottomAttachment		= XmATTACH_FORM;
	    XmNbottomOffset		= k_pw_little_form_margin_hei;
        };
        controls 
	{
            XmOptionMenu 		sheet_size_option;
            XmOptionMenu 		input_tray_option;
            XmOptionMenu 		output_tray_option;
        };
    };

object
    pysical_page_right_label_form : XmForm 
    {
        arguments 
	{
            XmNleftAttachment 		= XmATTACH_WIDGET;
            XmNleftWidget 		= XmForm pysical_page_left_option_form;
            XmNtopAttachment  		= XmATTACH_FORM;
        };
        controls 
	{
            XmLabel 			file_start_label;
            XmLabel 			file_end_label;
            XmLabel 			file_burst_label;
        };
    };

object
    pysical_page_right_option_form : XmForm 
    {
        arguments 
	{
            XmNleftAttachment 		= XmATTACH_WIDGET;
            XmNleftWidget 		= XmForm pysical_page_right_label_form;
	    XmNrightAttachment 		= XmATTACH_FORM;
	    XmNrightOffset 		= k_pw_little_form_margin_wid;
            XmNtopAttachment  		= XmATTACH_FORM;
        };
        controls 
	{
            XmOptionMenu 		file_start_option;
            XmOptionMenu 		file_end_option;
            XmOptionMenu 		file_burst_option;
        };
    };

object
    sheet_size_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNlabelString 		= sheet_size_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_SHEET_SIZE_LABEL);
	};
    };

object
    input_tray_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmLabel sheet_size_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmLabel sheet_size_label;
	    XmNtopOffset 		= k_pw_label_option_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= input_tray_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_INPUT_TRAY_LABEL);
	};
    };

object
    output_tray_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmLabel sheet_size_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmLabel input_tray_label;
	    XmNtopOffset 		= k_pw_label_option_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= output_tray_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_OUTPUT_TRAY_LABEL);
	};
    };

object
    sheet_size_option	:   XmOptionMenu
    {
	arguments
	{
	    arguments 			secondary_optionmenu_args;
	    arguments 			all_optionmenu_args;

	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;
	};
	controls
	{
	    XmPulldownMenu  		sheet_size_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_SHEET_SIZE_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_SHEET_SIZE);
	};
    };

object
    sheet_size_option_pulldown	:   XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_SHEET_SIZE_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_SHEET_SIZE_PULLDOWN_MAP);
	};
    };

object
    input_tray_option	:   XmOptionMenu
    {
	arguments
	{
	    arguments 			all_optionmenu_args;

	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmOptionMenu sheet_size_option;
	};
	controls
	{
	    XmPulldownMenu  		input_tray_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_INPUT_TRAY_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_INPUT_TRAY);
	};
    };

object
    input_tray_option_pulldown	:   XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_INPUT_TRAY_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_INPUT_TRAY_PULLDOWN_MAP);
	};
    };

object
    output_tray_option	:   XmOptionMenu
    {
	arguments
	{
	    arguments 			all_optionmenu_args;

	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmOptionMenu input_tray_option;
	};
	controls
	{
	    XmPulldownMenu  		output_tray_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_OUTPUT_TRAY_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_OUTPUT_TRAY);
	};
    };

object
    output_tray_option_pulldown	    :	XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_OUTPUT_TRAY_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_OUTPUT_TRAY_PULLDOWN_MAP);
	};
    };

object
    file_start_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNlabelString 		= file_start_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_FILE_START_SHEET_LABEL);
	};
    };

object
    file_end_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmLabel file_start_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmLabel file_start_label;
	    XmNtopOffset 		= k_pw_label_option_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= file_end_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_FILE_END_SHEET_LABEL);
	};
    };

object
    file_burst_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmLabel file_start_label;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmLabel file_end_label;
	    XmNtopOffset 		= k_pw_label_option_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= file_burst_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_FILE_BURST_SHEET_LABEL);
	};
    };

object
    file_start_option	:   XmOptionMenu
    {
	arguments
	{
	    arguments all_optionmenu_args;

	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;
	};
	controls
	{
	    XmPulldownMenu  		file_start_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_FILE_START_SHEET_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_FILE_START_SHEET);
	};
    };

object
    file_start_option_pulldown	:   XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_FILE_START_SHEET_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_FILE_START_SHEET_PULLDOWN_);
	};
    };

object
    file_end_option	:   XmOptionMenu
    {
	arguments
	{
	    arguments all_optionmenu_args;

	    XmNleftAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmOptionMenu file_start_option;
	};
	controls
	{
	    XmPulldownMenu  		file_end_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_FILE_END_SHEET_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_FILE_END_SHEET);
	};
    };

object
    file_end_option_pulldown	:   XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_FILE_END_SHEET_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_FILE_END_SHEET_PULLDOWN_MA);
	};
    };

object
    file_burst_option	:   XmOptionMenu
    {
	arguments
	{
	    arguments all_optionmenu_args;

	    XmNleftAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmOptionMenu file_end_option;
	};
	controls
	{
	    XmPulldownMenu  		file_burst_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_FILE_BURST_SHEET_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_FILE_BURST_SHEET);
	};
    };

object
    file_burst_option_pulldown	:   XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_FILE_BURST_SHEET_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_FILE_BURST_SHEET_PULLDOWN_);
	};
    };

object
   page_layout_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmForm physical_page_box;
	    XmNtopOffset		= k_pw_little_form_margin_wid;

	    XmNlabelString 		= page_layout;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_PAGE_LAYOUT_LABEL);
	};
    };

object
    page_layout_box : XmForm
    {
    	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmForm virtual_page_box;
	    XmNrightAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmLabel page_layout_label;

	    arguments			little_form_args;
        };
    	controls
	{
	    DXmCSText 			layup_definition_field;
	    XmLabel 			layup_definition_label;
	    DXmCSText 			job_setup_field;
	    XmLabel 			job_setup_label;
	    XmLabel 			printer_form_box_label;
	    XmScrolledList 		printer_form_box;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_PAGE_LAYOUT_BOX);
	};	    
    };


object
    layup_definition_field  :	DXmCSText
    {
	arguments
	{
	    arguments cs_field_args;

	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNrightAttachment		= XmATTACH_POSITION;
	    XmNrightPosition		= k_pw_left_col_right_position;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNmaxLength		= k_pw_max_length_filename;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_LAYUP_DEFINITION);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_LAYUP_DEFINITION_KEY);
	};
    };

object
    layup_definition_label:	XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= DXmCSText layup_definition_field;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= DXmCSText layup_definition_field;

	    XmNlabelString 		= layup_definition_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_LAYUP_DEFINITION_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_LAYUP_DEFINITION_KEY);
	};
    };

object
    job_setup_field	:   DXmCSText
    {
	arguments
	{
	    arguments cs_field_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget	 	= DXmCSText layup_definition_field;
	    XmNrightAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNrightWidget		= DXmCSText layup_definition_field;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel layup_definition_label;
	    XmNtopOffset 		= k_pw_cs_delta_y;

	    XmNmaxLength		= k_pw_max_length_filename;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_SETUP);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_SETUP_KEY);
	};
    };

object
    job_setup_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= DXmCSText job_setup_field;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= DXmCSText job_setup_field;

	    XmNlabelString 		= job_setup_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_SETUP_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_SETUP_KEY);
	};
    };

object
    printer_form_box_label : XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_POSITION;
	    XmNleftPosition		= k_pw_right_col_left_position;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNlabelString 		= printer_form_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRINTER_FORM_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PRINTER_FORM_KEY);
	};
    };

object
    printer_form_box	:   XmScrolledList
    {
	arguments
	{
	    arguments 			scrolled_list_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmLabel printer_form_box_label;
	    XmNrightAttachment 		= XmATTACH_FORM;
	    XmNrightOffset		= k_pw_little_form_margin_wid + k_pw_listbox_adjust_x;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel printer_form_box_label;
	    XmNbottomAttachment		= XmATTACH_FORM;
	    XmNbottomOffset		= k_pw_little_form_margin_hei + k_pw_listbox_adjust_y;

            XmNselectionPolicy 		= XmSINGLE_SELECT;
	    XmNvisibleItemCount 	= k_pw_printer_form_visible;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PRINTER_FORM_KEY);
	    XmNsingleSelectionCallback  = procedure pw_resource_activate_proc(K_PW_PRINTER_FORM_CONTENTS_MAP << 16);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRINTER_FORM);
	};
    };

object
    job_parameters_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmForm page_layout_box;
	    XmNtopOffset		= k_pw_little_form_margin_wid;

	    XmNlabelString 		= job_parameters;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_JOB_PARAMETERS_LABEL);
	};
    };

object
    job_parameters_box : XmForm
    {
    	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNrightAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmLabel job_parameters_label;
	    XmNbottomAttachment		= XmATTACH_FORM;

	    arguments			little_form_args;
        };
    	controls
	{
	    XmToggleButton 		notify_toggle;
	    XmLabel			message_log_label;
	    XmOptionMenu 		message_log_option;
	    DXmCSText 			start_sheet_cmt_field;
	    XmLabel 			start_sheet_cmt_label;
	    DXmCSText 			job_name_field;
	    XmLabel	 		job_name_label;
	    DXmCSText 			operator_message_field;
	    XmLabel 			operator_message_label;
            XmForm                      job_priority_box;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_JOB_PARAMETERS_BOX);
	};	    
    };

object
    job_priority_box : XmForm 
    {
        arguments 
	{
	    XmNrightAttachment 		= XmATTACH_FORM;
	    XmNrightOffset     		= k_pw_little_form_margin_wid;
	    XmNtopAttachment   		= XmATTACH_FORM;
	    XmNtopOffset       		= k_pw_little_form_margin_hei;
        };
        controls 
	{
            XmToggleButton 		hold_job_toggle;
            XmLabel        		priority_label;
            DXmCSText      		priority_field;
        };
    };

object
    notify_toggle	:   XmToggleButton
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNlabelString 		= notify_toggle_label;
	    XmNset 			= true;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_NOTIFY_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_NOTIFY);
	    XmNvalueChangedCallback 	= procedure pw_resource_activate_proc(K_PW_NOTIFY_MAP << 16);
	};
    };

object
    message_log_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmToggleButton notify_toggle;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget		= XmToggleButton notify_toggle;
	    XmNtopOffset 		= k_pw_little_form_margin_hei;

	    XmNlabelString 		= message_log_option_label;
	};
	callbacks
	{
	    MrmNcreateCallback  	= procedure pw_create_proc(K_PW_MESSAGE_LOG_LABEL);
	};
    };

object
    message_log_option	:   XmOptionMenu
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= XmLabel message_log_label;
	    XmNrightAttachment 		= XmATTACH_WIDGET;
	    XmNrightWidget 		= XmForm job_priority_box;
	    XmNrightOffset              = k_pw_major_region_delta_x;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget 		= XmLabel message_log_label;
	    XmNtopOffset 		= -(k_pw_optionmenu_delta_y + k_pw_label_option_adjust_y);
	};
	controls
	{
	    XmPulldownMenu  		message_log_option_pulldown;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_MESSAGE_LOG_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_MESSAGE_LOG);
	};
    };

object
    message_log_option_pulldown	    :	XmPulldownMenu
    {
	arguments
	{
	    arguments 			pulldown_menu_args;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_MESSAGE_LOG_KEY);
	    MrmNcreateCallback 		= procedure pw_pulldown_menu_create_proc(K_PW_MESSAGE_LOG_PULLDOWN_MAP);
	};
    };

object
    start_sheet_cmt_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmToggleButton notify_toggle;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmOptionMenu message_log_option;
	    XmNtopOffset		= k_pw_little_form_margin_hei;

	    XmNlabelString 		= start_sheet_cmt_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_START_SHEET_COMMENT_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_START_SHEET_COMMENT_KEY);
	};
    };

object
    job_name_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmToggleButton notify_toggle;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel start_sheet_cmt_label;
	    XmNtopOffset		= k_pw_label_cs_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= job_name_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_JOB_NAME_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_JOB_NAME_KEY);
	};
    };

object
    operator_message_label:	XmLabel
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmToggleButton notify_toggle;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmLabel job_name_label;
	    XmNtopOffset		= k_pw_label_cs_adjust_y + k_pw_little_form_margin_hei;

	    XmNlabelString 		= operator_message_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_OPERATOR_MESSAGE_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_OPERATOR_MESSAGE_KEY);
	};
    };

object
    start_sheet_cmt_field	:   DXmCSText
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget		= XmLabel start_sheet_cmt_label;
	    XmNrightAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget		= XmLabel start_sheet_cmt_label;
	    XmNtopOffset		= -k_pw_label_cs_adjust_y;

	    XmNmaxLength		= k_pw_max_length_message;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_START_SHEET_COMMENT);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_START_SHEET_COMMENT_KEY);
	};
    };

object
    job_name_field	:   DXmCSText
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget		= XmLabel start_sheet_cmt_label;
	    XmNrightAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget		= XmLabel job_name_label;
	    XmNtopOffset		= -k_pw_label_cs_adjust_y;

	    XmNmaxLength		= k_pw_max_length_job_name;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_JOB_NAME);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_JOB_NAME_KEY);
	};
    };

object
    operator_message_field  :	DXmCSText
    {
	arguments
	{
	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget		= XmLabel start_sheet_cmt_label;
	    XmNrightAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget		= XmLabel operator_message_label;
	    XmNtopOffset		= -k_pw_label_cs_adjust_y;
	    XmNbottomAttachment		= XmATTACH_FORM;
	    XmNbottomOffset		= k_pw_little_form_margin_hei;

	    XmNmaxLength		= k_pw_max_length_message;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_OPERATOR_MESSAGE);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_OPERATOR_MESSAGE_KEY);
	};
    };

object
    hold_job_toggle		:   XmToggleButton
    {
	arguments
	{
	    XmNleftAttachment		= XmATTACH_FORM;
	    XmNtopAttachment 		= XmATTACH_FORM;

	    XmNlabelString 		= hold_job_toggle_label;
	};
	callbacks
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_HOLD_JOB_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_HOLD_JOB);
	    XmNvalueChangedCallback 	= procedure pw_resource_activate_proc(K_PW_HOLD_JOB_MAP << 16);
	};
    };

object
    priority_label	:   XmLabel
    {
	arguments
	{
	    XmNleftAttachment		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget		= XmToggleButton hold_job_toggle;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopWidget 		= XmToggleButton hold_job_toggle;
	    XmNtopOffset		= k_pw_little_form_margin_hei;

	    XmNlabelString 		= priority_field_label;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRIORITY_LABEL);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PRIORITY_KEY);
	};
    };

object
    priority_field	:   DXmCSText
    {
	arguments
	{
	    arguments 			cs_field_args;
	    arguments 			numeric_cs_field_args;

	    XmNleftAttachment		= XmATTACH_WIDGET;
	    XmNleftWidget		= XmLabel priority_label;
	    XmNleftOffset 		= k_pw_major_region_delta_x;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget 		= XmLabel priority_label;
	    XmNtopOffset		= -k_pw_label_cs_adjust_y;

	    XmNvalue 			= null_string;
	};
	callbacks
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_PRIORITY);
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_PRIORITY_KEY);
	};
    };

object
    secondary_OK_button : XmPushButton
    {
	arguments 
	{
	    arguments 			push_button_args;

	    XmNleftAttachment 		= XmATTACH_WIDGET;
	    XmNleftWidget 		= XmForm pw_2ndary_info_form;
	    XmNrightAttachment 		= XmATTACH_FORM;	    
	    XmNrightOffset 		= k_pw_major_region_delta_x;
	    XmNtopAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNtopWidget 		= XmForm pw_2ndary_info_form;
	    XmNtopOffset		= k_pw_major_region_delta_y + 10;

	    XmNlabelString 		= OK_label;
	};
	callbacks 
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_2NDARY_OK_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_2NDARY_OK);
	    XmNactivateCallback 	= procedure pw_activate_proc (K_PW_2NDARY_OK); 
	};
    };	

object
    secondary_cancel_button : XmPushButton
    {
	arguments 
	{
            XmNmarginWidth = 25;
	    arguments 			push_button_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmPushButton secondary_OK_button;
            XmNrightAttachment          = XmATTACH_FORM;
	    XmNrightOffset 		= k_pw_major_region_delta_x;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopOffset 		= k_pw_push_button_delta_y;
	    XmNtopWidget 		= XmPushButton secondary_OK_button;

	    XmNlabelString 		= cancel_label;
	};
	callbacks 
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_2NDARY_CANCEL_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_2NDARY_CANCEL);
	    XmNactivateCallback 	= procedure pw_activate_proc (K_PW_2NDARY_CANCEL); 
	};
    };	

object
    secondary_help_button : XmPushButton
    {
	arguments 
	{
	    arguments 			push_button_args;

	    XmNleftAttachment 		= XmATTACH_OPPOSITE_WIDGET;
	    XmNleftWidget 		= XmPushButton secondary_cancel_button;
            XmNrightAttachment          = XmATTACH_FORM;
	    XmNrightOffset 		= k_pw_major_region_delta_x;
	    XmNtopAttachment 		= XmATTACH_WIDGET;
	    XmNtopOffset 		= k_pw_push_button_delta_y;
	    XmNtopWidget 		= XmPushButton secondary_cancel_button;

	    XmNlabelString 		= help_label;
	};
	callbacks 
	{
	    XmNhelpCallback 		= procedure pw_help_proc(K_PW_2NDARY_BOX_KEY);
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_2NDARY_HELP);
	    XmNactivateCallback 	= procedure pw_help_proc(K_PW_2NDARY_BOX_KEY);
	};
    };	

!********************************************************************************
!*										*
!* Message dialog box								*
!*										*
!********************************************************************************
object
    pw_message : XmErrorDialog
    {
	arguments 
	{
	    XmNdefaultPosition 		= true;
	    XmNdialogTitle 		= message_box_title;
	    XmNmessageString 		= message_box_label; 
	    XmNnoResize 		= true;
	}; 
	callbacks 
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_MSG);
	};
    };	

!********************************************************************************
!*										*
!* The help box.								*
!*										*
!********************************************************************************
object
    pw_help_box : DXmHelp
    {
	arguments
	{
	    DXmNoverviewTopic 		= help_overview_topic;
	    DXmNapplicationName 	= help_application_name;
	};
	callbacks 
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_HELP_WIDGET);
	};
    }; ! DXmHelp

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!  The Drop Help Message Box
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
object 
    pw_drop_help_box : XmMessageDialog
    {
	arguments
	{
	    XmNdialogStyle              = XmDIALOG_FULL_APPLICATION_MODAL;
	    XmNtitle                    = drop_help_dialog_title;
            XmNmessageString            = drop_help_message_string;
	};
	callbacks 
	{
	    MrmNcreateCallback 		= procedure pw_create_proc(K_PW_DROP_HELP);
	};
    }; 

end module;
