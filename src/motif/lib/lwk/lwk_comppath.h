/*
 * *****************************************************************
 * *                                                               *
 * *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
 * *                                                               *
 * *   All Rights Reserved.  Unpublished rights  reserved  under   *
 * *   the copyright laws of the United States.                    *
 * *                                                               *
 * *   The software contained on this media  is  proprietary  to   *
 * *   and  embodies  the  confidential  technology  of  Digital   *
 * *   Equipment Corporation.  Possession, use,  duplication  or   *
 * *   dissemination of the software and media is authorized only  *
 * *   pursuant to a valid written license from Digital Equipment  *
 * *   Corporation.                                                *
 * *                                                               *
 * *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
 * *   by the U.S. Government is subject to restrictions  as  set  *
 * *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
 * *   or  in  FAR 52.227-19, as applicable.                       *
 * *                                                               *
 * *****************************************************************
 */
/*
 * HISTORY
 */
/*
** Generated by ODL Version X0.1 on Tue Jul 14 18:32:31 1992
*/

/*
** COPYRIGHT (c) 1989 BY
** DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
** ALL RIGHTS RESERVED.
**
** THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
** ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
** INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
** COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
** OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
** TRANSFERRED.
**
** THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
** AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
** CORPORATION.
**
** DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
** SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
*/

/*
** Private Type Definitions for the CompPath Object
*/

/*
** Abstract Type Definitions for subtypes of Object
*/

typedef _Object _List, _PtrTo _ListPtr;
typedef _Object _Set, _PtrTo _SetPtr;
typedef _Object _Property, _PtrTo _PropertyPtr;
typedef _Object _ObjectId, _PtrTo _ObjectIdPtr;
typedef _Object _ObjectDesc, _PtrTo _ObjectDescPtr;
typedef _Object _Ui, _PtrTo _UiPtr;
typedef _Object _DXmUi, _PtrTo _DXmUiPtr;
typedef _Object _DXmEnvState, _PtrTo _DXmEnvStatePtr;
typedef _Object _Persistent, _PtrTo _PersistentPtr;
typedef _Object _Surrogate, _PtrTo _SurrogatePtr;
typedef _Object _Link, _PtrTo _LinkPtr;
typedef _Object _Linknet, _PtrTo _LinknetPtr;
typedef _Object _CompLinknet, _PtrTo _CompLinknetPtr;
typedef _Object _Step, _PtrTo _StepPtr;
typedef _Object _Path, _PtrTo _PathPtr;
typedef _Object _Linkbase, _PtrTo _LinkbasePtr;

/*
** CompPath Instance Structure Definition
*/

typedef struct __CompPath {
        _Type type;
        _Linkbase linkbase;
        _Integer identifier;
        _DDIFString description;
        _DDIFString author;
        _Date creation_date;
        _Set_of(_DDIFString) keywords;
        _Set_of(_Property) properties;
        _StateFlags flags;
        _DDIFString name;
        _List_of(_ObjectDesc) paths;
    } _CompPathInstance, _PtrTo _CompPath, _PtrTo _PtrTo _CompPathPtr;

/*
** CompPath Property Name Table Index Definitions
*/

#define _NameIndex 0
#define _PathsIndex 1

/*
** CompPath Property Name Table Definition
*/

#define _CompPathPropertyNameTable \
    _PropertyNameTableEntry _Constant CompPathPropertyNameTable[] = { \
        {_P_Name, _NameIndex, _True}, \
        {_P_Paths, _PathsIndex, _True}, \
        {(_String) 0, 0, _False} \
    }

/*
** CompPath Property Accessor Definitions
*/

#define _Name_of(Obj) ((_CompPath) _Reference(Obj))->name
#define _Paths_of(Obj) ((_CompPath) _Reference(Obj))->paths

/*
** Include Generic Operation Support
*/

#include "lwk_operation_prototypes.h"

/*
** CompPath Method Declarations
*/

_DeclareFunction(void LwkOpObjIllOp, (_in _Object object));
_DeclareFunction(_CompPath LwkOpObjCopy, (_in _CompPath object, _in _Boolean aggreate));
_DeclareFunction(_CompPath LwkOpObjCreate, (_in _Type type));
_DeclareFunction(void LwkOpCPathDecode, (_inout _CompPath persistent,
    _in _DDIShandle handle, _in _Boolean keys_only,
    _inout _SetPtr properties));
_DeclareFunction(void LwkOpCPathDrop, (_inout _CompPath composite_path));
_DeclareFunction(void LwkOpCPathEncode, (_in _CompPath persistent,
    _in _Boolean aggregate, _in _DDIShandle handle));
_DeclareFunction(_Set LwkOpCPathEnumProps, (_in _CompPath object));
_DeclareFunction(_Integer LwkOpPersistExport, (_in _CompPath persistent,
    _in _Boolean aggregate, _out _VaryingStringPtr encoding));
_DeclareFunction(void LwkOpObjExpunge, (_inout _CompPath object));
_DeclareFunction(void LwkOpCPathFree, (_inout _CompPath object));
_DeclareFunction(_Domain LwkOpObjGetDomain, (_in _CompPath object));
_DeclareFunction(_ObjectDesc LwkOpPersistGetObjectDesc, (
    _in _CompPath persistent));
_DeclareFunction(_ObjectId LwkOpPersistGetObjectId, (
    _in _CompPath persistent));
_DeclareFunction(void LwkOpCPathGetValue, (_in _CompPath object,
    _in _String property_name, _in _Domain domain,
    _in _AnyPtr value));
_DeclareFunction(_Domain LwkOpCPathGetValueDomain, (_in _CompPath object,
    _in _String property_name));
_DeclareFunction(_List LwkOpCPathGetValueList, (_in _CompPath object,
    _in _String property_name));
_DeclareFunction(_CompPath LwkOpPersistImport, (_in _Type type,
    _in _VaryingString encoding));
_DeclareFunction(void LwkOpPersistImportKeyProperties, (
    _in _Type type, _in _VaryingString encoding,
    _inout _SetPtr properties));
_DeclareFunction(void LwkOpCPathInitialize, (_inout _CompPath object,
    _in _CompPath proto_object, _Boolean aggregate));
_DeclareFunction(_Boolean LwkOpCPathIsMultiValued, (_in _CompPath object,
    _in _String property_name));
_DeclareFunction(_Boolean LwkOpObjIsType, (_in _CompPath object,
    _in _Type type));
_DeclareFunction(_Termination LwkOpCPathIterate, (_in _CompPath composite_path,
    _in _Domain domain, _in _Closure closure,
    _in _Callback routine));
_DeclareFunction(_Termination LwkOpCPathQuery, (_in _CompPath composite_path,
    _in _Domain domain, _in _QueryExpression expression,
    _in _Closure closure, _in _Callback routine));
_DeclareFunction(_Boolean LwkOpPersistSetState, (_inout _CompPath persistent,
    _in _PersistentState state, _in _StateOperation operation));
_DeclareFunction(void LwkOpCPathSetValue, (_inout _CompPath object,
    _in _String property_name, _in _Domain domain,
    _in _AnyPtr value, _in _SetFlag flag));
_DeclareFunction(void LwkOpCPathSetValueList, (_inout _CompPath object,
    _in _String property_name, _in _List_of(_Domain) value_list,
    _in _SetFlag flag));
_DeclareFunction(void LwkOpCPathStore, (_inout _CompPath composite_path,
    _inout _Linkbase linkbase));

/*
** CompPath Type Instance Definition
*/

#define _CompPathTypeInstance \
    _TypeInstance _Constant LWK__CompPathTypeInstance = { \
        &LWK__PersistentTypeInstance, \
        sizeof(_CompPathInstance), \
        { \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjCopy, \
        (_Method) LwkOpObjCreate, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpCPathDecode, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpCPathDrop, \
        (_Method) LwkOpCPathEncode, \
        (_Method) LwkOpCPathEnumProps, \
        (_Method) LwkOpPersistExport, \
        (_Method) LwkOpObjExpunge, \
        (_Method) LwkOpCPathFree, \
        (_Method) LwkOpObjGetDomain, \
        (_Method) LwkOpPersistGetObjectDesc, \
        (_Method) LwkOpPersistGetObjectId, \
        (_Method) LwkOpCPathGetValue, \
        (_Method) LwkOpCPathGetValueDomain, \
        (_Method) LwkOpCPathGetValueList, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpPersistImport, \
        (_Method) LwkOpPersistImportKeyProperties, \
        (_Method) LwkOpCPathInitialize, \
        (_Method) LwkOpCPathIsMultiValued, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIsType, \
        (_Method) LwkOpCPathIterate, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpCPathQuery, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpPersistSetState, \
        (_Method) LwkOpCPathSetValue, \
        (_Method) LwkOpCPathSetValueList, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpCPathStore, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp \
        } \
    }

#define _CompPathType \
    _Type _Constant LWK__CompPathType = &LWK__CompPathTypeInstance
