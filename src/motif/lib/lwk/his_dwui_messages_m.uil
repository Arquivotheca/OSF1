! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
!++
! COPYRIGHT (c) 1988, 1989, 1990, 1991 BY
! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
! ALL RIGHTS RESERVED.
!
! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
! ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
! INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
! COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
! OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
! TRANSFERRED.
!
! THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
! AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
! CORPORATION.
!
! DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
!--

!++
!
! Facility:
!   LinkWorks Services user Interface
!
! Abstract:
!   DECwindows LWK Messages
!
! Author:
!   Doug Rayner
!
! Creation Date:
!   13-Mar-1989
!
! Modification History:
!
!--

!++
! Beginning of I18N Translatable values for this Module
!--

!
! Labels for the Toggle/Push Buttons
!

value
    MessageAcknowledgeLabel :
	compound_string("OK");

value
    MessageWindowTitle :
	compound_string("LinkWorks: Message");
    WorkInProgessWindowTitle :
	compound_string("LinkWorks: Work-in-progress");
    WorkInProgressMessage : exported
	compound_string("Following Link to ");
!
!
! Status code to Message translations
!

!

value
    StsUnknown : exported
	compound_string("Unknown status");
    StsSuccess : exported
	compound_string("Success");
    StsFailure : exported
	compound_string("Failure");
    StsBadLogic : exported
	compound_string("Bad logic error");
    StsNotYetImplemented : exported
	compound_string("Function not yet implemented");
    StsAllocationError : exported
	compound_string("Memory allocation error");
    StsDeallocationError : exported
	compound_string("Memory deallocation error");
    StsInvalidObject : exported
	compound_string("An Operation was invoked on an invalid Object");
    StsInvalidArgument : exported
	compound_string("An Invalid argument was passed to an Operation");
    StsInvalidOperation : exported
	compound_string("An invalid Operation was invoked on an Object");
    StsNoSuchProperty : exported
	compound_string("This Object has no such Property");
    StsInvalidDomain : exported
	compound_string("Invalid Domain specified");
    StsListEmpty : exported
	compound_string("The List is empty");
    StsPropertyIsReadOnly : exported
	compound_string("That Property is read-only");
    StsDuplicateElement : exported
	compound_string("Attempt to add a duplicate element to a Set");
    StsNoSuchElement : exported
	compound_string("No such element in the List or Set");
    StsInvalidSetOpr : exported
	compound_string("Invalid SetValue operation");
    StsPropertyNotDeleted : exported
	compound_string("Base Properties may not be deleted");
    StsSingleValuedProperty : exported
	compound_string("That Property may not have multiple values");
    StsCanNotMoveSurrogate : exported
	compound_string("Can not remove Surrogate from its current Container");
    StsCanNotMoveConnection : exported
	compound_string("Can not remove Link from its current Linknet");
    StsCanNotMoveStep : exported
	compound_string("Can not remove Step from its current Path");
    StsCanNotDeleteSurrogate : exported
	compound_string("Can not delete a Surrogate which has InterLinks");
    StsInvalidDate : exported
	compound_string("Invalid Date value");
    StsInvalidDDIFString : exported
	compound_string("Invalid DDIF String value");
    StsInvalidString : exported
	compound_string("Invalid String value");
    StsDRMHierarchyOpenError : exported
	compound_string("Could not open Resource Manager hierarchy");
    StsDRMHierarchyFetchError : exported
	compound_string("Could not fetch from Resource Manager hierarchy");
    StsDRMHierarchyCloseError : exported
	compound_string("Could not close Resource Manager hierarchy");
    StsGetSurrogateCBError : exported
	compound_string("Application-provided Get Surrogate callback error");
    StsCreateSurrogateCBError : exported
	compound_string("Application-provided Create Surrogate callback error");
    StsApplyCBError : exported
	compound_string("Application-provided Apply callback error");
    StsCloseViewCBError : exported
	compound_string("Application-provided CloseView callback error");
    StsConnectCBError : exported
	compound_string("Application-provided Complete Link callback error");
    StsCurrencyChangeCBError : exported
	compound_string("Application-provided Environment Change callback error");
    StsInvalidEncoding : exported
	compound_string("An Invalid Object encoding was provided to the Import Operation");
    StsInternalEncodingError : exported
	compound_string("An Internal Object encoding error has occurred");
    StsInternalDecodingError : exported
	compound_string("An Internal Object decoding error has occurred");
    StsInvalidWidgetId : exported
	compound_string("Invalid Widget identifier was provided to the CreateDXmUi Operation");
    StsStoredElsewhere : exported
	compound_string("This Object is already Stored elsewhere");
    StsNoSuchRepository : exported
	compound_string("The Linkbase of the given name does not exist");
    StsDBNotOpen : exported
	compound_string("The Linkbase is no longer Open");
    StsDBReadError : exported
	compound_string("A Linkbase read error occurred");
    StsDBWriteError : exported
	compound_string("A Linkbase write error occurred");
    StsDBLockError : exported
	compound_string("A Linkbase lock error occurred");
    StsDBCommitError : exported
	compound_string("A Linkbase transaction commit error");
    StsDBVersionError : exported
	compound_string("A Linkbase version check error");
    StsRepositoryInUse : exported
	compound_string("The Linkbase is still in use");
    StsNotConnected : exported
	compound_string("This information is not linked");
    StsNoCurrentNetwork : exported
	compound_string("There is no Recording Linknet");
    StsNoCurrentSource : exported
	compound_string("There is no Pending Source");
    StsNoCurrentTarget : exported
	compound_string("There is no Pending Target");
    StsNoCurrentHistory : exported
	compound_string("There is no Current History");
    StsHistoryIsEmpty : exported
	compound_string("The Current History is empty");
    StsNoCurrentCPath : exported
	compound_string("There is no Active Composite Path");
    StsNoMoreSteps : exported
	compound_string("There are no more Steps");
    StsInvalidQueryExpression : exported
	compound_string("An invalid expression was provided to the Query Operation");
    StsAbstractObject : exported
	compound_string("An Object of Abstract Type can not be Created");
    StsHighlightError : exported
	compound_string("Highlighting state change error");
    StsGoToError : exported
	compound_string("Go To function error");
    StsVisitError : exported
	compound_string("Visit function error");
    StsShowHistoryError : exported
	compound_string("Show History function error");
    StsStepForwardError : exported
	compound_string("Step Forward function error");
    StsUndoError : exported
	compound_string("Go Back function error");
    StsSetSourceError : exported
	compound_string("Start Link function error");
    StsConnectError : exported
	compound_string("Complete Link function error");
    StsAnnotateError : exported
	compound_string("Annotate function error");
    StsShowConnectionError : exported
	compound_string("Show Link function error");
    StsDeleteConnectionError : exported
	compound_string("Delete Link function error");
    StsShowConnectionsError : exported
	compound_string("Show Links function error");
    StsConnectUpdateError : exported
	compound_string("Update of Link error");
    StsShowStepError : exported
	compound_string("Show Step function error");
    StsDeleteStepError : exported
	compound_string("Delete Step function error");
    StsStepUpdateError : exported
	compound_string("Update of Step error");
    StsNoSuchObject: exported
	compound_string("The Object of the given name does not exist");
    StsUnexpectedError : exported
	compound_string("An unexpected error has occurred");
    StsDBAccessError : exported
	compound_string("Linkbase access control error");
    StsApplyError : exported
	compound_string("Application startup error");
    StsInvocationError : exported
	compound_string("Application invocation error");
    StsNotRegistered : exported
	compound_string("Application not registered");
!++
! End of I18N Translatable values for this Module
!--

object message_window : XmInformationDialog {
    arguments {
	XmNokLabelString = MessageAcknowledgeLabel;
	XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
	XmNdialogTitle = MessageWindowTitle;
	XmNdefaultPosition = false;
	XmNnoResize = true;
    };
};

object wip_window : XmWorkingDialog {
    arguments {
	XmNwidth = 600;
	XmNdialogTitle = WorkInProgessWindowTitle;
	XmNnoResize = true;
    };
};
