! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
!++
! COPYRIGHT (c) 1988, 1989, 1990, 1991 BY
! DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
! ALL RIGHTS RESERVED.
!
! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
! ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
! INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
! COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
! OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
! TRANSFERRED.
!
! THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
! AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
! CORPORATION.
!
! DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
! SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
!--

!++
!
! Facility:
!   LinkWorks Services User Interface
!
! Abstract:
!   LWK DXm User Interface Show History box description file.
!
! Author:
!   Doug Rayner
!
! Creation Date:
!   16-Mar-89
!
! Modification History:
!
!--


!++
! Beginning of I18N Translatable values for this Module
!--
!
! Dialog Box and SVN Widget sizes
!

value
    HistoryBoxSvnHeight : 200;
    HistoryBoxSvnWidth : 400;

!
! To make all the Push Buttons in the Box the same width, this value should
! be large enough so that the label of the largest Push Button just fits
!

value
    HistoryButtonWidth		: 70;

!
! Define offset values
! 
value
    HistoryIndentation    : 10;

!
!   Literal Text Values -- used to fill in Step entries in Steps list
!

value
    GoToLiteral : exported
	compound_string("Go To");
    VisitLiteral : exported
	compound_string("Visit");
    ImplicitGoToLiteral : exported
	compound_string("Go To (Implicit)");
              
!
! Labels for the Push Buttons
!

value
    HistoryBoxTitle :
	compound_string("LinkWorks: History");

    HistoryListLabelLabel :
   	compound_string("Steps Taken");

! The spaces added in the following label are just there because this label is 
! not attached to the rigth on the form.
    HistoryStepOpLabelLabel :
      	compound_string("Step Operation");

    HistoryShowLabel :
	compound_string("Show Step...");

    HistoryNavLabelLabel :
	compound_string("Navigation");
	
    HistoryOprLabelLabel :
	compound_string("Operation");

    HistoryVisitLabel :
	compound_string("Visit");

    HistoryCancelLabel :
	compound_string("Cancel");

    HistoryHelpLabel :
	compound_string("Help");

!++
! End of I18N Translatable values for this Module
!--



!++
!   callback procedures
!--

procedure
    LwkCreateHistorySteps(any);
    LwkCreateHistoryShow(any);
    LwkCreateHistoryVisit(any);
    LwkCreateHistoryCancel(any);
    LwkCreateHistoryOperationMenu(any);
    LwkCreateHistoryListForm(any);
    LwkCreateHistoryVisitForm(any);
    LwkCreateHistoryShowForm(any);
    LwkCreateHistoryButtonsForm(any);
    LwkActivateHistoryShow(any);
    LwkActivateHistoryVisit(any);
    LwkActivateHistoryCancel(any);
    LwkSelectHistoryStep(any);
    LwkConfirmHistoryStep(any);
    LwkSelectDoneHistory(any);
    LwkSelectHistoryOperation(any);


!++
!   Show History Dialog Box description
!--

object HistoryBox : XmFormDialog {
    arguments {
	XmNdialogTitle = HistoryBoxTitle;
	XmNdefaultPosition = false;
	XmNautoUnmanage = false;
	XmNhorizontalSpacing = LWKDefaultDialogBorder;
	XmNverticalSpacing = LWKDefaultDialogBorder;
	XmNcancelButton = XmPushButton HistoryCancel;
	XmNuserData = LwkPrivate;
    };
    controls {
	XmForm HistoryListForm;
	XmForm HistoryVisitForm;
    	XmForm HistoryShowForm;
	XmForm HistoryButtonsForm;
    };
    callbacks {
	XmNhelpCallback = procedure LwkContextSensitiveHelp(HistoryBoxHelpKey);
    };
};

object HistoryButtonsForm : XmForm {
    arguments {
	XmNleftAttachment = XmATTACH_FORM;          
	XmNleftOffset = 0;
	XmNrightAttachment = XmATTACH_FORM;
	XmNbottomAttachment = XmATTACH_FORM;
	XmNhorizontalSpacing = LWKDefaultMarginWidth;
	XmNverticalSpacing = LWKDefaultMarginHeight;
	XmNcancelButton = XmPushButton HistoryCancel;
    };
    controls {
	XmPushButton HistoryCancel;
	XmPushButton HistoryHelp;
    };
    callbacks {
	MrmNcreateCallback = procedure LwkCreateHistoryButtonsForm(LwkPrivate);
    };
};

object HistoryCancel : XmPushButton {
    arguments {
	XmNlabelString = HistoryCancelLabel;
	XmNwidth = HistoryButtonWidth;
	XmNdefaultButtonShadowThickness = LWKDefaultPBShadow;
	XmNrecomputeSize = false;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_FORM;
	XmNuserData = LwkPrivate;
    };
    callbacks {
	MrmNcreateCallback = procedure LwkCreateHistoryCancel(LwkPrivate);
	XmNactivateCallback = procedure LwkActivateHistoryCancel(LwkPrivate);
	XmNhelpCallback = 
	    procedure LwkContextSensitiveHelp(HistoryCancelHelpKey);
    };
};

object HistoryHelp : XmPushButton {  
    arguments {
	XmNlabelString = HistoryHelpLabel;
	XmNwidth = HistoryButtonWidth;
	XmNrecomputeSize = false;
	XmNdefaultButtonShadowThickness = LWKDefaultPBShadow;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmPushButton HistoryCancel;
	XmNuserData = LwkPrivate;
    };
    callbacks {
	XmNactivateCallback = 
	    procedure LwkContextSensitiveHelp(HistoryBoxHelpKey);
	XmNhelpCallback = 
	    procedure LwkContextSensitiveHelp(HistoryHelpHelpKey);
    };                               
};

object HistoryVisitForm : XmForm {
    arguments {
	XmNshadowThickness = LWKDefaultShadowThickness;
	XmNshadowType = LWKDefaultShadowType;
	XmNhorizontalSpacing = LWKDefaultMarginWidth;
	XmNverticalSpacing = LWKDefaultMarginHeight;
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget = XmForm HistoryButtonsForm;
	XmNleftAttachment = XmATTACH_FORM;
    };
    controls {
	XmPushButton HistoryVisit;
   	XmLabel HistoryNavLabel;
	XmOptionMenu HistoryOperationOptions;
    };                  
    callbacks {
	MrmNcreateCallback = procedure LwkCreateHistoryVisitForm(LwkPrivate);
    };
};

object HistoryShowForm : XmForm {
    arguments {
	XmNshadowThickness = LWKDefaultShadowThickness;
	XmNshadowType = LWKDefaultShadowType;
	XmNhorizontalSpacing = LWKDefaultMarginWidth;
	XmNverticalSpacing = LWKDefaultMarginHeight;
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget = XmForm HistoryButtonsForm;
	XmNleftAttachment = XmATTACH_WIDGET;
	XmNleftWidget = XmForm HistoryVisitForm;
	XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
	XmNtopWidget = XmForm HistoryVisitForm;
	XmNtopOffset = 0;
    };
    controls {
	XmLabel HistoryStepOpLabel;
	XmPushButton HistoryShow;
    };
    callbacks {
	MrmNcreateCallback = procedure LwkCreateHistoryShowForm(LwkPrivate);
    };
};

object HistoryStepOpLabel : XmLabel {
    arguments {
	XmNlabelString = HistoryStepOpLabelLabel;
	XmNtopAttachment = XmATTACH_FORM; 
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNalignment = XmALIGNMENT_BEGINNING;
    };
};
 
object HistoryShow : XmPushButton {
    arguments {
	XmNlabelString = HistoryShowLabel;
	XmNdefaultButtonShadowThickness = LWKDefaultPBShadow;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel HistoryStepOpLabel;
	XmNleftAttachment = XmATTACH_POSITION;
	XmNleftPosition = HistoryIndentation;
	XmNrightAttachment= XmATTACH_FORM;
	XmNuserData = LwkPrivate;
    };
    callbacks {                                              
	MrmNcreateCallback = procedure LwkCreateHistoryShow(LwkPrivate);
	XmNactivateCallback = procedure LwkActivateHistoryShow(LwkPrivate);
	XmNhelpCallback = procedure LwkContextSensitiveHelp(HistoryShowHelpKey);
    };
};

object HistoryNavLabel : XmLabel {
    arguments {
	XmNlabelString = HistoryNavLabelLabel;
	XmNtopAttachment = XmATTACH_FORM; 
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNalignment = XmALIGNMENT_BEGINNING;
    };
};

object HistoryOperationOptions : XmOptionMenu {
    arguments {
	XmNlabelString = HistoryOprLabelLabel;
	XmNmenuHistory = XmPushButton HistoryOperationMenuButton;
	XmNleftAttachment = XmATTACH_FORM;
	XmNleftOffset = HistoryIndentation;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel HistoryNavLabel;
	XmNrightAttachment = XmATTACH_FORM;
	XmNuserData = LwkPrivate;
    };
    controls {
	XmPulldownMenu HistoryOperationMenu;
    };
    callbacks {
	MrmNcreateCallback = 
	    procedure LwkCreateHistoryOperationMenu(LwkPrivate);
	XmNhelpCallback = 
	    procedure LwkContextSensitiveHelp(HistoryOprListHelpKey);
    };
};

object HistoryOperationMenu : XmPulldownMenu {
    arguments {
	XmNmenuHistory = XmPushButton HistoryOperationMenuButton;
	XmNorientation = XmVERTICAL;
	XmNuserData = LwkPrivate;
    };
    controls {
	XmPushButton HistoryOperationMenuButton;
    };
    callbacks {
	XmNentryCallback = procedure LwkSelectHistoryOperation(LwkPrivate);
	XmNhelpCallback = 
	    procedure LwkContextSensitiveHelp(HistoryOprListHelpKey);
    };
};

object HistoryOperationMenuButton : XmPushButton {
    arguments {
	XmNlabelString = "...";
    };
};

object HistoryVisit : XmPushButton {
    arguments {
	XmNlabelString = HistoryVisitLabel;
	XmNwidth = HistoryButtonWidth;
	XmNrecomputeSize = false;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmOptionMenu HistoryOperationOptions;
	XmNbottomAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_FORM;
	XmNleftOffset = HistoryIndentation;
	XmNdefaultButtonShadowThickness = LWKDefaultPBShadow;
	XmNuserData = LwkPrivate;
    };
    callbacks {
	MrmNcreateCallback = procedure LwkCreateHistoryVisit(LwkPrivate);
	XmNactivateCallback = procedure LwkActivateHistoryVisit(LwkPrivate);
	XmNhelpCallback = 
	    procedure LwkContextSensitiveHelp(HistoryVisitHelpKey);
    };
};


object HistoryListForm : XmForm {
    arguments {
	XmNshadowThickness = LWKDefaultShadowThickness;
	XmNshadowType = LWKDefaultShadowType;
	XmNtopAttachment = XmATTACH_FORM;
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNbottomAttachment = XmATTACH_WIDGET;
	XmNbottomWidget = XmForm HistoryVisitForm;
	XmNhorizontalSpacing = LWKDefaultMarginWidth;
	XmNverticalSpacing = LWKDefaultMarginHeight;
	XmNwidth = HistoryBoxSvnWidth;
	XmNheight = HistoryBoxSvnHeight;
    };
    controls {
	XmLabel HistoryListLabel;
	XmSeparator HistorySeparator;
    	DXmSvn HistoryList;
    };
    callbacks {
	MrmNcreateCallback = procedure LwkCreateHistoryListForm(LwkPrivate);
    };
};

object HistoryListLabel : XmLabel {
    arguments {
	XmNlabelString = HistoryListLabelLabel;
	XmNtopAttachment = XmATTACH_FORM; 
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNalignment = XmALIGNMENT_BEGINNING;
    };
};

object HistorySeparator : XmSeparator {
    arguments {
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmLabel HistoryListLabel;
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;    
    };
};

object HistoryList : DXmSvn {
    arguments {
	DXmSvnNmultipleSelections = false;
	XmNtopAttachment = XmATTACH_WIDGET;
	XmNtopWidget = XmSeparator HistorySeparator;
	XmNleftAttachment = XmATTACH_FORM;
	XmNrightAttachment = XmATTACH_FORM;
	XmNbottomAttachment = XmATTACH_FORM;
	XmNuserData = LwkPrivate;
    };
    callbacks {
	MrmNcreateCallback = procedure LwkCreateHistorySteps(LwkPrivate);
	DXmSvnNselectAndConfirmCallback = 
	    procedure LwkConfirmHistoryStep(LwkPrivate);
	DXmSvnNentrySelectedCallback = 
	    procedure LwkSelectHistoryStep(LwkPrivate);
	DXmSvnNtransitionsDoneCallback = 
	    procedure LwkSelectDoneHistory(LwkPrivate);
	DXmSvnNhelpRequestedCallback =
	    procedure LwkSvnHelpRequested(HistoryListHelpKey);
    };
};
