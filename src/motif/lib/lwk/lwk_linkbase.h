/*
 * *****************************************************************
 * *                                                               *
 * *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
 * *                                                               *
 * *   All Rights Reserved.  Unpublished rights  reserved  under   *
 * *   the copyright laws of the United States.                    *
 * *                                                               *
 * *   The software contained on this media  is  proprietary  to   *
 * *   and  embodies  the  confidential  technology  of  Digital   *
 * *   Equipment Corporation.  Possession, use,  duplication  or   *
 * *   dissemination of the software and media is authorized only  *
 * *   pursuant to a valid written license from Digital Equipment  *
 * *   Corporation.                                                *
 * *                                                               *
 * *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
 * *   by the U.S. Government is subject to restrictions  as  set  *
 * *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
 * *   or  in  FAR 52.227-19, as applicable.                       *
 * *                                                               *
 * *****************************************************************
 */
/*
 * HISTORY
 */
/*
** Generated by ODL Version X0.1 on Tue Jul 14 18:32:31 1992
*/

/*
** COPYRIGHT (c) 1989 BY
** DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.
** ALL RIGHTS RESERVED.
**
** THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED
** ONLY  IN  ACCORDANCE  OF  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE
** INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER
** COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
** OTHER PERSON.  NO TITLE TO AND  OWNERSHIP OF THE  SOFTWARE IS  HEREBY
** TRANSFERRED.
**
** THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE
** AND  SHOULD  NOT  BE  CONSTRUED  AS A COMMITMENT BY DIGITAL EQUIPMENT
** CORPORATION.
**
** DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS
** SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
*/

/*
** Private Type Definitions for the Linkbase Object
*/

/*
** Abstract Type Definitions for subtypes of Object
*/

typedef _Object _List, _PtrTo _ListPtr;
typedef _Object _Set, _PtrTo _SetPtr;
typedef _Object _Property, _PtrTo _PropertyPtr;
typedef _Object _ObjectId, _PtrTo _ObjectIdPtr;
typedef _Object _ObjectDesc, _PtrTo _ObjectDescPtr;
typedef _Object _Ui, _PtrTo _UiPtr;
typedef _Object _DXmUi, _PtrTo _DXmUiPtr;
typedef _Object _DXmEnvState, _PtrTo _DXmEnvStatePtr;
typedef _Object _Persistent, _PtrTo _PersistentPtr;
typedef _Object _Surrogate, _PtrTo _SurrogatePtr;
typedef _Object _Link, _PtrTo _LinkPtr;
typedef _Object _Linknet, _PtrTo _LinknetPtr;
typedef _Object _CompLinknet, _PtrTo _CompLinknetPtr;
typedef _Object _Step, _PtrTo _StepPtr;
typedef _Object _Path, _PtrTo _PathPtr;
typedef _Object _CompPath, _PtrTo _CompPathPtr;

/*
** Linkbase Instance Structure Definition
*/

typedef struct __Linkbase {
        _Type type;
        _String identifier;
        _DDIFString name;
        _Boolean open;
        struct __Linkbase *next;
        _AnyPtr file;
        _Transaction state;
        _Integer use_count;
        _Integer current_uid;
        _Integer allocated_uid;
        _Integer cache_count;
        _HashTableEntry hash_table[_LinkbaseHashSize];
    } _LinkbaseInstance, _PtrTo _Linkbase, _PtrTo _PtrTo _LinkbasePtr;

/*
** Linkbase Property Name Table Index Definitions
*/

#define _IdentifierIndex 0
#define _NameIndex 1
#define _OpenIndex 2
#define _P_Next "$Next"
#define _NextIndex 3
#define _P_File "$File"
#define _FileIndex 4
#define _P_TransactionState "$TransactionState"
#define _TransactionStateIndex 5
#define _P_UseCount "$UseCount"
#define _UseCountIndex 6
#define _P_CurrentUid "$CurrentUid"
#define _CurrentUidIndex 7
#define _P_AllocatedUid "$AllocatedUid"
#define _AllocatedUidIndex 8
#define _P_CacheCount "$CacheCount"
#define _CacheCountIndex 9
#define _P_HashTable "$HashTable"
#define _HashTableIndex 10

/*
** Linkbase Property Name Table Definition
*/

#define _LinkbasePropertyNameTable \
    _PropertyNameTableEntry _Constant LinkbasePropertyNameTable[] = { \
        {_P_Identifier, _IdentifierIndex, _True}, \
        {_P_Name, _NameIndex, _True}, \
        {_P_Open, _OpenIndex, _True}, \
        {_P_Next, _NextIndex, _False}, \
        {_P_File, _FileIndex, _False}, \
        {_P_TransactionState, _TransactionStateIndex, _False}, \
        {_P_UseCount, _UseCountIndex, _False}, \
        {_P_CurrentUid, _CurrentUidIndex, _False}, \
        {_P_AllocatedUid, _AllocatedUidIndex, _False}, \
        {_P_CacheCount, _CacheCountIndex, _False}, \
        {_P_HashTable, _HashTableIndex, _False}, \
        {(_String) 0, 0, _False} \
    }

/*
** Linkbase Property Accessor Definitions
*/

#define _Identifier_of(Obj) ((_Linkbase) _Reference(Obj))->identifier
#define _Name_of(Obj) ((_Linkbase) _Reference(Obj))->name
#define _Open_of(Obj) ((_Linkbase) _Reference(Obj))->open
#define _Next_of(Obj) ((_Linkbase) _Reference(Obj))->next
#define _File_of(Obj) ((_Linkbase) _Reference(Obj))->file
#define _TransactionState_of(Obj) ((_Linkbase) _Reference(Obj))->state
#define _UseCount_of(Obj) ((_Linkbase) _Reference(Obj))->use_count
#define _CurrentUid_of(Obj) ((_Linkbase) _Reference(Obj))->current_uid
#define _AllocatedUid_of(Obj) ((_Linkbase) _Reference(Obj))->allocated_uid
#define _CacheCount_of(Obj) ((_Linkbase) _Reference(Obj))->cache_count
#define _HashTable_of(Obj) ((_Linkbase) _Reference(Obj))->hash_table

/*
** Include Generic Operation Support
*/

#include "lwk_operation_prototypes.h"

/*
** Linkbase Method Declarations
*/

_DeclareFunction(void LwkOpObjIllOp, (_in _Object object));
_DeclareFunction(void LwkOpLbClose, (_inout _Linkbase linkbase));
_DeclareFunction(_Linkbase LwkOpObjCopy, (_in _Linkbase object, _in _Boolean aggreate));
_DeclareFunction(_Linkbase LwkOpObjCreate, (_in _Type type));
_DeclareFunction(void LwkOpLbDrop, (_inout _Linkbase linkbase));
_DeclareFunction(_Set LwkOpLbEnumProps, (_in _Linkbase object));
_DeclareFunction(void LwkOpLbExpunge, (_inout _Linkbase object));
_DeclareFunction(void LwkOpLbFree, (_inout _Linkbase object));
_DeclareFunction(_Domain LwkOpObjGetDomain, (_in _Linkbase object));
_DeclareFunction(void LwkOpLbGetValue, (_in _Linkbase object,
    _in _String property_name, _in _Domain domain,
    _in _AnyPtr value));
_DeclareFunction(_Domain LwkOpLbGetValueDomain, (_in _Linkbase object,
    _in _String property_name));
_DeclareFunction(_List LwkOpLbGetValueList, (_in _Linkbase object,
    _in _String property_name));
_DeclareFunction(void LwkOpLbInitialize, (_inout _Linkbase object,
    _in _Linkbase proto_object, _Boolean aggregate));
_DeclareFunction(_Boolean LwkOpLbIsMultiValued, (_in _Linkbase object,
    _in _String property_name));
_DeclareFunction(_Boolean LwkOpObjIsType, (_in _Linkbase object,
    _in _Type type));
_DeclareFunction(_Termination LwkOpLbIterate, (_in _Linkbase linkbase,
    _in _Domain domain, _in _Closure closure,
    _in _Callback routine));
_DeclareFunction(_Linkbase LwkOpLbOpen, (_in _Type type, _in _String identifier,
    _Boolean create));
_DeclareFunction(void LwkOpLbSetValue, (_inout _Linkbase object,
    _in _String property_name, _in _Domain domain,
    _in _AnyPtr value, _in _SetFlag flag));
_DeclareFunction(void LwkOpLbSetValueList, (_inout _Linkbase object,
    _in _String property_name, _in _List_of(_Domain) value_list,
    _in _SetFlag flag));
_DeclareFunction(_Transaction LwkOpLbTransact, (_inout _Linkbase linkbase,
    _in _Transaction transaction));
_DeclareFunction(_Boolean LwkOpLbVerify, (_inout _Linkbase linkbase,
    _in _Integer flags, _in _OSFile file););

/*
** Linkbase Type Instance Definition
*/

#define _LinkbaseTypeInstance \
    _TypeInstance _Constant LWK__LinkbaseTypeInstance = { \
        &LWK__ObjectTypeInstance, \
        sizeof(_LinkbaseInstance), \
        { \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbClose, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjCopy, \
        (_Method) LwkOpObjCreate, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbDrop, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbEnumProps, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbExpunge, \
        (_Method) LwkOpLbFree, \
        (_Method) LwkOpObjGetDomain, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbGetValue, \
        (_Method) LwkOpLbGetValueDomain, \
        (_Method) LwkOpLbGetValueList, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbInitialize, \
        (_Method) LwkOpLbIsMultiValued, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIsType, \
        (_Method) LwkOpLbIterate, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbOpen, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbSetValue, \
        (_Method) LwkOpLbSetValueList, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpObjIllOp, \
        (_Method) LwkOpLbTransact, \
        (_Method) LwkOpLbVerify \
        } \
    }

#define _LinkbaseType \
    _Type _Constant LWK__LinkbaseType = &LWK__LinkbaseTypeInstance
