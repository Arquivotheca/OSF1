Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9205282131.AA23329@alex.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2577) close XBUG #5293:
Date: Thu, 28 May 92 17:31:40 EDT
From: Stephen Gildea <gildea@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

        Subject: fontserver: ListFonts can free nonexistent memory
        ### bug number:   5293
        ### area:         fontserver
        ### severity:     low

Includes lint fixes.

*** /tmp/da23254	Thu May 28 17:29:39 1992
--- fonts/server/difs/fonts.c	Thu May 28 17:18:26 1992
***************
*** 1,4 ****
! /* $XConsortium: fonts.c,v 1.12 92/05/13 15:49:41 gildea Exp $ */
  /*
   * font control
   */
--- 1,4 ----
! /* $XConsortium: fonts.c,v 1.13 92/05/28 17:17:15 gildea Exp $ */
  /*
   * font control
   */
***************
*** 7,28 ****
   * Portions Copyright 1987 by Digital Equipment Corporation and the
   * Massachusetts Institute of Technology
   *
!  * Permission to use, copy, modify, and distribute this protoype software
!  * and its documentation to Members and Affiliates of the MIT X Consortium
!  * any purpose and without fee is hereby granted, provided
   * that the above copyright notice appear in all copies and that both that
   * copyright notice and this permission notice appear in supporting
   * documentation, and that the names of Network Computing Devices, Digital or
!  * MIT not be used in advertising or publicity pertaining to distribution of
!  * the software without specific, written prior permission.
   *
!  * NETWORK COMPUTING DEVICES, DIGITAL AND MIT DISCLAIM ALL WARRANTIES WITH
!  * REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
!  * AND FITNESS, IN NO EVENT SHALL NETWORK COMPUTING DEVICES, DIGITAL OR MIT BE
!  * LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
!  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
!  * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
!  * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   */
  
  #include        "FS.h"
--- 7,28 ----
   * Portions Copyright 1987 by Digital Equipment Corporation and the
   * Massachusetts Institute of Technology
   *
!  * Permission to use, copy, modify, distribute, and sell this software and
!  * its documentation for any purpose is hereby granted without fee, provided
   * that the above copyright notice appear in all copies and that both that
   * copyright notice and this permission notice appear in supporting
   * documentation, and that the names of Network Computing Devices, Digital or
!  * M.I.T. not be used in advertising or publicity pertaining to distribution
!  * of the software without specific, written prior permission.
   *
!  * NETWORK COMPUTING DEVICES, DIGITAL AND M.I.T. DISCLAIM ALL WARRANTIES WITH
!  * REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF
!  * MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL NETWORK COMPUTING DEVICES,
!  * DIGITAL OR M.I.T. BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL
!  * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
!  * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
!  * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
!  * THIS SOFTWARE.
   */
  
  #include        "FS.h"
***************
*** 37,42 ****
--- 37,43 ----
  #include	"globals.h"
  
  extern void (*ReplySwapVector[NUM_PROC_VECTORS]) ();
+ extern FSID FakeClientID();
  
  static FontPathElementPtr *font_path_elements = (FontPathElementPtr *) 0;
  static int  num_fpes = 0;
***************
*** 150,156 ****
  }
  
  /* ARGSUSED */
! int
  FontWakeup(data, count, LastSelectMask)
      pointer     data;
      int         count;
--- 151,157 ----
  }
  
  /* ARGSUSED */
! void
  FontWakeup(data, count, LastSelectMask)
      pointer     data;
      int         count;
***************
*** 160,173 ****
      FontPathElementPtr fpe;
  
      if (count < 0)
! 	return FSSuccess;	/* ignore -1 return from select XXX */
      /* wake up any fpe's that may be waiting for information */
      for (i = 0; i < num_slept_fpes; i++) {
  	fpe = slept_fpes[i];
  	(void) (*fpe_functions[fpe->type].wakeup_fpe) (fpe, LastSelectMask);
      }
- 
-     return FSSuccess;
  }
  
  static Bool
--- 161,172 ----
      FontPathElementPtr fpe;
  
      if (count < 0)
! 	return;			/* ignore -1 return from select XXX */
      /* wake up any fpe's that may be waiting for information */
      for (i = 0; i < num_slept_fpes; i++) {
  	fpe = slept_fpes[i];
  	(void) (*fpe_functions[fpe->type].wakeup_fpe) (fpe, LastSelectMask);
      }
  }
  
  static Bool
***************
*** 578,584 ****
      int		len;
      int		type;
      char       *cp = paths;
-     char       *colon;
      FontPathElementPtr fpe,
                 *fplist;
  
--- 577,582 ----
***************
*** 704,710 ****
  {
      int         err = Successful;
      fsListFontsReply reply;
!     FontNamesPtr names;
      FontPathElementPtr fpe;
      int         stringLens,
                  i,
--- 702,708 ----
  {
      int         err = Successful;
      fsListFontsReply reply;
!     FontNamesPtr names = NULL;
      FontPathElementPtr fpe;
      int         stringLens,
                  i,
***************
*** 1171,1177 ****
  
  init_fs_handlers(fpe, block_handler)
      FontPathElementPtr fpe;
!     int         (*block_handler) ();
  {
      /* if server has reset, make sure the b&w handlers are reinstalled */
      if (last_server_gen < serverGeneration) {
--- 1169,1175 ----
  
  init_fs_handlers(fpe, block_handler)
      FontPathElementPtr fpe;
!     void         (*block_handler) ();
  {
      /* if server has reset, make sure the b&w handlers are reinstalled */
      if (last_server_gen < serverGeneration) {
***************
*** 1195,1201 ****
  
  remove_fs_handlers(fpe, block_handler, all)
      FontPathElementPtr fpe;
!     int         (*block_handler) ();
      Bool        all;
  {
      if (all) {
--- 1193,1199 ----
  
  remove_fs_handlers(fpe, block_handler, all)
      FontPathElementPtr fpe;
!     void        (*block_handler) ();
      Bool        all;
  {
      if (all) {
