Path: news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9204142125.AA28539@explain.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2462) close XBUG #5024, #5026, #5074, #5091, #5106: Xlib: various Xsi bugs
Date: Tue, 14 Apr 92 17:25:49 EDT
From: Bob Scheifler <rws@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

Subject: Xlib: (Xsi) XSetICValues() could not allow changing XNResourcesName andXNResourceClass
### bug number:   5024
### area:         Xlib
### severity:     low
### comments:

Subject: Xlib: (Xsi) XCreateIC and XSetICValues don't use specified colormap.
### bug number:   5026
### area:         Xlib
### severity:     low
### comments:     

Subject:Xlib: Xsi/XlcLoad.c: not enough room for allocated data
### bug number:   5074
### area:         Xlib
### severity:     low
### comments:     

Subject: Xlib (Xsi): XwcDrawString using jisx0208.1990-0/jisx0208.1983-1 font
### bug number:   5091
### area:         Xlib
### severity:     low
### comments:     

Subject: Xlib: (Xsi) XCreateFontSet freed a bad area.
### bug number:   5106
### area:         Xlib
### severity:     low
### comments:     

*** /tmp/d27626	Tue Apr 14 15:57:24 1992
--- lib/X/Xlcint.h	Tue Apr 14 15:44:18 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: Xlcint.h,v 11.13 91/06/05 09:09:43 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: Xlcint.h,v 11.14 92/04/14 15:42:59 rws Exp $
   */
  
  /*
***************
*** 89,94 ****
--- 89,96 ----
  #define	ICFontSet		12
  #define	ICLineSpace		13
  #define	ICCursor		14
+ #define	ICResourceClass		26
+ #define	ICResourceName		27
  
  #define	IMQueryInputStyle	0
  
*** /tmp/d27758	Tue Apr 14 16:08:29 1992
--- lib/X/Xsi/XCnvMBToCT.c	Tue Apr 14 15:55:56 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XCnvMBToCT.c,v 1.20 91/11/17 16:18:34 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XCnvMBToCT.c,v 1.21 92/04/14 15:54:22 rws Exp $
   */
  
  /*
***************
*** 270,276 ****
              continue;
            case SPACE:
  	    /* force designate ISO8859.1 to GL (Codeset 0) */
! 	    ctSetid(xlocale, CODESET0);
  	    goto _Normal_char;
            case CSI:
              /* not supported yet */
--- 270,276 ----
              continue;
            case SPACE:
  	    /* force designate ISO8859.1 to GL (Codeset 0) */
! 	    ctSetGLid(xlocale, CODESET0);
  	    goto _Normal_char;
            case CSI:
              /* not supported yet */
*** /tmp/d27777	Tue Apr 14 16:08:38 1992
--- lib/X/Xsi/XCnvWCToMB.c	Tue Apr 14 15:56:01 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XCnvWCToMB.c,v 1.22 91/11/17 16:22:31 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XCnvWCToMB.c,v 1.23 92/04/14 15:54:49 rws Exp $
   */
  
  /*
***************
*** 296,302 ****
              wc_str++, wccnt++, wc_len--;
              continue;
          }
! 	ctid = _XcwGetWoffset(*wc_str, &newwoffset);
  	if (ctid == ND || (newcsid = _Xmbctidtocsid(xlocale, ctid)) == ND) {
  	    /* XXX BUG: if stateful encoding, need to check/add
  			designate sequence of default string.
--- 296,302 ----
              wc_str++, wccnt++, wc_len--;
              continue;
          }
! 	ctid = _XcwGetWoffsetFromLocale(xlocale, *wc_str, &newwoffset);
  	if (ctid == ND || (newcsid = _Xmbctidtocsid(xlocale, ctid)) == ND) {
  	    /* XXX BUG: if stateful encoding, need to check/add
  			designate sequence of default string.
*** /tmp/d27832	Tue Apr 14 16:09:04 1992
--- lib/X/Xsi/XCrFntSet.c	Tue Apr 14 15:56:26 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XCrFntSet.c,v 1.44 92/03/03 10:00:34 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XCrFntSet.c,v 1.45 92/04/14 15:54:54 rws Exp $
   */
  
  /*
***************
*** 385,401 ****
          }
          start++;
      }
!     /* treat jisx0208.1983-0 same as jisx0208.1990-0 */
!     if ((i = strlen(cset)) == 15 && strlen(start) == i &&
  	*(cset+14) == *(start+14) &&
! 	!strncmp(cset, "jisx0208", 8)) {
!          return ((compareNLowercase(start, cset, 8) == 0) ? True : False);
      }
!     /* treat ISO8859.* for GL same as ISO8859.1 */
      if (GLorGR == GL && !strncmp(cset, "iso8859-", 8)) {
           return ((compareNLowercase(start, cset, 8) == 0) ? True : False);
      }
!     return ((compareLowercase(start, cset) == 0) ? True : False);
  }
  
  static int
--- 385,404 ----
          }
          start++;
      }
!     if (compareLowercase(start, cset) == 0)
! 	return (True);
! 
!     /* jisx0208.1990-0 is super set of jisx0208.1983-0 */
!     if (strlen(cset) == 15 && strlen(start) == 15 &&
  	*(cset+14) == *(start+14) &&
! 	!strncmp(cset, "jisx0208.1983", 13)) {
!          return ((compareNLowercase(start, "jisx0208.1990", 13) == 0) ? True : False);
      }
!     /* GL of ISO8859.* is same as GL of ISO8859.1 */
      if (GLorGR == GL && !strncmp(cset, "iso8859-", 8)) {
           return ((compareNLowercase(start, cset, 8) == 0) ? True : False);
      }
!     return (False);
  }
  
  static int
***************
*** 552,562 ****
  
  #ifdef XML
  static int
! TryLoad(s_tmp, id_tmp, found, info, charset, GLorGR)
! XFontStruct	*s_tmp[];
  int		id_tmp[];
  int		found;
- XFontStruct     *info;
  char		*charset;
  _CSID		GLorGR;
  {
--- 555,563 ----
  
  #ifdef XML
  static int
! AlreadyLoad(id_tmp, found, charset, GLorGR)
  int		id_tmp[];
  int		found;
  char		*charset;
  _CSID		GLorGR;
  {
***************
*** 567,573 ****
--- 568,585 ----
  	if (id_tmp[i] == id_tmp[found])
  	    return 0;
      }
+     return 1;
+ }
  
+ static int
+ TryLoad(s_tmp, id_tmp, found, info, charset, GLorGR)
+ XFontStruct	*s_tmp[];
+ int		id_tmp[];
+ int		found;
+ XFontStruct     *info;
+ char		*charset;
+ _CSID		GLorGR;
+ {
      if (! (s_tmp[found] = (XFontStruct *)Xmalloc(sizeof(XFontStruct))))
  	return 0;
  #ifndef MUSTCOPY
***************
*** 652,672 ****
  			loadASCIIFONT = 1;
  		    }
  		} else {
  		    if (!info)
  			info_list = XListFontsWithInfo(dpy, list[j], 1, &count_list, &info);
  		    if (count_list != 1)
  			/* never go to here. */
  			continue;
! 
! 		    f_tmp[found+1] = f_tmp[found];
! 		    found += TryLoad(s_tmp, id_tmp, found, info, charset, GL);
  		}
- 		if (!info)
- 		    info_list = XListFontsWithInfo(dpy, list[j], 1, &count_list, &info);
- 		if (count_list != 1)
- 		    /* never go to here. */
- 		    continue;
- 		found += TryLoad(s_tmp, id_tmp, found, info, charset, GR);
  		notfound = 0;
  		if (info)
  		    XFreeFontInfo(info_list, info, count_list);
--- 664,689 ----
  			loadASCIIFONT = 1;
  		    }
  		} else {
+ 		    if (AlreadyLoad(id_tmp, found, charset, GL)) {
+ 
+ 			if (!info)
+ 			    info_list = XListFontsWithInfo(dpy, list[j], 1, &count_list, &info);
+ 			if (count_list != 1)
+ 			    /* never go to here. */
+ 			    continue;
+ 
+ 			f_tmp[found+1] = f_tmp[found];
+ 			found += TryLoad(s_tmp, id_tmp, found, info, charset, GL);
+ 		    }
+ 		}
+ 		if (AlreadyLoad(id_tmp, found, charset, GR)) {
  		    if (!info)
  			info_list = XListFontsWithInfo(dpy, list[j], 1, &count_list, &info);
  		    if (count_list != 1)
  			/* never go to here. */
  			continue;
! 		    found += TryLoad(s_tmp, id_tmp, found, info, charset, GR);
  		}
  		notfound = 0;
  		if (info)
  		    XFreeFontInfo(info_list, info, count_list);
***************
*** 880,886 ****
  		      &font_set->ascent, &font_set->descent);
      font_set->core.default_string = NULL;
      for (i = 0; (int)i < found; i++) {
! 	Xfree((char *)f_tmp[i]);
      }
  
      /*
--- 897,903 ----
  		      &font_set->ascent, &font_set->descent);
      font_set->core.default_string = NULL;
      for (i = 0; (int)i < found; i++) {
! 	if (f_tmp[i]) Xfree((char *)f_tmp[i]);
      }
  
      /*
*** /tmp/d27852	Tue Apr 14 16:09:16 1992
--- lib/X/Xsi/XCrIC.c	Tue Apr 14 15:45:31 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XCrIC.c,v 1.30 91/06/05 09:23:58 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XCrIC.c,v 1.31 92/04/14 15:44:17 rws Exp $
   */
  
  /*
***************
*** 114,133 ****
  };
  
  static Status
! _StringToPixel(display, w, name, pixel)
      Display *display;
!     Window w;
      char *name;
      unsigned long *pixel;
  {
      XColor c, e_c;
-     Colormap colormap;
-     XWindowAttributes win_info;
      Status status;
  
-     XGetWindowAttributes(display, w, &win_info);
-     colormap = win_info.colormap;
- 
      if (name[0] == '#') {
  	status = XParseColor(display, colormap, name, &c);
  	if (status != 0) {
--- 114,128 ----
  };
  
  static Status
! _StringToPixel(display, colormap, name, pixel)
      Display *display;
!     Colormap colormap;
      char *name;
      unsigned long *pixel;
  {
      XColor c, e_c;
      Status status;
  
      if (name[0] == '#') {
  	status = XParseColor(display, colormap, name, &c);
  	if (status != 0) {
***************
*** 155,161 ****
  {
      XipIM im = ipIMofIC(ic);
      unsigned long ret_mask = 0;
-     int screen;
      char name_prefix[256], class_prefix[256];
      char res_name_buf[256], res_class_buf[256];
      /*
--- 150,155 ----
***************
*** 166,182 ****
  #endif	/* XML */
      char def_fg_name[256], def_bg_name[256];
      unsigned long def_fg, def_bg;
-     Window window;
      char *str_type[20];
      XrmValue value;
      XIMArg args[8], pre_args[4], st_args[4];
      int count = 0, pre_count = 0, st_count = 0;
  
      if (rdb == NULL) {
  	return(0);
      }
!     screen = DefaultScreen(display);
!     window = RootWindow(display, screen);
      if (res_name == NULL || *res_name == '\0'
  	|| res_class == NULL || *res_class == '\0') {
  	strcpy(name_prefix, "*.");
--- 160,183 ----
  #endif	/* XML */
      char def_fg_name[256], def_bg_name[256];
      unsigned long def_fg, def_bg;
      char *str_type[20];
      XrmValue value;
      XIMArg args[8], pre_args[4], st_args[4];
      int count = 0, pre_count = 0, st_count = 0;
+     Colormap colormap, def_colormap;
+     XWindowAttributes win_info;
  
      if (rdb == NULL) {
  	return(0);
      }
!     if (ic->core.client_window) {
! 	XGetWindowAttributes(display, ic->core.client_window, &win_info);
!     } else {
! 	XGetWindowAttributes(display,
! 			     RootWindow(display, DefaultScreen(display)),
! 			     &win_info);
!     }
!     def_colormap = win_info.colormap;
      if (res_name == NULL || *res_name == '\0'
  	|| res_class == NULL || *res_class == '\0') {
  	strcpy(name_prefix, "*.");
***************
*** 195,201 ****
  	if (XrmGetResource(rdb, res_name_buf, res_class_buf,
  			   str_type, &value) == True) {
  	    strncpy(def_fg_name, value.addr, (int)value.size);
! 	    if (_StringToPixel(display, window, def_fg_name, &def_fg) == 0) {
  		if (!(mask & (1 << ICForeground))) {
  		    pre_args[pre_count].name = (char *)XNForeground;
  		    pre_args[pre_count].value = (XPointer)def_fg;
--- 196,207 ----
  	if (XrmGetResource(rdb, res_name_buf, res_class_buf,
  			   str_type, &value) == True) {
  	    strncpy(def_fg_name, value.addr, (int)value.size);
! 	    if (ic->core.preedit_attr.colormap) {
! 		colormap = ic->core.preedit_attr.colormap;
! 	    } else {
! 		colormap = def_colormap;
! 	    }
! 	    if (_StringToPixel(display, colormap, def_fg_name, &def_fg) == 0) {
  		if (!(mask & (1 << ICForeground))) {
  		    pre_args[pre_count].name = (char *)XNForeground;
  		    pre_args[pre_count].value = (XPointer)def_fg;
***************
*** 220,226 ****
  	if (XrmGetResource(rdb, res_name_buf, res_class_buf,
  			   str_type, &value) == True) {	
  	    strncpy(def_bg_name, value.addr, (int)value.size);	
! 	    if (_StringToPixel(display, window, def_bg_name, &def_bg) == 0) {
  		if (!(mask & (1 << ICBackground))) {
  		    pre_args[pre_count].name = (char *)XNBackground;
  		    pre_args[pre_count].value = (XPointer)def_bg;
--- 226,237 ----
  	if (XrmGetResource(rdb, res_name_buf, res_class_buf,
  			   str_type, &value) == True) {	
  	    strncpy(def_bg_name, value.addr, (int)value.size);	
! 	    if (ic->core.preedit_attr.colormap) {
! 		colormap = ic->core.preedit_attr.colormap;
! 	    } else {
! 		colormap = def_colormap;
! 	    }
! 	    if (_StringToPixel(display, colormap, def_bg_name, &def_bg) == 0) {
  		if (!(mask & (1 << ICBackground))) {
  		    pre_args[pre_count].name = (char *)XNBackground;
  		    pre_args[pre_count].value = (XPointer)def_bg;
*** /tmp/d27997	Tue Apr 14 16:10:32 1992
--- lib/X/Xsi/XInitCT.c	Tue Apr 14 15:56:38 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XInitCT.c,v 1.17 92/03/03 10:02:52 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XInitCT.c,v 1.18 92/04/14 15:55:19 rws Exp $
   */
  
  /*
***************
*** 378,386 ****
      ctSetid(xlocale, id);
      return(True);
  }
- #endif
  
- #ifdef not_use
  int
  _XcwNameGetLength(state_name, GLorGR)
      char       *state_name;
--- 378,384 ----
***************
*** 446,451 ****
--- 444,475 ----
      return(ND);
  }
  
+ static _CSID
+ _XcwEscGetIdFromLocale(xlocale, state_encoding)
+     XLocale	 xlocale;
+     char	*state_encoding;
+ {
+     Fontset			*fontset;
+     _CSID                       id;
+     char			esc[128];
+ 
+     if(!xlocale && !xlocale->xlc_db && !xlocale->xlc_db->lc_fontset) {
+ 	return (_XcwEscGetId(state_encoding));
+     }
+     fontset = xlocale->xlc_db->lc_fontset;
+ 
+     if(state_encoding[1] == 0x25) {
+ 	strcpy(esc, state_encoding);
+ 	esc[4] = '0'; esc[5] = '0';	/* mask length */
+ 	state_encoding = esc;
+     }
+     for (id = 0; id < fontset->fs_num; id++) {
+         if (!strcmp(state_encoding, fontset->fs_cset[id]->cs_des))
+ 	    return(fontset->fs_cset[id]->cs_id);
+         }
+     return (_XcwEscGetId(state_encoding));
+ }
+ 
  Bool
  _XcwEscSetStatus(xlocale, state_encoding)
      XLocale	 xlocale;
***************
*** 452,458 ****
      char	*state_encoding;
  {
      _CSID	id;
!     if((id = _XcwEscGetId(state_encoding)) == ND)
  	return(False);
      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
      ctSetid(xlocale, id);
--- 476,482 ----
      char	*state_encoding;
  {
      _CSID	id;
!     if((id = _XcwEscGetIdFromLocale(xlocale, state_encoding)) == ND)
  	return(False);
      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
      ctSetid(xlocale, id);
***************
*** 467,473 ****
      wchar	*woffset;
  {
      _CSID	id;
!     if((id = _XcwEscGetId(state_encoding)) == ND)
  	return(False);
      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
      ctSetid(xlocale, id);
--- 491,497 ----
      wchar	*woffset;
  {
      _CSID	id;
!     if((id = _XcwEscGetIdFromLocale(xlocale, state_encoding)) == ND)
  	return(False);
      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
      ctSetid(xlocale, id);
***************
*** 572,577 ****
--- 596,631 ----
          }
      }
      return(ind);
+ }
+ 
+ _CSID
+ _XcwGetWoffsetFromLocale(xlocale, wc, woffset)
+     XLocale	        xlocale;
+     wchar		wc;
+     wchar	       *woffset;
+ {
+     register wchar              disp_min;
+     _CSID                       id;
+     Fontset			*fontset;
+ 
+     if(!xlocale && !xlocale->xlc_db && !xlocale->xlc_db->lc_fontset) {
+ 	*woffset = 0;
+ 	return (_XcwGetWoffset(wc, woffset));
+     }
+ 
+     fontset = xlocale->xlc_db->lc_fontset;
+     wc &= ~0x7f;
+     for (id = 0; id < fontset->fs_num; id++) {
+ 	if (fontset->fs_cset[id]->cs_len == 2)
+ 	    disp_min = PosSub(wc & ~0x7f00, fontset->fs_cset[id]->cs_woff);
+ 	else
+ 	    disp_min = PosSub(wc, fontset->fs_cset[id]->cs_woff);
+ 	if (disp_min < 0x80) {
+ 	    *woffset = fontset->fs_cset[id]->cs_woff;
+ 	    return(fontset->fs_cset[id]->cs_id);
+ 	}
+     }
+     return (_XcwGetWoffset(wc, woffset));
  #undef PosSub
  }
  
***************
*** 611,618 ****
  {
      _CSID		id;
  
!     id = _XcwGetWoffset(wc, woffset);
!     if(id == ND)
  	return;
  
      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
--- 665,671 ----
  {
      _CSID		id;
  
!     if ((id = _XcwGetWoffsetFromLocale(xlocale, wc, woffset)) == ND)
  	return;
  
      ctSetGLorGR(xlocale, ISOStateTable[id].GLorGR);
***************
*** 645,652 ****
      wchar	woffset;
      _CSID	id;
  
!     id = _XcwGetWoffset(wc, &woffset);
!     if(id == ND)
  	return;
      
      if (ISOStateTable[id].GLorGR == GL)
--- 698,704 ----
      wchar	woffset;
      _CSID	id;
  
!     if ((id = _XcwGetWoffsetFromLocale(xlocale, wc, woffset)) == ND)
  	return;
      
      if (ISOStateTable[id].GLorGR == GL)
*** /tmp/d28071	Tue Apr 14 16:11:13 1992
--- lib/X/Xsi/XlcLoad.c	Tue Apr 14 15:54:22 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XlcLoad.c,v 1.40 91/12/23 11:37:03 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XlcLoad.c,v 1.41 92/04/14 15:53:03 rws Exp $
   */
  
  /*
***************
*** 873,879 ****
  		fprintf(stderr, "Xlib: bad format locale file: %s\n", fn);
  	    if (lastBadLCName)
  		Xfree(lastBadLCName);
! 	    if (lastBadLCName = Xmalloc(strlen(lc_name)))
  		strcpy(lastBadLCName, lc_name);
  	}
      }
--- 873,879 ----
  		fprintf(stderr, "Xlib: bad format locale file: %s\n", fn);
  	    if (lastBadLCName)
  		Xfree(lastBadLCName);
! 	    if (lastBadLCName = Xmalloc(strlen(lc_name) + 1))
  		strcpy(lastBadLCName, lc_name);
  	}
      }
*** /tmp/d28162	Tue Apr 14 16:11:58 1992
--- lib/X/Xsi/XwcDeGlyph.c	Tue Apr 14 15:56:43 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XwcDeGlyph.c,v 1.15 91/11/17 16:29:59 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XwcDeGlyph.c,v 1.16 92/04/14 15:55:31 rws Exp $
   */
  
  /*
***************
*** 111,117 ****
  		*ctid = ctGetid(xlocale);
  	    newwoffset = woffset;
  	} else {
!             if(_XcwGetWoffset(wc, &newwoffset) == ND) { /* MUST not change Status */
  		/* XXX BUG: need to check designate sequence of default string.
  		   But current default string is NULL, so OK. :-) */
  		for (i = 0; *(defstr + i) != 0; i++) {
--- 111,117 ----
  		*ctid = ctGetid(xlocale);
  	    newwoffset = woffset;
  	} else {
!             if(_XcwGetWoffsetFromLocale(xlocale, wc, &newwoffset) == ND) { /* MUST not change Status */
  		/* XXX BUG: need to check designate sequence of default string.
  		   But current default string is NULL, so OK. :-) */
  		for (i = 0; *(defstr + i) != 0; i++) {
*** /tmp/d28271	Tue Apr 14 16:12:52 1992
--- lib/X/Xsi/Xi18nint.h	Tue Apr 14 15:47:28 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: Xi18nint.h,v 1.18 91/11/17 15:59:13 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: Xi18nint.h,v 1.19 92/04/14 15:45:50 rws Exp $
   */
  
  /*
***************
*** 154,163 ****
  #endif	/* !NO_LOCAL_IM */
  
  #ifdef	XML
! #define ICUsingLanguage		26
! #define ICCurrentLanguage	27
! #define ICChangeLocaleCB	28
! #define ICAllMask		0x1fffffff
  #else	/* XML */
  #define	ICAllMask		0x03ffffff
  #endif	/* XML */
--- 154,163 ----
  #endif	/* !NO_LOCAL_IM */
  
  #ifdef	XML
! #define ICUsingLanguage		28
! #define ICCurrentLanguage	29
! #define ICChangeLocaleCB	30
! #define ICAllMask		0x73ffffff
  #else	/* XML */
  #define	ICAllMask		0x03ffffff
  #endif	/* XML */
***************
*** 393,398 ****
--- 393,404 ----
  extern int _XipwcLookupString(
  #if NeedFunctionPrototypes
  	XIC, XKeyEvent*, wchar_t*, int, KeySym*, Status*
+ #endif
+ );
+ 
+ extern unsigned long _XipReadRdb(
+ #if NeedFunctionPrototypes
+ 	Display*, XipIC, unsigned long, XrmDatabase, char*, char*
  #endif
  );
  
*** /tmp/d28290	Tue Apr 14 16:13:03 1992
--- lib/X/Xsi/Xlocaleint.h	Tue Apr 14 15:56:55 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: Xlocaleint.h,v 1.34 91/11/17 16:11:44 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: Xlocaleint.h,v 1.35 92/04/14 15:55:37 rws Exp $
   */
  
  /*
***************
*** 294,300 ****
  extern _CSID		_XcwNameGetGLorGRId();
  extern void             _XcwGetAll();
  extern void		_XcwGetDefaultEncoding();
! extern _CSID		_XcwGetWoffset();
  extern Bool             _XcwCheckDefaultState();
  extern Bool		_XmbCheck();
  extern Bool		_XcwIdCheck();
--- 294,300 ----
  extern _CSID		_XcwNameGetGLorGRId();
  extern void             _XcwGetAll();
  extern void		_XcwGetDefaultEncoding();
! extern _CSID		_XcwGetWoffsetFromLocale();
  extern Bool             _XcwCheckDefaultState();
  extern Bool		_XmbCheck();
  extern Bool		_XcwIdCheck();
