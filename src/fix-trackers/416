Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9208102326.AA05400@xenon.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Cc: mor@expo.lcs.mit.edu
Subject: (seq: 2645) PEXlib patch (part 2 of 3)
Date: Mon, 10 Aug 92 19:26:14 EDT
From: Ralph Mor <mor@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

*** /tmp/da01721	Mon Aug 10 17:23:57 1992
--- extensions/lib/PEXlib/pl_oc_attr.c	Fri Jul 24 13:27:49 1992
***************
*** 1,19 ****
! /* $XConsortium: pl_oc_attr.c,v 1.4 92/06/12 10:42:02 mor Exp $ */
  
! /************************************************************************
! Copyright 1987,1991,1992 by Digital Equipment Corporation, Maynard,
! Massachusetts, and the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
--- 1,20 ----
! /* $XConsortium: pl_oc_attr.c,v 1.6 92/07/24 13:31:44 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
***************
*** 22,30 ****
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
  
- *************************************************************************/
- 
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
--- 23,30 ----
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
+ ******************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
***************
*** 1000,1005 ****
--- 1000,1006 ----
      COPY_AREA (transform, pReq->matrix, sizeof (pexMatrix));
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1024,1029 ****
--- 1025,1031 ----
      COPY_AREA (transform, pReq->matrix3X3, sizeof (pexMatrix3X3));
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1072,1084 ****
  
  
  void
! PEXSetModelClipVolume (display, resource_id, req_type, operator,
      numHalfSpaces, halfSpaces)
  
  INPUT Display		*display;
  INPUT XID		resource_id;
  INPUT PEXOCRequestType	req_type;
! INPUT int		operator;
  INPUT unsigned int	numHalfSpaces;
  INPUT PEXHalfSpace	*halfSpaces;
  
--- 1074,1086 ----
  
  
  void
! PEXSetModelClipVolume (display, resource_id, req_type, op,
      numHalfSpaces, halfSpaces)
  
  INPUT Display		*display;
  INPUT XID		resource_id;
  INPUT PEXOCRequestType	req_type;
! INPUT int		op;
  INPUT unsigned int	numHalfSpaces;
  INPUT PEXHalfSpace	*halfSpaces;
  
***************
*** 1103,1109 ****
       * Store the request header data. 
       */
  
!     pReq->modelClipOperator = operator; 
      pReq->numHalfSpaces = numHalfSpaces;
  
  
--- 1105,1111 ----
       * Store the request header data. 
       */
  
!     pReq->modelClipOperator = op; 
      pReq->numHalfSpaces = numHalfSpaces;
  
  
***************
*** 1114,1130 ****
      PEXCopyWordsToOC (display, lenofData, (char *) halfSpaces);
  
      PEXFinishOC (display);
  }
  
  
  void
! PEXSetModelClipVolume2D (display, resource_id, req_type, operator,
      numHalfSpaces, halfSpaces)
  
  INPUT Display		*display;
  INPUT XID		resource_id;
  INPUT PEXOCRequestType	req_type;
! INPUT int		operator;
  INPUT unsigned int	numHalfSpaces;
  INPUT PEXHalfSpace2D	*halfSpaces;
  
--- 1116,1133 ----
      PEXCopyWordsToOC (display, lenofData, (char *) halfSpaces);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
  void
! PEXSetModelClipVolume2D (display, resource_id, req_type, op,
      numHalfSpaces, halfSpaces)
  
  INPUT Display		*display;
  INPUT XID		resource_id;
  INPUT PEXOCRequestType	req_type;
! INPUT int		op;
  INPUT unsigned int	numHalfSpaces;
  INPUT PEXHalfSpace2D	*halfSpaces;
  
***************
*** 1149,1155 ****
       * Store the request header data. 
       */
  
!     pReq->modelClipOperator = operator; 
      pReq->numHalfSpaces = numHalfSpaces;
  
  
--- 1152,1158 ----
       * Store the request header data. 
       */
  
!     pReq->modelClipOperator = op; 
      pReq->numHalfSpaces = numHalfSpaces;
  
  
***************
*** 1160,1165 ****
--- 1163,1169 ----
      PEXCopyWordsToOC (display, lenofData, (char *) halfSpaces);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1238,1243 ****
--- 1242,1248 ----
      _PEXCopyPaddedBytesToOC (display, sizofDisableList, (char *) disable); 
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1369,1374 ****
--- 1374,1380 ----
      }
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
*** /tmp/da01740	Mon Aug 10 17:24:03 1992
--- extensions/lib/PEXlib/pl_oc_prim.c	Thu Aug  6 22:51:12 1992
***************
*** 1,19 ****
! /* $XConsortium: pl_oc_prim.c,v 1.5 92/06/12 15:22:22 mor Exp $ */
  
! /************************************************************************
! Copyright 1987,1991,1992 by Digital Equipment Corporation, Maynard,
! Massachusetts, and the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
--- 1,20 ----
! /* $XConsortium: pl_oc_prim.c,v 1.8 92/08/06 22:56:00 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
***************
*** 22,30 ****
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
  
- *************************************************************************/
- 
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
--- 23,30 ----
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
+ ******************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
***************
*** 109,114 ****
--- 109,115 ----
      StoreDefaultMonoString (display, count, string);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 153,158 ****
--- 154,160 ----
      StoreDefaultMonoString (display, count, string);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 200,205 ****
--- 202,208 ----
      StoreDefaultMonoString (display, count, string);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 247,252 ****
--- 250,256 ----
      StoreDefaultMonoString (display, count, string);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 303,308 ****
--- 307,313 ----
      StoreMonoStrings (display, numEncodings, encodedTextList);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 355,360 ****
--- 360,366 ----
      StoreMonoStrings (display, numEncodings, encodedTextList);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 409,414 ****
--- 415,421 ----
      StoreMonoStrings (display, numEncodings, encodedTextList);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 463,468 ****
--- 470,476 ----
      StoreMonoStrings (display, numEncodings, encodedTextList);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 569,574 ****
--- 577,583 ----
      }
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 635,640 ****
--- 644,650 ----
      PEXCopyWordsToOC (display, lenofVertexList, (char *) points.point);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 682,687 ****
--- 692,698 ----
      PEXCopyWordsToOC (display, lenofVertexList, (char *) points);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 729,734 ****
--- 740,746 ----
      PEXCopyWordsToOC (display, lenofVertexList, (char *) points);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 804,809 ****
--- 816,822 ----
  	(char *) vertices.no_data);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 871,876 ****
--- 884,890 ----
      }
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 938,943 ****
--- 952,958 ----
      }
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1031,1036 ****
--- 1046,1052 ----
      }
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1167,1172 ****
--- 1183,1189 ----
      PEXGetOCAddr (display, PAD (cbytes));
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1182,1188 ****
  INPUT unsigned int		vertexAttributes;
  INPUT int			colorType;
  INPUT PEXArrayOfFacetData 	facetData;
! INPUT unsigned long		numVertices;
  INPUT PEXArrayOfVertex		vertices;
  
  {
--- 1199,1205 ----
  INPUT unsigned int		vertexAttributes;
  INPUT int			colorType;
  INPUT PEXArrayOfFacetData 	facetData;
! INPUT unsigned int		numVertices;
  INPUT PEXArrayOfVertex		vertices;
  
  {
***************
*** 1236,1241 ****
--- 1253,1259 ----
      PEXCopyWordsToOC (display, lenofVertexList, (char *) vertices.no_data);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1291,1298 ****
       */
  
      pReq->colorType = colorType;
!     pReq->mPts = rowCount;
!     pReq->nPts = colCount;
      pReq->facetAttribs = facetAttributes;
      pReq->vertexAttribs = vertexAttributes;
      pReq->shape = shape;
--- 1309,1316 ----
       */
  
      pReq->colorType = colorType;
!     pReq->mPts = colCount;
!     pReq->nPts = rowCount;
      pReq->facetAttribs = facetAttributes;
      pReq->vertexAttribs = vertexAttributes;
      pReq->shape = shape;
***************
*** 1309,1314 ****
--- 1327,1333 ----
      PEXCopyWordsToOC (display, lenofVertexList, (char *) vertices.no_data);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1327,1333 ****
  INPUT unsigned int		numMPoints;
  INPUT unsigned int		numNPoints;
  INPUT PEXArrayOfCoord		points;
! INPUT unsigned long		numTrimLoops;
  INPUT PEXListOfTrimCurve 	*trimLoops;
  
  {
--- 1346,1352 ----
  INPUT unsigned int		numMPoints;
  INPUT unsigned int		numNPoints;
  INPUT PEXArrayOfCoord		points;
! INPUT unsigned int		numTrimLoops;
  INPUT PEXListOfTrimCurve 	*trimLoops;
  
  {
***************
*** 1468,1473 ****
--- 1487,1493 ----
      }
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1480,1487 ****
  INPUT PEXCoord		*pt1;
  INPUT PEXCoord		*pt2;
  INPUT PEXCoord		*pt3;
! INPUT unsigned long	dx;
! INPUT unsigned long	dy;
  INPUT PEXTableIndex 	*icolors;
  
  {
--- 1500,1507 ----
  INPUT PEXCoord		*pt1;
  INPUT PEXCoord		*pt2;
  INPUT PEXCoord		*pt3;
! INPUT unsigned int	dx;
! INPUT unsigned int	dy;
  INPUT PEXTableIndex 	*icolors;
  
  {
***************
*** 1519,1524 ****
--- 1539,1545 ----
  	(char *) icolors);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1530,1537 ****
  INPUT PEXOCRequestType	req_type;
  INPUT PEXCoord2D	*pt1;
  INPUT PEXCoord2D	*pt2;
! INPUT unsigned long	dx;
! INPUT unsigned long	dy;
  INPUT PEXTableIndex	*icolors;
  
  {
--- 1551,1558 ----
  INPUT PEXOCRequestType	req_type;
  INPUT PEXCoord2D	*pt1;
  INPUT PEXCoord2D	*pt2;
! INPUT unsigned int	dx;
! INPUT unsigned int	dy;
  INPUT PEXTableIndex	*icolors;
  
  {
***************
*** 1568,1573 ****
--- 1589,1595 ----
  	(char *) icolors);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1581,1588 ****
  INPUT PEXCoord		*pt1;
  INPUT PEXCoord		*pt2;
  INPUT PEXCoord		*pt3;
! INPUT unsigned long	dx;
! INPUT unsigned long	dy;
  INPUT int		colorType;
  INPUT PEXArrayOfColor 	colors;
  
--- 1603,1610 ----
  INPUT PEXCoord		*pt1;
  INPUT PEXCoord		*pt2;
  INPUT PEXCoord		*pt3;
! INPUT unsigned int	dx;
! INPUT unsigned int	dy;
  INPUT int		colorType;
  INPUT PEXArrayOfColor 	colors;
  
***************
*** 1622,1627 ****
--- 1644,1650 ----
      PEXCopyWordsToOC (display, lenofColorList, (char *) colors.indexed);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1672,1677 ****
--- 1695,1701 ----
      _PEXCopyPaddedBytesToOC (display, numBytes, (char *) data);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
  
  
***************
*** 1723,1726 ****
--- 1747,1751 ----
      _PEXCopyPaddedBytesToOC (display, numBytes, (char *) data);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
*** /tmp/da01759	Mon Aug 10 17:24:09 1992
--- extensions/lib/PEXlib/pl_oc_util.c	Thu Jul 16 11:16:31 1992
***************
*** 1,20 ****
! /* $XConsortium: pl_oc_util.c,v 1.7 92/06/30 15:53:25 mor Exp $ */
  
! /************************************************************************
! Copyright 1992 by the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the name of MIT not be used in
! advertising or publicity pertaining to distribution of the software
! without specific, written prior permission.  
  
! *************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
--- 1,29 ----
! /* $XConsortium: pl_oc_util.c,v 1.8 92/07/16 11:19:01 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
! DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
! ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
! DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
! ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
! WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
! ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
! SOFTWARE.
! ******************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
***************
*** 61,66 ****
--- 70,76 ----
  	pexDisplayInfo->lastResID != resource_id ||
  	pexDisplayInfo->lastReqType != req_type ||
  	req_type == PEXOCRenderSingle || req_type == PEXOCStoreSingle ||
+ 	display->synchandler ||
  	(LENOF (pexOCRequestHeader) + numWords > WordsLeftInXBuffer (display)))
      {
  	PEXGetOCReq (display,
*** /tmp/da01778	Mon Aug 10 17:24:13 1992
--- extensions/lib/PEXlib/pl_rdr.c	Thu Jul 16 10:55:15 1992
***************
*** 1,19 ****
! /* $XConsortium: pl_rdr.c,v 1.4 92/06/12 10:25:58 mor Exp $ */
  
! /************************************************************************
! Copyright 1987,1991,1992 by Digital Equipment Corporation, Maynard,
! Massachusetts, and the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
--- 1,20 ----
! /* $XConsortium: pl_rdr.c,v 1.5 92/07/16 10:59:44 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
***************
*** 22,29 ****
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
! 
! *************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
--- 23,29 ----
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
! ******************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
*** /tmp/da01797	Mon Aug 10 17:24:16 1992
--- extensions/lib/PEXlib/pl_oc_struct.c	Thu Jul 16 11:17:44 1992
***************
*** 1,19 ****
! /* $XConsortium: pl_oc_struct.c,v 1.3 92/06/12 10:50:14 mor Exp $ */
  
! /************************************************************************
! Copyright 1987,1991,1992 by Digital Equipment Corporation, Maynard,
! Massachusetts, and the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
--- 1,20 ----
! /* $XConsortium: pl_oc_struct.c,v 1.4 92/07/16 11:21:44 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
***************
*** 22,30 ****
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
  
- *************************************************************************/
- 
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
--- 23,30 ----
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
+ ******************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
***************
*** 127,130 ****
--- 127,131 ----
      _PEXCopyPaddedBytesToOC (display, length, (char *) data);
  
      PEXFinishOC (display);
+     PEXSyncHandle (display);
  }
*** /tmp/da01816	Mon Aug 10 17:24:19 1992
--- extensions/lib/PEXlib/pl_oc_util.h	Thu Jul 16 11:19:30 1992
***************
*** 1,23 ****
! /* $XConsortium: pl_oc_util.h,v 1.4 92/06/30 12:43:10 mor Exp $ */
  
! /************************************************************************
! Copyright 1992 by the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
! *************************************************************************/
  
- 
- 
  /*
   * NAME:
   *	PEXCopyWordsToOC
--- 1,30 ----
! /* $XConsortium: pl_oc_util.h,v 1.5 92/07/16 11:23:25 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
! DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
! ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
! DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
! ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
! WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
! ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
! SOFTWARE.
! ******************************************************************************/
  
  /*
   * NAME:
   *	PEXCopyWordsToOC
***************
*** 99,104 ****
--- 106,112 ----
  	    _display->bufptr += PADDED_BYTES (_numBytes); \
  	} \
          PEXFinishOC (_display); \
+ 	PEXSyncHandle (_display); \
      } \
  }
  
***************
*** 160,165 ****
--- 168,174 ----
  	    ((pexOCcListHeader *) pReq)->length = _count; \
  	_PEXCopyPaddedBytesToOC (_display, ocListSize, _elementList); \
  	PEXFinishOC (_display); \
+ 	PEXSyncHandle (_display); \
      } \
  }
  
*** /tmp/da01835	Mon Aug 10 17:24:22 1992
--- extensions/lib/PEXlib/pl_pick.c	Thu Jul 16 10:55:48 1992
***************
*** 1,20 ****
! /* $XConsortium: pl_pick.c,v 1.5 92/06/12 11:52:01 mor Exp $ */
  
! /************************************************************************
! Copyright 1992 by ShoGraphics, Inc., Mountain View, California,
! Copyright 1987,1991,1992 by Digital Equipment Corporation, Maynard,
! Massachusetts, and the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
--- 1,21 ----
! /* $XConsortium: pl_pick.c,v 1.6 92/07/16 11:00:16 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by ShoGraphics, Inc., Mountain View, California
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
***************
*** 31,37 ****
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
- 
  *************************************************************************/
  
  /*
--- 32,37 ----
*** /tmp/da01854	Mon Aug 10 17:24:26 1992
--- extensions/lib/PEXlib/pl_sc.c	Fri Jul 24 13:25:06 1992
***************
*** 1,19 ****
! /* $XConsortium: pl_sc.c,v 1.4 92/05/26 16:19:21 mor Exp $ */
  
! /************************************************************************
! Copyright 1987,1991,1992 by Digital Equipment Corporation, Maynard,
! Massachusetts, and the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
--- 1,21 ----
! /* $XConsortium: pl_sc.c,v 1.6 92/07/24 13:29:23 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by ShoGraphics, Inc., Mountain View, California
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
***************
*** 23,28 ****
--- 25,37 ----
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
  
+ SHOGRAPHICS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
+ ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
+ SHOGRAPHICS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
+ ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+ ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ SOFTWARE.
  *************************************************************************/
  
  #include "PEXlib.h"
***************
*** 326,341 ****
  }
  
  
! PEXStructurePath *
! PEXSearchNetwork (display, sc)
  
! INPUT Display		*display;
! INPUT PEXSearchContext	sc;
  
  {
      pexSearchNetworkReply	rep;
      pexSearchNetworkReq		*req;
-     PEXStructurePath		*scinfo;
  
  
      /*
--- 335,350 ----
  }
  
  
! Status
! PEXSearchNetwork (display, sc, path_return)
  
! INPUT Display			*display;
! INPUT PEXSearchContext		sc;
! OUTPUT PEXStructurePath		**path_return;
  
  {
      pexSearchNetworkReply	rep;
      pexSearchNetworkReq		*req;
  
  
      /*
***************
*** 356,362 ****
      {
          UnlockDisplay (display);
          PEXSyncHandle (display);
!         return (NULL);               /* return an error */
      }
  
  
--- 365,372 ----
      {
          UnlockDisplay (display);
          PEXSyncHandle (display);
! 	*path_return = NULL;
!         return (0);               /* return an error */
      }
  
  
***************
*** 364,377 ****
       * Allocate a buffer for the path to pass back to the client.
       */
  
!     scinfo = (PEXStructurePath *)
  	PEXAllocBuf ((unsigned) (sizeof (PEXStructurePath)));
  
!     scinfo->count = rep.numItems;
!     scinfo->elements = (PEXElementRef *)
  	PEXAllocBuf ((unsigned) (rep.numItems * sizeof (PEXElementRef)));
  
!     _XRead (display, (char *) (scinfo->elements), (long) (rep.length << 2));
  
  
      /*
--- 374,388 ----
       * Allocate a buffer for the path to pass back to the client.
       */
  
!     *path_return = (PEXStructurePath *)
  	PEXAllocBuf ((unsigned) (sizeof (PEXStructurePath)));
  
!     (*path_return)->count = rep.numItems;
!     (*path_return)->elements = (PEXElementRef *)
  	PEXAllocBuf ((unsigned) (rep.numItems * sizeof (PEXElementRef)));
  
!     _XRead (display, (char *) ((*path_return)->elements),
! 	(long) (rep.length << 2));
  
  
      /*
***************
*** 381,387 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (scinfo);
  }
  
  
--- 392,398 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
*** /tmp/da01874	Mon Aug 10 17:24:30 1992
--- extensions/lib/PEXlib/pl_wks.c	Fri Jul 24 14:10:13 1992
***************
*** 1,20 ****
! /* $XConsortium: pl_wks.c,v 1.5 92/06/12 10:24:53 mor Exp $ */
  
! /****************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts,
! copyright 1992 by ShoGraphics, Inc., Mountain View, California,
! and the Massachusetts Institute of Technology, Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  SHOGRAPHICS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
  SHOGRAPHICS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
--- 1,30 ----
! /* $XConsortium: pl_wks.c,v 1.7 92/07/24 14:14:20 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by ShoGraphics, Inc., Mountain View, California
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
+ DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
+ ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
+ DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
+ ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
+ WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
+ ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
+ SOFTWARE.
+ 
  SHOGRAPHICS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
  SHOGRAPHICS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
***************
*** 22,30 ****
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
  
- ****************************************************************************/
- 
  #include "PEXlib.h"
  #include "PEXlibint.h"
  
--- 32,39 ----
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
+ *************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
  
***************
*** 557,573 ****
  }
  
  
! PEXWorkstation *
! PEXGetWorkstationPostings (display, structure, numWksReturn)
  
  INPUT Display		*display;
  INPUT PEXStructure	structure;
  OUTPUT unsigned long	*numWksReturn;
  
  {
      pexGetWorkstationPostingsReq	*req;
      pexGetWorkstationPostingsReply	rep;
-     PEXWorkstation			*wsp;
  
  
      /*
--- 566,582 ----
  }
  
  
! Status
! PEXGetWorkstationPostings (display, structure, numWksReturn, wksReturn)
  
  INPUT Display		*display;
  INPUT PEXStructure	structure;
  OUTPUT unsigned long	*numWksReturn;
+ OUTPUT PEXWorkstation	**wksReturn;
  
  {
      pexGetWorkstationPostingsReq	*req;
      pexGetWorkstationPostingsReply	rep;
  
  
      /*
***************
*** 588,594 ****
      {
          UnlockDisplay (display);
          PEXSyncHandle (display);
!         return (NULL);            /* return an error */
      }
  
      *numWksReturn = rep.length;
--- 597,604 ----
      {
          UnlockDisplay (display);
          PEXSyncHandle (display);
! 	*wksReturn = NULL;
!         return (0);            /* return an error */
      }
  
      *numWksReturn = rep.length;
***************
*** 598,606 ****
       * Allocate a buffer for the replies to pass back to the client.
       */
  
!     wsp = (PEXWorkstation *) PEXAllocBuf ((unsigned) (rep.length << 2));
  
!     _XRead (display, (char *) wsp, (long) (rep.length << 2));
  
  
      /*
--- 608,617 ----
       * Allocate a buffer for the replies to pass back to the client.
       */
  
!     *wksReturn = (PEXWorkstation *) PEXAllocBuf (
! 	(unsigned) (rep.length << 2));
  
!     _XRead (display, (char *) *wksReturn, (long) (rep.length << 2));
  
  
      /*
***************
*** 610,616 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (wsp);
  }
  
  
--- 621,627 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
***************
*** 986,994 ****
  }
  
  
! PEXCoord *
  PEXMapDCToWC (display, wks, dc_count, dc_points,
!     view_index_return, wc_count_return)
  
  INPUT Display			*display;
  INPUT PEXWorkstation		wks;
--- 997,1005 ----
  }
  
  
! Status
  PEXMapDCToWC (display, wks, dc_count, dc_points,
!     view_index_return, wc_count_return, wc_points_return)
  
  INPUT Display			*display;
  INPUT PEXWorkstation		wks;
***************
*** 996,1006 ****
  INPUT PEXDeviceCoord		*dc_points;
  OUTPUT unsigned int		*view_index_return;
  OUTPUT unsigned long		*wc_count_return;
  
  {
      pexMapDCtoWCReq	*req;
      pexMapDCtoWCReply	rep;
-     PEXCoord		*pwcp;
      int			size;
      int			convertFP;
  
--- 1007,1017 ----
  INPUT PEXDeviceCoord		*dc_points;
  OUTPUT unsigned int		*view_index_return;
  OUTPUT unsigned long		*wc_count_return;
+ OUTPUT PEXCoord			**wc_points_return;
  
  {
      pexMapDCtoWCReq	*req;
      pexMapDCtoWCReply	rep;
      int			size;
      int			convertFP;
  
***************
*** 1029,1035 ****
          UnlockDisplay (display);
          PEXSyncHandle (display);
  	*wc_count_return = 0;
!         return (NULL);            /* return an error */
      }
  
      *view_index_return = rep.viewIndex;
--- 1040,1047 ----
          UnlockDisplay (display);
          PEXSyncHandle (display);
  	*wc_count_return = 0;
! 	*wc_points_return = NULL;
!         return (0);            /* return an error */
      }
  
      *view_index_return = rep.viewIndex;
***************
*** 1040,1048 ****
       * Allocate a buffer for the replies to pass back to the client.
       */
  
!     pwcp = (PEXCoord *) PEXAllocBuf ((unsigned) (rep.length << 2));
  
!     _XRead (display, (char *) pwcp, (long) (rep.length << 2));
  
  
      /*
--- 1052,1061 ----
       * Allocate a buffer for the replies to pass back to the client.
       */
  
!     *wc_points_return = (PEXCoord *) PEXAllocBuf (
! 	(unsigned) (rep.length << 2));
  
!     _XRead (display, (char *) *wc_points_return, (long) (rep.length << 2));
  
  
      /*
***************
*** 1052,1064 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (pwcp);
  }
  
  
! PEXDeviceCoord *
  PEXMapWCToDC (display, wks, wc_count, wc_points,
!     view_index, dc_count_return)
  
  INPUT Display			*display;
  INPUT PEXWorkstation		wks;
--- 1065,1077 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
! Status
  PEXMapWCToDC (display, wks, wc_count, wc_points,
!     view_index, dc_count_return, dc_points_return)
  
  INPUT Display			*display;
  INPUT PEXWorkstation		wks;
***************
*** 1066,1076 ****
  INPUT PEXCoord			*wc_points;
  INPUT unsigned int		view_index;
  OUTPUT unsigned long		*dc_count_return;
  
  {
      pexMapWCtoDCReq	*req;
      pexMapWCtoDCReply	rep;
-     PEXDeviceCoord	*pdcp;
      int			size;
      int			convertFP;
  
--- 1079,1089 ----
  INPUT PEXCoord			*wc_points;
  INPUT unsigned int		view_index;
  OUTPUT unsigned long		*dc_count_return;
+ OUTPUT PEXDeviceCoord		**dc_points_return;
  
  {
      pexMapWCtoDCReq	*req;
      pexMapWCtoDCReply	rep;
      int			size;
      int			convertFP;
  
***************
*** 1100,1106 ****
          UnlockDisplay (display);
          PEXSyncHandle (display);
  	*dc_count_return = 0;
!         return (NULL);            /* return an error */
      }
  
      *dc_count_return = rep.numCoords;
--- 1113,1120 ----
          UnlockDisplay (display);
          PEXSyncHandle (display);
  	*dc_count_return = 0;
! 	*dc_points_return = NULL;
!         return (0);            /* return an error */
      }
  
      *dc_count_return = rep.numCoords;
***************
*** 1110,1118 ****
       * Allocate a buffer for the replies to pass back to the client.
       */
  
!     pdcp = (PEXDeviceCoord *) PEXAllocBuf ((unsigned) (rep.length << 2));
  
!     _XRead (display, (char *) pdcp, (long) (rep.length << 2));
  
  
      /*
--- 1124,1133 ----
       * Allocate a buffer for the replies to pass back to the client.
       */
  
!     *dc_points_return = (PEXDeviceCoord *) PEXAllocBuf (
! 	(unsigned) (rep.length << 2));
  
!     _XRead (display, (char *) *dc_points_return, (long) (rep.length << 2));
  
  
      /*
***************
*** 1122,1128 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (pdcp);
  }
  
  
--- 1137,1143 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
*** /tmp/da01893	Mon Aug 10 17:24:35 1992
--- extensions/lib/PEXlib/pl_startup.c	Mon Aug 10 17:00:21 1992
***************
*** 1,19 ****
! /* $XConsortium: pl_startup.c,v 1.3 92/06/12 11:52:46 mor Exp $ */
  
! /************************************************************************
! Copyright 1987,1991,1992 by Digital Equipment Corporation, Maynard,
! Massachusetts, and the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
--- 1,20 ----
! /* $XConsortium: pl_startup.c,v 1.8 92/08/10 17:04:00 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
***************
*** 22,39 ****
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
  
- *************************************************************************/
- 
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_global_def.h"
  
  
! Status
! PEXInitialize (display)
  
! INPUT Display	*display;
  
  {
      pexGetExtensionInfoReq	*req;
--- 23,43 ----
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
+ ******************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_global_def.h"
+ #include <stdio.h>
  
  
! int
! PEXInitialize (display, info_return, length, error_string)
  
! INPUT  Display		*display;
! OUTPUT PEXExtensionInfo	**info_return;
! INPUT  int		length;
! OUTPUT char		*error_string;
  
  {
      pexGetExtensionInfoReq	*req;
***************
*** 48,54 ****
  
      extern XExtCodes		*XInitExtension();
      extern Status		_PEXConvertMaxHitsEvent();
!     char			*_PEXLookupErrorString();
      int				_PEXCloseDisplay();
  
  
--- 52,59 ----
  
      extern XExtCodes		*XInitExtension();
      extern Status		_PEXConvertMaxHitsEvent();
!     Bool			_PEXConvertOCError();
!     void			_PEXPrintOCError();
      int				_PEXCloseDisplay();
  
  
***************
*** 63,71 ****
       * Initialize the PEX extension on this display.
       */
  
      if ((pExtCodes = XInitExtension (display, "X3D-PEX")) == NULL)
      {
! 	return (0);
      }
  
  
--- 68,85 ----
       * Initialize the PEX extension on this display.
       */
  
+     *info_return = NULL;
+ 
      if ((pExtCodes = XInitExtension (display, "X3D-PEX")) == NULL)
      {
!         UnlockDisplay (display);
! 	PEXSyncHandle (display);
! 
! 	XGetErrorDatabaseText (display, "PEXlibMessage", "BadExtension",
! 	    "Could not initialize the PEX extension on the specified display",
!             error_string, length);
! 
! 	return (PEXBadExtension);
      }
  
  
***************
*** 79,89 ****
      pexDisplayInfo = (PEXDisplayInfo *)
  	PEXAllocBuf ((unsigned) (sizeof (PEXDisplayInfo)));
  
      PEXAddDisplayInfo (display, pexDisplayInfo);
  
      pexDisplayInfo->extCodes = pExtCodes;
      pexDisplayInfo->extOpcode = pExtCodes->major_opcode;
!     pexDisplayInfo->lastResID = NULL;
      pexDisplayInfo->lastReqType = -1;
      pexDisplayInfo->lastReqNum = -1;
  
--- 93,115 ----
      pexDisplayInfo = (PEXDisplayInfo *)
  	PEXAllocBuf ((unsigned) (sizeof (PEXDisplayInfo)));
  
+     if (!pexDisplayInfo)
+     {
+         UnlockDisplay (display);
+ 	PEXSyncHandle (display);
+ 
+ 	XGetErrorDatabaseText (display, "PEXlibMessage", "BadLocalAlloc",
+ 	    "Could not allocate memory for PEXlib internal usage",
+             error_string, length);
+ 
+ 	return (PEXBadLocalAlloc);
+     }
+ 
      PEXAddDisplayInfo (display, pexDisplayInfo);
  
      pexDisplayInfo->extCodes = pExtCodes;
      pexDisplayInfo->extOpcode = pExtCodes->major_opcode;
!     pexDisplayInfo->lastResID = 0;
      pexDisplayInfo->lastReqType = -1;
      pexDisplayInfo->lastReqNum = -1;
  
***************
*** 98,106 ****
       */
  
      enumType = PEXETFloatFormat;
!     enumReturn = pexDisplayInfo->fpSupport =
! 	PEXGetEnumTypeInfo (display, DefaultRootWindow (display), 1,
! 	&enumType, PEXETIndex, &numReturn);
      pexDisplayInfo->fpCount = *numReturn;
  
      for (i = match = 0; i < *numReturn; i++)
--- 124,144 ----
       */
  
      enumType = PEXETFloatFormat;
! 
!     if (PEXGetEnumTypeInfo (display, DefaultRootWindow (display), 1,
! 	&enumType, PEXETIndex, &numReturn, &enumReturn) == 0)
!     {
!         UnlockDisplay (display);
! 	PEXSyncHandle (display);
! 
! 	XGetErrorDatabaseText (display, "PEXlibMessage", "GetEnumFailure",
! 	    "Implicit call to PEXGetEnumTypeInfo by PEXInitialize failed",
!             error_string, length);
! 
! 	return (PEXBadFloatConversion);
!     }
! 
!     pexDisplayInfo->fpSupport = enumReturn;
      pexDisplayInfo->fpCount = *numReturn;
  
      for (i = match = 0; i < *numReturn; i++)
***************
*** 110,117 ****
  	    break;
  	}
  
!     if (match || enumReturn == NULL || *numReturn == 0)
      {
  	pexDisplayInfo->fpFormat = NATIVE_FP_FORMAT;
  	pexDisplayInfo->fpConvert = 0;
      }
--- 148,166 ----
  	    break;
  	}
  
!     if (enumReturn == NULL || *numReturn == 0)
      {
+         UnlockDisplay (display);
+ 	PEXSyncHandle (display);
+ 
+ 	XGetErrorDatabaseText (display, "PEXlibMessage", "NoFloats",
+ 	    "No floating point formats supported by server",
+             error_string, length);
+ 
+ 	return (PEXBadFloatConversion);
+     }
+     else if (match)
+     {
  	pexDisplayInfo->fpFormat = NATIVE_FP_FORMAT;
  	pexDisplayInfo->fpConvert = 0;
      }
***************
*** 125,140 ****
  
  
      /*
!      * Tell Xlib where to get the text for the PEX errors.
       */
  
!     XESetErrorString (display, pExtCodes->extension, _PEXLookupErrorString);
  
  
      /*
!      * Tell Xlib how to convert the MaxHitReachedEvent.
       */
  
      XESetWireToEvent (display, pExtCodes->first_event + PEXMaxHitsReached,
  	_PEXConvertMaxHitsEvent);
  
--- 174,199 ----
  
  
      /*
!      * Tell Xlib how to convert an Output Command error from
!      * wire to client format.
       */
  
!     XESetWireToError (display, pExtCodes->first_error + BadPEXOutputCommand,
! 	_PEXConvertOCError);
  
  
      /*
!      * Tell Xlib how to print the OC error.
       */
  
+     XESetPrintErrorValues (display, pExtCodes->extension, _PEXPrintOCError);
+ 
+ 
+     /*
+      * Tell Xlib how to convert a MaxHitReachedEvent from
+      * wire to client format.
+      */
+ 
      XESetWireToEvent (display, pExtCodes->first_event + PEXMaxHitsReached,
  	_PEXConvertMaxHitsEvent);
  
***************
*** 158,164 ****
      {
          UnlockDisplay (display);
  	PEXSyncHandle (display);
! 	return (0);              /* return an error */
      }
  
  
--- 217,228 ----
      {
          UnlockDisplay (display);
  	PEXSyncHandle (display);
! 
! 	XGetErrorDatabaseText (display, "PEXlibMessage", "GetInfoFailure",
! 	    "Could not get PEX extension information",
!             error_string, length);
! 
! 	return (PEXBadExtension);
      }
  
  
***************
*** 166,172 ****
       * Get the vendor name string and null terminate it.
       */
  
!     string = (char *) PEXAllocBuf ((unsigned) (rep.lengthName + 1));
      _XReadPad (display, (char *) string, (long) (rep.lengthName));
      string[rep.lengthName] = '\0';
  
--- 230,247 ----
       * Get the vendor name string and null terminate it.
       */
  
!     if (!(string = (char *) PEXAllocBuf ((unsigned) (rep.lengthName + 1))))
!     {
!         UnlockDisplay (display);
! 	PEXSyncHandle (display);
! 
! 	XGetErrorDatabaseText (display, "PEXlibMessage", "BadLocalAlloc",
! 	    "Could not allocate memory for PEXlib internal usage",
!             error_string, length);
! 
! 	return (PEXBadLocalAlloc);
!     }
! 
      _XReadPad (display, (char *) string, (long) (rep.lengthName));
      string[rep.lengthName] = '\0';
  
***************
*** 183,191 ****
       * Store the extension info.
       */
  
!     extInfo = pexDisplayInfo->extInfo =	(PEXExtensionInfo *)
  	PEXAllocBuf ((unsigned) (sizeof (PEXExtensionInfo)));
  
      extInfo->major_version = rep.majorVersion;
      extInfo->minor_version = rep.minorVersion;
      extInfo->release = rep.release;
--- 258,275 ----
       * Store the extension info.
       */
  
!     extInfo = *info_return = pexDisplayInfo->extInfo = (PEXExtensionInfo *)
  	PEXAllocBuf ((unsigned) (sizeof (PEXExtensionInfo)));
  
+     if (!extInfo)
+     {
+ 	XGetErrorDatabaseText (display, "PEXlibMessage", "BadLocalAlloc",
+ 	    "Could not allocate memory for PEXlib internal usage",
+             error_string, length);
+ 
+ 	return (PEXBadLocalAlloc);
+     }
+ 
      extInfo->major_version = rep.majorVersion;
      extInfo->minor_version = rep.minorVersion;
      extInfo->release = rep.release;
***************
*** 195,201 ****
      extInfo->first_event = pExtCodes->first_event;
      extInfo->first_error = pExtCodes->first_error;
  
!     return (1);
  }
  
  
--- 279,300 ----
      extInfo->first_event = pExtCodes->first_event;
      extInfo->first_error = pExtCodes->first_error;
  
!     if (rep.majorVersion == PEX_PROTO_MAJOR)
! 	return (0);
!     else
!     {
! 	char str[PEXErrorStringLength];
! 
! 	XGetErrorDatabaseText (display, "PEXlibMessage", "BadProtoVersion",
! 	    "Client speaks PEX %d.%d; Server speaks PEX %d.%d",
!             str, PEXErrorStringLength);
! 
! 	sprintf (error_string, str,
!             PEX_PROTO_MAJOR, PEX_PROTO_MINOR,
! 	    rep.majorVersion, rep.minorVersion);
!   
! 	return (PEXBadProtocolVersion);
!     }
  }
  
  
***************
*** 232,240 ****
   * be compatible with the PEX SI.  In 6.0, the encoding should be fixed.
   */
  
! PEXEnumTypeDesc *
  PEXGetEnumTypeInfo (display, drawable, numEnumTypes, enumTypes,
!     itemMask, numReturn)
  
  INPUT Display			*display;
  INPUT Drawable			drawable;
--- 331,339 ----
   * be compatible with the PEX SI.  In 6.0, the encoding should be fixed.
   */
  
! Status
  PEXGetEnumTypeInfo (display, drawable, numEnumTypes, enumTypes,
!     itemMask, numReturn, enumInfoReturn)
  
  INPUT Display			*display;
  INPUT Drawable			drawable;
***************
*** 242,247 ****
--- 341,347 ----
  INPUT int			*enumTypes;
  INPUT unsigned long		itemMask;
  OUTPUT unsigned long		**numReturn;
+ OUTPUT PEXEnumTypeDesc		**enumInfoReturn;
  
  {
      pexGetEnumTypeInfoReq	*req;
***************
*** 252,258 ****
      char			*pstring;
      CARD16			*dstEnumType;
      int				*srcEnumType;
-     PEXEnumTypeDesc		*enumInfoReturn;
      int				numDescs, totDescs, length, i, j;
  
  
--- 352,357 ----
***************
*** 285,291 ****
  	UnlockDisplay (display);
  	PEXSyncHandle (display);
  	*numReturn = NULL;
! 	return (NULL);			/* return an error */
      }
  
  
--- 384,391 ----
  	UnlockDisplay (display);
  	PEXSyncHandle (display);
  	*numReturn = NULL;
! 	*enumInfoReturn = NULL;
! 	return (0);			/* return an error */
      }
  
  
***************
*** 298,304 ****
  	UnlockDisplay (display);
  	PEXSyncHandle (display);
  	*numReturn = NULL;
! 	return (NULL);			/* return an error */
      }
  
  
--- 398,405 ----
  	UnlockDisplay (display);
  	PEXSyncHandle (display);
  	*numReturn = NULL;
! 	*enumInfoReturn = NULL;
! 	return (0);			/* return an error */
      }
  
  
***************
*** 353,359 ****
       * Allocate storage for enum data to be returned to the client.
       */
  
!     enumInfoReturn = penum = (PEXEnumTypeDesc *)
  	PEXAllocBuf ((unsigned) (totDescs * sizeof (PEXEnumTypeDesc)));
  
  
--- 454,460 ----
       * Allocate storage for enum data to be returned to the client.
       */
  
!     *enumInfoReturn = penum = (PEXEnumTypeDesc *)
  	PEXAllocBuf ((unsigned) (totDescs * sizeof (PEXEnumTypeDesc)));
  
  
***************
*** 430,451 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (enumInfoReturn);
  }
  
  
! PEXImpDepConstant *
! PEXGetImpDepConstants (display, drawable, numNames, names)
  
! INPUT Display		*display;
! INPUT Drawable		drawable;
! INPUT unsigned long	numNames;
! INPUT unsigned short	*names;
  
  {
      pexGetImpDepConstantsReq	*req;
      pexGetImpDepConstantsReply	rep;
-     PEXImpDepConstant		*constantsReturn;
      int				convertFP;
  
  
--- 531,552 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
! Status
! PEXGetImpDepConstants (display, drawable, numNames, names, constantsReturn)
  
! INPUT Display			*display;
! INPUT Drawable			drawable;
! INPUT unsigned long		numNames;
! INPUT unsigned short		*names;
! OUTPUT PEXImpDepConstant	**constantsReturn;
  
  {
      pexGetImpDepConstantsReq	*req;
      pexGetImpDepConstantsReply	rep;
      int				convertFP;
  
  
***************
*** 472,478 ****
      {
          UnlockDisplay (display);
          PEXSyncHandle (display);
!         return (NULL);            /* return an error */
      }
  
  
--- 573,580 ----
      {
          UnlockDisplay (display);
          PEXSyncHandle (display);
! 	*constantsReturn = NULL;
!         return (0);            /* return an error */
      }
  
  
***************
*** 480,486 ****
       * Allocate a buffer for the client.
       */
  
!     constantsReturn = (PEXImpDepConstant *) PEXAllocBuf (
  	(unsigned) (numNames * sizeof (PEXImpDepConstant)));
  
  
--- 582,588 ----
       * Allocate a buffer for the client.
       */
  
!     *constantsReturn = (PEXImpDepConstant *) PEXAllocBuf (
  	(unsigned) (numNames * sizeof (PEXImpDepConstant)));
  
  
***************
*** 488,494 ****
       * Copy the values into the buffer.
       */
  
!     _XRead (display, (char *) constantsReturn,
  	(long) (numNames * sizeof (CARD32)));
  
  
--- 590,596 ----
       * Copy the values into the buffer.
       */
  
!     _XRead (display, (char *) *constantsReturn,
  	(long) (numNames * sizeof (CARD32)));
  
  
***************
*** 499,511 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (constantsReturn);
  }
  
  
! PEXRenderingTarget *
  PEXMatchRenderingTargets (display, drawable, depth, type, visual,
!     maxTargets, numTargets)
  
  INPUT Display			*display;
  INPUT Drawable			drawable;
--- 601,613 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
! Status
  PEXMatchRenderingTargets (display, drawable, depth, type, visual,
!     maxTargets, numTargets, targets)
  
  INPUT Display			*display;
  INPUT Drawable			drawable;
***************
*** 514,524 ****
  INPUT Visual			*visual;
  INPUT unsigned long  	        maxTargets;
  OUTPUT unsigned long		*numTargets;
  
  {
      pexMatchRenderingTargetsReq		*req;
!     pexMatchRenderingTargetsReply        rep;
!     PEXRenderingTarget			*info, *targets;
      pexRendererTarget			*matchRec;
      int					i;
  
--- 616,627 ----
  INPUT Visual			*visual;
  INPUT unsigned long  	        maxTargets;
  OUTPUT unsigned long		*numTargets;
+ OUTPUT PEXRenderingTarget	**targets;
  
  {
      pexMatchRenderingTargetsReq		*req;
!     pexMatchRenderingTargetsReply       rep;
!     PEXRenderingTarget			*info;
      pexRendererTarget			*matchRec;
      int					i;
  
***************
*** 547,553 ****
          UnlockDisplay (display);
          PEXSyncHandle (display);
  	*numTargets = 0;
!         return (NULL);               /* return an error */
      }
  
      *numTargets = rep.length / 2;
--- 650,657 ----
          UnlockDisplay (display);
          PEXSyncHandle (display);
  	*numTargets = 0;
! 	*targets = NULL;
!         return (0);               /* return an error */
      }
  
      *numTargets = rep.length / 2;
***************
*** 567,573 ****
       * Allocate a buffer for the target list to pass back to the client.
       */
  
!     targets = info = (PEXRenderingTarget *) PEXAllocBuf (
  	(unsigned) (*numTargets * sizeof (PEXRenderingTarget)));
  
      for (i = 0; i < *numTargets; i++)
--- 671,677 ----
       * Allocate a buffer for the target list to pass back to the client.
       */
  
!     *targets = info = (PEXRenderingTarget *) PEXAllocBuf (
  	(unsigned) (*numTargets * sizeof (PEXRenderingTarget)));
  
      for (i = 0; i < *numTargets; i++)
***************
*** 587,665 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (targets);
  }
  
  
  /*
!  * Routine to return the PEX error message for PEX errors.
!  * The callback is set up in PEXInitialize.
   */
  
! char *
! _PEXLookupErrorString (display, errorcode, extCodes, buffer, nbytes)
  
! INPUT	Display		*display;
! INPUT	int		errorcode;
! INPUT	XExtCodes	*extCodes;
! INPUT	char		*buffer;
! INPUT	int		nbytes;
  
  {
!     char	*defaultp;
!     char	buf[32];
!     int		code;
  
  
      /*
!      * Note that there is no way with the current extension interface to
!      * access the opcode and numCorrect fields of the OutputCommand error.
       */
  
!     /*
!      * Xlib calls this for all errors.  Is this an error we know
!      * anything about?
!      */
  
!     code = errorcode - extCodes->first_error;
!     if ((code <= PEXMaxError) && (code >= 0))
!     {
! 	/*
! 	 * Set up the default message for XGetErrorDatabaseText.
! 	 */
  
! 	defaultp = PEXErrorList[code];
  
  
! 	/*
! 	 * Even though the Xlib doc says this wants the application name in the
! 	 * 2nd arg and the message type in the 3rd arg, Xlib calls it with the
! 	 * message type in the 2nd arg and the ASCIIized error code in the 3rd
! 	 * arg.  This seems to match what's in XErrorDB.
! 	 */
  
! 	/*
! 	 * Convert the error code to ASCII.
! 	 */
  
- 	sprintf (buf, "%d", code);
  
  
! 	/*
! 	 * Look up the error in the error database.  This is the proper way
! 	 * to do things, even though we have no errors there now.
! 	 */
  
! 	XGetErrorDatabaseText (display, "PEXProtoError", buf, defaultp,
! 	    buffer, nbytes);
!     }
  
  
!     /*
!      * The R3 code ignores the error return.
!      */
  
!     return (buffer);
  }
  
  
--- 691,779 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
  /*
!  * Routine called to convert an Output Command error from wire format
!  * to client format.  The callback is set up in PEXInitialize.
   */
  
! Bool
! _PEXConvertOCError (display, client_error, wire_error)
  
! INPUT Display		*display;
! OUTPUT XErrorEvent	*client_error;
! INPUT xError		*wire_error;
  
  {
!     PEXOCErrorEvent		*client = (PEXOCErrorEvent *) client_error;
!     pexOutputCommandError	*wire = (pexOutputCommandError *) wire_error;
  
  
      /*
!      * PEXOCErrorEvent = XErrorEvent + oc_op_code + ocs_processed_count
!      * Xlib will convert all of the XErrorEvent fields.  We must
!      * convert the op code and count.
       */
  
!     client->op_code = wire->opcode;
!     client->count = wire->numCommands;
  
!     return (True);
! }
  
! 
! /*
!  * Routine called when an Output Command error is printed.
!  * The callback is set up in PEXInitialize.
!  */
  
+ void
+ _PEXPrintOCError (display, error, fp)
  
! INPUT Display		*display;
! INPUT XErrorEvent	*error;
! #ifdef __STDC__
! INPUT void		*fp;
! #else
! INPUT FILE		*fp;
! #endif
! {
!     /*
!      * Xlib bug - extension codes should be passed to this function,
!      * but they're not.  We must get them ourselves.
!      */
  
!     PEXDisplayInfo 	*pexDisplayInfo;
!     char		opcode_message[PEXErrorStringLength];
!     char		oc_count_message[PEXErrorStringLength];
  
  
+     PEXGetDisplayInfo (display, pexDisplayInfo);
  
!     if (error->error_code ==
! 	pexDisplayInfo->extCodes->first_error + BadPEXOutputCommand)
!     {
! 	PEXOCErrorEvent	*oc_error = (PEXOCErrorEvent *) error;
  
! 	XGetErrorDatabaseText (display,
! 	    "PEXlibMessage", "OCErrorOpCode",
! 	    "Opcode of failed output command : %d\n",
!             opcode_message, PEXErrorStringLength);
  
+ 	XGetErrorDatabaseText (display,
+ 	    "PEXlibMessage", "OCErrorCount",
+ 	    "Number of output commands processed before error : %d\n",
+             oc_count_message, PEXErrorStringLength);
  
! 	fprintf (fp, "  ");
! 	fprintf (fp, opcode_message, oc_error->op_code);
  
! 	fprintf (fp, "  ");
! 	fprintf (fp, oc_count_message, oc_error->count);
!     }
  }
  
  
*** /tmp/da01912	Mon Aug 10 17:24:39 1992
--- extensions/lib/PEXlib/pl_struct.c	Fri Jul 24 13:39:15 1992
***************
*** 1,19 ****
! /* $XConsortium: pl_struct.c,v 1.4 92/06/12 10:23:23 mor Exp $ */
  
! /************************************************************************
! Copyright 1987,1991,1992 by Digital Equipment Corporation, Maynard,
! Massachusetts, and the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the names of Digital or MIT not be
! used in advertising or publicity pertaining to distribution of the
! software without specific, written prior permission.  
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
--- 1,20 ----
! /* $XConsortium: pl_struct.c,v 1.6 92/07/24 13:43:11 mor Exp $ */
  
! /******************************************************************************
! Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
  
  DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
***************
*** 22,30 ****
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
  
- *************************************************************************/
- 
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
--- 23,30 ----
  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
  SOFTWARE.
+ ******************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
***************
*** 149,166 ****
  }
  
  
! PEXStructureInfo *
! PEXGetStructureInfo (display, structure, float_format, value_mask)
  
  INPUT Display			*display;
  INPUT PEXStructure		structure;
  INPUT int			float_format;
  INPUT unsigned long		value_mask;
  
  {
      pexGetStructureInfoReq	*req;
      pexGetStructureInfoReply	rep;
-     PEXStructureInfo		*psi;
  
  
      /*
--- 149,167 ----
  }
  
  
! Status
! PEXGetStructureInfo (display, structure, float_format,
!     value_mask, info_return)
  
  INPUT Display			*display;
  INPUT PEXStructure		structure;
  INPUT int			float_format;
  INPUT unsigned long		value_mask;
+ OUTPUT PEXStructureInfo		*info_return;
  
  {
      pexGetStructureInfoReq	*req;
      pexGetStructureInfoReply	rep;
  
  
      /*
***************
*** 183,209 ****
      {
          UnlockDisplay (display);
          PEXSyncHandle (display);
! 	return (NULL);            /* return an error */
      }
  
  
-     /*
-      * Allocate a buffer for the replies to pass back to the client.
-      */
- 
-     psi = (PEXStructureInfo *) PEXAllocBuf
- 	((unsigned) (sizeof (PEXStructureInfo)));
- 
      if (value_mask & PEXEditMode)
! 	psi->edit_mode = rep.editMode;
      if (value_mask & PEXElementPtr)
! 	psi->element_pointer = rep.elementPtr;
      if (value_mask & PEXNumElements)
! 	psi->element_count = rep.numElements;
      if (value_mask & PEXLengthStructure)
! 	psi->size = rep.lengthStructure;
      if (value_mask & PEXHasRefs)
! 	psi->has_refs = rep.hasRefs;
  
  
      /*
--- 184,203 ----
      {
          UnlockDisplay (display);
          PEXSyncHandle (display);
! 	return (0);            /* return an error */
      }
  
  
      if (value_mask & PEXEditMode)
! 	info_return->edit_mode = rep.editMode;
      if (value_mask & PEXElementPtr)
! 	info_return->element_pointer = rep.elementPtr;
      if (value_mask & PEXNumElements)
! 	info_return->element_count = rep.numElements;
      if (value_mask & PEXLengthStructure)
! 	info_return->size = rep.lengthStructure;
      if (value_mask & PEXHasRefs)
! 	info_return->has_refs = rep.hasRefs;
  
  
      /*
***************
*** 213,225 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (psi);
  }
  
  
! PEXElementInfo *
  PEXGetElementInfo (display, structure, whence1, offset1, whence2, offset2,
!     float_format, numElementInfoReturn)
  
  INPUT Display		*display;
  INPUT PEXStructure	structure;
--- 207,219 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
! Status
  PEXGetElementInfo (display, structure, whence1, offset1, whence2, offset2,
!     float_format, numElementInfoReturn, infoReturn)
  
  INPUT Display		*display;
  INPUT PEXStructure	structure;
***************
*** 229,239 ****
  INPUT long		offset2;
  INPUT int		float_format;
  OUTPUT unsigned long	*numElementInfoReturn;
  
  {
      pexGetElementInfoReq	*req;
      pexGetElementInfoReply	rep;
-     pexElementInfo		*pei;
  
  
      /*
--- 223,233 ----
  INPUT long		offset2;
  INPUT int		float_format;
  OUTPUT unsigned long	*numElementInfoReturn;
+ OUTPUT PEXElementInfo	**infoReturn;
  
  {
      pexGetElementInfoReq	*req;
      pexGetElementInfoReply	rep;
  
  
      /*
***************
*** 260,266 ****
          UnlockDisplay (display);
          PEXSyncHandle (display);
  	*numElementInfoReturn = 0;
! 	return (NULL);        /* return an error */
      }
  
      *numElementInfoReturn = rep.numInfo;
--- 254,261 ----
          UnlockDisplay (display);
          PEXSyncHandle (display);
  	*numElementInfoReturn = 0;
! 	*infoReturn = NULL;
! 	return (0);        /* return an error */
      }
  
      *numElementInfoReturn = rep.numInfo;
***************
*** 270,278 ****
       * Allocate a buffer for the replies to pass back to the client.
       */
  
!     pei = (pexElementInfo *) PEXAllocBuf ((unsigned) (rep.length << 2));
  
!     _XRead (display, (char *) pei, (long) (rep.length << 2));
  
  
      /*
--- 265,274 ----
       * Allocate a buffer for the replies to pass back to the client.
       */
  
!     *infoReturn = (PEXElementInfo *) PEXAllocBuf (
! 	(unsigned) (rep.length << 2));
  
!     _XRead (display, (char *) *infoReturn, (long) (rep.length << 2));
  
  
      /*
***************
*** 282,288 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return ((PEXElementInfo *) pei);
  }
  
  
--- 278,284 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
***************
*** 519,527 ****
  }
  
  
! char *
  PEXFetchElements (display, structure, whence1, offset1, whence2, offset2,
!     float_format, numElementsReturn, sizeReturn)
  
  INPUT Display		*display;
  INPUT PEXStructure	structure;
--- 515,523 ----
  }
  
  
! Status
  PEXFetchElements (display, structure, whence1, offset1, whence2, offset2,
!     float_format, numElementsReturn, sizeReturn, ocsReturn)
  
  INPUT Display		*display;
  INPUT PEXStructure	structure;
***************
*** 532,543 ****
  INPUT int		float_format;
  OUTPUT unsigned long	*numElementsReturn;
  OUTPUT unsigned long	*sizeReturn;
  
  {
      pexFetchElementsReq		*req;
      pexFetchElementsReply	rep;
      long			repSize;
-     char	 		*ocReturn;
      int				server_float_format;
  
  
--- 528,539 ----
  INPUT int		float_format;
  OUTPUT unsigned long	*numElementsReturn;
  OUTPUT unsigned long	*sizeReturn;
+ OUTPUT char		**ocsReturn;
  
  {
      pexFetchElementsReq		*req;
      pexFetchElementsReply	rep;
      long			repSize;
      int				server_float_format;
  
  
***************
*** 567,573 ****
          UnlockDisplay (display);
          PEXSyncHandle (display);
      	*sizeReturn = *numElementsReturn = 0;
!         return (NULL);		/* return an error */
      }
  
      *numElementsReturn = rep.numElements;
--- 563,570 ----
          UnlockDisplay (display);
          PEXSyncHandle (display);
      	*sizeReturn = *numElementsReturn = 0;
! 	*ocsReturn = NULL;
!         return (0);		/* return an error */
      }
  
      *numElementsReturn = rep.numElements;
***************
*** 580,586 ****
  	 */
  
  	*sizeReturn = 0;
! 	ocReturn = NULL;
      }
      else
      {
--- 577,583 ----
  	 */
  
  	*sizeReturn = 0;
! 	*ocsReturn = NULL;
      }
      else
      {
***************
*** 589,597 ****
  	 */
  
  	*sizeReturn = repSize = rep.length << 2;
! 	ocReturn = (char *) PEXAllocBuf (repSize);
! 	if (ocReturn != NULL)
! 	    _XRead (display, ocReturn, (long) repSize);
      }
  
  
--- 586,594 ----
  	 */
  
  	*sizeReturn = repSize = rep.length << 2;
! 	*ocsReturn = (char *) PEXAllocBuf (repSize);
! 	if (*ocsReturn != NULL)
! 	    _XRead (display, *ocsReturn, (long) repSize);
      }
  
  
***************
*** 602,608 ****
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (ocReturn);
  }
  
  
--- 599,605 ----
      UnlockDisplay (display);
      PEXSyncHandle (display);
  
!     return (1);
  }
  
  
*** /tmp/da01931	Mon Aug 10 17:24:43 1992
--- extensions/lib/PEXlib/Imakefile	Fri Jul 24 14:01:08 1992
***************
*** 1,4 ****
! XCOMM $XConsortium: Imakefile,v 1.7 92/06/30 16:27:06 rws Exp $
  
  #define DoNormalLib NormalLibPex
  #define DoSharedLib SharedLibPex
--- 1,17 ----
! XCOMM $XConsortium: Imakefile,v 1.8 92/07/24 14:05:36 mor Exp $
! XCOMM
! XCOMM Copyright 1992 by the Massachusetts Institute of Technology
! XCOMM 
! XCOMM Permission to use, copy, modify, distribute, and sell this software and
! XCOMM its documentation for any purpose is hereby granted without fee, provided
! XCOMM that the above copyright notice appear in all copies and that both that
! XCOMM copyright notice and this permission notice appear in supporting
! XCOMM documentation, and that the name of M.I.T. not be used in advertising or
! XCOMM publicity pertaining to distribution of the software without specific,
! XCOMM written prior permission.  M.I.T. makes no representations about the
! XCOMM suitability of this software for any purpose.  It is provided "as is"
! XCOMM without express or implied warranty.
! XCOMM
  
  #define DoNormalLib NormalLibPex
  #define DoSharedLib SharedLibPex
***************
*** 44,49 ****
--- 57,63 ----
  	pl_sc.c \
  	pl_startup.c \
  	pl_struct.c \
+ 	pl_util.c \
  	pl_wks.c
  	
  OBJS =  pl_escape.o \
***************
*** 63,68 ****
--- 77,83 ----
  	pl_sc.o \
  	pl_startup.o \
  	pl_struct.o \
+ 	pl_util.o \
  	pl_wks.o
  	
  
*** /tmp/da01950	Mon Aug 10 17:24:46 1992
--- extensions/lib/PEXlib/pl_oc_dec.c	Thu Aug  6 22:51:23 1992
***************
*** 1,21 ****
! /* $XConsortium: pl_oc_dec.c,v 1.4 92/06/30 15:53:19 mor Exp $ */
  
! /************************************************************************
! Copyright 1992 by the Massachusetts Institute of Technology,
! Cambridge, Massachusetts.
  
                          All Rights Reserved
  
! Permission to use, copy, modify, and distribute this software and its 
! documentation for any purpose and without fee is hereby granted, 
! provided that the above copyright notice appear in all copies and that
! both that copyright notice and this permission notice appear in 
! supporting documentation, and that the name of MIT not be used in
! advertising or publicity pertaining to distribution of the software
! without specific, written prior permission.  
  
- *************************************************************************/
- 
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
--- 1,21 ----
! /* $XConsortium: pl_oc_dec.c,v 1.7 92/08/06 22:56:35 mor Exp $ */
  
! /******************************************************************************
! Copyright 1992 by the Massachusetts Institute of Technology
  
                          All Rights Reserved
  
! Permission to use, copy, modify, distribute, and sell this software and its
! documentation for any purpose is hereby granted without fee, provided that
! the above copyright notice appear in all copies and that both that
! copyright notice and this permission notice appear in supporting
! documentation, and that the name of M.I.T. not be used in advertising or
! publicity pertaining to distribution of the software without specific,
! written prior permission.  M.I.T. makes no representations about the
! suitability of this software for any purpose.  It is provided "as is"
! without express or implied warranty.
! ******************************************************************************/
  
  #include "PEXlib.h"
  #include "PEXlibint.h"
  #include "pl_oc_util.h"
***************
*** 405,411 ****
      pexModelClipVolume 	*oc = (pexModelClipVolume *) *ocSrc;
      int		   	size;
      
!     ocDest->data.SetModelClipVolume.operator = oc->modelClipOperator;
      ocDest->data.SetModelClipVolume.count = oc->numHalfSpaces;
      size = oc->numHalfSpaces * sizeof (PEXHalfSpace);
      ocDest->data.SetModelClipVolume.half_spaces =
--- 405,411 ----
      pexModelClipVolume 	*oc = (pexModelClipVolume *) *ocSrc;
      int		   	size;
      
!     ocDest->data.SetModelClipVolume.op = oc->modelClipOperator;
      ocDest->data.SetModelClipVolume.count = oc->numHalfSpaces;
      size = oc->numHalfSpaces * sizeof (PEXHalfSpace);
      ocDest->data.SetModelClipVolume.half_spaces =
***************
*** 426,432 ****
      pexModelClipVolume2D	*oc = (pexModelClipVolume2D *) *ocSrc;
      int		   		size;
      
!     ocDest->data.SetModelClipVolume2D.operator = oc->modelClipOperator;
      ocDest->data.SetModelClipVolume2D.count = oc->numHalfSpaces;
      size = oc->numHalfSpaces * sizeof (PEXHalfSpace2D);
      ocDest->data.SetModelClipVolume2D.half_spaces =
--- 426,432 ----
      pexModelClipVolume2D	*oc = (pexModelClipVolume2D *) *ocSrc;
      int		   		size;
      
!     ocDest->data.SetModelClipVolume2D.op = oc->modelClipOperator;
      ocDest->data.SetModelClipVolume2D.count = oc->numHalfSpaces;
      size = oc->numHalfSpaces * sizeof (PEXHalfSpace2D);
      ocDest->data.SetModelClipVolume2D.half_spaces =
***************
*** 1262,1269 ****
      ocDest->data.QuadrilateralMesh.facet_attributes = oc->facetAttribs;
      ocDest->data.QuadrilateralMesh.vertex_attributes = oc->vertexAttribs;
      ocDest->data.QuadrilateralMesh.color_type = oc->colorType;
!     ocDest->data.QuadrilateralMesh.col_count = oc->nPts;
!     ocDest->data.QuadrilateralMesh.row_count = oc->mPts;
  
      lenofColor = GetColorLength (oc->colorType);
      lenofFacetDataList = ((oc->mPts - 1) * (oc->nPts - 1)) *
--- 1262,1269 ----
      ocDest->data.QuadrilateralMesh.facet_attributes = oc->facetAttribs;
      ocDest->data.QuadrilateralMesh.vertex_attributes = oc->vertexAttribs;
      ocDest->data.QuadrilateralMesh.color_type = oc->colorType;
!     ocDest->data.QuadrilateralMesh.col_count = oc->mPts;
!     ocDest->data.QuadrilateralMesh.row_count = oc->nPts;
  
      lenofColor = GetColorLength (oc->colorType);
      lenofFacetDataList = ((oc->mPts - 1) * (oc->nPts - 1)) *
