Path: news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9201222258.AA14647@alex.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2324) close XBUG #4873: xauth should write MIT-MAGIC-COOKIE-1 first
Date: Wed, 22 Jan 92 17:58:22 EST
From: Stephen Gildea <gildea@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

Subject: xauth doesn't always write MIT-MAGIC-COOKIE-1 first
### bug number:   4873
### area:         xauth
### severity:     low
### comments:     R4 Xlib requires this.  The "merge" bug is fixed, see #4446
###               fixed in process.c 1.39

Also fixes remove code logic.  Now reports actual number of entries
removed and doesn't examine freed memory.

*** /tmp/,RCSt1a14630	Wed Jan 22 17:52:40 1992
--- clients/xauth/process.c	Wed Jan 22 17:38:13 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: process.c,v 1.38 91/12/16 19:34:35 gildea Exp $
   *
   * Copyright 1989 Massachusetts Institute of Technology
   *
--- 1,5 ----
  /*
!  * $XConsortium: process.c,v 1.39 92/01/22 17:34:28 gildea Exp $
   *
   * Copyright 1989 Massachusetts Institute of Technology
   *
***************
*** 736,742 ****
      char *tmpnam;
  {
      FILE *fp;
!     AuthList *list;
  
      /*
       * xdm and auth spec assumes auth file is 12 or fewer characters
--- 736,742 ----
      char *tmpnam;
  {
      FILE *fp;
!     AuthList *list, *magic_cookie;
  
      /*
       * xdm and auth spec assumes auth file is 12 or fewer characters
***************
*** 751,759 ****
  	return -1;
      } 
  
      for (list = xauth_head; list; list = list->next) {
! 	XauWriteAuth (fp, list->auth);
      }
  
      (void) fclose (fp);
      return 0;
--- 751,774 ----
  	return -1;
      } 
  
+     /*
+      * Write MIT-MAGIC-COOKIE-1 first, because R4 Xlib knows
+      * only that and uses the first authorization it finds.
+      */
+     magic_cookie = (AuthList *)NULL;
      for (list = xauth_head; list; list = list->next) {
! 	if (list->auth->name_length == 18
! 	    && strncmp(list->auth->name, "MIT-MAGIC-COOKIE-1", 18) == 0)
! 	{
! 	    magic_cookie = list;
! 	    XauWriteAuth (fp, list->auth);
! 	    break;
! 	}
      }
+     for (list = xauth_head; list; list = list->next) {
+ 	if (list != magic_cookie)
+ 	    XauWriteAuth (fp, list->auth);
+     }
  
      (void) fclose (fp);
      return 0;
***************
*** 1035,1041 ****
      int status;
      int errors = 0;
      Xauth proto;
!     AuthList *l;
  
      /*
       * iterate
--- 1050,1056 ----
      int status;
      int errors = 0;
      Xauth proto;
!     AuthList *l, *next;
  
      /*
       * iterate
***************
*** 1050,1056 ****
  	    continue;
  	}
  	status = 0;
! 	for (l = xauth_head; l; l = l->next) {
  	    if (match_auth_dpy (&proto, l->auth)) {
  		if (yfunc) {
  		    status = (*yfunc) (inputfilename, lineno,
--- 1065,1072 ----
  	    continue;
  	}
  	status = 0;
! 	for (l = xauth_head; l; l = next) {
! 	    next = l->next;
  	    if (match_auth_dpy (&proto, l->auth)) {
  		if (yfunc) {
  		    status = (*yfunc) (inputfilename, lineno,
***************
*** 1084,1125 ****
  {
      int *nremovedp = (int *) data;
      AuthList **listp = &xauth_head;
!     AuthList *prev = NULL, *list = (*listp);
!     int removed = 0, notremoved = 0;
  
-     if (!list) {
- 	*nremovedp = 0;
- 	return 1;			/* if nothing to remove */
-     }
- 
      /*
!      * run through list removing any records that match
       */
!     while (list) {
! 	if (match_auth_dpy (list->auth, auth)) {
! 	    AuthList *next = list->next;	      /* next one to look at */
! 	    if (prev) {
! 		prev->next = next;		       /* unlink current one */
! 	    } else {
! 		*listp = next;			       /* bump start of list */
! 	    }
! 	    XauDisposeAuth (list->auth);                    /* free the auth */
! 	    free (list);				    /* free the link */
! 	    list = next;			  /* go look at the next one */
! 	    removed++;
! 	    xauth_modified = True;
! 	} else {
! 	    notremoved++;
! 	    prev = list;
! 	    list = list->next;
! 	}
!     }
! 
!     if (notremoved == 0) {		/* if nothing left */
! 	*listp = NULL;			/* then null out list */
!     }
!     *nremovedp = removed;
!     return 0;
  }
  
  /*
--- 1100,1118 ----
  {
      int *nremovedp = (int *) data;
      AuthList **listp = &xauth_head;
!     AuthList *list;
  
      /*
!      * unlink the auth we were asked to
       */
!     while ((list = *listp)->auth != auth)
! 	listp = &list->next;
!     *listp = list->next;
!     XauDisposeAuth (list->auth);                    /* free the auth */
!     free (list);				    /* free the link */
!     xauth_modified = True;
!     (*nremovedp)++;
!     return 1;
  }
  
  /*
***************
*** 1558,1566 ****
      /* allow bogus stuff */
      die (0);
      /* NOTREACHED */
- #ifdef SIGNALRETURNSINT
      return -1;				/* for picky compilers */
- #endif
  }
  
  
--- 1551,1557 ----
