Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9207151836.AA21886@alex.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2610) new Font Service protocol document
Date: Wed, 15 Jul 92 14:36:22 EDT
From: Stephen Gildea <gildea@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

This is the new Font Service protocol document.  The only substantive
change is that the version now reads 2.0.  The implementation of this
protocol was sent in two parts in fix-trackers seq 2543.

Clarifications:

Zero metrics imply non-existent character.
Definition of "invalid range" made explicit.
Glyph scanlines are zero-padded.

Many typos have also been fixed.

*** /tmp/da03287	Tue Jul 14 18:52:58 1992
--- doc/FSProtocol/protocol.ms	Thu Jul  9 18:16:48 1992
***************
*** 1,3 ****
--- 1,4 ----
+ .\" $XConsortium: protocol.ms,v 1.9 92/07/09 18:16:13 gildea Exp $
  .\" Use tbl, -ms, and macros.t
  .EH ''''
  .OH ''''
***************
*** 10,16 ****
  .ce 50
  \s+3\fBThe X Font Service Protocol\fP\s-3
  .sp
! \fBVersion 1.0\fP
  \fBMIT X Consortium Standard\fR
  .sp
  \fBX Version 11, Release 5\fR
--- 11,17 ----
  .ce 50
  \s+3\fBThe X Font Service Protocol\fP\s-3
  .sp
! \fBVersion 2.0\fP
  \fBMIT X Consortium Standard\fR
  .sp
  \fBX Version 11, Release 5\fR
***************
*** 307,313 ****
  .PN CreateAC ) 
  and switched among (with
  .PN SetAuthorization )
! to represent all of these "font users" properly.
  .LP
  ALTERNATESERVER:  [ name:  STRING8, 
  .br
--- 308,314 ----
  .PN CreateAC ) 
  and switched among (with
  .PN SetAuthorization )
! to represent all of these ``font users'' properly.
  .LP
  ALTERNATESERVER:  [ name:  STRING8, 
  .br
***************
*** 685,691 ****
  linear interpretation of MAX-CHAR is less than that of MIN-CHAR,
  or if MIN-CHAR is less than the font's
  XFONTINFO.CHAR-RANGE.MIN-CHAR, or if MAX-CHAR is greater than the
! font's XFONTINFO.CHAR-RANGE.MAX-CHAR, a Range error is returned.
  .LP
  RESOLUTION:	[ x-resolution:		CARD16,
  .br
--- 686,692 ----
  linear interpretation of MAX-CHAR is less than that of MIN-CHAR,
  or if MIN-CHAR is less than the font's
  XFONTINFO.CHAR-RANGE.MIN-CHAR, or if MAX-CHAR is greater than the
! font's XFONTINFO.CHAR-RANGE.MAX-CHAR, the range is invalid.
  .LP
  RESOLUTION:	[ x-resolution:		CARD16,
  .br
***************
*** 978,987 ****
  CLIENT-MINOR-PROTOCOL-VERSION specify which version of the
  font service protocol the client would like to use.  If the
  client can support multiple versions, the highest version
! should be given.  The first version of the protocol has a
! major version of 1 and a minor version of 0.
  .IP
! The AUTH-PROTOCOLS contains a list of protocol names and
  optional initial data for which the client can provide
  information.  The server may use this to determine which
  protocol to use or as part of the initial exchange of
--- 979,988 ----
  CLIENT-MINOR-PROTOCOL-VERSION specify which version of the
  font service protocol the client would like to use.  If the
  client can support multiple versions, the highest version
! should be given.  This version of the protocol has a
! major version of 2 and a minor version of 0.
  .IP
! The AUTHORIZATION-PROTOCOLS contains a list of protocol names and
  optional initial data for which the client can provide
  information.  The server may use this to determine which
  protocol to use or as part of the initial exchange of
***************
*** 1212,1218 ****
  last reply, which may contain zero or more names, this field
  is set to zero.
  .LP
! .IN "SetCatlogues" "" "@DEF@"
  .PN SetCatalogues
  .IP
  \fInames\fP\^:  LISTofSTRING8
--- 1213,1219 ----
  last reply, which may contain zero or more names, this field
  is set to zero.
  .LP
! .IN "SetCatalogues" "" "@DEF@"
  .PN SetCatalogues
  .IP
  \fInames\fP\^:  LISTofSTRING8
***************
*** 1243,1249 ****
  .LP
     =>
  .IP
! \fInames\fP\^:  PIPLISTofSTRING8
  .IP
  Errors:  
  .PN Alloc
--- 1244,1250 ----
  .LP
     =>
  .IP
! \fInames\fP\^:  LISTofSTRING8
  .IP
  Errors:  
  .PN Alloc
***************
*** 1268,1274 ****
  \fIevent-mask\fP\^:  EVENTMASK
  .IP
  Errors:
! .PN EventMask
  .IP
  This request specifies the set of maskable events that the
  extension indicated by EXTENSION-OPCODE (or zero for the core)
--- 1269,1276 ----
  \fIevent-mask\fP\^:  EVENTMASK
  .IP
  Errors:
! .PN EventMask ,
! .PN Request
  .IP
  This request specifies the set of maskable events that the
  extension indicated by EXTENSION-OPCODE (or zero for the core)
***************
*** 1299,1310 ****
  .IN "GetEventMask" "" "@DEF@"
  .PN GetEventMask
  .IP
! \fIextension-opcdoe\fP\^:  CARD8
  .LP
    =>
  .IP
  \fIevent-mask\fP\^:  EVENTMASK
  .IP
  This request returns the set of maskable core events the
  extension indicated by EXTENSION-OPCODE (or the core if zero)
  should generate for the client.  Non-maskable events are
--- 1301,1315 ----
  .IN "GetEventMask" "" "@DEF@"
  .PN GetEventMask
  .IP
! \fIextension-opcode\fP\^:  CARD8
  .LP
    =>
  .IP
  \fIevent-mask\fP\^:  EVENTMASK
  .IP
+ Errors:
+ .PN Request
+ .IP
  This request returns the set of maskable core events the
  extension indicated by EXTENSION-OPCODE (or the core if zero)
  should generate for the client.  Non-maskable events are
***************
*** 1322,1328 ****
  .IP
  \fIac\fP\^:  ACCESSCONTEXT
  .br
! \fIauthorization-protocols\fP\^:  STofAUTH
  .LP
    =>
  .IP
--- 1327,1333 ----
  .IP
  \fIac\fP\^:  ACCESSCONTEXT
  .br
! \fIauthorization-protocols\fP\^:  LISTofAUTH
  .LP
    =>
  .IP
***************
*** 1330,1335 ****
--- 1335,1343 ----
  	authorization-index:		CARD8
  	authorization-data:		LISTofBYTE
  .IP
+ Errors:
+ .PN IDChoice
+ .IP
  This request creates a new 
  .PN AccessContext 
  object within the
***************
*** 1544,1552 ****
  .IP
  \fIreplies-following-hint\fP\^:  CARD32
  .br
- \fIname\fP\^:  STRING8
- .br
  \fIinfo\fP\^:  XFONTINFO
  .IP
  Errors:  
  .PN Alloc
--- 1552,1560 ----
  .IP
  \fIreplies-following-hint\fP\^:  CARD32
  .br
  \fIinfo\fP\^:  XFONTINFO
+ .br
+ \fIname\fP\^:  STRING8
  .IP
  Errors:  
  .PN Alloc
***************
*** 1792,1800 ****
  .sp
  The extents for each character code in the resulting set (which
  may contain duplicates) are returned in the order in
! which the characters codes appear in the set.  If a character 
! is not encoded within the font, zero-filled metrics are 
! substituted.
  .sp
  If FONTID is not associated with any open fonts, a 
  .PN Font 
--- 1800,1811 ----
  .sp
  The extents for each character code in the resulting set (which
  may contain duplicates) are returned in the order in
! which the character codes appear in the set.
! At least one metric for each character shall be non-zero
! unless the character is not encoded in the font, in which case
! all-zero metrics are returned.
! A blank, zero-width character can be encoded
! with non-zero but equal left and right bearings.
  .sp
  If FONTID is not associated with any open fonts, a 
  .PN Font 
***************
*** 1876,1882 ****
  .sp
  If RANGE is False, then CHARS specifies the set of character
  codes for which bitmaps are returned.  If CHARS is of zero
! length, then a single reply containing a zero-length ist of
  offsets and bitmaps is returned.
  .sp
  If any of the resulting character ranges are invalid, a Range
--- 1887,1893 ----
  .sp
  If RANGE is False, then CHARS specifies the set of character
  codes for which bitmaps are returned.  If CHARS is of zero
! length, then a single reply containing a zero-length list of
  offsets and bitmaps is returned.
  .sp
  If any of the resulting character ranges are invalid, a Range
***************
*** 1901,1907 ****
  and clear bits represent inked and non-inked pixels,
  respectively.
  .sp
! Each scanline of a glyph image, from top to bottom, is padded
  on the right to a multiple of the number of bits specified by
  FORMAT.SCANLINE-PAD.  The scanline is then divided from left
  to right into a sequence of FORMAT.SCANLINE-UNIT bits.  The
--- 1912,1918 ----
  and clear bits represent inked and non-inked pixels,
  respectively.
  .sp
! Each scanline of a glyph image, from top to bottom, is zero-padded
  on the right to a multiple of the number of bits specified by
  FORMAT.SCANLINE-PAD.  The scanline is then divided from left
  to right into a sequence of FORMAT.SCANLINE-UNIT bits.  The
***************
*** 2325,2332 ****
--- 2336,2355 ----
  .XS
  \*(SN Data Types
  .XE
+ .sp 6p
  .LP
+ ACCESSCONTEXT
  .sp 6p
+ .TA .75i .75i .75i .75i
+ 4	CARD32	access context with at least one of the following bits set:
+ .sp 6p
+ #x1fffffff
+ .sp 6p
+ but none of the following bits set:
+ .sp 6p
+ #xe0000000		zero
+ .sp 18p
+ .LP
  .TS
  tab (@) ;
  l s s
***************
*** 2637,2645 ****
  1		CARD8		drawing direction
  .sp 6p
  		0		LeftToRight
  		1		RightToLeft
  .sp 6p
! 1			unused
  .br
  2		CHAR2B		default character
  .br
--- 2660,2669 ----
  1		CARD8		drawing direction
  .sp 6p
  		0		LeftToRight
+ .br
  		1		RightToLeft
  .sp 6p
! 1					unused
  .br
  2		CHAR2B		default character
  .br
***************
*** 2651,2657 ****
  .br
  2		INT16		font descent
  .br
! n		PROPINFO	property data
  .NH 2
  Requests
  .XS
--- 2675,2681 ----
  .br
  2		INT16		font descent
  .br
! n		PROPINFO		property data
  .NH 2
  Requests
  .XS
***************
*** 2668,2674 ****
  @#x42@Most Significant Byte first
  @#x6c@Least Significant Byte first
  1@CARD8@number of auth in auth-data
! 2@1@client-major-protocol-version
  2@0@client-minor-protocol-version
  2@a/4@length of auth-data
  a@LISTofAUTH@auth-data
--- 2692,2698 ----
  @#x42@Most Significant Byte first
  @#x6c@Least Significant Byte first
  1@CARD8@number of auth in auth-data
! 2@2@client-major-protocol-version
  2@0@client-minor-protocol-version
  2@a/4@length of auth-data
  a@LISTofAUTH@auth-data
***************
*** 2678,2684 ****
  @1@Continue
  @2@Busy
  @3@Denied
! 2@1@major version
  2@0@minor version
  1@CARD8@number of alternate-servers-hint
  1@CARD8@authorization-index
--- 2702,2708 ----
  @1@Continue
  @2@Busy
  @3@Denied
! 2@2@major version
  2@0@minor version
  1@CARD8@number of alternate-servers-hint
  1@CARD8@authorization-index
***************
*** 3056,3063 ****
  1@0@type reply
  1@BOOL@otherid-valid
  2@CARD16@sequence-number
! 4@3@length
  4@FONTID@otherid
  .TE
  .sp 12p
  .TS
--- 3080,3089 ----
  1@0@type reply
  1@BOOL@otherid-valid
  2@CARD16@sequence-number
! 4@4@length
  4@FONTID@otherid
+ 1@BOOL@cachable
+ 3@@unused
  .TE
  .sp 12p
  .TS
***************
*** 3287,3293 ****
  1@5@AccessContext
  2@CARD16@sequence-number
  4@5@length
! 4@TIMESTAMP2timestamp
  1@CARD8@major-opcode
  1@CARD8@minor-opcode
  2@@unused
--- 3313,3319 ----
  1@5@AccessContext
  2@CARD16@sequence-number
  4@5@length
! 4@TIMESTAMP@timestamp
  1@CARD8@major-opcode
  1@CARD8@minor-opcode
  2@@unused
***************
*** 3453,3459 ****
  or omissions.  The protocol presented here was primarily designed by Jim
  Fulton, Keith Packard, and Bob Scheifler.  Special thanks goes to Ned
  Batchelder, Jim Flowers, and Axel Deininger for their invigorating comments
! which never failed to make this a better document.  Finally, David Lemke 
  deserves great credit for designing and coding the sample implementation.
  .NH 1
  References
--- 3479,3487 ----
  or omissions.  The protocol presented here was primarily designed by Jim
  Fulton, Keith Packard, and Bob Scheifler.  Special thanks goes to Ned
  Batchelder, Jim Flowers, and Axel Deininger for their invigorating comments
! which never failed to make this a better document.
! Stephen Gildea edited version 2 of this document.
! Finally, David Lemke 
  deserves great credit for designing and coding the sample implementation.
  .NH 1
  References
***************
*** 3554,3558 ****
--- 3582,3592 ----
  to having the connection terminated), it should retry for an
  implementation-dependent length of time (see Xlib's 
  handling of ECONNREFUSED in XConnDis.c).
+ .\"
+ .\" print Table of Contents page
+ .EH ''''
+ .OH ''''
  .bp
+ .EF ''''
+ .OF ''''
  .PX
