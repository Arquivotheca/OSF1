Path: news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9204141420.AA22812@explain.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2455) close XBUG #5120: lib/X/XcmsLRGB.c:  free -> Xfree
Date: Tue, 14 Apr 92 10:20:56 EDT
From: Bob Scheifler <rws@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

### bug number:   5120
### area:         Xlib
### severity:     low
### comments:     weird looking diff; just change the code in place

*** /tmp/d22792	Tue Apr 14 10:19:22 1992
--- lib/X/XcmsLRGB.c	Mon Apr 13 19:39:39 1992
***************
*** 1,4 ****
! /* $XConsortium: XcmsLRGB.c,v 1.22 92/01/02 19:28:13 rws Exp $" */
  
  /*
   * Code and supporting documentation (c) Copyright 1990 1991 Tektronix, Inc.
--- 1,4 ----
! /* $XConsortium: XcmsLRGB.c,v 1.23 92/04/13 19:38:17 rws Exp $" */
  
  /*
   * Code and supporting documentation (c) Copyright 1990 1991 Tektronix, Inc.
***************
*** 512,518 ****
  	    *pValue++ = (long)_XcmsGetElement(format_return, &pChar,
  		    &nitems) / (XcmsFloat)XDCCC_NUMBER;
  	}
! 	XFree (property_return);
  	pPerScrnInfo->screenWhitePt.spec.CIEXYZ.X =
  		pScreenData->RGBtoXYZmatrix[0][0] +
  		pScreenData->RGBtoXYZmatrix[0][1] +
--- 512,518 ----
  	    *pValue++ = (long)_XcmsGetElement(format_return, &pChar,
  		    &nitems) / (XcmsFloat)XDCCC_NUMBER;
  	}
! 	Xfree ((char *)property_return);
  	pPerScrnInfo->screenWhitePt.spec.CIEXYZ.X =
  		pScreenData->RGBtoXYZmatrix[0][0] +
  		pScreenData->RGBtoXYZmatrix[0][1] +
***************
*** 574,580 ****
      if (CorrectAtom == None ||
  	!_XcmsGetProperty (dpy, RootWindow(dpy, screenNumber), CorrectAtom,
  	   &format_return, &nitems, &nbytes_return, &property_return)) {
! 	XFree (property_return);
  	goto FreeSCCData;
      }
  
--- 574,580 ----
      if (CorrectAtom == None ||
  	!_XcmsGetProperty (dpy, RootWindow(dpy, screenNumber), CorrectAtom,
  	   &format_return, &nitems, &nbytes_return, &property_return)) {
! 	Xfree ((char *)property_return);
  	goto FreeSCCData;
      }
  
***************
*** 596,602 ****
  	     *		intensity2
  	     */
  	    if (nitems < 9) {
! 		XFree (property_return);
  		goto FreeSCCData;
  	    }
  	    count = 3;
--- 596,602 ----
  	     *		intensity2
  	     */
  	    if (nitems < 9) {
! 		Xfree ((char *)property_return);
  		goto FreeSCCData;
  	    }
  	    count = 3;
***************
*** 613,619 ****
  	     *		intensity2
  	     */
  	    if (nitems < 7) {
! 		XFree (property_return);
  		goto FreeSCCData;
  	    }
  	    count = 1;
--- 613,619 ----
  	     *		intensity2
  	     */
  	    if (nitems < 7) {
! 		Xfree ((char *)property_return);
  		goto FreeSCCData;
  	    }
  	    count = 1;
***************
*** 629,641 ****
  	     *		intensity2
  	     */
  	    if (nitems < 6) {
! 		XFree (property_return);
  		goto FreeSCCData;
  	    }
  	    count = 0;
  	    break;
  	  default:
! 	    XFree (property_return);
  	    goto FreeSCCData;
  	}
  
--- 629,641 ----
  	     *		intensity2
  	     */
  	    if (nitems < 6) {
! 		Xfree ((char *)property_return);
  		goto FreeSCCData;
  	    }
  	    count = 0;
  	    break;
  	  default:
! 	    Xfree ((char *)property_return);
  	    goto FreeSCCData;
  	}
  
***************
*** 668,674 ****
  	    /* Create, initialize, and add map */
  	    if (!(pNewMap = (XcmsIntensityMap *) 
  			      Xcalloc (1, sizeof(XcmsIntensityMap)))) {
! 		Xfree(pScreenData);
  		return(XcmsFailure);
  	    }
  	    pNewMap->visualID = visualID;
--- 668,674 ----
  	    /* Create, initialize, and add map */
  	    if (!(pNewMap = (XcmsIntensityMap *) 
  			      Xcalloc (1, sizeof(XcmsIntensityMap)))) {
! 		Xfree((char *)pScreenData);
  		return(XcmsFailure);
  	    }
  	    pNewMap->visualID = visualID;
***************
*** 762,768 ****
  		}
  	    }
  	} else {
! 	    XFree (property_return);
  	    goto FreeSCCData;
  	}
  
--- 762,768 ----
  		}
  	    }
  	} else {
! 	    Xfree ((char *)property_return);
  	    goto FreeSCCData;
  	}
  
***************
*** 789,798 ****
  #endif /* ALLDEBUG */
      }
  
!     XFree (property_return);
  
      /* Free the old memory and use the new structure created. */
!     LINEAR_RGB_FreeSCCData((LINEAR_RGB_SCCData *) pPerScrnInfo->screenData);
  
      pPerScrnInfo->functionSet = (XPointer) &XcmsLinearRGBFunctionSet;
  
--- 789,798 ----
  #endif /* ALLDEBUG */
      }
  
!     Xfree ((char *)property_return);
  
      /* Free the old memory and use the new structure created. */
!     LINEAR_RGB_FreeSCCData(pPerScrnInfo->screenData);
  
      pPerScrnInfo->functionSet = (XPointer) &XcmsLinearRGBFunctionSet;
  
***************
*** 803,827 ****
      return(XcmsSuccess);
  
  FreeBlueTblElements:
!     free(pScreenData->pBlueTbl->pBase);
  
  FreeBlueTbl:
!     free(pScreenData->pBlueTbl);
  
  FreeGreenTblElements:
!     free(pScreenData->pBlueTbl->pBase);
  
  FreeGreenTbl:
!     free(pScreenData->pGreenTbl);
  
  FreeRedTblElements:
!     free(pScreenData->pRedTbl->pBase);
  
  FreeRedTbl:
!     free(pScreenData->pRedTbl);
  
  FreeSCCData:
!     free(pScreenData);
      pPerScrnInfo->state = XcmsInitNone;
      return(XcmsFailure);
  }
--- 803,827 ----
      return(XcmsSuccess);
  
  FreeBlueTblElements:
!     Xfree((char *)pScreenData->pBlueTbl->pBase);
  
  FreeBlueTbl:
!     Xfree((char *)pScreenData->pBlueTbl);
  
  FreeGreenTblElements:
!     Xfree((char *)pScreenData->pBlueTbl->pBase);
  
  FreeGreenTbl:
!     Xfree((char *)pScreenData->pGreenTbl);
  
  FreeRedTblElements:
!     Xfree((char *)pScreenData->pRedTbl->pBase);
  
  FreeRedTbl:
!     Xfree((char *)pScreenData->pRedTbl);
  
  FreeSCCData:
!     Xfree((char *)pScreenData);
      pPerScrnInfo->state = XcmsInitNone;
      return(XcmsFailure);
  }
***************
*** 853,863 ****
  		if (pScreenData->pRedTbl->pBase != 
  		    pScreenData->pGreenTbl->pBase) {
  		    if (pScreenData->pGreenTbl->pBase) {
! 			free (pScreenData->pGreenTbl->pBase);
  		    }
  		}
  		if (pScreenData->pGreenTbl != pScreenData->pRedTbl) {
! 		    free (pScreenData->pGreenTbl);
  		}
  	    }
  	    if (pScreenData->pBlueTbl) {
--- 853,863 ----
  		if (pScreenData->pRedTbl->pBase != 
  		    pScreenData->pGreenTbl->pBase) {
  		    if (pScreenData->pGreenTbl->pBase) {
! 			Xfree ((char *)pScreenData->pGreenTbl->pBase);
  		    }
  		}
  		if (pScreenData->pGreenTbl != pScreenData->pRedTbl) {
! 		    Xfree ((char *)pScreenData->pGreenTbl);
  		}
  	    }
  	    if (pScreenData->pBlueTbl) {
***************
*** 864,882 ****
  		if (pScreenData->pRedTbl->pBase != 
  		    pScreenData->pBlueTbl->pBase) {
  		    if (pScreenData->pBlueTbl->pBase) {
! 			free (pScreenData->pBlueTbl->pBase);
  		    }
  		}
  		if (pScreenData->pBlueTbl != pScreenData->pRedTbl) {
! 		    free (pScreenData->pBlueTbl);
  		}
  	    }
  	    if (pScreenData->pRedTbl->pBase) {
! 		free (pScreenData->pRedTbl->pBase);
  	    }
! 	    free (pScreenData->pRedTbl);
  	}
! 	free (pScreenData);
      }
  }
  
--- 864,882 ----
  		if (pScreenData->pRedTbl->pBase != 
  		    pScreenData->pBlueTbl->pBase) {
  		    if (pScreenData->pBlueTbl->pBase) {
! 			Xfree ((char *)pScreenData->pBlueTbl->pBase);
  		    }
  		}
  		if (pScreenData->pBlueTbl != pScreenData->pRedTbl) {
! 		    Xfree ((char *)pScreenData->pBlueTbl);
  		}
  	    }
  	    if (pScreenData->pRedTbl->pBase) {
! 		Xfree ((char *)pScreenData->pRedTbl->pBase);
  	    }
! 	    Xfree ((char *)pScreenData->pRedTbl);
  	}
! 	Xfree ((char *)pScreenData);
      }
  }
  
