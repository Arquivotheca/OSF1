Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9205262140.AA06283@alex.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2566) close XBUG #5287: fontserver: protocol violation in initial connection
Date: Tue, 26 May 92 17:40:49 EDT
From: Stephen Gildea <gildea@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

        Subject: fontserver: protocol violation in initial connection
        ### bug number:   5287
        ### area:         fontserver
        ### severity:     low

*** /tmp/da06227	Tue May 26 17:38:10 1992
--- fonts/server/difs/dispatch.c	Tue May 26 17:37:58 1992
***************
*** 1,4 ****
! /* $XConsortium: dispatch.c,v 1.11 92/05/12 18:08:05 gildea Exp $ */
  /*
   * protocol dispatcher
   */
--- 1,4 ----
! /* $XConsortium: dispatch.c,v 1.12 92/05/26 17:37:00 gildea Exp $ */
  /*
   * protocol dispatcher
   */
***************
*** 7,28 ****
   * Portions Copyright 1987 by Digital Equipment Corporation and the
   * Massachusetts Institute of Technology
   *
!  * Permission to use, copy, modify, and distribute this protoype software
!  * and its documentation to Members and Affiliates of the MIT X Consortium
!  * any purpose and without fee is hereby granted, provided
   * that the above copyright notice appear in all copies and that both that
   * copyright notice and this permission notice appear in supporting
   * documentation, and that the names of Network Computing Devices, Digital or
!  * MIT not be used in advertising or publicity pertaining to distribution of
!  * the software without specific, written prior permission.
   *
!  * NETWORK COMPUTING DEVICES, DIGITAL AND MIT DISCLAIM ALL WARRANTIES WITH
!  * REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
!  * AND FITNESS, IN NO EVENT SHALL NETWORK COMPUTING DEVICES, DIGITAL OR MIT BE
!  * LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
!  * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
!  * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
!  * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   */
  
  #include	"FS.h"
--- 7,28 ----
   * Portions Copyright 1987 by Digital Equipment Corporation and the
   * Massachusetts Institute of Technology
   *
!  * Permission to use, copy, modify, distribute, and sell this software and
!  * its documentation for any purpose is hereby granted without fee, provided
   * that the above copyright notice appear in all copies and that both that
   * copyright notice and this permission notice appear in supporting
   * documentation, and that the names of Network Computing Devices, Digital or
!  * M.I.T. not be used in advertising or publicity pertaining to distribution
!  * of the software without specific, written prior permission.
   *
!  * NETWORK COMPUTING DEVICES, DIGITAL AND M.I.T. DISCLAIM ALL WARRANTIES WITH
!  * REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF
!  * MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL NETWORK COMPUTING DEVICES,
!  * DIGITAL OR M.I.T. BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL
!  * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
!  * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
!  * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
!  * THIS SOFTWARE.
   */
  
  #include	"FS.h"
***************
*** 182,188 ****
      client->major_version = prefix->major_version;
      client->minor_version = prefix->minor_version;
      stuff->reqType = 2;
!     stuff->length += (prefix->auth_len >> 2);
      if (client->swapped) {
  	swaps(&stuff->length, whichbyte);
      }
--- 182,188 ----
      client->major_version = prefix->major_version;
      client->minor_version = prefix->minor_version;
      stuff->reqType = 2;
!     stuff->length += prefix->auth_len;
      if (client->swapped) {
  	swaps(&stuff->length, whichbyte);
      }
***************
*** 221,227 ****
  /* XXXX -- this needs work for multiple auth replies */
  
      /* build up a list of the stuff */
!     for (i = 0, ad = auth_data; i < prefix->num_auths; i++) {
  	client_auth[i].namelen = *(short *) ad;
  	ad += 2;
  	client_auth[i].datalen = *(short *) ad;
--- 221,227 ----
  /* XXXX -- this needs work for multiple auth replies */
  
      /* build up a list of the stuff */
!     for (i = 0, ad = auth_data; i < (int)prefix->num_auths; i++) {
  	client_auth[i].namelen = *(short *) ad;
  	ad += 2;
  	client_auth[i].datalen = *(short *) ad;
***************
*** 501,507 ****
      	}
      }
      /* build up a list of the stuff */
!     for (i = 0, ad = (pointer) &stuff[1]; i < stuff->num_auths; i++) {
  	acp[i].namelen = *(short *) ad;
  	ad += 2;
  	acp[i].datalen = *(short *) ad;
--- 501,507 ----
      	}
      }
      /* build up a list of the stuff */
!     for (i = 0, ad = (pointer) &stuff[1]; i < (int)stuff->num_auths; i++) {
  	acp[i].namelen = *(short *) ad;
  	ad += 2;
  	acp[i].datalen = *(short *) ad;
