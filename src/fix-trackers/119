Path: news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9202032208.AA08344@xenon.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Cc: mor@expo.lcs.mit.edu
Subject: (seq: 2342) close XBUG #4780, #4883: PEX: pchange_struct_refs may cause dereferencing of NULL pointer.  pchange_struct_id_refs crashes server.
Date: Mon, 03 Feb 92 17:08:27 EST
From: Ralph Mor <mor@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com


        Subject: PEX BUG: pchange_struct_refs may cause dereferencing of NULL pointer
        ### bug number:   4780
        ### area:         pex
        ### severity:     medium-high
        ### comments:     


        Subject: PEX: pchange_struct_id_refs crashes server
        ### bug number:   4883
        ### area:         pex
        ### severity:     medium-high
        ### comments:     


*** /tmp/,RCSt1a02844	Mon Feb  3 16:48:58 1992
--- extensions/lib/PEX/cp/cpa_css.c	Mon Feb  3 16:31:59 1992
***************
*** 1,4 ****
! /* $XConsortium: cpa_css.c,v 5.5 91/10/01 03:00:02 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: cpa_css.c,v 5.6 92/02/03 16:32:05 mor Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 888,897 ****
  		return;	/* can't create the new structure */
  	    }
  	}
!     }
!     (void)PEXChangeStructureRefs(  css_srvr->display,
  	    old->xid, new->xid );
!     CPA_FLUSH( css_srvr );
  }
  
  
--- 888,897 ----
  		return;	/* can't create the new structure */
  	    }
  	}
! 	(void)PEXChangeStructureRefs(  css_srvr->display,
  	    old->xid, new->xid );
! 	CPA_FLUSH( css_srvr );
!     }
  }
  
  
*** /tmp/,RCSt1a02871	Mon Feb  3 16:49:48 1992
--- extensions/server/PEX/ddpex/mi/include/miStrMacro.h	Mon Feb  3 16:39:07 1992
***************
*** 1,4 ****
! /* $XConsortium: miStrMacro.h,v 5.2 91/12/26 17:53:13 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: miStrMacro.h,v 5.3 92/02/03 16:38:17 mor Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 39,45 ****
  
  #define MISTR_LENGTH(PS)		(PS)->totalSize
  
! #define MISTR_NUM_REFS(PS)		(PS)->children->numObj
  
  #define MISTR_CURR_EL_OFFSET(PS)	(PS)->currElementOffset
  
--- 39,47 ----
  
  #define MISTR_LENGTH(PS)		(PS)->totalSize
  
! #define MISTR_NUM_CHILDREN(PS)		(PS)->children->numObj
! 
! #define MISTR_NUM_PARENTS(PS)		(PS)->parents->numObj
  
  #define MISTR_CURR_EL_OFFSET(PS)	(PS)->currElementOffset
  
*** /tmp/,RCSt1a02897	Mon Feb  3 16:50:15 1992
--- extensions/server/PEX/ddpex/mi/level4/miStruct.c	Mon Feb  3 16:45:09 1992
***************
*** 1,4 ****
! /* $XConsortium: miStruct.c,v 5.4 92/01/30 15:33:14 mor Exp $ */
  
  
  /***********************************************************
--- 1,4 ----
! /* $XConsortium: miStruct.c,v 5.5 92/02/03 16:45:10 mor Exp $ */
  
  
  /***********************************************************
***************
*** 589,595 ****
  	 * length
  	 */
  	*pLength = MISTR_LENGTH(pheader);
! 	*pHasRefs = MISTR_NUM_REFS(pheader);
  	return (Success);
  }				/* InquireStructureInfo */
  
--- 589,595 ----
  	 * length
  	 */
  	*pLength = MISTR_LENGTH(pheader);
! 	*pHasRefs = MISTR_NUM_PARENTS(pheader) != 0;
  	return (Success);
  }				/* InquireStructureInfo */
  
***************
*** 2041,2087 ****
      execStrOC.head.length = 2;
      execStrOC.id = (pexStructure) pNewStruct;
  
!     /** Search through each of the structure's parents **/
      for (loopcount = pstruct->parents->numObj; loopcount > 0; loopcount--) {
  
! 	/*
! 	 * look through all of this structure's elements to change all 
! 	 * references to this structure the parent list is changed in loop, 
! 	 * so always get first parent
! 	 */
  	parentHandle = *(diStructHandle *) pstruct->parents->pList;
  	pparentStruct = (miStructPtr) (parentHandle)->deviceData;
  
  	/* start looking at the beginning of the parent structure */
! 	position.whence = PEXBeginning;
! 	position.offset = 0;
! 	offsetFromStart = 0;
  
! 	do {
! 	    if ((foundExecuteElement =
! 			find_execute_structure(	parentHandle, &position,
! 						pStruct, &offsetFromStart))
! 		    == PEXFound) {
  		MISTR_FIND_EL(pparentStruct, offsetFromStart, pel);
  		err = (*ReplaceCSSElementTable[PEXOCExecuteStructure])
  					(parentHandle, pel, &execStrOC);
! 		if (err != Success) return (err); }
! 
! 	    /*
! 	     * continue looking for other elements at the element
! 	     * following the last one found
! 	     */
! 	    position.whence = PEXBeginning;
! 	    position.offset = offsetFromStart + 1;
! 
! 	    /*
! 	     * if the last one found was the last element in the
! 	     * struct, don't continue
! 	     */
! 	    if (offsetFromStart == MISTR_NUM_EL(pstruct)) break;
! 
! 	} while (foundExecuteElement == PEXFound);
! 
      }
  
      /*
--- 2041,2074 ----
      execStrOC.head.length = 2;
      execStrOC.id = (pexStructure) pNewStruct;
  
!     /*
!      * Update all references to this structure by walking through the
!      * structure's parent list.  Note that if the structure is referenced
!      * more than once by a parent structure, there will be more than one
!      * occurence of the parent in the parent list.
!      */
!     
      for (loopcount = pstruct->parents->numObj; loopcount > 0; loopcount--) {
  
! 	/* The parent list changes in loop, so always get first parent */
  	parentHandle = *(diStructHandle *) pstruct->parents->pList;
  	pparentStruct = (miStructPtr) (parentHandle)->deviceData;
  
  	/* start looking at the beginning of the parent structure */
!         position.whence = PEXBeginning;
!         position.offset = 0;
!         offsetFromStart = 0;
  
!     	foundExecuteElement = find_execute_structure (parentHandle, &position,
! 		pStruct, &offsetFromStart);
! 
!     	if (foundExecuteElement == PEXFound) {
  		MISTR_FIND_EL(pparentStruct, offsetFromStart, pel);
  		err = (*ReplaceCSSElementTable[PEXOCExecuteStructure])
  					(parentHandle, pel, &execStrOC);
! 		if (err != Success) return (err);
! 	} else
! 		return (!Success);
      }
  
      /*
