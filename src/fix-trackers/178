Path: news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9203042010.AA04528@exhume.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2398) PEX 5.1 dipex SI release part 3 of 4 (swap code)
Date: Wed, 04 Mar 92 15:10:56 EST
From: Jay Hersh <hersh@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com


*** /tmp/da6085	Wed Mar  4 14:46:41 1992
--- extensions/server/PEX/dipex/swap/Imakefile	Wed Mar  4 14:18:45 1992
***************
*** 1,5 ****
  XCOMM
! XCOMM $XConsortium: Imakefile,v 5.7 91/07/24 17:01:28 rws Exp $
  XCOMM
  XCOMM 
  XCOMM Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium
--- 1,5 ----
  XCOMM
! XCOMM $XConsortium: Imakefile,v 5.8 92/03/04 14:18:33 hersh Exp $
  XCOMM
  XCOMM 
  XCOMM Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium
***************
*** 51,61 ****
  
  SRCS =  convUtil.c cOCprim.c uOCprim.c floatconv.c check.c \
  	OCattr.c OCcolour.c convReq.c uconvRep.c Convert.c \
! 	OCTables.c ReqTables.c RepTables.c
  
  OBJS =  convUtil.o cOCprim.o uOCprim.o floatconv.o check.o \
  	OCattr.o OCcolour.o convReq.o uconvRep.o Convert.o \
! 	OCTables.o ReqTables.o RepTables.o
  
  
  PEX_SW_LIBNAME = libdiswapex.a
--- 51,61 ----
  
  SRCS =  convUtil.c cOCprim.c uOCprim.c floatconv.c check.c \
  	OCattr.c OCcolour.c convReq.c uconvRep.c Convert.c \
! 	OCTables.c ReqTables.c RepTables.c convEv.c
  
  OBJS =  convUtil.o cOCprim.o uOCprim.o floatconv.o check.o \
  	OCattr.o OCcolour.o convReq.o uconvRep.o Convert.o \
! 	OCTables.o ReqTables.o RepTables.o convEv.o
  
  
  PEX_SW_LIBNAME = libdiswapex.a
*** /tmp/da6100	Wed Mar  4 14:46:44 1992
--- extensions/server/PEX/dipex/swap/Replies.ci	Wed Mar  4 14:18:48 1992
***************
*** 1,4 ****
! /* $XConsortium: Replies.ci,v 5.2 91/03/15 18:31:38 keith Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: Replies.ci,v 5.3 92/03/04 14:18:42 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 126,129 ****
--- 126,140 ----
  /*  91  */   SWAP_FUNC_PREFIX(ConvertListFontsReply),
  /*  92  */   SWAP_FUNC_PREFIX(ConvertListFontsWithInfoReply),
  /*  93  */   SWAP_FUNC_PREFIX(ConvertQueryTextExtentsReply),
+ /*  94  */   SWAP_FUNC_PREFIX(ConvertMatchRendererTargetsReply),
+ /*  95  */   SWAP_FUNC_PREFIX(NoReply),   /*Escape*/
+ /*  96  */   SWAP_FUNC_PREFIX(EscapeWithReplyReply),   /*EscapeWithReply*/
+ /*  97  */   SWAP_FUNC_PREFIX(NoReply),   /*RenderElements*/
+ /*  98  */   SWAP_FUNC_PREFIX(NoReply),   /*AccumulateState*/
+ /*  99  */   SWAP_FUNC_PREFIX(NoReply),   /*BeginPickOne*/
+ /* 100  */   SWAP_FUNC_PREFIX(ConvertEndPickOneReply),
+ /* 101  */   SWAP_FUNC_PREFIX(ConvertPickOneReply),
+ /* 102  */   SWAP_FUNC_PREFIX(NoReply),   /*BeginPickAll*/
+ /* 103  */   SWAP_FUNC_PREFIX(ConvertEndPickAllReply),
+ /* 104  */   SWAP_FUNC_PREFIX(ConvertPickAllReply)
  };
*** /tmp/da6115	Wed Mar  4 14:46:48 1992
--- extensions/server/PEX/dipex/swap/uOCprim.c	Wed Mar  4 14:18:52 1992
***************
*** 1,4 ****
! /* $XConsortium: uOCprim.c,v 5.5 91/07/01 16:29:35 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: uOCprim.c,v 5.6 92/03/04 14:18:45 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 760,763 ****
--- 760,770 ----
      }
  
      SWAP_INT16 (strmPtr->characteristics);
+ }
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXNoop) (swapPtr, strmPtr)
+ pexSwap	*swapPtr;
+ pexNoop	*strmPtr;
+ {
  }
*** /dev/null	Wed Mar  4 14:46:49 1992
--- extensions/server/PEX/dipex/swap/convEv.c	Wed Mar  4 14:19:54 1992
***************
*** 0 ****
--- 1,62 ----
+ /* $XConsortium: convEv.c,v 1.1 92/03/04 14:19:24 hersh Exp $ */
+ 
+ /************************************************************
+ Copyright 1992 by The Massachusetts Institute of Technology
+ 
+ Permission to use, copy, modify, and distribute this
+ software and its documentation for any purpose and without
+ fee is hereby granted, provided that the above copyright
+ notice appear in all copies and that both that copyright
+ notice and this permission notice appear in supporting
+ docu- mentation, and that the name of MIT not be used in
+ advertising or publicity pertaining to distribution of the
+ software without specific prior written permission.
+ M.I.T. makes no representation about the suitability of
+ this software for any purpose. It is provided "as is"
+ without any express or implied warranty.
+ 
+ MIT DISCLAIMS ALL WARRANTIES WITH REGARD TO  THIS  SOFTWARE,
+ INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FIT-
+ NESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL MIT BE  LI-
+ ABLE  FOR  ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
+ ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,  DATA  OR
+ PROFITS,  WHETHER  IN  AN  ACTION OF CONTRACT, NEGLIGENCE OR
+ OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION  WITH
+ THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ 
+ ******************************************************************/
+ 
+ 
+ #include "X.h"
+ #include "Xproto.h"
+ #include "misc.h"
+ #include "PEX.h"
+ #include "PEXproto.h"
+ #include "PEXprotost.h"
+ #include "pexError.h"
+ #include "pexSwap.h"
+ #include "pex_site.h"
+ #include "ddpex.h"
+ #include "pexLookup.h"
+ #include "convertStr.h"
+ 
+ #undef LOCAL_FLAG
+ #define LOCAL_FLAG extern
+ 
+ 
+ /****************************************************************
+  *  		EVENTS   					*
+  ****************************************************************/
+ 
+ 
+ 
+ void
+ SwapPEXMaxHitsReachedEvent(from, to)
+ pexMaxHitsReachedEvent *from, *to;
+ {
+     to->type = from->type;
+     cpswaps (from->sequenceNumber, to->sequenceNumber);
+     cpswapl (from->rdr, to->rdr);
+ }
+ 
+ 
*** /tmp/da6148	Wed Mar  4 14:46:55 1992
--- extensions/server/PEX/dipex/swap/convReq.c	Wed Mar  4 14:18:59 1992
***************
*** 1,4 ****
! /* $XConsortium: convReq.c,v 5.10 91/12/30 18:23:40 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: convReq.c,v 5.11 92/03/04 14:18:50 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 337,343 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_RENDERER (strmPtr->rdr);
      SWAP_DRAWABLE (strmPtr->drawable);
      SWAP_BITMASK (strmPtr->itemMask);
--- 337,343 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_RENDERER (strmPtr->rdr);
      SWAP_DRAWABLE (strmPtr->drawable);
      SWAP_BITMASK (strmPtr->itemMask);
***************
*** 357,363 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_RENDERER (strmPtr->rdr);
      SWAP_BITMASK (strmPtr->itemMask);
  
--- 357,363 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_RENDERER (strmPtr->rdr);
      SWAP_BITMASK (strmPtr->itemMask);
  
***************
*** 374,380 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_RENDERER (strmPtr->rdr);
      SWAP_BITMASK (strmPtr->itemMask);
      CALL_REQUEST;
--- 374,380 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_RENDERER (strmPtr->rdr);
      SWAP_BITMASK (strmPtr->itemMask);
      CALL_REQUEST;
***************
*** 428,433 ****
--- 428,469 ----
  
  
  ErrorCode
+ SWAP_FUNC_PREFIX(PEXRenderElements) (cntxtPtr, strmPtr)
+ pexContext		*cntxtPtr;
+ pexRenderElementsReq	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_RENDERER (strmPtr->rdr);
+     SWAP_STRUCTURE (strmPtr->sid);
+     SwapElementRange (swapPtr, &strmPtr->range);
+ 
+     CALL_REQUEST;
+ }
+ 
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXAccumulateState) (cntxtPtr, strmPtr)
+ pexContext		*cntxtPtr;
+ pexAccumulateStateReq	*strmPtr;
+ {
+     pexElementRef	*pe;
+     CARD32              i;
+ 
+     pexSwap *swapPtr = cntxtPtr->swap;
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_RENDERER (strmPtr->rdr);
+     SWAP_CARD32 (strmPtr->numElRefs);
+ 
+     pe = (pexElementRef *)(strmPtr+1);
+     for (i = 0; i < strmPtr->numElRefs; i++, pe++)
+ 	SWAP_ELEMENT_REF (*pe);
+ 
+     CALL_REQUEST;
+ }
+ 
+ 
+ ErrorCode
  SWAP_FUNC_PREFIX(PEXRenderNetwork) (cntxtPtr, strmPtr)
  pexContext		*cntxtPtr;
  pexRenderNetworkReq	*strmPtr;
***************
*** 492,498 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_CARD16 (strmPtr->fpFormat);
      SWAP_STRUCTURE (strmPtr->sid);
  
      SwapElementRange (swapPtr, &strmPtr->range);
--- 528,534 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_STRUCTURE (strmPtr->sid);
  
      SwapElementRange (swapPtr, &strmPtr->range);
***************
*** 736,742 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_SC (strmPtr->sc);
      SWAP_BITMASK (strmPtr->itemMask);
  
--- 772,778 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_SC (strmPtr->sc);
      SWAP_BITMASK (strmPtr->itemMask);
  
***************
*** 768,774 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_SC (strmPtr->sc);
      SWAP_BITMASK (strmPtr->itemMask);
      CALL_REQUEST;
--- 804,810 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_SC (strmPtr->sc);
      SWAP_BITMASK (strmPtr->itemMask);
      CALL_REQUEST;
***************
*** 781,787 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_SC (strmPtr->sc);
      SWAP_BITMASK (strmPtr->itemMask);
  
--- 817,823 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_SC (strmPtr->sc);
      SWAP_BITMASK (strmPtr->itemMask);
  
***************
*** 830,836 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_BITMASK (strmPtr->itemMask[0]);
      SWAP_BITMASK (strmPtr->itemMask[1]);
--- 866,872 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_BITMASK (strmPtr->itemMask[0]);
      SWAP_BITMASK (strmPtr->itemMask[1]);
***************
*** 855,861 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_TABLE_INDEX (strmPtr->index);
      SWAP_PHIGS_WKS (strmPtr->wks);
      CALL_REQUEST;
--- 891,897 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_TABLE_INDEX (strmPtr->index);
      SWAP_PHIGS_WKS (strmPtr->wks);
      CALL_REQUEST;
***************
*** 921,927 ****
      pexDeviceCoord *pc;
  
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_CARD32 (strmPtr->numCoords);
  
--- 957,963 ----
      pexDeviceCoord *pc;
  
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_CARD32 (strmPtr->numCoords);
  
***************
*** 941,947 ****
      pexCoord3D *pc;
  
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_CARD16 (strmPtr->index);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_CARD32 (strmPtr->numCoords);
--- 977,983 ----
      pexCoord3D *pc;
  
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_CARD16 (strmPtr->index);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_CARD32 (strmPtr->numCoords);
***************
*** 959,965 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
  
      SwapViewRep (swapPtr, &strmPtr->viewRep);
--- 995,1001 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
  
      SwapViewRep (swapPtr, &strmPtr->viewRep);
***************
*** 974,980 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SwapNpcSubvolume (swapPtr, &strmPtr->npcSubvolume);
  
--- 1010,1016 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SwapNpcSubvolume (swapPtr, &strmPtr->npcSubvolume);
  
***************
*** 988,994 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
  
      SwapViewport (swapPtr, &strmPtr->viewport);
--- 1024,1030 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
  
      SwapViewport (swapPtr, &strmPtr->viewport);
***************
*** 1027,1033 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_CARD16 (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_STRUCTURE (strmPtr->sid);
      SWAP_FLOAT (strmPtr->priority);
--- 1063,1069 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_STRUCTURE (strmPtr->sid);
      SWAP_FLOAT (strmPtr->priority);
***************
*** 1059,1065 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_INT16 (strmPtr->fpFormat);
      SWAP_ENUM_TYPE_INDEX (strmPtr->devType);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_BITMASK (strmPtr->itemMask);
--- 1095,1101 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_ENUM_TYPE_INDEX (strmPtr->devType);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_BITMASK (strmPtr->itemMask);
***************
*** 1073,1079 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_CARD16 (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_ENUM_TYPE_INDEX (strmPtr->devType);
      SWAP_BITMASK (strmPtr->itemMask);
--- 1109,1115 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_PHIGS_WKS (strmPtr->wks);
      SWAP_ENUM_TYPE_INDEX (strmPtr->devType);
      SWAP_BITMASK (strmPtr->itemMask);
***************
*** 1152,1157 ****
--- 1188,1291 ----
  }
  
  ErrorCode
+ SWAP_FUNC_PREFIX(PEXBeginPickOne) (cntxtPtr, strmPtr)
+ pexContext		*cntxtPtr;
+ pexBeginPickOneReq	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
+     SWAP_RENDERER (strmPtr->rdr);
+     SWAP_DRAWABLE (strmPtr->drawable);
+     SWAP_CARD32 (strmPtr->sid);
+ 
+     SWAP_FUNC_PREFIX(SwapPickRecord) (swapPtr, 
+ 				    (pexPickRecord *)(strmPtr+1));
+ 
+     CALL_REQUEST;
+ }
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXEndPickOne) (cntxtPtr, strmPtr)
+ pexContext		*cntxtPtr;
+ pexEndPickOneReq	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_RENDERER (strmPtr->rdr);
+ 
+     CALL_REQUEST;
+ }
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXPickOne) (cntxtPtr, strmPtr)
+ pexContext		*cntxtPtr;
+ pexPickOneReq	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
+     SWAP_RENDERER (strmPtr->rdr);
+     SWAP_DRAWABLE (strmPtr->drawable);
+     SWAP_STRUCTURE (strmPtr->sid);
+ 
+     SWAP_FUNC_PREFIX(SwapPickRecord) (swapPtr, 
+ 				    (pexPickRecord *)(strmPtr+1));
+ 
+     CALL_REQUEST;
+ }
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXBeginPickAll) (cntxtPtr, strmPtr)
+ pexContext		*cntxtPtr;
+ pexBeginPickAllReq	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
+     SWAP_RENDERER (strmPtr->rdr);
+     SWAP_DRAWABLE (strmPtr->drawable);
+     SWAP_CARD32 (strmPtr->sid);
+     SWAP_CARD32 (strmPtr->pickMaxHits);
+ 
+     SWAP_FUNC_PREFIX(SwapPickRecord) (swapPtr, 
+ 				    (pexPickRecord *)(strmPtr+1));
+ 
+     CALL_REQUEST;
+ }
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXEndPickAll) (cntxtPtr, strmPtr)
+ pexContext		*cntxtPtr;
+ pexEndPickAllReq	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_RENDERER (strmPtr->rdr);
+ 
+     CALL_REQUEST;
+ }
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXPickAll) (cntxtPtr, strmPtr)
+ pexContext		*cntxtPtr;
+ pexPickAllReq	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
+     SWAP_RENDERER (strmPtr->rdr);
+     SWAP_DRAWABLE (strmPtr->drawable);
+     SWAP_CARD32 (strmPtr->pickMaxHits);
+ 
+     SWAP_FUNC_PREFIX(SwapPickRecord) (swapPtr, 
+ 				    (pexPickRecord *)(strmPtr+1));
+ 
+     CALL_REQUEST;
+ }
+ 
+ 
+ ErrorCode
  SWAP_FUNC_PREFIX(PEXOpenFont) (cntxtPtr, strmPtr)
  pexContext	*cntxtPtr;
  pexOpenFontReq	*strmPtr;
***************
*** 1207,1213 ****
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_CARD16 (strmPtr->fpFormat);
      SWAP_CARD16 (strmPtr->textPath);
      SWAP_CARD16 (strmPtr->fontGroupIndex);
      SWAP_CARD32 (strmPtr->id);
--- 1341,1347 ----
  {
      pexSwap *swapPtr = cntxtPtr->swap;
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_CARD16 (strmPtr->textPath);
      SWAP_CARD16 (strmPtr->fontGroupIndex);
      SWAP_CARD32 (strmPtr->id);
***************
*** 1234,1240 ****
      CARD32 i;
  
      SWAP_CARD16 (strmPtr->length);
!     SWAP_CARD16 (strmPtr->fpFormat);
      SWAP_CARD32 (strmPtr->drawable);
      SWAP_CARD32 (strmPtr->numNames);
  
--- 1368,1374 ----
      CARD32 i;
  
      SWAP_CARD16 (strmPtr->length);
!     SWAP_ENUM_TYPE_INDEX (strmPtr->fpFormat);
      SWAP_CARD32 (strmPtr->drawable);
      SWAP_CARD32 (strmPtr->numNames);
  
***************
*** 1244,1251 ****
--- 1378,1447 ----
      CALL_REQUEST;
  }
  
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXMatchRendererTargets) (cntxtPtr, strmPtr)
+ pexContext			*cntxtPtr;
+ pexMatchRendererTargetsReq     	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
  
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_CARD32 (strmPtr->drawable);
+     SWAP_CARD16 (strmPtr->type);
+     SWAP_CARD32 (strmPtr->visualID);
+     SWAP_CARD32 (strmPtr->maxTriplets);
+ 
+     CALL_REQUEST;
+ }
+ 
  ErrorCode
+ SWAP_FUNC_PREFIX(PEXEscape) (cntxtPtr, strmPtr)
+ pexContext			*cntxtPtr;
+ pexEscapeReq               	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+ 
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_CARD32 (strmPtr->escapeID);
+ 
+     /* do MIT Registered Escapes */
+     switch (strmPtr->escapeID) {
+       case  PEXEscapeSetEchoColour: {
+ 	pexEscapeSetEchoColourData *psec;
+ 
+ 	psec = (pexEscapeSetEchoColourData *)(strmPtr+1);
+ 	SWAP_ENUM_TYPE_INDEX (psec->fpFormat);
+ 	SWAP_CARD32 (psec->rdr);
+ 	SWAP_FUNC_PREFIX(SwapColourSpecifier) (swapPtr,
+ 					      (pexColourSpecifier *)(psec+1));
+ 	break;
+       }
+     }
+ 	  
+     CALL_REQUEST;
+ }
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXEscapeWithReply) (cntxtPtr, strmPtr)
+ pexContext			*cntxtPtr;
+ pexEscapeWithReplyReq          	*strmPtr;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+ 
+     SWAP_CARD16 (strmPtr->length);
+     SWAP_CARD16 (strmPtr->escapeID);
+ 
+     /* do MIT Registered Escapes , none with Replies */
+     /*
+     switch (strmPtr->escapeID) {
+     }
+     */
+ 	  
+ 
+     CALL_REQUEST;
+ }
+ 
+ ErrorCode
  SWAP_FUNC_PEX_PFX(RequestUnused)()
  {
  
***************
*** 1445,1475 ****
  }
  
  
- void
- SWAP_FUNC_PREFIX(SwapPickMeasAttr) (swapPtr, im, p_data)
- pexSwap		*swapPtr;
- CARD32		im;
- unsigned char	*p_data;
- {
-     unsigned char *ptr = p_data;
- 
-     if (im & PEXPMStatus) {
- 	SWAP_CARD32((*((CARD32 *)ptr)));
- 	ptr += sizeof(CARD32);
-     }
- 
-     if (im & PEXPMPath) {
- 	CARD32 i;
- 	CARD32 numRefs = *((CARD32 *)ptr);
- 	pexPickPath *pp;
- 	SWAP_CARD32((*((CARD32 *)ptr)));
- 	ptr += sizeof(CARD32);
- 	for (i=0, pp = (pexPickPath *)ptr; i<numRefs; i++, pp++) {
- 	    SWAP_PICK_PATH((*pp));
- 	}
-     }
- }
- 
  unsigned char *
  SWAP_FUNC_PREFIX(SwapLightEntry) (swapPtr, p_data) 
  pexSwap		    *swapPtr;
--- 1641,1646 ----
***************
*** 2078,2085 ****
  	SWAP_CARD32 ((*((CARD32 *)ptr)));
  	len = (int)(*ptr);
  	ptr += sizeof(CARD32);
! 	for (i=0; i<len; i++, ptr += sizeof(pexPickPath)) {
! 	    SWAP_PICK_PATH ((*((pexPickPath *)ptr)));
  	};
      };
  
--- 2249,2256 ----
  	SWAP_CARD32 ((*((CARD32 *)ptr)));
  	len = (int)(*ptr);
  	ptr += sizeof(CARD32);
! 	for (i=0; i<len; i++, ptr += sizeof(pexPickElementRef)) {
! 	    SWAP_PICK_ELEMENT_REF ((*((pexPickElementRef *)ptr)));
  	};
      };
  
***************
*** 2253,2257 ****
--- 2424,2505 ----
  	ptr += sizeof(CARD32);
  	SwapDeviceRects (swapPtr, num, (pexDeviceRect *)ptr);
      }
+ 
+     if (im & PEXRDPickInclusion) {
+ 	SWAP_NAMESET ((*((pexNameSet *)ptr)));
+ 	ptr += sizeof(pexNameSet);
+     }
+ 
+     if (im & PEXRDPickExclusion) {
+ 	SWAP_NAMESET ((*((pexNameSet *)ptr)));
+ 	ptr += sizeof(pexNameSet);
+     }
+ 
+     if (im & PEXRDPickStartPath) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	num = *((CARD32 *)ptr);
+ 	ptr += sizeof(CARD32);
+ 	for (i=0; i<num; i++, ptr += sizeof(pexElementRef))
+ 	    SWAP_ELEMENT_REF((*((pexElementRef *)ptr)));
+     }
+ 
+     if (im & PEXRDBackgroundColour) {
+ 	ptr = SWAP_FUNC_PREFIX(SwapColourSpecifier) (swapPtr,
+ 						   (pexColourSpecifier *)ptr);
+     }
+ 
+     /* this is CARD8 cast into a CARD32 so it must get swapped as CARD32 */
+     if (im & PEXRDClearI) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
+     }
+ 
+     /* this is CARD8 cast into a CARD32 so it must get swapped as CARD32 */
+     if (im & PEXRDClearZ) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
+     }
+ 
+     /* this is CARD16 cast into a CARD32 so it must get swapped as CARD32 */
+     if (im & PEXRDEchoMode) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
+     }
+ }
+ 
+ void
+ SWAP_FUNC_PREFIX(SwapPickRecord) (swapPtr, p_data)
+ pexSwap	  		    *swapPtr;
+ pexPickRecord	            *p_data;
+ {
+ 
+     SWAP_CARD16 (p_data->pickType);
+ 
+     switch(p_data->pickType) {
+ 	case PEXPickDeviceDC_HitBox: {
+ 	  unsigned char *ptr = (unsigned char *)(p_data+1);
+ 	  SWAP_CARD16 ((*((CARD16 *)ptr)));
+ 	  ptr += sizeof(CARD16);
+ 	  SWAP_CARD16 ((*((CARD16 *)ptr)));
+ 	  ptr += sizeof(CARD16);
+ 	  SWAP_FLOAT ((*((PEXFLOAT *)ptr)));
+ 	  break;
+ 	} 
+ 	case PEXPickDeviceNPC_HitVolume: {
+ 	  unsigned char *ptr = (unsigned char *)(p_data+1);
+ 	  SWAP_FLOAT ((*((PEXFLOAT *)ptr)));
+ 	  ptr += sizeof(PEXFLOAT);
+ 	  SWAP_FLOAT ((*((PEXFLOAT *)ptr)));
+ 	  ptr += sizeof(PEXFLOAT);
+ 	  SWAP_FLOAT ((*((PEXFLOAT *)ptr)));
+ 	  ptr += sizeof(PEXFLOAT);
+ 	  SWAP_FLOAT ((*((PEXFLOAT *)ptr)));
+ 	  ptr += sizeof(PEXFLOAT);
+ 	  SWAP_FLOAT ((*((PEXFLOAT *)ptr)));
+ 	  ptr += sizeof(PEXFLOAT);
+ 	  SWAP_FLOAT ((*((PEXFLOAT *)ptr)));
+ 	  break;
+ 	} 
+     } 
  }
  
*** /tmp/da6164	Wed Mar  4 14:47:02 1992
--- extensions/server/PEX/dipex/swap/convReq.h	Wed Mar  4 14:19:02 1992
***************
*** 1,4 ****
! /* $XConsortium: convReq.h,v 5.1 91/02/16 09:57:11 rws Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: convReq.h,v 5.2 92/03/04 14:18:57 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 25,34 ****
--- 25,36 ----
  ******************************************************************/
  
  LOCAL_FLAG ErrorCode
+ 	SWAP_FUNC_PREFIX(PEXRequestUnused)(),
  	SWAP_FUNC_PREFIX(PEXGenericRequest) (),
  	SWAP_FUNC_PREFIX(PEXGenericResourceRequest) (),
  	SWAP_FUNC_PREFIX(PEXGetExtensionInfo) (),
  	SWAP_FUNC_PREFIX(PEXGetEnumeratedTypeInfo) (),
+ 	SWAP_FUNC_PREFIX(PEXGetImpDepConstants) (),
  	SWAP_FUNC_PREFIX(PEXCreateLookupTable) (),
  	SWAP_FUNC_PREFIX(PEXCopyLookupTable) (),
  	SWAP_FUNC_PREFIX(PEXGetTableInfo) (),
***************
*** 97,110 ****
  	SWAP_FUNC_PREFIX(PEXListFonts) (),
  	SWAP_FUNC_PREFIX(PEXListFontsWithInfo) (),
  	SWAP_FUNC_PREFIX(PEXQueryTextExtents) (),
! 	SWAP_FUNC_PREFIX(PEXGetImpDepConstants) (),
! 	SWAP_FUNC_PREFIX(PEXRequestUnused)();
  
  LOCAL_FLAG void
  	SWAP_FUNC_PREFIX(SwapTable)(),
  	SWAP_FUNC_PREFIX(SwapSearchContext)(),
  	SWAP_FUNC_PREFIX(SwapPickMeasAttr) (),
  	SWAP_FUNC_PREFIX(SwapPickDevAttr) (),
  	SWAP_FUNC_PREFIX(SwapRendererAttributes) ();
  
  LOCAL_FLAG unsigned char * SWAP_FUNC_PREFIX(SwapLightEntry) ();
--- 99,123 ----
  	SWAP_FUNC_PREFIX(PEXListFonts) (),
  	SWAP_FUNC_PREFIX(PEXListFontsWithInfo) (),
  	SWAP_FUNC_PREFIX(PEXQueryTextExtents) (),
!         SWAP_FUNC_PREFIX(PEXMatchRendererTargets) (),
! 	SWAP_FUNC_PREFIX(PEXEscape) (),
! 	SWAP_FUNC_PREFIX(PEXEscapeWithReply) (),
! 	SWAP_FUNC_PREFIX(PEXRenderElements) (),
! 	SWAP_FUNC_PREFIX(PEXAccumulateState) (),
! 	SWAP_FUNC_PREFIX(PEXBeginPickOne) (),
! 	SWAP_FUNC_PREFIX(PEXEndPickOne) (),
!         SWAP_FUNC_PREFIX(PEXPickOne) (),
! 	SWAP_FUNC_PREFIX(PEXBeginPickAll) (),
! 	SWAP_FUNC_PREFIX(PEXEndPickAll) (),
! 	SWAP_FUNC_PREFIX(PEXPickAll) ();
  
+ 
  LOCAL_FLAG void
  	SWAP_FUNC_PREFIX(SwapTable)(),
  	SWAP_FUNC_PREFIX(SwapSearchContext)(),
  	SWAP_FUNC_PREFIX(SwapPickMeasAttr) (),
  	SWAP_FUNC_PREFIX(SwapPickDevAttr) (),
+ 	SWAP_FUNC_PREFIX(SwapPickRecord) (),
  	SWAP_FUNC_PREFIX(SwapRendererAttributes) ();
  
  LOCAL_FLAG unsigned char * SWAP_FUNC_PREFIX(SwapLightEntry) ();
*** /tmp/da6180	Wed Mar  4 14:47:06 1992
--- extensions/server/PEX/dipex/swap/check.c	Wed Mar  4 14:19:06 1992
***************
*** 1,4 ****
! /* $XConsortium: check.c,v 5.4 91/12/30 18:23:45 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: check.c,v 5.5 92/03/04 14:18:59 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 320,324 ****
  /*  90	*/	NoFloat,		/* PEXQueryFont */
  /*  91	*/	NoFloat,		/* PEXListFonts */
  /*  92	*/	NoFloat,		/* PEXListFontsWithInfo */
! /*  93	*/	CheckFloat		/* PEXQueryTextExtents */
  };
--- 320,335 ----
  /*  90	*/	NoFloat,		/* PEXQueryFont */
  /*  91	*/	NoFloat,		/* PEXListFonts */
  /*  92	*/	NoFloat,		/* PEXListFontsWithInfo */
! /*  93	*/	CheckFloat,		/* PEXQueryTextExtents */
! /*  94	*/	NoFloat,    		/* PEXMatchRendererTargets */
! /*  95	*/	NoFloat,    		/* PEXEscape */
! /*  96	*/	NoFloat,    		/* PEXEscapeWithReply */
! /*  97	*/	NoFloat,    		/* PEXRenderElements */
! /*  98	*/	NoFloat,    		/* PEXAccumulateState */
! /*  99	*/	CheckFloat,    		/* PEXBeginPickOne */
! /* 100	*/	NoFloat,    		/* PEXEndPickOne */
! /* 101	*/	CheckFloat,    		/* PEXPickOne */
! /* 102	*/	CheckFloat,    		/* PEXBeginPickAll */
! /* 103	*/	NoFloat,    		/* PEXEndPickAll */
! /* 104	*/	CheckFloat    		/* PEXPickAll */
  };
*** /tmp/da6195	Wed Mar  4 14:47:09 1992
--- extensions/server/PEX/dipex/swap/convertStr.h	Wed Mar  4 14:20:46 1992
***************
*** 1,4 ****
! /* $XConsortium: convertStr.h,v 5.1 91/02/16 09:57:14 rws Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: convertStr.h,v 5.2 92/03/04 14:20:35 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 161,167 ****
  	SWAP_TEXT_H_ALIGNMENT((A).horizontal); \
  	SWAP_TEXT_V_ALIGNMENT((A).vertical); }
  
! #define SWAP_PICK_PATH(P) \
  	SWAP_STRUCTURE ((P).sid); \
  	SWAP_CARD32 ((P).offset); \
  	SWAP_CARD32 ((P).pickid);
--- 161,167 ----
  	SWAP_TEXT_H_ALIGNMENT((A).horizontal); \
  	SWAP_TEXT_V_ALIGNMENT((A).vertical); }
  
! #define SWAP_PICK_ELEMENT_REF(P) \
  	SWAP_STRUCTURE ((P).sid); \
  	SWAP_CARD32 ((P).offset); \
  	SWAP_CARD32 ((P).pickid);
***************
*** 171,175 ****
--- 171,178 ----
  	SWAP_STRUCTURE((S).sid); \
  	SWAP_FLOAT((S).priority);
  
+ #define SWAP_RENDERER_TARGET(S) \
+ 	SWAP_CARD16((S).type); \
+ 	SWAP_CARD32((S).visualID);
  
  #endif	/* CONVERTSTR_H */
*** /tmp/da6210	Wed Mar  4 14:47:12 1992
--- extensions/server/PEX/dipex/swap/cOCprim.c	Wed Mar  4 14:19:10 1992
***************
*** 1,4 ****
! /* $XConsortium: cOCprim.c,v 5.5 91/07/01 16:38:43 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: cOCprim.c,v 5.6 92/03/04 14:19:04 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 765,768 ****
--- 765,775 ----
  	}
      }
  
+ }
+ 
+ ErrorCode
+ SWAP_FUNC_PREFIX(PEXNoop) (swapPtr, strmPtr)
+ pexSwap	*swapPtr;
+ pexNoop	*strmPtr;
+ {
  }
*** /tmp/da6225	Wed Mar  4 14:47:15 1992
--- extensions/server/PEX/dipex/swap/uconvRep.c	Wed Mar  4 14:19:20 1992
***************
*** 1,4 ****
! /* $XConsortium: uconvRep.c,v 5.7 92/01/02 15:21:44 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: uconvRep.c,v 5.8 92/03/04 14:19:08 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 799,804 ****
--- 799,915 ----
  }
  
  void
+ SWAP_FUNC_PREFIX(ConvertEndPickOneReply) (cntxtPtr, strmPtr, reply)
+ pexContext		*cntxtPtr;
+ pexEndPickOneReq	*strmPtr;
+ pexEndPickOneReply	*reply;
+ {
+     pexPickElementRef *p_data;
+     CARD32  i;
+ 
+     pexSwap *swapPtr = cntxtPtr->swap;
+ 
+     SWAP_CARD16 (reply->sequenceNumber);
+     SWAP_CARD32 (reply->length);	
+ 
+     /* JSH commented out because until the Pick Functionality is
+        actually written this will seg fault on a NULL pointer
+ 
+     p_data = (pexPickElementRef *)(reply+1);
+     for (i=0; i < reply->numPickElRefs; i++, p_data++) 
+ 	    SWAP_PICK_ELEMENT_REF((*p_data));
+     
+     */
+     SWAP_CARD32 (reply->numPickElRefs);
+ }
+ 
+ void
+ SWAP_FUNC_PREFIX(ConvertPickOneReply) (cntxtPtr, strmPtr, reply)
+ pexContext		*cntxtPtr;
+ pexPickOneReq		*strmPtr;
+ pexPickOneReply		*reply;
+ {
+     pexPickElementRef *p_data;
+     CARD32  i;
+ 
+     pexSwap *swapPtr = cntxtPtr->swap;
+ 
+     SWAP_CARD16 (reply->sequenceNumber);
+     SWAP_CARD32 (reply->length);
+ 
+     /* JSH commented out because until the Pick Functionality is
+        actually written this will seg fault on a NULL pointer
+ 
+     p_data = (pexPickElementRef *)(reply+1);
+     for (i=0; i < reply->numPickElRefs; i++, p_data++) 
+ 	    SWAP_PICK_ELEMENT_REF((*p_data));
+     
+     */
+     SWAP_CARD32 (reply->numPickElRefs);
+ }
+ 
+ void
+ SWAP_FUNC_PREFIX(ConvertEndPickAllReply) (cntxtPtr, strmPtr, reply)
+ pexContext		*cntxtPtr;
+ pexEndPickAllReq	*strmPtr;
+ pexEndPickAllReply	*reply;
+ {
+     pexPickElementRef *p_data;
+     CARD32 i, j, num, *buf;
+ 
+     pexSwap *swapPtr = cntxtPtr->swap;
+ 
+     SWAP_CARD16 (reply->sequenceNumber);
+     SWAP_CARD32 (reply->length);
+ 
+     /* JSH commented out because until the Pick Functionality is
+        actually written this will seg fault on a NULL pointer
+ 
+     for ( i=0, buf=(CARD32 *)(reply+1); i < reply->numPicked; i++) {
+ 	num = *buf;
+ 	SWAP_CARD32((*buf));
+ 	buf++;
+ 	for ( j=0, p_data = (pexPickElementRef *)(buf); j < num; j++, p_data++)
+ 	    SWAP_PICK_ELEMENT_REF((*p_data));
+ 	buf = (CARD32 *)p_data;
+     }
+ 
+     */
+     SWAP_CARD32 (reply->numPicked);
+ }
+ 
+ void
+ SWAP_FUNC_PREFIX(ConvertPickAllReply) (cntxtPtr, strmPtr, reply)
+ pexContext		*cntxtPtr;
+ pexPickAllReq	*strmPtr;
+ pexPickAllReply	*reply;
+ {
+     pexPickElementRef *p_data;
+     CARD32 i, j, num, *buf;
+ 
+     pexSwap *swapPtr = cntxtPtr->swap;
+ 
+     SWAP_CARD16 (reply->sequenceNumber);
+     SWAP_CARD32 (reply->length);
+ 
+     /* JSH commented out because until the Pick Functionality is
+        actually written this will seg fault on a NULL pointer
+ 
+     for ( i=0, buf=(CARD32 *)(reply+1); i < reply->numPicked; i++) {
+ 	num = *buf;
+ 	SWAP_CARD32((*buf));
+ 	buf++;
+ 	for ( j=0, p_data = (pexPickElementRef *)(buf); j < num; j++, p_data++)
+ 	    SWAP_PICK_ELEMENT_REF((*p_data));
+ 	buf = (CARD32 *)p_data;
+     }
+ 
+     */
+     SWAP_CARD32 (reply->numPicked);
+ }
+ 
+ 
+ void
  SWAP_FUNC_PREFIX(ConvertQueryFontReply) (cntxtPtr, strmPtr, reply)
  pexContext	    *cntxtPtr;
  pexQueryFontReq	    *strmPtr;
***************
*** 928,933 ****
--- 1039,1080 ----
  }
  
  void
+ SWAP_FUNC_PREFIX(ConvertMatchRendererTargetsReply) (cntxtPtr, strmPtr, reply)
+ pexContext		    *cntxtPtr;
+ pexMatchRendererTargetsReq  *strmPtr;
+ pexMatchRendererTargetsReply    *reply;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+     CARD32 i, numTargets;
+     pexRendererTarget *rd_data;
+ 
+     numTargets = reply->length / 2;
+     SWAP_CARD16 (reply->sequenceNumber);
+     SWAP_CARD32 (reply->length);	/* not 0 */
+ 
+     rd_data = (pexRendererTarget *)(reply + 1);
+ 
+     for ( i = 0; i < numTargets; i++, rd_data++ )
+ 	SWAP_RENDERER_TARGET((*rd_data));
+ 
+ }
+ 
+ void
+ SWAP_FUNC_PREFIX(EscapeWithReplyReply) (cntxtPtr, strmPtr, reply)
+ pexContext		    *cntxtPtr;
+ pexEscapeWithReplyReq       *strmPtr;
+ pexEscapeWithReplyReply     *reply;
+ {
+     pexSwap *swapPtr = cntxtPtr->swap;
+ 
+     SWAP_CARD16 (reply->sequenceNumber);
+     SWAP_CARD32 (reply->length);	/* not 0 */
+     SWAP_CARD32 (reply->escapeID);
+ 
+     /* vendor specific stuff goes here */
+ }
+ 
+ void
  SWAP_FUNC_PREFIX(NoReply)()
  {
  
***************
*** 1159,1170 ****
      if (im & PEXPMPath) {
  	CARD32 i;
  	CARD32 numRefs = *((CARD32 *)ptr);
! 	pexPickPath *pp;
  
  	SWAP_CARD32((*((CARD32 *)ptr)));
  	ptr += sizeof(CARD32);
! 	for (i=0, pp = (pexPickPath *)ptr; i<numRefs; i++, pp++) {
! 	    SWAP_PICK_PATH((*pp));
  	}
      }
  }
--- 1306,1317 ----
      if (im & PEXPMPath) {
  	CARD32 i;
  	CARD32 numRefs = *((CARD32 *)ptr);
! 	pexPickElementRef *pp;
  
  	SWAP_CARD32((*((CARD32 *)ptr)));
  	ptr += sizeof(CARD32);
! 	for (i=0, pp = (pexPickElementRef *)ptr; i<numRefs; i++, pp++) {
! 	    SWAP_PICK_ELEMENT_REF((*pp));
  	}
      }
  }
***************
*** 1777,1784 ****
  	len = (int)(*ptr);
  	SWAP_CARD32 ((*((CARD32 *)ptr)));
  	ptr += sizeof(CARD32);
! 	for (i=0; i<len; i++, ptr += sizeof(pexPickPath)) {
! 	    SWAP_PICK_PATH ((*((pexPickPath *)ptr)));
  	};
      };
  
--- 1924,1931 ----
  	len = (int)(*ptr);
  	SWAP_CARD32 ((*((CARD32 *)ptr)));
  	ptr += sizeof(CARD32);
! 	for (i=0; i<len; i++, ptr += sizeof(pexPickElementRef)) {
! 	    SWAP_PICK_ELEMENT_REF ((*((pexPickElementRef *)ptr)));
  	};
      };
  
***************
*** 1951,1955 ****
--- 2098,2143 ----
  	SWAP_CARD32 ((*((CARD32 *)ptr)));
  	ptr += sizeof(CARD32);
  	SwapDeviceRects (swapPtr, num, (pexDeviceRect *)ptr);
+     }
+ 
+     if (im & PEXRDPickInclusion) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
+     }
+ 
+     if (im & PEXRDPickExclusion) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
+     }
+ 
+     if (im & PEXRDPickStartPath) {
+ 	num = *((CARD32 *)ptr);
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
+ 	for (i=0; i<num; i++, ptr += sizeof(pexElementRef))
+ 	    SWAP_ELEMENT_REF((*((pexElementRef *)ptr)));
+     }
+ 
+     if (im & PEXRDBackgroundColour) {
+ 	ptr = SWAP_FUNC_PREFIX(SwapColourSpecifier) (swapPtr,
+ 						   (pexColourSpecifier *)ptr);
+     }
+ 
+     /* this is CARD8 cast into a CARD32 so it must get swapped as CARD32 */
+     if (im & PEXRDClearI) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
+     }
+ 
+     /* this is CARD8 cast into a CARD32 so it must get swapped as CARD32 */
+     if (im & PEXRDClearZ) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
+     }
+ 
+     /* this is CARD16 cast into a CARD32 so it must get swapped as CARD32 */
+     if (im & PEXRDEchoMode) {
+ 	SWAP_CARD32 ((*((CARD32 *)ptr)));
+ 	ptr += sizeof(CARD32);
      }
  }
*** /tmp/da6240	Wed Mar  4 14:47:21 1992
--- extensions/server/PEX/dipex/swap/uconvRep.h	Wed Mar  4 14:19:23 1992
***************
*** 1,4 ****
! /* $XConsortium: uconvRep.h,v 5.1 91/02/16 09:57:21 rws Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: uconvRep.h,v 5.2 92/03/04 14:19:18 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 28,33 ****
--- 28,34 ----
  LOCAL_FLAG void
      SWAP_FUNC_PREFIX(ConvertGetExtensionInfoReply) (),
      SWAP_FUNC_PREFIX(ConvertGetEnumeratedTypeInfoReply) (),
+     SWAP_FUNC_PREFIX(ConvertGetImpDepConstantsReply) (),
      SWAP_FUNC_PREFIX(ConvertGetTableInfoReply) (),
      SWAP_FUNC_PREFIX(ConvertGetPredefinedEntriesReply) (),
      SWAP_FUNC_PREFIX(ConvertGetDefinedIndicesReply) (),
***************
*** 57,63 ****
      SWAP_FUNC_PREFIX(ConvertListFontsReply) (),
      SWAP_FUNC_PREFIX(ConvertListFontsWithInfoReply) (),
      SWAP_FUNC_PREFIX(ConvertQueryTextExtentsReply) (),
!     SWAP_FUNC_PREFIX(ConvertGetImpDepConstantsReply) (),
      SWAP_FUNC_PREFIX(NoReply)();
  
  
--- 58,69 ----
      SWAP_FUNC_PREFIX(ConvertListFontsReply) (),
      SWAP_FUNC_PREFIX(ConvertListFontsWithInfoReply) (),
      SWAP_FUNC_PREFIX(ConvertQueryTextExtentsReply) (),
!     SWAP_FUNC_PREFIX(ConvertMatchRendererTargetsReply) (),
!     SWAP_FUNC_PREFIX(EscapeWithReplyReply) (),
!     SWAP_FUNC_PREFIX(ConvertEndPickOneReply) (),
!     SWAP_FUNC_PREFIX(ConvertPickOneReply) (),
!     SWAP_FUNC_PREFIX(ConvertEndPickAllReply) (),
!     SWAP_FUNC_PREFIX(ConvertPickAllReply) (),
      SWAP_FUNC_PREFIX(NoReply)();
  
  
*** /tmp/da6256	Wed Mar  4 14:47:24 1992
--- extensions/server/PEX/dipex/swap/OCprim.h	Wed Mar  4 14:19:27 1992
***************
*** 1,4 ****
! /* $XConsortium: OCprim.h,v 5.1 91/02/16 09:57:28 rws Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
--- 1,4 ----
! /* $XConsortium: OCprim.h,v 5.2 92/03/04 14:19:20 hersh Exp $ */
  
  /***********************************************************
  Copyright 1989, 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
***************
*** 60,63 ****
  	SWAP_FUNC_PEX_PFX(Text2D) (),
  	SWAP_FUNC_PEX_PFX(AnnotationText) (),
  	SWAP_FUNC_PEX_PFX(AnnotationText2D) (),
! 	SWAP_FUNC_PEX_PFX(ParaSurfCharacteristics) ();
--- 60,64 ----
  	SWAP_FUNC_PEX_PFX(Text2D) (),
  	SWAP_FUNC_PEX_PFX(AnnotationText) (),
  	SWAP_FUNC_PEX_PFX(AnnotationText2D) (),
! 	SWAP_FUNC_PEX_PFX(ParaSurfCharacteristics) (),
! 	SWAP_FUNC_PREFIX(PEXNoop) ();

------------------------------------------------------------------------
Hopfen und Malz, Gott erhalts
