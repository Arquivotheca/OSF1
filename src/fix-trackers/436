Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9209092013.AA11811@excon.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Cc: mor@expo.lcs.mit.edu
Subject: (seq: 2664) close XBUG #5506,5507 : PEXlib : bug in PEXQueryEncodedTextExtents; PEXlib : NPC->XC and XC->NPC util functions incorrectly subtract 1 from window_height
Date: Wed, 09 Sep 92 16:13:17 EST
From: Ralph Mor <mor@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com


        Subject: PEXlib : bug in PEXQueryEncodedTextExtents
        ### bug number:   5506
        ### area:         PEXlib
        ### severity:     medium
        ### comments:     

        Subject: PEXlib : NPC->XC and XC->NPC util functions incorrectly subtrac
t 1 from window_height
        ### bug number:   5507
        ### area:         PEXlib
        ### severity:     low
        ### comments:     


extensions/lib/PEXlib/
*** -	Wed Sep  9 16:02:43 1992
--- extensions/lib/PEXlib/pl_font.c	Wed Sep  9 14:08:16 1992
***************
*** 1,4 ****
! /* $XConsortium: pl_font.c,v 1.5 92/08/26 13:05:22 mor Exp $ */
  
  /******************************************************************************
  Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
--- 1,4 ----
! /* $XConsortium: pl_font.c,v 1.6 92/09/09 14:07:35 mor Exp $ */
  
  /******************************************************************************
  Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
***************
*** 568,578 ****
  
      for (i = 0; i < count; i++)
      {
  	Data (display, (char *) &encoded_text[i].count, sizeof (CARD32));
! 	Data (display, (char *) (pexMonoEncoding *) &encoded_text[i],
! 	    sizeof (pexMonoEncoding));
  
- 	string = encoded_text[i].encoded_text;
  	for (j = 0; j < (int) encoded_text[i].count; j++, string++)
  	{
  	    if (string->character_set_width == PEXCSLong) 
--- 568,578 ----
  
      for (i = 0; i < count; i++)
      {
+ 	string = encoded_text[i].encoded_text;
+ 
  	Data (display, (char *) &encoded_text[i].count, sizeof (CARD32));
! 	Data (display, (char *) string, sizeof (pexMonoEncoding));
  
  	for (j = 0; j < (int) encoded_text[i].count; j++, string++)
  	{
  	    if (string->character_set_width == PEXCSLong) 
extensions/lib/PEXlib/
*** -	Wed Sep  9 16:02:44 1992
--- extensions/lib/PEXlib/pl_util.c	Wed Sep  9 15:58:59 1992
***************
*** 1,4 ****
! /* $XConsortium: pl_util.c,v 1.5 92/08/26 15:18:10 mor Exp $ */
  
  /******************************************************************************
  Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
--- 1,4 ----
! /* $XConsortium: pl_util.c,v 1.7 92/09/09 15:58:50 mor Exp $ */
  
  /******************************************************************************
  Copyright 1987,1991 by Digital Equipment Corporation, Maynard, Massachusetts
***************
*** 1883,1889 ****
       *         (Vx, Vy, Vz) is the lower left corner of the DC viewport.
       *
       *    M4 : maps DC to X drawable coordinates (flips Y).
!      *         H is the window height - 1.
       */
  
      float 		scale_x, scale_y, scale_z;
--- 1883,1889 ----
       *         (Vx, Vy, Vz) is the lower left corner of the DC viewport.
       *
       *    M4 : maps DC to X drawable coordinates (flips Y).
!      *         H is the window height.
       */
  
      float 		scale_x, scale_y, scale_z;
***************
*** 1943,1949 ****
      transform_return[1][1] = -scale_y;
      transform_return[1][2] = 0.0;
      transform_return[1][3] =
! 	window_height - 1 - viewport[0].y + (scale_y * npc_sub_volume->min.y);
  
      transform_return[2][0] = 0.0;
      transform_return[2][1] = 0.0;
--- 1943,1949 ----
      transform_return[1][1] = -scale_y;
      transform_return[1][2] = 0.0;
      transform_return[1][3] =
! 	window_height - viewport[0].y + (scale_y * npc_sub_volume->min.y);
  
      transform_return[2][0] = 0.0;
      transform_return[2][1] = 0.0;
***************
*** 1987,1993 ****
       *         (Vx, Vy) is the lower left corner of the DC viewport.
       *
       *    M4 : maps DC to X drawable coordinates (flips Y).
!      *         H is the window height - 1.
       */
  
      float 		scale_x, scale_y;
--- 1987,1993 ----
       *         (Vx, Vy) is the lower left corner of the DC viewport.
       *
       *    M4 : maps DC to X drawable coordinates (flips Y).
!      *         H is the window height.
       */
  
      float 		scale_x, scale_y;
***************
*** 2038,2044 ****
      transform_return[1][0] = 0.0;
      transform_return[1][1] = -scale_y;
      transform_return[1][2] =
! 	window_height - 1 - viewport[0].y + (scale_y * npc_sub_volume->min.y);
  
      transform_return[2][0] = 0.0;
      transform_return[2][1] = 0.0;
--- 2038,2044 ----
      transform_return[1][0] = 0.0;
      transform_return[1][1] = -scale_y;
      transform_return[1][2] =
! 	window_height - viewport[0].y + (scale_y * npc_sub_volume->min.y);
  
      transform_return[2][0] = 0.0;
      transform_return[2][1] = 0.0;
***************
*** 2067,2073 ****
       *    0 0 0  1     0  0  0  1     0 0 0  1     0  0 0 1
       *
       *    M1 : maps X drawable coordinates to DC (flips Y).
!      *         H is the window height - 1.
       *
       *    M2 : translates DC viewport to origin
       *         (Vx, Vy, Vz) is the lower left corner of the DC viewport.
--- 2067,2073 ----
       *    0 0 0  1     0  0  0  1     0 0 0  1     0  0 0 1
       *
       *    M1 : maps X drawable coordinates to DC (flips Y).
!      *         H is the window height.
       *
       *    M2 : translates DC viewport to origin
       *         (Vx, Vy, Vz) is the lower left corner of the DC viewport.
***************
*** 2136,2142 ****
      transform_return[1][1] = -scale_y;
      transform_return[1][2] = 0.0;
      transform_return[1][3] =
! 	npc_sub_volume->min.y + scale_y * (window_height - 1 - viewport[0].y);
  
      transform_return[2][0] = 0.0;
      transform_return[2][1] = 0.0;
--- 2136,2142 ----
      transform_return[1][1] = -scale_y;
      transform_return[1][2] = 0.0;
      transform_return[1][3] =
! 	npc_sub_volume->min.y + scale_y * (window_height - viewport[0].y);
  
      transform_return[2][0] = 0.0;
      transform_return[2][1] = 0.0;
***************
*** 2171,2177 ****
       *    0 0  1     0  0  1     0 0  1      0  0 1
       *
       *    M1 : maps X drawable coordinates to DC (flips Y).
!      *         H is the window height - 1.
       *
       *    M2 : translates DC viewport to origin
       *         (Vx, Vy) is the lower left corner of the DC viewport.
--- 2171,2177 ----
       *    0 0  1     0  0  1     0 0  1      0  0 1
       *
       *    M1 : maps X drawable coordinates to DC (flips Y).
!      *         H is the window height.
       *
       *    M2 : translates DC viewport to origin
       *         (Vx, Vy) is the lower left corner of the DC viewport.
***************
*** 2231,2237 ****
      transform_return[1][0] = 0.0;
      transform_return[1][1] = -scale_y;
      transform_return[1][2] =
! 	npc_sub_volume->min.y + scale_y * (window_height - 1 - viewport[0].y);
  
      transform_return[2][0] = 0.0;
      transform_return[2][1] = 0.0;
--- 2231,2237 ----
      transform_return[1][0] = 0.0;
      transform_return[1][1] = -scale_y;
      transform_return[1][2] =
! 	npc_sub_volume->min.y + scale_y * (window_height - viewport[0].y);
  
      transform_return[2][0] = 0.0;
      transform_return[2][1] = 0.0;
