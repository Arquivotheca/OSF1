Path: news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9111202028.AA05081@xenon.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2233) Close XBUG #4682: server: GetImage from InputOnly -> BadDrawable instead of BadMatch
Date: Wed, 20 Nov 91 15:28:45 EST
From: Keith Packard <keith@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com


Subject: server: GetImage from InputOnly -> BadDrawable instead of BadMatch

### bug number:   4682
### area:         server
### severity:     low
### comments:     

*** /tmp/,RCSt1a04872	Wed Nov 20 14:51:36 1991
--- server/include/dix.h	Wed Nov 20 14:51:27 1991
***************
*** 21,27 ****
  SOFTWARE.
  
  ******************************************************************/
! /* $XConsortium: dix.h,v 1.60 91/10/30 14:49:57 rws Exp $ */
  
  #ifndef DIX_H
  #define DIX_H
--- 21,27 ----
  SOFTWARE.
  
  ******************************************************************/
! /* $XConsortium: dix.h,v 1.61 91/11/20 14:50:30 keith Exp $ */
  
  #ifndef DIX_H
  #define DIX_H
***************
*** 58,67 ****
--- 58,97 ----
          return(BadIDChoice);\
      }
  
+ /* XXX if you are using this macro, you are probably not generating Match
+  * errors where appropriate */
  #define LOOKUP_DRAWABLE(did, client)\
      ((client->lastDrawableID == did) ? \
       client->lastDrawable : (DrawablePtr)LookupDrawable(did, client))
  
+ #define VERIFY_DRAWABLE(pDraw, did, client)\
+     if (client->lastDrawableID == did)\
+ 	pDraw = client->lastDrawable;\
+     else \
+     {\
+ 	pDraw = (DrawablePtr) LookupIDByClass(did, RC_DRAWABLE);\
+ 	if (!pDraw) \
+ 	{\
+ 	    client->errorValue = did; \
+ 	    return BadDrawable;\
+ 	}\
+ 	if (pDraw->type == UNDRAWABLE_WINDOW)\
+ 	    return BadMatch;\
+     }
+ 
+ #define VERIFY_GEOMETRABLE(pDraw, did, client)\
+     if (client->lastDrawableID == did)\
+ 	pDraw = client->lastDrawable;\
+     else \
+     {\
+ 	pDraw = (DrawablePtr) LookupIDByClass(did, RC_DRAWABLE);\
+ 	if (!pDraw) \
+ 	{\
+ 	    client->errorValue = did; \
+ 	    return BadDrawable;\
+ 	}\
+     }
+ 
  #define VERIFY_GC(pGC, rid, client)\
      if (client->lastGCID == rid)\
          pGC = client->lastGC;\
***************
*** 77,94 ****
      if ((stuff->gc == INVALID) || (client->lastGCID != stuff->gc) ||\
  	(client->lastDrawableID != drawID))\
      {\
!         if (client->lastDrawableID != drawID) {\
! 	    pDraw = (DrawablePtr)LookupIDByClass(drawID, RC_DRAWABLE);\
!     	    if (!pDraw)\
!     	    {\
!             	client->errorValue = drawID; \
! 	    	return (BadDrawable);\
!     	    }\
!         } else\
! 	    pDraw = client->lastDrawable;\
  	VERIFY_GC(pGC, stuff->gc, client);\
! 	if ((pDraw->type == UNDRAWABLE_WINDOW) ||\
! 	    (pGC->depth != pDraw->depth) ||\
  	    (pGC->pScreen != pDraw->pScreen))\
  	    return (BadMatch);\
  	client->lastDrawable = pDraw;\
--- 107,115 ----
      if ((stuff->gc == INVALID) || (client->lastGCID != stuff->gc) ||\
  	(client->lastDrawableID != drawID))\
      {\
! 	VERIFY_GEOMETRABLE(pDraw, drawID, client);\
  	VERIFY_GC(pGC, stuff->gc, client);\
! 	if ((pGC->depth != pDraw->depth) ||\
  	    (pGC->pScreen != pDraw->pScreen))\
  	    return (BadMatch);\
  	client->lastDrawable = pDraw;\
*** /tmp/,RCSt1a04880	Wed Nov 20 14:52:19 1991
--- server/dix/dispatch.c	Wed Nov 20 14:52:10 1991
***************
*** 1,4 ****
! /* $XConsortium: dispatch.c,v 5.36 91/10/30 14:51:40 rws Exp $ */
  /************************************************************
  Copyright 1987, 1989 by Digital Equipment Corporation, Maynard, Massachusetts,
  and the Massachusetts Institute of Technology, Cambridge, Massachusetts.
--- 1,4 ----
! /* $XConsortium: dispatch.c,v 5.37 91/11/20 14:51:49 keith Exp $ */
  /************************************************************
  Copyright 1987, 1989 by Digital Equipment Corporation, Maynard, Massachusetts,
  and the Massachusetts Institute of Technology, Cambridge, Massachusetts.
***************
*** 583,593 ****
      REQUEST(xResourceReq);
  
      REQUEST_SIZE_MATCH(xResourceReq);
!     if (!(pDraw = LOOKUP_DRAWABLE(stuff->id, client)))
!     {                /* can be inputonly */
!         if (!(pDraw = (DrawablePtr)LookupWindow(stuff->id, client))) 
!             return (BadDrawable);
!     }
      rep.type = X_Reply;
      rep.length = 0;
      rep.sequenceNumber = client->sequence;
--- 583,589 ----
      REQUEST(xResourceReq);
  
      REQUEST_SIZE_MATCH(xResourceReq);
!     VERIFY_GEOMETRABLE (pDraw, stuff->id, client);
      rep.type = X_Reply;
      rep.length = 0;
      rep.sequenceNumber = client->sequence;
***************
*** 1213,1224 ****
      REQUEST_SIZE_MATCH(xCreatePixmapReq);
      client->errorValue = stuff->pid;
      LEGAL_NEW_RESOURCE(stuff->pid, client);
!     if (!(pDraw = LOOKUP_DRAWABLE(stuff->drawable, client)))
!     {        /* can be inputonly */
!         if (!(pDraw = (DrawablePtr)LookupWindow(stuff->drawable, client))) 
!             return (BadDrawable);
!     }
! 
      if (!stuff->width || !stuff->height)
      {
  	client->errorValue = 0;
--- 1209,1215 ----
      REQUEST_SIZE_MATCH(xCreatePixmapReq);
      client->errorValue = stuff->pid;
      LEGAL_NEW_RESOURCE(stuff->pid, client);
!     VERIFY_GEOMETRABLE (pDraw, stuff->drawable, client);
      if (!stuff->width || !stuff->height)
      {
  	client->errorValue = 0;
***************
*** 1282,1292 ****
      REQUEST_AT_LEAST_SIZE(xCreateGCReq);
      client->errorValue = stuff->gc;
      LEGAL_NEW_RESOURCE(stuff->gc, client);
!     if (!(pDraw = LOOKUP_DRAWABLE( stuff->drawable, client) ))
!     {
! 	client->errorValue = stuff->drawable;
!         return (BadDrawable);
!     }
      len = stuff->length -  (sizeof(xCreateGCReq) >> 2);
      if (len != Ones(stuff->mask))
          return BadLength;
--- 1273,1279 ----
      REQUEST_AT_LEAST_SIZE(xCreateGCReq);
      client->errorValue = stuff->gc;
      LEGAL_NEW_RESOURCE(stuff->gc, client);
!     VERIFY_DRAWABLE (pDraw, stuff->drawable, client);
      len = stuff->length -  (sizeof(xCreateGCReq) >> 2);
      if (len != Ones(stuff->mask))
          return BadLength;
***************
*** 1460,1470 ****
      VALIDATE_DRAWABLE_AND_GC(stuff->dstDrawable, pDst, pGC, client); 
      if (stuff->dstDrawable != stuff->srcDrawable)
      {
!         if (!(pSrc = LOOKUP_DRAWABLE(stuff->srcDrawable, client)))
! 	{
! 	    client->errorValue = stuff->srcDrawable;
!             return(BadDrawable);
! 	}
  	if ((pDst->pScreen != pSrc->pScreen) || (pDst->depth != pSrc->depth))
  	{
  	    client->errorValue = stuff->dstDrawable;
--- 1447,1453 ----
      VALIDATE_DRAWABLE_AND_GC(stuff->dstDrawable, pDst, pGC, client); 
      if (stuff->dstDrawable != stuff->srcDrawable)
      {
! 	VERIFY_DRAWABLE(pSrc, stuff->srcDrawable, client);
  	if ((pDst->pScreen != pSrc->pScreen) || (pDst->depth != pSrc->depth))
  	{
  	    client->errorValue = stuff->dstDrawable;
***************
*** 1501,1511 ****
      VALIDATE_DRAWABLE_AND_GC(stuff->dstDrawable, pdstDraw, pGC, client);
      if (stuff->dstDrawable != stuff->srcDrawable)
      {
!         if (!(psrcDraw = LOOKUP_DRAWABLE(stuff->srcDrawable, client)))
! 	{
! 	    client->errorValue = stuff->srcDrawable;
!             return(BadDrawable);
! 	}
  	if (pdstDraw->pScreen != psrcDraw->pScreen)
  	{
  	    client->errorValue = stuff->dstDrawable;
--- 1484,1490 ----
      VALIDATE_DRAWABLE_AND_GC(stuff->dstDrawable, pdstDraw, pGC, client);
      if (stuff->dstDrawable != stuff->srcDrawable)
      {
! 	VERIFY_DRAWABLE(psrcDraw, stuff->srcDrawable, client);
  	if (pdstDraw->pScreen != psrcDraw->pScreen)
  	{
  	    client->errorValue = stuff->dstDrawable;
***************
*** 1786,1796 ****
  	client->errorValue = stuff->format;
          return(BadValue);
      }
!     if(!(pDraw = LOOKUP_DRAWABLE(stuff->drawable, client) ))
!     {
! 	client->errorValue = stuff->drawable;
! 	return (BadDrawable);
!     }
      if(pDraw->type == DRAWABLE_WINDOW)
      {
        if( /* check for being viewable */
--- 1765,1771 ----
  	client->errorValue = stuff->format;
          return(BadValue);
      }
!     VERIFY_DRAWABLE(pDraw, stuff->drawable, client);
      if(pDraw->type == DRAWABLE_WINDOW)
      {
        if( /* check for being viewable */
***************
*** 2768,2783 ****
  	client->errorValue = stuff->class;
          return(BadValue);
      }
!     if (!(pDraw = LOOKUP_DRAWABLE(stuff->drawable, client)))
!     {
!         if (!(pDraw = (DrawablePtr)LookupWindow(stuff->drawable, client))) 
! 	{
! 	    client->errorValue = stuff->drawable;
! 	    return (BadDrawable);
! 	}
! 	if (stuff->class != CursorShape)
! 	    return (BadMatch);
!     }
      pScreen = pDraw->pScreen;
      (* pScreen->QueryBestSize)(stuff->class, &stuff->width,
  			       &stuff->height, pScreen);
--- 2743,2751 ----
  	client->errorValue = stuff->class;
          return(BadValue);
      }
!     VERIFY_GEOMETRABLE (pDraw, stuff->drawable, client);
!     if (stuff->class != CursorShape && pDraw->type == UNDRAWABLE_WINDOW)
! 	return (BadMatch);
      pScreen = pDraw->pScreen;
      (* pScreen->QueryBestSize)(stuff->class, &stuff->width,
  			       &stuff->height, pScreen);
