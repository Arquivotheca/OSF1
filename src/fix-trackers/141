Path: news.crl.dec.com!hollie.rdg.dec.com!pa.dec.com!nobody
Message-Id: <9202191953.AA07109@xenon.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2365) Close XBUG #4943: server: ddx/mi chord mode filled arcs can sometimes be rendered exact
Date: Wed, 19 Feb 92 14:53:29 EST
From: Keith Packard <keith@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com


### bug number:   4943
### area:         server
### severity:     low
### comments:     

*** /tmp/da7079	Wed Feb 19 14:52:35 1992
--- server/ddx/mi/mifillarc.c	Tue Dec 17 19:34:59 1991
***************
*** 17,23 ****
  
  ********************************************************/
  
! /* $XConsortium: mifillarc.c,v 5.15 91/07/01 17:02:41 keith Exp $ */
  
  #include <math.h>
  #include "X.h"
--- 17,23 ----
  
  ********************************************************/
  
! /* $XConsortium: mifillarc.c,v 5.16 91/12/17 19:34:43 keith Exp $ */
  
  #include <math.h>
  #include "X.h"
***************
*** 386,391 ****
--- 386,392 ----
      {
  	double w2, h2, x1, y1, x2, y2, dx, dy, scale;
  	int signdx, signdy, y, k;
+ 	Bool isInt1 = TRUE, isInt2 = TRUE;
  
  	w2 = (double)arc->width / 2.0;
  	h2 = (double)arc->height / 2.0;
***************
*** 401,406 ****
--- 402,408 ----
  	}
  	else
  	{
+ 	    isInt1 = FALSE;
  	    x1 = Dcos(angle1) * w2;
  	    y1 = Dsin(angle1) * h2;
  	}
***************
*** 416,421 ****
--- 418,424 ----
  	}
  	else
  	{
+ 	    isInt2 = FALSE;
  	    x2 = Dcos(angle2) * w2;
  	    y2 = Dsin(angle2) * h2;
  	}
***************
*** 445,453 ****
  	}
  	else
  	    signdx = 1;
! 	scale = (dx > dy) ? dx : dy;
! 	slice->edge1.dx = floor((dx * 32768) / scale + .5);
! 	slice->edge1.dy = floor((dy * 32768) / scale + .5);
  	if (!slice->edge1.dy)
  	{
  	    if (signdx < 0)
--- 448,464 ----
  	}
  	else
  	    signdx = 1;
! 	if (isInt1 && isInt2)
! 	{
! 	    slice->edge1.dx = dx * 2;
! 	    slice->edge1.dy = dy * 2;
! 	}
! 	else
! 	{
! 	    scale = (dx > dy) ? dx : dy;
! 	    slice->edge1.dx = floor((dx * 32768) / scale + .5);
! 	    slice->edge1.dy = floor((dy * 32768) / scale + .5);
! 	}
  	if (!slice->edge1.dy)
  	{
  	    if (signdx < 0)
