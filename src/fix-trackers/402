Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9207292221.AA01885@explain.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2630) close XBUG #4270, #4576, #5336, #5337: xset bugs
Date: Wed, 29 Jul 92 18:21:40 EDT
From: Bob Scheifler <rws@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com


Subject: xset: man page doesn't fully describe -r option
### bug number:   4270
### area:         xset
### severity:     low
### comments:     

Subject: xset: c on should set volume to non-zero value
### bug number:   4576
### area:         xset
### severity:     low
### comments:     

Subject: xset: 'b' option is not action for manual page.
### bug number:   5336
### area:         xset
### severity:     low
### comments:     

Subject: xset: '-led' option is not action normally.
### bug number:   5337
### area:         xset
### severity:     low
### comments:     

*** /tmp/d01812	Wed Jul 29 18:17:36 1992
--- clients/xset/xset.man	Wed Jul 29 18:08:39 1992
***************
*** 1,3 ****
--- 1,4 ----
+ .\" $XConsortium: xset.man,v 1.23 92/07/29 18:08:26 rws Exp $
  .TH XSET 1 "Release 5" "X Version 11"
  .SH NAME
  xset - user preference utility for X
***************
*** 11,17 ****
  [[-]led [\fIinteger\fP]] [led on/off]
  [m[ouse] [\fIaccel_mult\fP[/\fIaccel_div\fP] [\fIthreshold\fP]]] [m[ouse] default]
  [p \fIpixel\fP \fIcolor\fP]
! [[-]r] [r on/off]
  [s [\fIlength\fP [\fIperiod\fP]]] [s blank/noblank]
  [s expose/noexpose] [s on/off] [s default]
  [q]
--- 12,18 ----
  [[-]led [\fIinteger\fP]] [led on/off]
  [m[ouse] [\fIaccel_mult\fP[/\fIaccel_div\fP] [\fIthreshold\fP]]] [m[ouse] default]
  [p \fIpixel\fP \fIcolor\fP]
! [[-]r [keycode]] [r on/off]
  [s [\fIlength\fP [\fIperiod\fP]]] [s blank/noblank]
  [s expose/noexpose] [s on/off] [s default]
  [q]
***************
*** 69,78 ****
  .PP
  .TP 8
  .B fp= \fIpath,...\fP
! The \fBfp=\fP sets the font path to the directories given in the path argument.
! The directories are interpreted by the server, not by the client, and are
! server-dependent.  Directories that do not contain font databases created by
! \fImkfontdir\fP will be ignored by the server.
  .TP 8
  .B fp \fBdefault\fP
  The \fBdefault\fP argument causes the font path to be reset to the server's
--- 70,79 ----
  .PP
  .TP 8
  .B fp= \fIpath,...\fP
! The \fBfp=\fP sets the font path to the entries given in the path argument.
! The entries are interpreted by the server, not by the client.
! Typically they are directory names or font server names, but the
! interpretation is server-dependent.
  .TP 8
  .B fp \fBdefault\fP
  The \fBdefault\fP argument causes the font path to be reset to the server's
***************
*** 79,85 ****
  default.
  .TP 8
  .B fp \fBrehash\fP
! The \fBrehash\fP argument causes the server to reread the font databases in
  the current font path.  This is generally only used when adding new fonts to
  a font directory (after running \fImkfontdir\fP to recreate the font database).
  .PP
--- 80,87 ----
  default.
  .TP 8
  .B fp \fBrehash\fP
! The \fBrehash\fP argument resets the font path to its current value,
! causing the server to reread the font databases in
  the current font path.  This is generally only used when adding new fonts to
  a font directory (after running \fImkfontdir\fP to recreate the font database).
  .PP
***************
*** 86,98 ****
  .TP 8
  .B "\-fp \fRor\fP fp\-"
  The \fB\-fp\fP and \fBfp\-\fP options remove elements from the current
! font path.  They must be followed by a comma-separated list of directories.
  .PP
  .TP 8
  .B "\+fp \fRor\fP fp\+"
  This \fB\+fp\fP and \fBfp\+\fP options prepend and append elements to the 
  current font path, respectively.  They must be followed by a comma-separated 
! list of directories.
  .PP
  .TP 8
  .B led
--- 88,100 ----
  .TP 8
  .B "\-fp \fRor\fP fp\-"
  The \fB\-fp\fP and \fBfp\-\fP options remove elements from the current
! font path.  They must be followed by a comma-separated list of entries.
  .PP
  .TP 8
  .B "\+fp \fRor\fP fp\+"
  This \fB\+fp\fP and \fBfp\+\fP options prepend and append elements to the 
  current font path, respectively.  They must be followed by a comma-separated 
! list of entries.
  .PP
  .TP 8
  .B led
***************
*** 142,147 ****
--- 144,151 ----
  The \fBr\fP option controls the autorepeat.
  If a preceding dash or the 'off' flag is used, autorepeat will be disabled.
  If no parameters or the 'on' flag is used, autorepeat will be enabled.
+ If a specific keycode is specified as a parameter, autorepeat for that
+ keycode is enabled or disabled.
  .PP
  .TP 8
  .B s
*** /tmp/d01831	Wed Jul 29 18:17:48 1992
--- clients/xset/xset.c	Wed Jul 29 18:16:28 1992
***************
*** 1,5 ****
  /* 
!  * $XConsortium: xset.c,v 1.59 91/07/22 18:32:33 keith Exp $ 
   */
  
  /* Copyright    Massachusetts Institute of Technology    1985	*/
--- 1,5 ----
  /* 
!  * $XConsortium: xset.c,v 1.62 92/07/29 18:15:58 rws Exp $ 
   */
  
  /* Copyright    Massachusetts Institute of Technology    1985	*/
***************
*** 16,22 ****
  without express or implied warranty.
  */
  
! /* $XConsortium: xset.c,v 1.59 91/07/22 18:32:33 keith Exp $ */
  
  #include <stdio.h>
  #include <ctype.h>
--- 16,22 ----
  without express or implied warranty.
  */
  
! /* $XConsortium: xset.c,v 1.62 92/07/29 18:15:58 rws Exp $ */
  
  #include <stdio.h>
  #include <ctype.h>
***************
*** 39,44 ****
--- 39,47 ----
  #define SERVER_DEFAULT (-1)
  #define DONT_CHANGE -2
  
+ #define DEFAULT_ON (-50)
+ #define DEFAULT_TIMEOUT (-600)
+ 
  #define ALL -1
  #define TIMEOUT 1
  #define INTERVAL 2
***************
*** 109,114 ****
--- 112,118 ----
      }
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {               /* Let click be default. */
+       percent = DEFAULT_ON;
        i++;
      } 
      else if (strcmp(arg, "off") == 0) {  
***************
*** 128,138 ****
      percent = SERVER_DEFAULT;		/* Set bell to default. */
      if (i >= argc) {
  	set_bell_vol (dpy, percent);	/* set bell to default */
  	break;
      }
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {               /* Let it stay that way.  */
!       set_bell_vol(dpy, percent);
        i++;
      } 
      else if (strcmp(arg, "off") == 0) {
--- 132,146 ----
      percent = SERVER_DEFAULT;		/* Set bell to default. */
      if (i >= argc) {
  	set_bell_vol (dpy, percent);	/* set bell to default */
+ 	set_bell_pitch(dpy,percent);    /* set pitch to default */
+ 	set_bell_dur(dpy,percent);      /* set duration to default */
  	break;
      }
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {               /* Let it stay that way.  */
!       set_bell_vol(dpy, DEFAULT_ON);  /* set bell on */
!       set_bell_pitch(dpy,percent);    /* set pitch to default */
!       set_bell_dur(dpy,percent);      /* set duration to default */
        i++;
      } 
      else if (strcmp(arg, "off") == 0) {
***************
*** 221,226 ****
--- 229,238 ----
    else if (strcmp(arg, "-led") == 0) {         /* Turn off one or all LEDs */
      values.led_mode = OFF;
      values.led = ALL;        /* None specified */
+     if (i >= argc) {
+ 	set_led(dpy, values.led, values.led_mode);
+ 	break;
+     }
      arg = nextarg(i, argv);
      if (isnumber(arg, 32) && atoi(arg) > 0) {
        values.led = atoi(arg);
***************
*** 311,321 ****
  	i++;
        }
      }
!     else if (strcmp(arg, "default") == 0 ||
! 	     strcmp(arg, "on") == 0) {    /*  Leave as default.       */
!       set_saver(dpy, ALL, 0);
        i++;
      } 
      else if (*arg >= '0' && *arg <= '9') {  /*  Set as user wishes.   */
        set_saver(dpy, TIMEOUT, atoi(arg));
        i++;
--- 323,336 ----
  	i++;
        }
      }
!     else if (strcmp(arg, "default") == 0) {    /*  Leave as default.       */
!       set_saver(dpy, ALL, SERVER_DEFAULT);
        i++;
      } 
+     else if (strcmp(arg, "on") == 0) {    /*  Turn on.       */
+       set_saver(dpy, ALL, DEFAULT_TIMEOUT);
+       i++;
+     } 
      else if (*arg >= '0' && *arg <= '9') {  /*  Set as user wishes.   */
        set_saver(dpy, TIMEOUT, atoi(arg));
        i++;
***************
*** 415,422 ****
--- 430,447 ----
  int percent;
  {
  XKeyboardControl values;
+ XKeyboardState kbstate;
  values.key_click_percent = percent;
+ if (percent == DEFAULT_ON)
+   values.key_click_percent = SERVER_DEFAULT;
  XChangeKeyboardControl(dpy, KBKeyClickPercent, &values);
+ if (percent == DEFAULT_ON) {
+   XGetKeyboardControl(dpy, &kbstate);
+   if (!kbstate.key_click_percent) {
+     values.key_click_percent = -percent;
+     XChangeKeyboardControl(dpy, KBKeyClickPercent, &values);
+   }
+ }
  return;
  }
  
***************
*** 425,432 ****
--- 450,467 ----
  int percent;
  {
  XKeyboardControl values;
+ XKeyboardState kbstate;
  values.bell_percent = percent;
+ if (percent == DEFAULT_ON)
+   values.bell_percent = SERVER_DEFAULT;
  XChangeKeyboardControl(dpy, KBBellPercent, &values);
+ if (percent == DEFAULT_ON) {
+   XGetKeyboardControl(dpy, &kbstate);
+   if (!kbstate.bell_percent) {
+     values.bell_percent = -percent;
+     XChangeKeyboardControl(dpy, KBBellPercent, &values);
+   }
+ }
  return;
  }
  
***************
*** 646,659 ****
    if (mask == INTERVAL) interval = value;
    if (mask == PREFER_BLANK) prefer_blank = value;
    if (mask == ALLOW_EXP) allow_exp = value;
!   if (mask == ALL) {  /* "value" is ignored in this case.  (defaults) */
      timeout = SERVER_DEFAULT;
      interval = SERVER_DEFAULT;
      prefer_blank = DefaultBlanking;
      allow_exp = DefaultExposures;
    }
!       XSetScreenSaver(dpy, timeout, interval, prefer_blank, 
  		      allow_exp);
    return;
  }
  
--- 681,700 ----
    if (mask == INTERVAL) interval = value;
    if (mask == PREFER_BLANK) prefer_blank = value;
    if (mask == ALLOW_EXP) allow_exp = value;
!   if (mask == ALL) {
      timeout = SERVER_DEFAULT;
      interval = SERVER_DEFAULT;
      prefer_blank = DefaultBlanking;
      allow_exp = DefaultExposures;
    }
!   XSetScreenSaver(dpy, timeout, interval, prefer_blank, 
! 		  allow_exp);
!   if (mask == ALL && value == DEFAULT_TIMEOUT) {
!     XGetScreenSaver(dpy, &timeout, &interval, &prefer_blank, &allow_exp);
!     if (!timeout)
!       XSetScreenSaver(dpy, -DEFAULT_TIMEOUT, interval, prefer_blank, 
  		      allow_exp);
+   }
    return;
  }
  
*** /tmp/d01850	Wed Jul 29 18:18:00 1992
--- clients/xset/Imakefile	Fri Dec 20 11:30:30 1991
***************
*** 1,6 ****
! XCOMM $XConsortium: Imakefile,v 1.6 91/07/17 00:46:54 gildea Exp $
          DEFINES = ExtensionDefines
!         DEPLIBS = $(DEPEXTENSIONLIB) $(DEPXMULIB) $(DEPXLIB)
! LOCAL_LIBRARIES = $(EXTENSIONLIB) $(XMULIB) $(XLIB)
  
  SimpleProgramTarget(xset)
--- 1,6 ----
! XCOMM $XConsortium: Imakefile,v 1.7 91/12/20 11:29:16 rws Exp $
          DEFINES = ExtensionDefines
!         DEPLIBS = $(DEPXMULIB) $(DEPXLIB)
! LOCAL_LIBRARIES = $(XMULIB) $(XLIB)
  
  SimpleProgramTarget(xset)
