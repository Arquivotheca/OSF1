Path: news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9203031617.AA09190@explain.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2388) close XBUG #4902,#4903,#4904,#4928,#5004: various Xlib/Xsi bugs
Date: Tue, 03 Mar 92 11:17:33 EST
From: Bob Scheifler <rws@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

Subject: Xlib: (Xsi) XCreateFontSet doesn't free work area
### bug number:   4902
### area:         Xlib
### severity:     low
### comments:     

Subject: Xlib: (Xsi) Bugs of XwcLookupString() and etc.
### bug number:   4903
### area:         Xlib
### severity:     low
### comments:     

Subject: Xlib: (Xsi) When network of machine is disable, XOpenIM() failes.
### bug number:   4904
### area:         Xlib
### severity:     low
### comments:     

Subject: Xlib: (Xsi) lib/nls/ja_JP.ujis: Area of UDC
### bug number:   4928
### area:         Xlib
### severity:     low
### comments:     

Subject: Xlib: (Xsi) cannot draw JISX0212/CNS11643 2nd plane character
### bug number:   5004
### area:         Xlib
### severity:     low
### comments:     


*** /tmp/d08450	Tue Mar  3 11:04:32 1992
--- lib/X/Xsi/ProtoFlt.c	Tue Mar  3 10:02:26 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: ProtoFlt.c,v 1.25 91/12/02 16:50:26 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: ProtoFlt.c,v 1.26 92/03/03 10:01:17 rws Exp $
   */
  
  /*
***************
*** 95,101 ****
  	    ret = _XConvertCTToMB(ic->mb, (unsigned char *)ic->ct_buf, length,
  				  mbuf, &mb_len, &scanned_bytes,
  				  (_State *)NULL);
! 	    if (ret == Success) {
  #ifdef macII
  		wc_len = 0;
  #else
--- 95,101 ----
  	    ret = _XConvertCTToMB(ic->mb, (unsigned char *)ic->ct_buf, length,
  				  mbuf, &mb_len, &scanned_bytes,
  				  (_State *)NULL);
! 	    if (ret >= 0) {
  #ifdef macII
  		wc_len = 0;
  #else
***************
*** 106,112 ****
  		    return;
  	    }
  #endif
! 	    if (ret != Success) {
  		return;
  	    }
  	} else {
--- 106,112 ----
  		    return;
  	    }
  #endif
! 	    if (ret < 0) {
  		return;
  	    }
  	} else {
***************
*** 256,262 ****
  		ret = _XConvertCTToMB(ic->mb, (unsigned char *)ic->ct_buf,
  				      length, mbuf, &mb_len, &scanned_bytes,
  				      (_State *)NULL);
! 		if (ret == Success) {
  #ifdef macII
  		    wc_len = 0;
  #else
--- 256,262 ----
  		ret = _XConvertCTToMB(ic->mb, (unsigned char *)ic->ct_buf,
  				      length, mbuf, &mb_len, &scanned_bytes,
  				      (_State *)NULL);
! 		if (ret >= 0) {
  #ifdef macII
  		    wc_len = 0;
  #else
***************
*** 267,273 ****
  			return;
  		}
  #endif
! 		if (ret != Success) {
  		    return;
  		}
  	    } else {
--- 267,273 ----
  			return;
  		}
  #endif
! 		if (ret < 0) {
  		    return;
  		}
  	    } else {
*** /tmp/d08595	Tue Mar  3 11:05:49 1992
--- lib/X/Xsi/XConnIM.c	Tue Mar  3 10:03:10 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XConnIM.c,v 1.16 91/08/12 17:22:22 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XConnIM.c,v 1.17 92/03/03 10:02:09 rws Exp $
   */
  
  /*
***************
*** 61,69 ****
      im->fd = -1;
      return(False);
  #else
- #ifdef	UNIXCONN
-     char		hostname[256];	/* My host name buffer */
- #endif
      char		im_hostname[256];/* Input manager host name buffer */
      Atom		actual_type;
      int			actual_format;
--- 61,66 ----
***************
*** 84,89 ****
--- 81,87 ----
      ximNormalReply	reply;
      unsigned long	i;
      unsigned short	s;
+     int			inet_ok = 0;
  
      im->fd = -1;
      /*
***************
*** 109,123 ****
      if (im->major_version != XIM_MAJOR_VERSION) return(False);
      if (!(im->minor_version >= XIM_MINOR_VERSION)) return(False);
  
! #ifdef	UNIXCONN
!     if (gethostname(hostname, 256) < 0) {
! 	hostname[0] = '\0';
      }
      /*
!      * If the hostname of gethostname is null or the hostname of the input
!      * manager is null, attempts to open UNIX domain socket.
       */
!     if ((hostname[0] == '\0') || (im_hostname[0] == '\0')) {
  	saddr.sun_family = AF_UNIX;
  	strcpy(saddr.sun_path, XIM_UNIX_PATH);
  	if ((sd = socket(AF_UNIX, SOCK_STREAM, 0)) < 0) {
--- 107,136 ----
      if (im->major_version != XIM_MAJOR_VERSION) return(False);
      if (!(im->minor_version >= XIM_MINOR_VERSION)) return(False);
  
! #ifdef TCPCONN
!     /*
!      * Attempts to open INET domain socket.
!      */
!     if (hp = gethostbyname(im_hostname)) {
! 	bzero((char *)&saddr_in, (int)sizeof(saddr_in));
! 	bcopy(hp->h_addr, (char *)&saddr_in.sin_addr, hp->h_length);
! 	saddr_in.sin_family = AF_INET;
! 	saddr_in.sin_port = htons(port);
! 	if ((sd = socket(AF_INET, SOCK_STREAM, 0)) >= 0) {
! 	    if (connect(sd, &saddr_in, sizeof(saddr_in)) >= 0) {
! 		inet_ok = 1;
! 	    } else {
! 		close(sd);
! 		sd = -1;
! 	    }
! 	}
      }
+ #endif
+ #ifdef	UNIXCONN
      /*
!      * Attempts to open UNIX domain socket.
       */
!     if (inet_ok == 0) {
  	saddr.sun_family = AF_UNIX;
  	strcpy(saddr.sun_path, XIM_UNIX_PATH);
  	if ((sd = socket(AF_UNIX, SOCK_STREAM, 0)) < 0) {
***************
*** 127,156 ****
  	    close(sd);
  	    return(False);
  	}
-     } else {
- #endif	/* UNIXCONN */
- #ifdef TCPCONN
- 	/*
- 	 * Attempts to open INET domain socket.
- 	 */
- 	if ((hp = gethostbyname(im_hostname)) == NULL) {
- 	    return(False);
- 	}
- 	bzero((char *)&saddr_in, (int)sizeof(saddr_in));
- 	bcopy(hp->h_addr, (char *)&saddr_in.sin_addr, hp->h_length);
- 	saddr_in.sin_family = AF_INET;
- 	saddr_in.sin_port = htons(port);
- 	if ((sd = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
- 	    return(False);
- 	}
- 	if (connect(sd, &saddr_in, sizeof(saddr_in)) < 0) {
- 	    close(sd);
- 	    return(False);
- 	}
- #endif
- #ifdef	UNIXCONN
      }
  #endif	/* UNIXCONN */
  
      /*
       * Send the display name to the input manager. 
--- 140,148 ----
  	    close(sd);
  	    return(False);
  	}
      }
  #endif	/* UNIXCONN */
+     if (sd == -1) return(False);
  
      /*
       * Send the display name to the input manager. 
*** /tmp/d08612	Tue Mar  3 11:05:58 1992
--- lib/X/Xsi/XCrFntSet.c	Tue Mar  3 10:01:24 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XCrFntSet.c,v 1.43 91/12/02 16:49:48 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XCrFntSet.c,v 1.44 92/03/03 10:00:34 rws Exp $
   */
  
  /*
***************
*** 440,453 ****
  	    if (matchCharset(fn, cset->cs_name, cset->cs_GLorGR) == True) {
  		dbg_printf("findFont: matched\n", 0, 0);
  		ret++;
- 		f_tmp[i] = fn;
  #ifdef PRELOAD
  		if (!(s_tmp[i] = XLoadQueryFont(dpy, fn))) ret--;
  #else /* PRELOAD */
  		if (!info)
  		    list = XListFontsWithInfo(dpy, fname, 1, &count, &info);
! 		if(! (s_tmp[i] = (XFontStruct *) Xmalloc(sizeof(XFontStruct))))
  		    return ret;
  # ifndef MUSTCOPY
  		s_tmp[i] = info[0];
  # else /* MUSTCOPY */
--- 440,454 ----
  	    if (matchCharset(fn, cset->cs_name, cset->cs_GLorGR) == True) {
  		dbg_printf("findFont: matched\n", 0, 0);
  		ret++;
  #ifdef PRELOAD
  		if (!(s_tmp[i] = XLoadQueryFont(dpy, fn))) ret--;
  #else /* PRELOAD */
  		if (!info)
  		    list = XListFontsWithInfo(dpy, fname, 1, &count, &info);
! 		if(! (s_tmp[i] = (XFontStruct *) Xmalloc(sizeof(XFontStruct)))){
! 		    Xfree((char *)fn);
  		    return ret;
+ 		}
  # ifndef MUSTCOPY
  		s_tmp[i] = info[0];
  # else /* MUSTCOPY */
***************
*** 457,462 ****
--- 458,468 ----
  		s_tmp[i]->fid = 0;
  #endif /* PRELOAD */
  		id_tmp[i] = cset->cs_id;
+ 		if(! (f_tmp[i] = (char *) Xmalloc(strlen(fn) + 1))) {
+ 		    Xfree((char *)fn);
+ 		    return --ret;
+ 		}
+ 		strcpy(f_tmp[i], fn);
  	    } else {
  		f_tmp[i] = NULL;
  	    }
***************
*** 466,471 ****
--- 472,478 ----
      if (info) {
  	XFreeFontInfo(list, info, count);
      }
+     Xfree((char *)fn);
      return ret;
  
  }
***************
*** 678,684 ****
      }
  
      if (!loadASCIIFONT) {
! 	f_tmp[0] = "fixed";	/* use defalt font */
  	s_tmp[0] = XLoadQueryFont(dpy, f_tmp[0]);
      }
  
--- 685,693 ----
      }
  
      if (!loadASCIIFONT) {
! 	if(! (f_tmp[0] = (char *)Xmalloc(strlen("fixed") + 1)))
! 	    return NULL;
! 	strcpy(f_tmp[0], "fixed");	/* use defalt font */
  	s_tmp[0] = XLoadQueryFont(dpy, f_tmp[0]);
      }
  
***************
*** 704,709 ****
--- 713,721 ----
  		      &font_set->min_bounds, &font_set->max_bounds,
  		      &font_set->ascent, &font_set->descent);
      font_set->core.default_string = NULL;
+     for (i = 0; (int)i < found; i++) {
+ 	Xfree((char *)f_tmp[i]);
+     }
  
      /*
       * set the ink bounding box of font_set.
***************
*** 867,872 ****
--- 879,887 ----
  		      &font_set->min_bounds, &font_set->max_bounds,
  		      &font_set->ascent, &font_set->descent);
      font_set->core.default_string = NULL;
+     for (i = 0; (int)i < found; i++) {
+ 	Xfree((char *)f_tmp[i]);
+     }
  
      /*
       * set the ink bounding box of font_set.
*** /tmp/d08709	Tue Mar  3 11:06:49 1992
--- lib/X/Xsi/XIMKeyBind.c	Tue Mar  3 10:02:30 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XIMKeyBind.c,v 1.21 91/12/02 16:42:44 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XIMKeyBind.c,v 1.22 92/03/03 10:01:53 rws Exp $
   */
  
  /*
***************
*** 67,73 ****
  	    mbuf = _XAllocScratch(ev->display, ret_len);
  	    ret = _XConvertCTToMB(ic->mb, ptr, length, mbuf,
  				  &ret_len, &scanned_bytes, (_State *)NULL);
! 	    if (ret == Success) {
  #ifdef macII
  		ret_len = 0;
  #else
--- 67,73 ----
  	    mbuf = _XAllocScratch(ev->display, ret_len);
  	    ret = _XConvertCTToMB(ic->mb, ptr, length, mbuf,
  				  &ret_len, &scanned_bytes, (_State *)NULL);
! 	    if (ret >= 0) {
  #ifdef macII
  		ret_len = 0;
  #else
***************
*** 78,84 ****
  		    ret = XBufferOverflow;
  	    }
  #endif
! 	    if (ret != Success) {
  		*status = XBufferOverflow;
  		return(0);
  	    }
--- 78,84 ----
  		    ret = XBufferOverflow;
  	    }
  #endif
! 	    if (ret < 0) {
  		*status = XBufferOverflow;
  		return(0);
  	    }
***************
*** 104,112 ****
  	    }
  #ifdef X_WCHAR
  	    /* XXX BUG Need to save current status */
! 	    _XConvertMBToWC(ic->wc, (unsigned char *)buf, ret_len,
  			    (wchar *)buffer, &nchars, &scanned_bytes,
  			    (_State *)NULL);
  	    ret_len = nchars;
  	    /* XXX BUG Need to restore saved status */
  #else
--- 104,116 ----
  	    }
  #ifdef X_WCHAR
  	    /* XXX BUG Need to save current status */
! 	    ret = _XConvertMBToWC(ic->wc, (unsigned char *)buf, ret_len,
  			    (wchar *)buffer, &nchars, &scanned_bytes,
  			    (_State *)NULL);
+ 	    if (ret < 0) {
+ 		*status = XBufferOverflow;
+ 		return(0);
+ 	    }
  	    ret_len = nchars;
  	    /* XXX BUG Need to restore saved status */
  #else
***************
*** 150,156 ****
  	    ret_len = nbytes;
  	    ret = _XConvertCTToMB(ic->mb, ptr, length, (unsigned char *)buffer,
  				  &ret_len, &scanned_bytes, (_State *)NULL);
! 	    if (ret != Success) {
  		*status = XBufferOverflow;
  		return(0);
  	    }
--- 154,160 ----
  	    ret_len = nbytes;
  	    ret = _XConvertCTToMB(ic->mb, ptr, length, (unsigned char *)buffer,
  				  &ret_len, &scanned_bytes, (_State *)NULL);
! 	    if (ret < 0) {
  		*status = XBufferOverflow;
  		return(0);
  	    }
***************
*** 163,169 ****
  				      (unsigned char *)buffer,
  				      &ret_len, &scanned_bytes,
  				      (_State *)NULL);
! 		if (ret != Success) {
  		    *status = XBufferOverflow;
  		    return(0);
  		}
--- 167,173 ----
  				      (unsigned char *)buffer,
  				      &ret_len, &scanned_bytes,
  				      (_State *)NULL);
! 		if (ret < 0) {
  		    *status = XBufferOverflow;
  		    return(0);
  		}
*** /tmp/d08758	Tue Mar  3 11:07:14 1992
--- lib/X/Xsi/XInitCT.c	Tue Mar  3 10:04:01 1992
***************
*** 1,5 ****
  /*
!  * $XConsortium: XInitCT.c,v 1.16 91/09/18 16:29:54 rws Exp $
   */
  
  /*
--- 1,5 ----
  /*
!  * $XConsortium: XInitCT.c,v 1.17 92/03/03 10:02:52 rws Exp $
   */
  
  /*
***************
*** 546,554 ****
      _CSID			ind, i;
      _CSID 			n = ISOStateTableNum;
  
! #define PosSub(s1, s2) ((s1 >= s2) ? (s1 - s2) : ~0L)
  
      *woffset = ptr->state_woffset;
      ind = CODESET0;
      disp_min = PosSub(wc, ptr->state_woffset);
      if (disp_min == (wchar) ~0L) {
--- 546,555 ----
      _CSID			ind, i;
      _CSID 			n = ISOStateTableNum;
  
! #define PosSub(s1, s2) (((s1) >= (s2)) ? ((s1) - (s2)) : ~0L)
  
      *woffset = ptr->state_woffset;
+     wc &= ~0x7f;
      ind = CODESET0;
      disp_min = PosSub(wc, ptr->state_woffset);
      if (disp_min == (wchar) ~0L) {
***************
*** 558,566 ****
      if (disp_min < 0x80)
  	return(CODESET0);
      for (i = 1, ptr++; i < n; i++, ptr++) {
!         if (((new = PosSub(wc, ptr->state_woffset)) > 0) && (new < disp_min)) {
              *woffset = ptr->state_woffset;
! 	    if ((new < 0x80) || (ptr->state_length == 2 && new < 0x8000))
  		return(i);
              ind = i;
              disp_min = new;
--- 559,571 ----
      if (disp_min < 0x80)
  	return(CODESET0);
      for (i = 1, ptr++; i < n; i++, ptr++) {
! 	if (ptr->state_length == 2)
! 	    new = PosSub(wc & ~0x7f00, ptr->state_woffset);
! 	else
! 	    new = PosSub(wc, ptr->state_woffset);
!         if ((new >= 0) && (new < disp_min)) {
              *woffset = ptr->state_woffset;
! 	    if (new < 0x80)
  		return(i);
              ind = i;
              disp_min = new;
*** /tmp/d09172	Tue Mar  3 11:16:03 1992
--- lib/nls/Xsi/ja_JP.ujis	Tue Mar  3 10:00:18 1992
***************
*** 1,5 ****
  #
! # $XConsortium: ja_JP.ujis,v 1.7 91/06/29 20:02:02 xguest Exp $
  #
  # Copyright 1990, 1991 by OMRON Corporation, NTT Software Corporation,
  #                      and Nippon Telegraph and Telephone Corporation
--- 1,5 ----
  #
! # $XConsortium: ja_JP.ujis,v 1.8 92/03/03 09:59:32 rws Exp $
  #
  # Copyright 1990, 1991 by OMRON Corporation, NTT Software Corporation,
  #                      and Nippon Telegraph and Telephone Corporation
***************
*** 103,109 ****
  (8fa1a1=2121:7e7e)
  #
  # UDC
! (f5a1=2121:2d7e)
  END XLC_CODESET
  #
  # END OF FILE
--- 103,109 ----
  (8fa1a1=2121:7e7e)
  #
  # UDC
! (f5a1=2121:2a7e)
  END XLC_CODESET
  #
  # END OF FILE
