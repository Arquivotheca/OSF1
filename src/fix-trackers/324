Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9205182250.AA01492@explain.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2551) close XBUG #5251: fontlib: default character incorrectly computed for font server fonts
Date: Mon, 18 May 92 18:50:32 EDT
From: Bob Scheifler <rws@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com

### bug number:   5251
### area:         fontlib
### severity:     low
### comments:     

*** /tmp/d01471	Mon May 18 18:48:11 1992
--- fonts/lib/font/fc/fserve.c	Mon May 18 18:02:14 1992
***************
*** 1,4 ****
! /* $XConsortium: fserve.c,v 1.22 92/05/13 15:41:49 gildea Exp $ */
  /*
   * Copyright 1990 Network Computing Devices
   *
--- 1,4 ----
! /* $XConsortium: fserve.c,v 1.23 92/05/18 18:00:38 rws Exp $ */
  /*
   * Copyright 1990 Network Computing Devices
   *
***************
*** 48,53 ****
--- 48,59 ----
  #define MIN(a,b)    ((a)<(b)?(a):(b))
  #endif
  
+ #define NONZEROMETRICS(pci) ((pci)->leftSideBearing || \
+ 			     (pci)->rightSideBearing || \
+ 			     (pci)->ascent || \
+ 			     (pci)->descent || \
+ 			     (pci)->characterWidth)
+ 
  extern int  errno;
  
  
***************
*** 696,703 ****
  	fsfont->inkMetrics = pCI + rep.num_extents;
      else
          fsfont->inkMetrics = pCI;
- /* XXX - hack - use real default char */
-     fsfont->pDefault = &pCI[0];
  
      if (_fs_read_pad(conn, (char *) fsci,
  		     sizeof(fsCharInfo) * rep.num_extents) == -1) {
--- 702,707 ----
***************
*** 715,731 ****
      if (haveInk)
      {
  	FontInfoRec *fi = &bfont->pfont->info;
  
  	ci = fsfont->encoding;
! 	for (i = 0; i < rep.num_extents; i++, ci++)
  	{
! 	    ci->metrics.leftSideBearing = FONT_MIN_LEFT(fi);
! 	    ci->metrics.rightSideBearing = FONT_MAX_RIGHT(fi);
! 	    ci->metrics.ascent = FONT_MAX_ASCENT(fi);
! 	    ci->metrics.descent = FONT_MAX_DESCENT(fi);
! 	    ci->metrics.characterWidth = FONT_MAX_WIDTH(fi);
  	}
      }
      bfont->state = FS_GLYPHS_REPLY;
  
      if (bfont->flags & FontLoadBitmaps) {
--- 719,769 ----
      if (haveInk)
      {
  	FontInfoRec *fi = &bfont->pfont->info;
+ 	CharInfoPtr ii;
  
  	ci = fsfont->encoding;
! 	ii = fsfont->inkMetrics;
! 	for (i = 0; i < rep.num_extents; i++, ci++, ii++)
  	{
! 	    if (NONZEROMETRICS(&ii->metrics))
! 	    {
! 		ci->metrics.leftSideBearing = FONT_MIN_LEFT(fi);
! 		ci->metrics.rightSideBearing = FONT_MAX_RIGHT(fi);
! 		ci->metrics.ascent = FONT_MAX_ASCENT(fi);
! 		ci->metrics.descent = FONT_MAX_DESCENT(fi);
! 		ci->metrics.characterWidth = FONT_MAX_WIDTH(fi);
! 		ci->metrics.attributes = ii->metrics.attributes;
! 	    }
! 	    else
! 	    {
! 		ci->metrics = ii->metrics;
! 	    }
  	}
      }
+     {
+ 	unsigned int r, c, numCols, firstCol;
+ 
+ 	firstCol = bfont->pfont->info.firstCol;
+ 	numCols = bfont->pfont->info.lastCol - firstCol + 1;
+ 	c = bfont->pfont->info.defaultCh;
+ 	fsfont->pDefault = 0;
+ 	if (bfont->pfont->info.lastRow)
+ 	{
+ 	    r = c >> 8;
+ 	    r -= bfont->pfont->info.firstRow;
+ 	    c &= 0xff;
+ 	    c -= firstCol;
+ 	    if (r < bfont->pfont->info.lastRow-bfont->pfont->info.firstRow+1 &&
+ 		c < numCols)
+ 		fsfont->pDefault = &pCI[r * numCols + c];
+ 	}
+ 	else
+ 	{
+ 	    c -= firstCol;
+ 	    if (c < numCols)
+ 		fsfont->pDefault = &pCI[c];
+ 	}
+     }
      bfont->state = FS_GLYPHS_REPLY;
  
      if (bfont->flags & FontLoadBitmaps) {
***************
*** 1376,1382 ****
      }
      /* adjust them */
      for (i = 0; i < rep.num_chars; i++) {
! 	if (ppbits[i].length)
  	    bits = (char *) pbitmaps + ppbits[i].position;
  	else
  	    bits = 0;
--- 1414,1420 ----
      }
      /* adjust them */
      for (i = 0; i < rep.num_chars; i++) {
! 	if (ppbits[i].length || NONZEROMETRICS(&fsdata->encoding[i].metrics))
  	    bits = (char *) pbitmaps + ppbits[i].position;
  	else
  	    bits = 0;
