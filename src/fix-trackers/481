Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9211052034.AA15314@excess.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: 2718) close XBUG #5615: Xt: memory leak when two widgets in a client swap selection ownership
Organization: X Consortium, MIT Laboratory for Computer Science
Date: Thu, 05 Nov 92 15:34:18 EST
From: Donna Converse <converse@expo.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com


        Subject: Xt: memory leak when two widgets in a client swap selection ownership
        ### bug number:   5615
        ### area:         Xt
        ### severity:     low
        ### comments:     see below (in the bug report)
        ### status:       fixed, Selection.c revision 1.73


*** /tmp/da5251	Thu Nov  5 15:30:30 1992
--- lib/Xt/Selection.c	Thu Nov  5 14:59:50 1992
***************
*** 1,4 ****
! /* $XConsortium: Selection.c,v 1.72 91/07/23 12:20:29 rws Exp $ */
  
  /***********************************************************
  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
--- 1,4 ----
! /* $XConsortium: Selection.c,v 1.73 92/11/05 14:54:43 converse Exp $ */
  
  /***********************************************************
  Copyright 1987, 1988 by Digital Equipment Corporation, Maynard, Massachusetts,
***************
*** 847,855 ****
       * of the event handler and the destroy callback, so the old context
       * pointer and the record contents must be preserved for LoseSelection.
       */
!     if (oldctx)
  	(void) LoseSelection(oldctx, oldctx->widget, selection, oldctx->time);
! 
      return TRUE;
  }
  
--- 847,857 ----
       * of the event handler and the destroy callback, so the old context
       * pointer and the record contents must be preserved for LoseSelection.
       */
!     if (oldctx) {
  	(void) LoseSelection(oldctx, oldctx->widget, selection, oldctx->time);
! 	if (!oldctx->ref_count && oldctx->free_when_done)
! 	    XtFree((char*)oldctx);
!     }
      return TRUE;
  }
  
