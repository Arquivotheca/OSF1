Path: news!news.crl.dec.com!pa.dec.com!nobody
Message-Id: <9207271929.AA09117@rsx.lcs.mit.edu>
To: fix-trackers@expo.lcs.mit.edu
Subject: (seq: ) close XBUG #5214: Type1: after fix 2430, does not rendering chars > 126 in ISO8859-1 fonts
Date: Mon, 27 Jul 92 15:29:27 -0500
From: Eng-Shien Wu <eswu@rsx.lcs.mit.edu>
Distribution: dec
X-Mailing-List: fix-trackers@expo.lcs.mit.edu
X-Disclaimer: This message originated from a mailing list outside of Digital.
Newsgroups: dec.mail.lists.x.fix-trackers
Approved: news@usenet.pa.dec.com



        Subject: Type1: after fix 2430, does not rendering chars > 126 in ISO8859-1 fonts
        ### bug number:   5214
        ### area:         fontlib        
        ### severity:     low     
        ### comments:     

Also, local symbols declared static and useless extern declaration deleted.

*** /tmp/dOkEDFW	Mon Jul 27 15:21:22 1992
--- fonts/lib/font/Type1/scanfont.c	Tue Jul  7 17:15:01 1992
***************
*** 1,4 ****
! /* $XConsortium: scanfont.c,v 1.6 92/03/27 18:15:39 eswu Exp $ */
  /* Copyright International Business Machines,Corp. 1991
   * All Rights Reserved
   *
--- 1,4 ----
! /* $XConsortium: scanfont.c,v 1.9 92/07/07 17:14:56 gildea Exp $ */
  /* Copyright International Business Machines,Corp. 1991
   * All Rights Reserved
   *
***************
*** 308,347 ****
   124, "bar",
   125, "braceright",
   126, "asciitilde",
-  127, NULL,
-  128, NULL,
-  129, NULL,
-  130, NULL,
-  131, NULL,
-  132, NULL,
-  133, NULL,
-  134, NULL,
-  135, NULL,
-  136, NULL,
-  137, NULL,
-  138, NULL,
-  139, NULL,
-  140, NULL,
-  141, NULL,
-  142, NULL,
-  143, NULL,
-  144, NULL,
-  145, NULL,
-  146, NULL,
-  147, NULL,
-  148, NULL,
-  149, NULL,
-  150, NULL,
-  151, NULL,
-  152, NULL,
-  153, NULL,
-  154, NULL,
-  155, NULL,
-  156, NULL,
-  157, NULL,
-  158, NULL,
-  159, NULL,
-  160, NULL,
   161, "exclamdown",
   162, "cent",
   163, "sterling",
--- 308,313 ----
***************
*** 440,449 ****
      0,      0
  };
  
! psobj *StdEncArrayP = NULL;
  psobj *ISOLatin1EncArrayP = NULL; 
   
! psobj *MakeEncodingArrayP(encodingTable)
      EncodingTable *encodingTable;
  {
    int i;
--- 406,415 ----
      0,      0
  };
  
! static psobj *StdEncArrayP = NULL;
  psobj *ISOLatin1EncArrayP = NULL; 
   
! static psobj *MakeEncodingArrayP(encodingTable)
      EncodingTable *encodingTable;
  {
    int i;
***************
*** 476,483 ****
   
  /********************************************************************/
  /***================================================================***/
! int getNextValue(valueType)
! int valueType;
  {
    scan_token(inputP);
    if (tokenType != valueType) {
--- 442,449 ----
   
  /********************************************************************/
  /***================================================================***/
! static int getNextValue(valueType)
!     int valueType;
  {
    scan_token(inputP);
    if (tokenType != valueType) {
***************
*** 489,495 ****
  /***================================================================***/
  /*  This routine will set the global rc if there is an error          */
  /***================================================================***/
! int getInt()
  {
    scan_token(inputP);
    if (tokenType != TOKEN_INTEGER) {
--- 455,461 ----
  /***================================================================***/
  /*  This routine will set the global rc if there is an error          */
  /***================================================================***/
! static int getInt()
  {
    scan_token(inputP);
    if (tokenType != TOKEN_INTEGER) {
***************
*** 506,513 ****
   * See Sec 10.3 of ``Adobe Type 1 Font Format'' v1.1,
   * for parsing Encoding.
   */
! int getEncoding(arrayP)
! psobj *arrayP;
  {
  
    scan_token(inputP);
--- 472,479 ----
   * See Sec 10.3 of ``Adobe Type 1 Font Format'' v1.1,
   * for parsing Encoding.
   */
! static int getEncoding(arrayP)
!     psobj *arrayP;
  {
  
    scan_token(inputP);
***************
*** 620,627 ****
    return (SCAN_ERROR);
  }
  /***================================================================***/
! int getArray(arrayP)
! psobj *arrayP;
  {
    int N;   /* count the items in the array */
    psobj *objP;
--- 586,593 ----
    return (SCAN_ERROR);
  }
  /***================================================================***/
! static int getArray(arrayP)
!     psobj *arrayP;
  {
    int N;   /* count the items in the array */
    psobj *objP;
***************
*** 662,669 ****
    /* NOTREACHED*/
  }
  /***================================================================***/
! int getName(nameP)
! char *nameP;
  {
    do {
      scan_token(inputP);
--- 628,635 ----
    /* NOTREACHED*/
  }
  /***================================================================***/
! static int getName(nameP)
!     char *nameP;
  {
    do {
      scan_token(inputP);
***************
*** 677,684 ****
    return(SCAN_OK);
  }
  /***================================================================***/
! int getNbytes(N)
! int N;
  {
    int I;
   
--- 643,650 ----
    return(SCAN_OK);
  }
  /***================================================================***/
! static int getNbytes(N)
!     int N;
  {
    int I;
   
***************
*** 700,707 ****
  /*    It means that the CharStrings does not have as many characters  */
  /*    as the dictionary said it would and that is ok.                 */
  /***================================================================***/
! int getLiteralName(nameObjP)
! psobj *nameObjP;
  {
    do {
      scan_token(inputP);
--- 666,673 ----
  /*    It means that the CharStrings does not have as many characters  */
  /*    as the dictionary said it would and that is ok.                 */
  /***================================================================***/
! static int getLiteralName(nameObjP)
!     psobj *nameObjP;
  {
    do {
      scan_token(inputP);
***************
*** 729,736 ****
   */
  /***================================================================***/
   
! int BuildSubrs(FontP)
! psfont *FontP;
  {
     int N;   /* number of values in Subrs */
     int I;   /* index into Subrs */
--- 695,702 ----
   */
  /***================================================================***/
   
! static int BuildSubrs(FontP)
!     psfont *FontP;
  {
     int N;   /* number of values in Subrs */
     int I;   /* index into Subrs */
***************
*** 804,811 ****
   */
  /***================================================================***/
   
! int BuildCharStrings(FontP)
! psfont   *FontP;
  {
     int N;   /* number of values in CharStrings */
     int i;   /* loop thru  Subrs */
--- 770,777 ----
   */
  /***================================================================***/
   
! static int BuildCharStrings(FontP)
!     psfont   *FontP;
  {
     int N;   /* number of values in CharStrings */
     int i;   /* loop thru  Subrs */
***************
*** 864,871 ****
   *   BuildFontInfo Dictionary
   */
  /***================================================================***/
! int BuildFontInfo(fontP)
! psfont *fontP;
  {
    psdict *dictP;
   
--- 830,837 ----
   *   BuildFontInfo Dictionary
   */
  /***================================================================***/
! static int BuildFontInfo(fontP)
!     psfont *fontP;
  {
    psdict *dictP;
   
***************
*** 916,923 ****
   *   BuildPrivate Dictionary
   */
  /***================================================================***/
! int BuildPrivate(fontP)
! psfont *fontP;
  {
    psdict *Private;
   
--- 882,889 ----
   *   BuildPrivate Dictionary
   */
  /***================================================================***/
! static int BuildPrivate(fontP)
!     psfont *fontP;
  {
    psdict *Private;
   
***************
*** 975,982 ****
  /*                                                                    */
  /*                                                                    */
  /**********************************************************************/
! int GetType1Blues(fontP)
! psfont *fontP;
  {
    psdict *PrivateDictP;   /* the Private dict relating to hints */
    struct blues_struct *blues;  /* ptr for the blues struct we will allocate */
--- 941,948 ----
  /*                                                                    */
  /*                                                                    */
  /**********************************************************************/
! static int GetType1Blues(fontP)
!     psfont *fontP;
  {
    psdict *PrivateDictP;   /* the Private dict relating to hints */
    struct blues_struct *blues;  /* ptr for the blues struct we will allocate */
***************
*** 1289,1296 ****
   */
  /***================================================================***/
   
! int FindDictValue(dictP)
! psdict    *dictP;
  {
     psobj LitName;
     int   N;
--- 1255,1262 ----
   */
  /***================================================================***/
   
! static int FindDictValue(dictP)
!     psdict    *dictP;
  {
     psobj LitName;
     int   N;
***************
*** 1498,1505 ****
          break;
        case TOKEN_NAME:
              if (0 == strncmp(tokenStartP,"eexec",5) ) {
-             extern struct filter EexecFilter;
-  
                 /* if file started with x'80', check next 5 bytes */
                 if (starthex80) {
                   V = getc(fileP);
--- 1464,1469 ----
