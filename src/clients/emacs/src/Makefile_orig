# HISTORY
# $Log: Makefile_orig,v $
NONERevision 1.1.2.1  1992/08/26  10:50:08  devrcs
NONEInitial load into Alpha pool
NONE
NONERevision 1.1  90/01/01  00:00:00  devrcs
NONE*** Initial Trunk Revision ***
NONE
# Revision 1.2  92/06/24  15:38:26  devrcs
# DRI update
# 
# Revision 1.1  90/01/01  00:00:00  devrcs
# Initial load into Alpha pool
# 
# Revision 1.2.2.2  92/02/11  12:58:50  Scott_Sewall
# 	Convert to ODE-II environment. Doesn't use ODE make.
# 	[92/02/11  12:53:43  Scott_Sewall]
# 
# Revision 1.2  91/12/30  12:48:20  devbld
# Added tools and crossbase to emulate Imake output
# 	Initial load of project
# 
# $EndLog$
#
# BuildSystemHeader added automatically
# $Header: /usr/sde/osf1/rcs/x11/src/clients/emacs/src/Makefile_orig,v 1.1.2.1 1992/08/26 10:50:08 devrcs Exp $
MFLAGS =
MAKE = make  # BSD doesn't have it as a default.
CPP = $(CC) -E
#Note: an alternative is  CPP = /lib/cpp

all: xmakefile doall

doall:
	$(MAKE) $(MAKEOVERRIDES) -f xmakefile ${MFLAGS} all

#This is used in making a distribution.
#Do not use it on development directories!
distclean:
	-rm -f paths.h config.h emacs-* temacs xemacs xmakefile core \
   *~ \#* *.o libXMenu11.a log*

clean:
	-rm -f temacs xemacs xmakefile core \#* *.o libXMenu11.a

xemacs: xmakefile doxemacs

doxemacs:
	$(MAKE) $(MAKEOVERRIDES) -f xmakefile ${MFLAGS} xemacs

temacs: xmakefile dotemacs

dotemacs:
	$(MAKE) $(MAKEOVERRIDES) -f xmakefile ${MFLAGS} temacs

# If you have a problem with cc -E here, changing
# the definition of CPP above may fix it.
xmakefile: ymakefile config.h
	-rm -f xmakefile junk.c
	cp ymakefile junk.c
	$(CPP) junk.c | sed -e 's/^#.*//' -e 's/^[ \f\t][ \f\t]*$$//' -e 's/^ /	/' | \
	sed -n -e '/^..*$$/p' > xmakefile
	rm -f junk.c

tags:
	etags [a-z]*.h [a-z]*.c ../lisp/[a-z]*.el
