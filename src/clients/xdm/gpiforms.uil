! 
! *****************************************************************
! *                                                               *
! *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
! *                                                               *
! *   All Rights Reserved.  Unpublished rights  reserved  under   *
! *   the copyright laws of the United States.                    *
! *                                                               *
! *   The software contained on this media  is  proprietary  to   *
! *   and  embodies  the  confidential  technology  of  Digital   *
! *   Equipment Corporation.  Possession, use,  duplication  or   *
! *   dissemination of the software and media is authorized only  *
! *   pursuant to a valid written license from Digital Equipment  *
! *   Corporation.                                                *
! *                                                               *
! *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
! *   by the U.S. Government is subject to restrictions  as  set  *
! *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
! *   or  in  FAR 52.227-19, as applicable.                       *
! *                                                               *
! *****************************************************************
!
! HISTORY
! 
! 

!! gpiforms.uil - the UIL file the login prompt of the generic prompt interface

module gpiforms
    names = case_sensitive

procedure LoginCCallback(any);
procedure LoginAbort(any);
procedure LoginContinue(any);
procedure LoginModifyVerify(any);

procedure ListCBContinue(any);
procedure ListCBAbort(any);
procedure ListCCallback(any);

procedure FormCBContinue(any);
procedure FormCBAbort(any);
procedure FormCCallback(any);

identifier Name;
identifier Password;
identifier NamePrompt;
identifier PasswordPrompt;
identifier Greeting;

identifier pInfo;
identifier Ok;
identifier Abort;

identifier title;
identifier clientTitle;
identifier listList;
identifier prompts;

object

GpiLoginPrompt: XmForm
{
    arguments
    {
		XmNborderWidth = 0;
		XmNresizePolicy = XmRESIZE_NONE;
		XmNdefaultButton = XmTextField NameField;
		XmNhorizontalSpacing = 15; 
		XmNverticalSpacing = 15;
    };
    controls
	{
		XmLabel GreetingLabel; 
		XmLabel NameLabel; 
		XmLabel PasswordLabel; 
		XmTextField NameField;
		XmText  PasswordField;
		XmLabel CopyrightLabel;
		XmPushButton OkButton;
		XmPushButton AbortButton; 
	};
};

GreetingLabel: XmLabel 
{
    arguments
	{
!		XmNlabelString =
!			compound_string("Greetings Earthling", separate=true) &
!			compound_string("Welcome to OSF/1");
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
	};
    callbacks
	{
		MrmNcreateCallback = procedures
		{
		    LoginCCallback(Greeting);
		};
	};
};

NameLabel: XmLabel 
{
    arguments
	{
!		XmNlabelString = compound_string("Name");
        XmNalignment = XmALIGNMENT_END;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 10; 
		XmNtopWidget = XmLabel GreetingLabel; 
        XmNleftAttachment = XmATTACH_FORM; 
	};
    callbacks
	{
		MrmNcreateCallback = procedures
		{
			LoginCCallback(NamePrompt);
		};
	};
};

PasswordLabel: XmLabel 
{
    arguments
	{
!		XmNlabelString = compound_string("Password");
		XmNwidth = 80;
		XmNheight = 35;
		XmNalignment = XmALIGNMENT_END;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 5; 
		XmNtopWidget = XmLabel NameLabel; 
		XmNleftAttachment = XmATTACH_FORM; 
	};
    callbacks
	{
		MrmNcreateCallback = procedures
		{
			LoginCCallback(PasswordPrompt);
		};
	};
};

NameField: XmTextField 
{
	arguments
	{
		XmNwidth = 185;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 10; 
		XmNtopWidget = XmLabel GreetingLabel; 
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftOffset = 5; 
		XmNleftWidget = XmLabel NameLabel; 
		XmNrightAttachment = XmATTACH_FORM;
		XmNuserData = pInfo;
	};
    callbacks
	{
		MrmNcreateCallback = procedures
		{
			LoginCCallback(Name);
		};
	};
};

PasswordField: XmText
{
    arguments
	{
		XmNwidth = 185;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 5; 
		XmNtopWidget = XmTextField NameField; 
		XmNleftAttachment = XmATTACH_WIDGET;
		XmNleftOffset = 5; 
		XmNleftWidget = XmLabel PasswordLabel; 
		XmNrightAttachment = XmATTACH_FORM;
		XmNuserData = pInfo;
		XmNverifyBell = false;
	};
    callbacks
	{
		MrmNcreateCallback = procedures
		{
			LoginCCallback(Password);
		};
		XmNmodifyVerifyCallback = procedures
		{
			LoginModifyVerify(pInfo);
		};
		XmNactivateCallback = procedures
		{
			LoginContinue(pInfo);
		};
	};
};

OkButton: XmPushButton 
{
    arguments
	{
!		XmNlabelString = compound_string("OK");
		XmNwidth = 80;
		XmNheight = 35;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 5; 
		XmNtopWidget = XmLabel PasswordLabel; 
        XmNleftAttachment = XmATTACH_FORM; 
        XmNleftOffset = 35; 
	};
    callbacks
	{
		MrmNcreateCallback = procedures
		{
			LoginCCallback(Ok);
		};
		XmNactivateCallback = procedures
		{
		    LoginContinue(pInfo);
		};
	};
};

AbortButton: XmPushButton 
{
    arguments
	{
!		XmNlabelString = compound_string("Cancel");
		XmNwidth = 80;
		XmNheight = 35;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 5; 
		XmNtopWidget = XmText PasswordField; 
		XmNrightAttachment = XmATTACH_FORM; 
		XmNrightOffset = 35; 
	};
    callbacks
	{
		MrmNcreateCallback = procedures
		{
			LoginCCallback(Abort);
		};
		XmNactivateCallback = procedures
		{
			LoginAbort(pInfo);
		};
	};
};

CopyrightLabel: XmLabel 
{
    arguments
	{
		XmNlabelString =
			compound_string("Copyright Digital Equipment Corporation, 1991, 1993.");
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 5; 
		XmNtopWidget = XmPushButton OkButton; 
		XmNleftAttachment = XmATTACH_FORM; 
		XmNrightAttachment = XmATTACH_FORM; 
		XmNbottomAttachment = XmATTACH_FORM; 
	};
};


object

GpiList : XmForm
{
    arguments
    {
		XmNborderWidth = 0;
		XmNresizePolicy = XmRESIZE_NONE;
!		XmNdefaultButton = XmPushButton OkButton;
		XmNhorizontalSpacing = 15; 
		XmNverticalSpacing = 15;
	};
    controls
    {
		XmLabel ListTitleLabel; 
		XmList ListSelList;
		XmPushButton ListOkButton;
		XmPushButton ListAbortButton; 
	};
};


ListTitleLabel: XmLabel 
{
    arguments
    {
        XmNalignment = XmALIGNMENT_END;
		XmNtopAttachment = XmATTACH_FORM; 
		XmNtopOffset = 10; 
        XmNleftAttachment = XmATTACH_POSITION; 
		XmNleftPosition = 30;
    };
    callbacks
    {
		MrmNcreateCallback = procedures
	  	{
			ListCCallback(title);
		};
	};
};

ListSelList: XmList
{
	arguments
	{
		XmNvisibleItemCount = 8;
		XmNlistSizePolicy = XmRESIZE_IF_POSSIBLE;
		XmNselectionPolicy = XmEXTENDED_SELECT;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopWidget = XmLabel ListTitleLabel;
		XmNtopOffset = 10; 
        XmNleftAttachment = XmATTACH_POSITION; 
		XmNleftPosition = 30;
	};
    callbacks
    {
		MrmNcreateCallback = procedures
	  	{
			ListCCallback(listList);
		};
	};
};

ListOkButton: XmPushButton 
{
    arguments
    {
		XmNwidth = 180;
		XmNheight = 35;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopWidget = XmList ListSelList;
		XmNtopOffset = 5; 
		XmNleftAttachment = XmATTACH_FORM; 
        XmNleftOffset = 25; 
		XmNrightAttachment  = XmATTACH_WIDGET;
		XmNrightWidget = XmPushButton ListAbortButton;
    };
    callbacks
    {
		MrmNcreateCallback = procedures
		{
			ListCCallback(Ok);
		};
		XmNactivateCallback = procedures
		{
			ListCBContinue(pInfo);
		};
	};
};

ListAbortButton: XmPushButton 
{
    arguments
    {
		XmNwidth = 180;
		XmNheight = 35;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopWidget = XmList ListSelList;
		XmNtopOffset = 5; 
        XmNrightAttachment = XmATTACH_FORM; 
        XmNrightOffset = 25; 
    };
    callbacks
    {
		MrmNcreateCallback = procedures
	  	{
			ListCCallback(Abort);
		};
		XmNactivateCallback = procedures
		{
	    	ListCBAbort(pInfo);
		};
	};
};

object

GpiForm : XmForm
{
    arguments
    {
		XmNborderWidth = 1;
		XmNmarginWidth = 13;
		XmNmarginHeight = 13;
		XmNresizePolicy = XmRESIZE_NONE;
!		XmNdefaultButton = XmPushButton FormOkButton;
		XmNhorizontalSpacing = 15; 
		XmNverticalSpacing = 15;
	};
    controls
    {
		XmLabel FormClientTitleLabel;
		XmLabel FormTitleLabel;
		XmForm  FormPromptForm;
		XmPushButton FormOkButton;
		XmPushButton FormAbortButton; 
                XmLabel FormCopyrightLabel;
	};
};


FormTitleLabel: XmLabel 
{
    arguments
    {
        XmNalignment = XmALIGNMENT_END;
		XmNtopAttachment = XmATTACH_WIDGET; 
                XmNtopWidget = XmLabel FormClientTitleLabel;
		XmNtopOffset = 10; 
!        XmNleftAttachment = XmATTACH_POSITION; 
!		XmNleftPosition = 30;
        XmNleftAttachment = XmATTACH_FORM; 
		XmNleftOffset = 10;
    };
    callbacks
    {
		MrmNcreateCallback = procedures
	  	{
			FormCCallback(title);
		};
	};
};

FormClientTitleLabel: XmLabel 
{
    arguments
    {
        XmNalignment = XmALIGNMENT_CENTER;
		XmNtopAttachment = XmATTACH_FORM; 
		XmNtopOffset = 10; 
!        XmNleftAttachment = XmATTACH_POSITION; 
!		XmNleftPosition = 30;
        XmNleftAttachment = XmATTACH_FORM; 
		XmNleftOffset = 10;
        XmNrightAttachment = XmATTACH_FORM; 
        XmNfontList = font_table(font("*-new century schoolbook-bold-i-normal-*-240-*"));
    };
    callbacks
    {
		MrmNcreateCallback = procedures
	  	{
			FormCCallback(clientTitle);
		};
	};
};

FormPromptForm : XmForm
{
    arguments
    {
		XmNborderWidth = 0;
		XmNresizePolicy = XmRESIZE_ANY;
		XmNhorizontalSpacing = 15; 
		XmNverticalSpacing = 15;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopWidget = XmLabel FormTitleLabel; 
                XmNtopOffset = 5;
        XmNleftAttachment = XmATTACH_FORM; 
        XmNrightAttachment = XmATTACH_FORM; 
	};
    callbacks
    {
		MrmNcreateCallback = procedures
	  	{
			FormCCallback(prompts);
		};
	};
};

FormOkButton: XmPushButton 
{
    arguments
    {
!               XmNlabelString = compound_string("OK");
		XmNwidth = 80;
		XmNheight = 35;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 5; 
		XmNtopWidget = XmForm FormPromptForm;
                XmNbottomAttachment = XmATTACH_WIDGET;
                XmNbottomWidget = XmLabel FormCopyrightLabel;
                XmNbottomOffset = 10;
		XmNleftAttachment = XmATTACH_FORM; 
                XmNleftOffset = 25; 
    };
    callbacks
    {
		MrmNcreateCallback = procedures
		{
			FormCCallback(Ok);
		};
		XmNactivateCallback = procedures
		{
			FormCBContinue(pInfo);
		};
	};
};

FormAbortButton: XmPushButton 
{
    arguments
    {
!               XmNlabelString = compound_string("Cancel");
		XmNwidth = 80;
		XmNheight = 35;
		XmNtopAttachment = XmATTACH_WIDGET; 
		XmNtopOffset = 5; 
		XmNtopWidget = XmForm FormPromptForm;
                XmNbottomAttachment = XmATTACH_WIDGET;
                XmNbottomWidget = XmLabel FormCopyrightLabel;
                XmNbottomOffset = 10;
                XmNrightAttachment = XmATTACH_FORM; 
                XmNrightOffset = 35; 
    };
    callbacks
    {
		MrmNcreateCallback = procedures
	  	{
			FormCCallback(Abort);
		};
		XmNactivateCallback = procedures
		{
	    	FormCBAbort(pInfo);
		};
	};
};

    FormCopyrightLabel: XmLabel
        {
        arguments
            {
            XmNlabelString =
            compound_string("Copyright Digital Equipment Corporation, 1991, 1993.");
            XmNleftAttachment = XmATTACH_FORM;
            XmNrightAttachment = XmATTACH_FORM;
            XmNleftOffset = 10;
            XmNbottomAttachment = XmATTACH_FORM;
            };
};

end module;
