.\"
.\" *****************************************************************
.\" *                                                               *
.\" *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
.\" *                                                               *
.\" *   All Rights Reserved.  Unpublished rights  reserved  under   *
.\" *   the copyright laws of the United States.                    *
.\" *                                                               *
.\" *   The software contained on this media  is  proprietary  to   *
.\" *   and  embodies  the  confidential  technology  of  Digital   *
.\" *   Equipment Corporation.  Possession, use,  duplication  or   *
.\" *   dissemination of the software and media is authorized only  *
.\" *   pursuant to a valid written license from Digital Equipment  *
.\" *   Corporation.                                                *
.\" *                                                               *
.\" *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
.\" *   by the U.S. Government is subject to restrictions  as  set  *
.\" *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
.\" *   or  in  FAR 52.227-19, as applicable.                       *
.\" *                                                               *
.\" *****************************************************************
.\"
.\"
.\" HISTORY
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XStoreColors 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XStoreColors, XStoreColor, XStoreNamedColor \- set colors
.SH SYNTAX
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
XStoreColors\^(\^\fIdisplay\fP, \fIcolormap\fP\^, \fIcolor\fP\^, \fIncolors\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Colormap \fIcolormap\fP\^;
.br
      XColor \fIcolor\fP\^[\^]\^;
.br
      int \fIncolors\fP\^;
.LP
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
XStoreColor\^(\^\fIdisplay\fP, \fIcolormap\fP\^, \fIcolor\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Colormap \fIcolormap\fP\^;
.br
      XColor *\fIcolor\fP\^;
.LP
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
XStoreNamedColor\^(\^\fIdisplay\fP, \fIcolormap\fP\^, \fIcolor\fP\^, \fIpixel\fP\^, \fIflags\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      Colormap \fIcolormap\fP\^;
.br
      char *\^\fIcolor\fP\^;
.br
      unsigned long \fIpixel\fP\^;
.br
      int \fIflags\fP\^;
.SH ARGUMENTS
.ds Co pixel and RGB values or the color name string (for example, red)
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIcolor\fP 1i
Specifies the \*(Co.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIcolor\fP 1i
Specifies an array of color definition structures to be stored.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIcolormap\fP 1i
Specifies the colormap.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIflags\fP 1i
Specifies which red, green, and blue components are set.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIncolors\fP 1i
.\"Specifies the number of color definition structures. 
Specifies the number of 
.ZN XColor
structures in the color definition array.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIpixel\fP 1i
Specifies the entry in the colormap. 
.SH DESCRIPTION
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
The
.ZN XStoreColors
function changes the colormap entries of the pixel values
specified in the pixel members of the
.ZN XColor
structures.
You specify which color components are to be changed by setting 
.ZN DoRed ,
.ZN DoGreen ,
and/or
.ZN DoBlue
in the flags member of the
.ZN XColor
structures.
If the colormap is an installed map for its screen, the
changes are visible immediately.
.ZN XStoreColors 
changes the specified pixels if they are allocated writable in the colormap 
by any client, even if one or more pixels generates an error.
If a specified pixel is not a valid index into the colormap, a
.ZN BadValue
error results.
If a specified pixel either is unallocated or is allocated read-only, a
.ZN BadAccess
error results.
If more than one pixel is in error, 
the one that gets reported is arbitrary.
.LP
.ZN XStoreColors
can generate
.ZN BadAccess ,
.ZN BadColor ,
and
.ZN BadValue 
errors.
.LP
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
The
.ZN XStoreColor
function changes the colormap entry of the pixel value specified in the
pixel member of the
.ZN XColor
structure.
You specified this value in the
pixel member of the
.ZN XColor
structure.
This pixel value must be a read/write cell and a valid index into the colormap.
If a specified pixel is not a valid index into the colormap,
a
.ZN BadValue
error results.
.ZN XStoreColor
also changes the red, green, and/or blue color components.
You specify which color components are to be changed by setting
.ZN DoRed ,
.ZN DoGreen ,
and/or
.ZN DoBlue
in the flags member of the
.ZN XColor
structure.
If the colormap is an installed map for its screen, 
the changes are visible immediately.
.LP
.ZN XStoreColor
can generate
.ZN BadAccess ,
.ZN BadColor ,
and 
.ZN BadValue 
errors.
.LP
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
The
.ZN XStoreNamedColor
function looks up the named color with respect to the screen associated with
the colormap and stores the result in the specified colormap.
The pixel argument determines the entry in the colormap.
The flags argument determines which of the red, green, and blue components 
are set. 
You can set this member to the
bitwise inclusive OR of the bits 
.ZN DoRed , 
.ZN DoGreen , 
and 
.ZN DoBlue .
If the color name is not in the Host Portable Character Encoding
the result is implementation dependent.
Use of uppercase or lowercase does not matter.
If the specified pixel is not a valid index into the colormap, a
.ZN BadValue
error results.
If the specified pixel either is unallocated or is allocated read-only, a
.ZN BadAccess
error results.
.LP
.ZN XStoreNamedColor
can generate
.ZN BadAccess ,
.ZN BadColor ,
.ZN BadName ,
and
.ZN BadValue 
errors.
.SH DIAGNOSTICS
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.TP 1i
.ZN BadAccess
A client attempted
to free a color map entry that it did not already allocate.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.TP 1i
.ZN BadAccess
A client attempted
to store into a read-only color map entry.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.TP 1i
.ZN BadColor
A value for a Colormap argument does not name a defined Colormap.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.TP 1i
.ZN BadName
A font or color of the specified name does not exist.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStColors.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.TP 1i
.ZN BadValue
Some numeric value falls outside the range of values accepted by the request.
Unless a specific range is specified for an argument, the full range defined
by the argument's type is accepted.  Any argument defined as a set of
alternatives can generate this error.
.SH "SEE ALSO"
XAllocColor(3X11),
XCreateColormap(3X11),
XQueryColor(3X11)
.br
\fI\*(xL\fP
