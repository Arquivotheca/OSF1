.\"
.\" *****************************************************************
.\" *                                                               *
.\" *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
.\" *                                                               *
.\" *   All Rights Reserved.  Unpublished rights  reserved  under   *
.\" *   the copyright laws of the United States.                    *
.\" *                                                               *
.\" *   The software contained on this media  is  proprietary  to   *
.\" *   and  embodies  the  confidential  technology  of  Digital   *
.\" *   Equipment Corporation.  Possession, use,  duplication  or   *
.\" *   dissemination of the software and media is authorized only  *
.\" *   pursuant to a valid written license from Digital Equipment  *
.\" *   Corporation.                                                *
.\" *                                                               *
.\" *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
.\" *   by the U.S. Government is subject to restrictions  as  set  *
.\" *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
.\" *   or  in  FAR 52.227-19, as applicable.                       *
.\" *                                                               *
.\" *****************************************************************
.\"
.\"
.\" HISTORY
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XStringToKeysym 3X11 "Release 5" "X Version 11" "XLIB FUNCTIONS"
.SH NAME
XStringToKeysym, XKeysymToString, XKeycodeToKeysym, XKeysymToKeycode \- convert keysyms
.SH SYNTAX
KeySym XStringToKeysym\^(\^\fIstring\fP\^)
.br
      char *\fIstring\fP\^;
.LP
char *XKeysymToString\^(\^\fIkeysym\fP\^)
.br
      KeySym \fIkeysym\fP\^;
.LP
KeySym XKeycodeToKeysym\^(\^\fIdisplay\fP, \fIkeycode\fP, \fIindex\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      KeyCode \fIkeycode\fP\^;
.br
      int \fIindex\fP\^;
.LP
KeyCode XKeysymToKeycode\^(\^\fIdisplay\fP, \fIkeysym\fP\^)
.br
      Display *\fIdisplay\fP\^;
.br
      KeySym \fIkeysym\fP\^;
.SH ARGUMENTS
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStTKsym.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIindex\fP 1i
Specifies the element of KeyCode vector.
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStTKsym.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
.IP \fIkeycode\fP 1i
Specifies the KeyCode.
.ds Fn searched for or converted
.IP \fIkeysym\fP 1i
Specifies the KeySym that is to be \*(Fn.
.IP \fIstring\fP 1i
Specifies the name of the KeySym that is to be converted.
.SH DESCRIPTION
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStTKsym.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
Standard KeySym names are obtained from
.Pn < X11/keysymdef.h >
by removing the XK_ prefix from each name.
KeySyms that are not part of the Xlib standard also may be obtained
with this function.
Note that the set of KeySysms that are available in this manner 
and the mechanisms by which Xlib obtains them is implementation dependent.
.LP
If the keysym name is not in the Host Portable Character Encoding
the result is implementation dependent.
If the specified string does not match a valid KeySym,
.ZN XStringToKeysym
returns
.ZN NoSymbol .
.LP
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStTKsym.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
The returned string is in a static area and must not be modified.
The returned string is in the Host Portable Character Encoding.
If the specified KeySym is not defined,
.ZN XKeysymToString
returns a NULL.
.LP
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStTKsym.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
The
.ZN XKeycodeToKeysym
function uses internal Xlib tables
and returns the KeySym defined for the specified KeyCode and
the element of the KeyCode vector.
If no symbol is defined,
.ZN XKeycodeToKeysym
returns
.ZN NoSymbol .
.LP
.\" $Header: /usr/sde/x11/rcs/x11/src/./man/Xlib/XStTKsym.man,v 1.2 91/12/15 12:42:16 devrcs Exp $
If the specified KeySym is not defined for any KeyCode,
.ZN XKeysymToKeycode
returns zero.
.SH "SEE ALSO"
XLookupKeysym(3X11)
.br
\fI\*(xL\fP
