/*
 * (c) Copyright 1990, OPEN SOFTWARE FOUNDATION, INC.
 * ALL RIGHTS RESERVED
 */
/* 
 * Mach Operating System
 * Copyright (c) 1989 Carnegie-Mellon University
 * Copyright (c) 1988 Carnegie-Mellon University
 * Copyright (c) 1987 Carnegie-Mellon University
 * All rights reserved.  The CMU software License Agreement specifies
 * the terms and conditions for use and redistribution.
 */
/*
 * OSF/1 Release 1.0
 */
/*
 * File:	err_ipc.sub
 * Purpose:
 *	Generic error code interface
 */

static char * err_codes_send[] = {
	"(ipc/send) unknown error",		/* -100 */
	"(ipc/send) invalid memory",		/* -101 */
	"(ipc/send) invalid port",		/* -102 */
	"(ipc/send) timed out",			/* -103 */
	"(ipc/send) unused error",		/* -104 */
	"(ipc/send) will notify",		/* -105 */
	"(ipc/send) notify in progress",	/* -106 */	
	"(ipc/send) kernel refused message",	/* -107 */
	"(ipc/send) send interrupted",		/* -108 */
	"(ipc/send) send message too large",	/* -109 */
	"(ipc/send) send message too small",	/* -110 */
	"(ipc/send) message size changed while being copied",	/* -111 */
};

static char * err_codes_rcv[] = {
	"(ipc/rcv) unknown error",			/* -200 */
	"(ipc/rcv) invalid memory",			/* -201 */
	"(ipc/rcv) invalid port",			/* -202 */
	"(ipc/rcv) receive timed out",			/* -203 */
	"(ipc/rcv) message too large",			/* -204 */
	"(ipc/rcv) no space for message data",		/* -205 */
	"(ipc/rcv) only sender remaining",		/* -206 */
	"(ipc/rcv) receive interrupted",		/* -207 */
	"(ipc/rcv) port receiver changed or port became enabled", /* -208 */
};

static char 	* err_codes_mig[] = {
	"(ipc/mig) type check failure in message interface",	/* 0 (-300) */
	"(ipc/mig) wrong return message ID",			/* 1 */
	"(ipc/mig) server detected error",			/* 2 */
	"(ipc/mig) bad message ID",				/* 3 */
	"(ipc/mig) server found wrong arguments",		/* 4 */
	"(ipc/mig) no reply should be sent",			/* 5 */
	"(ipc/mig) server raised exception",			/* 6 */
	"(ipc/mig) user specified array not large enough for return info",	/* 7 */
};

/*	err_ipc subsystems      	*/
static struct error_subsystem err_ipc_sub[] = {
	/* ipc/0; */
	{
		"(ipc/send)",
		errlib_count(err_codes_send),
		err_codes_send,
	},
	/* ipc/1; */
	{
		"(ipc/rcv)",
		errlib_count(err_codes_rcv),
		err_codes_rcv,

	},
	/* ipc/2 */
	{
		"(ipc/mig)",
		errlib_count(err_codes_mig),
		err_codes_mig,
	},

};

