/*
 * (c) Copyright 1990, OPEN SOFTWARE FOUNDATION, INC.
 * ALL RIGHTS RESERVED
 */
/* 
 * Mach Operating System
 * Copyright (c) 1989 Carnegie-Mellon University
 * Copyright (c) 1988 Carnegie-Mellon University
 * Copyright (c) 1987 Carnegie-Mellon University
 * All rights reserved.  The CMU software License Agreement specifies
 * the terms and conditions for use and redistribution.
 */
/*
 * OSF/1 Release 1.0
 */
/*
 * File:	err_server.sub
 * Purpose:
 *	Generic error code interface
 */

static char * err_codes_netname[] = {
		"(server/netname) name is not yours",
		"(server/netname) name not checked in",
		"(server/netname) no such host",
		"(server/netname) host not found",
};
static char * err_codes_env_mgr[] = {
		"(server/env_mgr) variable not found ",
		"(server/env_mgr) wrong type of variable ",
		"(server/env_mgr) unknown port ",
		"(server/env_mgr) read only environment ",
		"(server/env_mgr) no more connections available ",
		"(server/env_mgr) port table full ",
		"(server/env_mgr) attempting to enter a null port ",
};
static char * err_codes_execd[] = {
		"(server/execd) could not find file to run ",
		"(server/execd) userid or password incorrect ",
		"(server/execd) fork failed ",
};
static char * err_codes_netmemory[] = {
		"(server/netmemory) successful ",
		"(server/netmemory) invalid argument ",
		"(server/netmemory) resource shortage ",
};


/*	err_us subsystems      	*/
static struct error_subsystem err_server_sub[] = {
	/* server/0; */
	{
		"(server/netname)",
		errlib_count(err_codes_netname),
		err_codes_netname,
	},
	/* server/1; */
	{
		"(server/env_mgr)",
		errlib_count(err_codes_env_mgr),
		err_codes_env_mgr,
	},
	/* server/2; */
	{
		"(server/execd)",
		errlib_count(err_codes_execd),
		err_codes_execd,
	},
	/* server/3; */
	{
		"(server/netmemory)",
		errlib_count(err_codes_netmemory),
		err_codes_netmemory,
	}
};


