%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPCOLORc { 
		BITMAPTTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 35 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Helvetica FMFONTDEFINE
3 0 /Times-Bold FMFONTDEFINE
4 0 /Times-Roman FMFONTDEFINE
5 1 /Symbol FMFONTDEFINE
6 0 /Helvetica-Oblique FMFONTDEFINE
7 0 /Courier FMFONTDEFINE
8 0 /Helvetica-BoldOblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
186 768 186 625 2 L
7 X
0 K
V
6 H
0 Z
0 X
N
595.63 625 209.8 625 2 L
7 X
V
0.5 H
2 Z
0 X
N
595.34 625 209.5 625 2 L
7 X
V
0 X
N
0 24 Q
-1.2 (The Display PostScript) 209.5 639.36 S
0 8 Q
-0.4 (\252) 445.37 650.36 S
0 24 Q
-1.2 (System) 455.16 639.36 S
1 13 Q
(Adobe Systems Incorporated) 209.5 612 T
0 291 426 357 501 66 75 102.5 623.5 FMBEGINEPSF
%%BeginDocument: /user/palkovic/work/source/ICS/DEC_Xclient/PSlogo.ai
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%For: (Michael de Leon) (Adobe Systems)
%%Title: (PSlogo.ai)
%%CreationDate: (3/2/92) (6:02 PM)
%%BoundingBox: 291 426 357 501
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 288 360 288 360
%AI3_TileBox: 96 40 648 770
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
%%EndSetup
0 A
u
u
0 O
0 g
0 i 0 J 0 j 1.533 w 4 M []0 d
%AI3_Note:
0 D
326.3283 499.2756 m
327.9078 498.8324 328.7268 498.4514 329.7228 497.7531 C
310.4358 475.2966 L
315.7016 471.8714 321.2253 463.3431 318.2298 456.3936 C
319.7051 465.8181 309.9453 472.8869 304.2108 473.7749 C
326.3283 499.2756 L
f
1.2532 w
321.9048 468.4416 m
F
321.8193 468.4761 m
F
310.9278 447.3756 m
314.5113 447.2159 318.0806 447.1311 321.8193 447.1311 c
329.8781 447.1311 337.6128 447.5219 344.8638 448.2201 c
347.5271 448.4781 349.6908 450.5601 350.0231 453.2946 c
350.6118 458.1411 350.8863 463.2179 350.8863 468.4416 c
350.8863 473.6639 350.6118 478.7406 350.0231 483.5871 c
349.6908 486.3209 347.5271 488.4044 344.8638 488.6609 c
341.6958 488.9669 338.4356 489.2121 335.0958 489.3951 C
321.2673 459.4619 319.8746 456.3786 v
317.8211 451.8314 315.0078 448.5021 310.9278 447.3756 C
f
0.9487 w
298.7756 448.2201 m
296.0921 448.6619 293.9928 450.1979 293.6163 453.2946 c
293.0283 458.1411 292.7538 463.2179 292.7538 468.4416 c
292.7538 473.6639 293.0283 478.7406 293.6163 483.5871 c
293.9493 486.3209 296.1138 488.4044 298.7756 488.6609 c
302.5023 489.0201 306.3573 489.2984 310.3188 489.4836 C
317.3748 497.3729 L
317.3298 497.3616 319.0406 497.6789 320.5361 497.3091 C
295.9391 468.6861 L
301.2618 471.2234 316.8618 467.2664 316.8618 458.0136 c
316.8618 448.1256 306.1256 447.0164 298.7756 448.2201 c
f
U
u
u
0.018 w
351.2321 428.8146 m
351.2321 429.1184 l
351.2321 430.2974 350.9771 430.8554 349.9608 430.8554 c
348.7248 430.8554 348.6056 429.9936 348.6056 428.9489 c
348.6056 427.3754 349.2056 427.1489 349.9608 427.1489 c
350.7093 427.1489 351.1961 427.5089 351.2036 428.2994 C
350.5676 428.2994 l
350.5466 427.9394 350.3418 427.6221 349.9466 427.6221 c
349.4943 427.6221 349.2266 427.8194 349.2266 428.8146 C
351.2321 428.8146 l
f
1 g
349.2266 429.2526 m
349.2341 430.2411 349.5371 430.4181 349.9038 430.4181 c
350.3283 430.4181 350.6178 430.2906 350.6178 429.2526 C
349.2266 429.2526 l
f
U
u
0 g
345.9723 427.6431 m
345.9866 427.6431 l
346.1838 427.3116 346.4313 427.1489 346.8056 427.1489 c
347.3771 427.1489 347.9561 427.3754 347.9561 428.9421 c
347.9561 429.8316 347.9276 430.8554 346.7771 430.8554 c
346.4381 430.8554 346.1913 430.7069 345.9933 430.4249 C
345.9723 430.4249 l
345.9723 432.3164 l
345.3933 432.3164 l
345.3933 427.2201 l
345.9723 427.2201 l
345.9723 427.6431 l
f
1 g
345.9723 429.1469 m
345.9723 429.6201 346.0008 430.3821 346.6428 430.3821 c
347.2646 430.3821 347.3486 429.8879 347.3486 428.9346 c
347.3486 428.3984 347.3486 427.6221 346.6218 427.6221 c
345.9086 427.6221 345.9723 428.6031 345.9723 429.1469 c
f
U
u
0 g
343.3683 427.1489 m
344.1243 427.1489 344.7243 427.3754 344.7243 428.9489 c
344.7243 429.9936 344.6043 430.8554 343.3683 430.8554 c
342.1331 430.8554 342.0131 429.9936 342.0131 428.9489 c
342.0131 427.3754 342.6138 427.1489 343.3683 427.1489 c
f
1 g
343.3683 427.6221 m
342.7691 427.6221 342.6206 428.0384 342.6206 429.1964 c
342.6206 430.1706 342.9243 430.3821 343.3683 430.3821 c
343.8138 430.3821 344.1168 430.1706 344.1168 429.1964 c
344.1168 428.0384 343.9691 427.6221 343.3683 427.6221 c
f
U
u
0 g
340.7276 430.4616 m
340.7073 430.4616 l
340.5086 430.7436 340.2618 430.8921 339.9228 430.8921 c
338.7723 430.8921 338.7438 429.8691 338.7438 428.9796 c
338.7438 427.4121 339.3228 427.1864 339.8943 427.1864 c
340.2693 427.1864 340.5161 427.3484 340.7141 427.6806 C
340.7276 427.6806 l
340.7276 427.2569 l
341.3066 427.2569 l
341.3066 432.3539 l
340.7276 432.3539 l
340.7276 430.4616 l
f
1 g
340.7276 429.1836 m
340.7276 428.4636 340.7276 427.6589 340.0781 427.6589 c
339.3513 427.6589 339.3513 428.4351 339.3513 428.9721 c
339.3513 429.9254 339.4353 430.4196 340.0571 430.4196 c
340.6998 430.4196 340.7276 429.6569 340.7276 429.1836 c
f
U
u
0 g
334.2986 427.2201 m
334.9556 427.2201 l
335.3373 428.4336 l
337.3068 428.4336 l
337.6736 427.2201 l
338.4011 427.2201 l
336.7413 432.3164 l
335.9163 432.3164 l
334.2986 427.2201 l
f
1 g
337.1298 428.9984 m
335.4993 428.9984 l
336.2966 431.7171 l
336.3108 431.7171 l
337.1298 428.9984 l
f
U
u
0 g
320.2668 427.2201 m
320.2668 429.5489 l
322.0466 429.5489 l
322.0466 430.1144 l
320.2668 430.1144 l
320.2668 431.7516 l
322.1448 431.7516 l
322.1448 432.3164 l
319.6181 432.3164 l
319.6181 427.2201 l
320.2668 427.2201 l
f
U
u
323.2128 430.7841 m
322.6338 430.7841 l
322.6338 427.2201 l
323.2128 427.2201 l
323.2128 429.3231 l
323.2128 429.8039 323.3756 430.2906 324.0176 430.2906 c
324.1241 430.2906 324.2223 430.2696 324.3288 430.2554 C
324.3288 430.8554 l
323.7633 430.8554 323.4671 430.7916 323.2271 430.2479 C
323.2128 430.2479 l
323.2128 430.7841 l
f
U
u
330.5328 427.2201 m
330.5328 429.6201 l
330.5328 429.7536 330.5613 430.1069 330.7308 430.2479 c
330.8861 430.3746 330.9498 430.3821 331.1681 430.3821 c
331.6338 430.3821 331.7336 430.0506 331.7336 429.6899 C
331.7336 427.2201 l
332.3118 427.2201 l
332.3118 429.9306 l
332.3118 430.7699 331.7126 430.8554 331.3383 430.8554 c
331.0128 430.8554 330.6881 430.7774 330.4908 430.3964 C
330.3566 430.7211 329.9823 430.8554 329.6576 430.8554 c
329.2413 430.8554 328.9376 430.7211 328.7681 430.3401 C
328.7538 430.3401 l
328.7538 430.7841 l
328.1396 430.7841 l
328.1613 430.5374 328.1748 430.2906 328.1748 430.0431 C
328.1748 427.2201 l
328.7538 427.2201 l
328.7538 429.6201 l
328.7538 429.7536 328.7823 429.9659 328.8881 430.1421 c
328.9728 430.2764 329.2128 430.3821 329.3891 430.3821 c
329.8556 430.3821 329.9546 430.0506 329.9546 429.6899 C
329.9546 427.2201 l
330.5328 427.2201 l
f
U
u
293.0246 428.7374 m
293.0103 428.2499 293.0103 427.0994 294.5141 427.1129 c
295.3541 427.1129 296.0958 427.4594 296.0958 428.5326 c
296.0958 430.1489 293.8076 429.9869 293.8076 431.1096 c
293.8076 431.6609 294.2028 431.8574 294.5913 431.8574 c
295.2056 431.8574 295.3826 431.4906 295.3751 430.9326 C
296.0531 430.9326 l
296.0958 431.9714 295.5731 432.4229 294.6408 432.4229 c
293.7873 432.4229 293.1446 431.9429 293.1446 431.0391 c
293.1446 429.5069 295.4313 429.6336 295.4313 428.5041 c
295.4313 427.8974 295.0361 427.6784 294.5208 427.6784 c
294.1046 427.6784 293.6666 427.8974 293.6666 428.5889 C
293.6666 428.7374 l
293.0246 428.7374 l
f
U
u
299.5826 430.7841 m
299.5826 430.3469 l
300.1323 430.3469 l
300.1323 427.2201 l
300.7121 427.2201 l
300.7121 430.3469 l
301.4321 430.3469 l
301.4321 430.7841 l
300.7121 430.7841 l
300.7121 431.3916 l
300.7121 431.6811 300.8178 431.9429 301.4321 431.9001 C
301.4321 432.3164 l
301.3473 432.3314 301.2768 432.3381 301.1568 432.3381 c
300.6416 432.3381 300.1323 432.1964 300.1323 431.4764 C
300.1323 430.7841 l
299.5826 430.7841 l
f
U
u
301.7456 430.7841 m
301.7456 430.3469 l
302.3313 430.3469 l
302.3313 427.8126 l
302.3313 427.4031 302.5781 427.1766 303.1293 427.1766 c
303.3191 427.1766 303.5096 427.2201 303.7008 427.2336 C
303.7008 427.6784 l
303.5741 427.6641 303.4818 427.6506 303.4398 427.6506 c
302.9103 427.6506 302.9103 427.9394 302.9103 428.1651 C
302.9103 430.3469 l
303.6866 430.3469 l
303.6866 430.7841 l
302.9103 430.7841 l
302.9103 431.7306 l
302.3313 431.4696 l
302.3313 430.7841 l
301.7456 430.7841 l
f
U
u
313.2761 430.7841 m
312.6978 430.7841 l
312.6978 427.2201 l
313.2761 427.2201 l
313.2761 429.3231 l
313.2761 429.8039 313.4388 430.2906 314.0816 430.2906 c
314.1866 430.2906 314.2856 430.2696 314.3921 430.2554 C
314.3921 430.8554 l
313.8266 430.8554 313.5303 430.7916 313.2903 430.2479 C
313.2761 430.2479 l
313.2761 430.7841 l
f
U
u
297.9723 427.1489 m
298.7276 427.1489 299.3276 427.3754 299.3276 428.9489 c
299.3276 429.9936 299.2076 430.8554 297.9723 430.8554 c
296.7363 430.8554 296.6156 429.9936 296.6156 428.9489 c
296.6156 427.3754 297.2163 427.1489 297.9723 427.1489 c
f
1 g
297.9723 427.6221 m
297.3716 427.6221 297.2231 428.0384 297.2231 429.1964 c
297.2231 430.1706 297.5268 430.3821 297.9723 430.3821 c
298.4171 430.3821 298.7208 430.1706 298.7208 429.1964 c
298.7208 428.0384 298.5723 427.6221 297.9723 427.6221 c
f
U
u
0 g
311.2803 427.2201 m
311.9156 427.2201 l
311.8728 427.4946 311.8443 427.7841 311.8443 428.0669 C
311.8443 429.7821 l
311.8443 430.3821 311.6051 430.8554 310.6871 430.8554 c
309.9318 430.8554 309.5073 430.5801 309.4796 429.7821 C
310.1081 429.7821 l
310.0728 430.1564 310.2768 430.4181 310.6661 430.4181 c
311.2871 430.4181 311.2803 429.9021 311.2661 429.4289 C
310.4538 429.4506 309.3948 429.4011 309.3948 428.3204 c
309.3948 427.6356 309.6138 427.1489 310.3691 427.1489 c
310.8138 427.1489 311.0891 427.3251 311.2661 427.7346 C
311.2803 427.7346 l
311.2803 427.2201 l
f
1 g
311.2661 428.9909 m
311.3231 427.8404 310.8843 427.6221 310.5318 427.6221 c
310.1433 427.6221 309.9731 427.9326 309.9731 428.2784 c
309.9731 429.0344 310.7156 428.9841 311.2661 428.9909 C
f
U
u
0 g
317.3891 428.8146 m
317.3891 429.1184 l
317.3891 430.2974 317.1341 430.8554 316.1178 430.8554 c
314.8826 430.8554 314.7626 429.9936 314.7626 428.9489 c
314.7626 427.3754 315.3626 427.1489 316.1178 427.1489 c
316.8663 427.1489 317.3531 427.5089 317.3606 428.2994 C
316.7246 428.2994 l
316.7036 427.9394 316.4996 427.6221 316.1036 427.6221 c
315.6521 427.6221 315.3836 427.8194 315.3836 428.8146 C
317.3891 428.8146 l
f
1 g
315.3836 429.2526 m
315.3911 430.2411 315.6941 430.4181 316.0608 430.4181 c
316.4853 430.4181 316.7748 430.2906 316.7748 429.2526 C
315.3836 429.2526 l
f
U
0 g
0.3757 w 10 M
295.0571 435.1259 m
295.0571 434.0841 295.3331 434.1756 296.2901 434.1291 c
296.2901 433.7324 l
292.6661 433.7324 l
292.6661 434.1291 L
293.6238 434.1756 293.7791 434.1014 293.7791 435.1431 c
293.7791 440.1719 L
293.7791 441.2136 293.5893 441.0884 292.6661 441.1776 c
292.6661 441.5751 l
295.9533 441.5751 L
297.8358 441.5751 298.7651 440.8349 298.7651 439.4909 c
298.7651 437.8776 297.2913 437.0714 295.5558 437.1719 c
295.5581 437.5776 L
296.8383 437.5566 297.3333 438.0989 297.3333 439.3784 c
297.3333 440.6789 296.8818 441.1101 295.7493 441.1101 c
295.0571 441.1101 l
295.0571 435.1259 L
f
0.4192 w
302.2083 433.6169 m
304.3916 433.6169 305.7693 435.3306 305.7693 437.4321 c
305.7693 438.9666 304.7081 440.8296 302.5638 440.8296 c
300.5081 440.8296 299.0321 439.2456 299.0321 437.0939 c
299.0321 435.1604 300.3206 433.6169 302.2083 433.6169 c
f
1 g
302.4746 434.0856 m
301.1996 434.0856 300.4841 435.2009 300.4841 437.6114 c
300.4841 438.8054 300.8246 440.3601 302.3463 440.3601 c
303.3933 440.3601 304.3166 439.5149 304.3166 437.1336 c
304.3166 435.3944 303.9971 434.0856 302.4746 434.0856 c
f
0 g
310.1741 439.0446 m
310.1741 440.5311 l
310.1741 440.5806 310.0316 440.6211 309.9716 440.6406 c
309.5681 440.7801 308.8998 440.8296 308.4671 440.8296 c
307.0856 440.8296 306.3131 439.9011 306.3131 439.1654 c
306.3131 438.0794 306.8613 437.6301 307.4058 437.2709 c
308.9186 436.2854 309.3858 435.8781 309.3858 435.2309 c
309.3858 434.3414 308.7626 434.0856 308.1461 434.0856 c
306.9153 434.0856 306.6116 434.8469 306.5208 435.7514 C
306.1818 435.7514 l
306.1818 434.0751 l
306.1818 433.9949 306.3446 433.9559 306.3858 433.9356 c
306.9093 433.7354 307.4763 433.6169 308.1213 433.6169 c
309.4203 433.6169 310.5671 434.3744 310.5671 435.5204 c
310.5671 436.2741 310.1321 436.8884 309.1083 437.6421 c
308.0996 438.3899 307.4546 438.7476 307.4546 439.4451 c
307.4546 440.2829 308.0688 440.3601 308.4161 440.3601 c
309.3866 440.3601 309.7541 439.7421 309.8351 439.0446 C
310.1741 439.0446 l
f
314.4573 440.2709 m
315.2321 440.2709 l
316.2311 440.2709 316.1681 439.7226 316.4996 439.0649 C
316.8963 439.0649 l
316.6233 440.7104 l
310.9811 440.7104 l
310.7088 439.0649 l
311.1048 439.0649 l
311.4378 439.7226 311.4138 440.2709 312.3723 440.2709 C
313.1471 440.2709 l
313.1471 434.9481 l
313.1471 434.1164 313.0308 434.1771 312.0911 434.1156 C
312.0911 433.7354 l
315.5141 433.7354 l
315.5141 434.1156 l
314.5826 434.1921 314.4573 434.1014 314.4573 434.9331 C
314.4573 440.2709 l
f
321.8156 439.7774 m
321.8156 441.3606 l
321.8156 441.4161 321.6716 441.4611 321.6033 441.4829 c
321.1518 441.6396 320.3748 441.6959 319.8896 441.6959 c
318.5906 441.6959 317.4611 440.9024 317.4611 439.8989 c
317.4611 438.6816 318.2178 438.1266 318.8276 437.7246 c
320.5218 436.6199 320.8511 436.1496 320.8511 435.4244 c
320.8511 434.6901 320.4761 434.1134 319.5813 434.1134 c
318.5246 434.1134 317.7476 434.5409 317.6193 435.8241 C
317.2623 435.8241 l
317.2623 434.0969 l
317.2623 434.0069 317.4296 433.9626 317.4746 433.9401 c
318.0618 433.7166 318.7563 433.6169 319.4801 433.6169 c
320.8346 433.6169 322.0916 434.3534 322.0916 435.6809 c
322.0916 436.6071 321.7083 437.2971 320.5106 438.1784 c
319.3818 439.0154 318.6573 439.3634 318.6573 440.1449 c
318.6573 440.9084 319.2296 441.1979 319.8813 441.1979 c
320.9681 441.1979 321.3693 440.5589 321.4601 439.7774 C
321.8156 439.7774 l
f
328.3316 435.6906 m
328.0518 434.2641 L
328.0143 434.1156 327.7188 433.9664 327.3866 433.8434 c
327.0581 433.7226 326.7446 433.6169 326.0156 433.6169 c
324.4053 433.6169 322.6271 434.5926 322.6271 437.2634 c
322.6271 438.7971 323.5496 440.8296 326.0523 440.8296 c
326.8203 440.8296 327.2658 440.6789 327.5883 440.5349 c
327.8411 440.4216 328.0518 440.3219 328.0518 440.1636 c
328.0518 438.6966 l
327.7383 438.6966 L
327.7383 439.6364 327.2531 440.3601 326.0343 440.3601 c
324.8171 440.3601 324.0033 439.0551 323.9951 437.3429 c
323.9883 436.0056 324.4323 434.0856 326.1836 434.0856 c
327.5523 434.0856 327.7458 434.9181 328.0173 435.6906 c
328.3316 435.6906 l
f
328.5648 440.7104 m
331.8978 440.7104 L
332.9163 440.7104 334.0683 440.1824 334.0683 439.0169 c
334.0683 438.1551 333.4758 437.5169 332.6598 437.1479 c
333.7488 435.6059 L
334.2536 434.8776 334.7186 434.3271 335.0718 434.1179 c
335.0718 433.7376 l
333.7616 433.7354 L
333.1668 433.7354 332.8436 434.8821 331.6241 436.8854 c
330.8088 436.8854 l
330.8088 434.9436 L
330.8088 434.0969 330.8411 434.2034 331.6766 434.1156 c
331.6766 433.7354 l
328.5648 433.7354 l
328.5648 434.1156 L
329.4011 434.2034 329.4986 434.1269 329.4986 434.9744 c
329.4986 439.4804 L
329.4986 440.3879 329.4168 440.2814 328.5648 440.3301 c
328.5648 440.7104 l
f
1 g
330.8088 440.2709 m
331.3856 440.2709 l
332.1221 440.2709 332.6606 440.0129 332.6606 438.9276 c
332.6606 437.8011 332.0133 437.3241 331.3136 437.3241 C
330.8088 437.3241 l
330.8088 440.2709 l
f
0 g
337.8281 434.9279 m
337.8281 434.1269 337.9578 434.2034 338.8848 434.1156 c
338.8848 433.7354 l
335.4618 433.7354 l
335.4618 434.1156 L
336.3903 434.2034 336.5186 434.1119 336.5186 434.9436 c
336.5186 439.5411 L
336.5186 440.3579 336.4053 440.2664 335.4618 440.3301 c
335.4618 440.7104 l
338.8848 440.7104 l
338.8848 440.3301 L
337.9578 440.2514 337.8281 440.3579 337.8281 439.5411 c
337.8281 434.9279 L
f
341.7071 434.9886 m
341.7071 434.0631 341.9786 434.1576 342.8291 434.1156 c
342.8291 433.7354 l
339.4061 433.7354 l
339.4061 434.1156 L
340.2581 434.1576 340.3953 434.0774 340.3953 435.0044 c
340.3953 439.4496 L
340.3953 440.3766 340.2281 440.2514 339.4061 440.3301 c
339.4061 440.7104 l
342.5028 440.7104 L
344.1768 440.7104 345.0701 440.0526 345.0701 438.8571 c
345.0701 437.3024 343.6931 436.5846 342.1503 436.6746 c
342.1518 437.0676 L
342.8538 437.0676 343.7291 437.1284 343.7291 438.7574 c
343.7291 439.9146 343.1951 440.2709 342.1886 440.2709 c
341.7071 440.2709 l
341.7071 434.9886 L
f
349.1726 440.2709 m
349.9473 440.2709 l
350.9471 440.2709 350.8818 439.7226 351.2156 439.0649 C
351.6108 439.0649 l
351.3386 440.7104 l
345.6963 440.7104 l
345.4233 439.0649 l
345.8193 439.0649 l
346.1523 439.7226 346.1291 440.2709 347.0876 440.2709 C
347.8616 440.2709 l
347.8616 434.9481 l
347.8616 434.1164 347.7446 434.1771 346.8056 434.1156 C
346.8056 433.7354 l
350.2286 433.7354 l
350.2286 434.1156 l
349.2971 434.1921 349.1726 434.1014 349.1726 434.9331 C
349.1726 440.2709 l
f
u
0.018 w 4 M
304.9953 427.2201 m
305.7716 427.2201 l
306.5696 430.2554 l
306.5846 430.2554 l
307.3466 427.2201 l
308.1236 427.2201 l
309.0761 430.7841 l
308.4618 430.7841 l
307.7561 427.7136 l
307.7418 427.7136 l
307.0151 430.7841 l
306.1953 430.7841 l
305.4048 427.7136 l
305.3906 427.7136 l
304.7486 430.7841 l
304.1058 430.7841 l
304.9953 427.2201 l
f
U
u
326.0988 427.1489 m
326.8548 427.1489 327.4548 427.3754 327.4548 428.9489 c
327.4548 429.9936 327.3348 430.8554 326.0988 430.8554 c
324.8636 430.8554 324.7436 429.9936 324.7436 428.9489 c
324.7436 427.3754 325.3443 427.1489 326.0988 427.1489 c
f
1 g
326.0988 427.6221 m
325.4996 427.6221 325.3511 428.0384 325.3511 429.1964 c
325.3511 430.1706 325.6548 430.3821 326.0988 430.3821 c
326.5443 430.3821 326.8481 430.1706 326.8481 429.1964 c
326.8481 428.0384 326.6996 427.6221 326.0988 427.6221 c
f
U
U
*u
0 g
0.75 w
352.7752 439.1609 m
352.7752 440.2982 L
352.3698 440.2982 L
352.3698 440.4747 L
353.4453 440.4747 L
353.4453 440.2982 L
353.0399 440.2982 L
353.0399 439.1609 L
352.7752 439.1609 l
f
*U
*u
355.1085 439.1609 m
354.8439 439.1609 L
354.8439 440.1856 L
354.8401 440.1856 L
354.6956 439.8196 354.5455 439.4893 354.3972 439.1609 c
354.2545 439.1609 L
354.1138 439.4893 353.9711 439.8196 353.8341 440.1856 c
353.8304 440.1856 L
353.8304 439.1609 L
353.6183 439.1609 L
353.6183 440.4747 L
353.9449 440.4747 L
354.08 440.1518 354.2977 439.6376 354.3484 439.4687 c
354.3521 439.4687 L
354.4141 439.6451 354.6506 440.1518 354.8007 440.4747 c
355.1085 440.4747 L
355.1085 439.1609 l
f
*U
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
76 312 535 555 R
7 X
V
0 18 Q
0 X
(Client) 208 543 T
(Library Supplement for) 262.98 543 T
(X) 465.91 543 T
173.5 197 533.5 219 R
7 X
V
2 9 Q
0 X
(Adobe Systems Incorporated) 209.5 202 T
173.5 69 348.5 132 R
7 X
V
2 8 Q
0 X
(Adobe Systems Europe B.V.) 209.5 117.67 T
(Office Centre) 209.5 108.67 T
(Jozef Isra\221lskade 48c) 209.5 99.67 T
(1072 SB Amsterdam, Netherlands) 209.5 90.67 T
(31-20-6767-661) 209.5 81.67 T
358 69 533 132 R
7 X
V
0 X
(Adobe Systems Japan) 394 117.67 T
(Swiss Bank House 7F) 394 108.67 T
(4-1-8 Toranomon, Minato-ku) 394 99.67 T
(Tokyo 105, Japan) 394 90.67 T
(03-3437-8950) 394 81.67 T
173.5 138 348.5 192 R
7 X
V
0 X
(Corporate Headquarters) 209.5 177.67 T
(1585 Charleston Road,  PO Box 7900) 209.5 168.67 T
(Mountain View, CA  94039-7900) 209.5 159.67 T
(\050415\051 961-4400 Main Number) 209.5 150.67 T
(\050415\051 961-4111 Developer Support) 209.5 141.67 T
358 138 533 192 R
7 X
V
0 X
(Adobe Systems Eastern Region) 394 177.67 T
(24 New England) 394 168.67 T
(Executive Park) 394 159.67 T
(Burlington, MA  01803) 394 150.67 T
(\050617\051 273-2120) 394 141.67 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
208.17 202.55 468 612 R
7 X
0 K
V
3 8 Q
0 X
(Client Library Supplement for X) 208.17 606.67 T
4 F
(November 16, 1992) 208.17 586.67 T
(Copyright) 208.17 566.67 T
5 F
(\343) 242.6 566.67 T
4 F
( 1989-1990, 1992 by Adobe Systems Incorporated. All rights) 248.91 566.67 T
(reserved.) 208.17 556.67 T
(No part of this publication may be reproduced, stored in a retrieval system, or) 208.17 536.67 T
(transmitted, in any form or by any means, electronic, mechanical, photocopying,) 208.17 526.67 T
(recording, or otherwise, without the prior) 208.17 516.67 T
(written consent of the publisher. Any) 342.29 516.67 T
(software referred to herein is furnished under license and may only be used or) 208.17 506.67 T
(copied in accordance with the terms of such license.) 208.17 496.67 T
(PostScript, the PostScript logo, Display PostScript, and the Adobe logo are) 208.17 476.67 T
(trademarks of Adobe) 208.17 466.67 T
(Systems Incorporated which may be registered in certain) 277.67 466.67 T
-0.62 (jurisdictions. Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) 208.17 456.67 P
(X Window System is a trademark of the Massachusetts) 208.17 446.67 T
(Institute of Technology.) 386.93 446.67 T
-0.32 (Other brand or product names are the trademarks or registered trademarks of their) 208.17 436.67 P
(respective holders.) 208.17 426.67 T
1 F
(This publication and the information herein is furnished AS IS, is subject to) 208.17 406.67 T
(change without notice, and should not be construed as a commitment by Adobe) 208.17 396.67 T
-0.1 (Systems Incorporated. Adobe Systems) 208.17 386.67 P
-0.1 (Incorporated assumes no responsibility or) 331.02 386.67 P
(liability for any errors or inaccuracies, makes no warranty of any kind \050express,) 208.17 376.67 T
-0.24 (implied or statutory\051 with respect to this publication, and expressly disclaims any) 208.17 366.67 P
(and all warranties of merchantability, fitness for particular purposes and) 208.17 356.67 T
(noninfringement of third party rights.) 208.17 346.67 T
FMENDPAGE
%%EndPage: "2" 3
%%Page: "iii" 3
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(iii) 528.34 29.83 T
186 768 186 625 2 L
7 X
V
6 H
0 Z
0 X
N
595.63 625 209.8 625 2 L
7 X
V
0.5 H
2 Z
0 X
N
209.63 628.99 533.63 679 R
7 X
V
0 24 Q
0 X
(Contents) 209.63 637 T
78 72 534 555 R
7 X
V
2 9.5 Q
0 X
(1) 174 530.16 T
(About This Manual  9) 210 530.16 T
(T) 222 517.66 T
(ypographical Conventions  9) 227.28 517.66 T
(What this Manual Contains  9) 222 505.16 T
(2) 174 486.66 T
(About the Display PostScript Extension to X  10) 210 486.66 T
(3) 174 468.16 T
(Basic Facilities  10) 210 468.16 T
(Initialization  1) 222 455.66 T
(1) 281.43 455.66 T
(Creating a Context  1) 222 443.16 T
(1) 310.98 443.16 T
(Execution  16) 222 430.66 T
(Status Events  27) 222 418.16 T
(4) 174 399.66 T
(Additional Facilities  31) 210 399.66 T
(Identi\336ers  32) 222 387.16 T
(Zombie Contexts  32) 222 374.66 T
(Buf) 222 362.16 T
(fers  33) 236.07 362.16 T
(Encodings  33) 222 349.66 T
(Forked Contexts  34) 222 337.16 T
(Multiple Servers  35) 222 324.66 T
(Sharing Resources  35) 222 312.16 T
(Synchronization  36) 222 299.66 T
(5) 174 281.16 T
(Programming T) 210 281.16 T
(ips  38) 275.04 281.16 T
(A) 222 268.66 T
(void XIfEvent  38) 228.16 268.66 T
(Include Files  39) 222 256.16 T
(Use Pass-Through Event Dispatching  39) 222 243.66 T
( Be Careful With Exception Handling  39) 222 231.16 T
(Coordinate Conversions  40) 222 218.66 T
(Fonts  41) 222 206.16 T
(Portability Issues  41) 222 193.66 T
(Using Custom Operators  43) 222 181.16 T
(6) 174 162.66 T
(X-Speci\336c Data and Procedures  44) 210 162.66 T
(Data Structures  44) 222 150.16 T
(Procedures  46) 222 137.66 T
(7) 174 119.16 T
(X-Speci\336c Custom PostScript Operators  55) 210 119.16 T
(Single-Operator Procedures  59) 222 106.66 T
FMENDPAGE
%%EndPage: "iii" 4
%%Page: "iv" 4
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(iv) 78 29.83 T
(Contents) 120 29.83 T
78 72 534 708 R
7 X
V
2 9.5 Q
0 X
(A.) 190 701.66 T
0 F
(Changes Since Last) 210 701.66 T
(Publication) 302.83 701.66 T
2 F
(  61) 353.99 701.66 T
0 F
(Index) 210 677.16 T
2 F
(  63) 234.79 677.16 T
FMENDPAGE
%%EndPage: "iv" 5
%%Page: "v" 5
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(v) 529.75 29.83 T
186 768 186 625 2 L
7 X
V
6 H
0 Z
0 X
N
595.63 625 209.8 625 2 L
7 X
V
0.5 H
2 Z
0 X
N
209.63 628.99 533.63 679 R
7 X
V
0 24 Q
0 X
(List of Figures) 209.63 637 T
78 72 534 555 R
7 X
V
2 9 Q
0 X
(Figure 1) 156.63 549 T
(User space and device space  17) 201.6 549 T
(Figure 2) 156.63 537 T
(Window origin and device space origin  18) 201.6 537 T
FMENDPAGE
%%EndPage: "v" 6
%%Page: "vi" 6
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(vi) 78 29.83 T
78 72 534 708 R
7 X
V
FMENDPAGE
%%EndPage: "vi" 7
%%Page: "vii" 7
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(vii) 525.98 29.83 T
186 768 186 625 2 L
7 X
V
6 H
0 Z
0 X
N
595.63 625 209.8 625 2 L
7 X
V
0.5 H
2 Z
0 X
N
209.63 628.99 533.63 679 R
7 X
V
0 24 Q
0 X
(List of T) 209.63 637 T
(ables) 301.14 637 T
78 72 534 555 R
7 X
V
2 9 Q
0 X
(T) 160.62 549 T
(able 1) 165.12 549 T
(T) 201.6 549 T
(ypographical conventions  9) 206.6 549 T
(T) 160.62 537 T
(able 2) 165.12 537 T
(How bit gravity af) 201.6 537 T
(fects of) 270.36 537 T
(fsets  22) 299.18 537 T
(T) 160.62 525 T
(able 3) 165.12 525 T
(Encoding conversions  34) 201.6 525 T
(T) 160.62 513 T
(able 4) 165.12 513 T
(Status events  45) 201.6 513 T
(T) 160.62 501 T
(able 5) 165.12 501 T
(The) 201.6 501 T
6 F
(colorinfo) 219.58 501 T
2 F
( array  57) 253.55 501 T
FMENDPAGE
%%EndPage: "vii" 8
%%Page: "viii" 8
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(viii) 78 29.83 T
78 72 534 708 R
7 X
V
FMENDPAGE
%%EndPage: "viii" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(9) 529.27 29.83 T
186 768 186 625 2 L
7 X
V
6 H
0 Z
0 X
N
595.63 625 209.8 625 2 L
7 X
V
0.5 H
2 Z
0 X
N
84 603 183 714 R
7 X
V
85.8 661 172.8 751 R
V
209.63 628.99 533.63 706.33 R
V
0 24 Q
0 X
(Client) 209.63 690.33 T
(Library) 282.94 690.33 T
(Supplement) 209.63 664.33 T
(for) 353.58 664.33 T
(X) 392.22 664.33 T
78 72 534 555 R
7 X
V
0 12 Q
0 X
(1) 182.93 547 T
(About This Manual) 201.6 547 T
4 9 Q
(This manual contains information about the Client Library interface to the Display) 201.6 522 T
(PostScript system implemented as an extension to the X W) 201.6 510 T
(indow System. W) 413.68 510 T
(e sometimes) 477.13 510 T
(refer to this extension as DPS/X. DPS/X is the application programmer) 201.6 498 T
(\325) 457.8 498 T
(s means of) 460.3 498 T
(displaying text and graphics on a screen using the PostScript language.) 201.6 486 T
-0.06 (The system-independent interface for DPS/X is documented in the) 201.6 462 P
1 F
-0.06 (Client Library Refer) 442.41 462 P
-0.06 (ence) 515.35 462 P
(Manual) 201.6 450 T
4 F
(. Only extensions to the interface are discussed in this manual. The header \336le) 229.56 450 T
1 F
(<DPS/dpsXclient.h>) 201.6 438 T
4 F
( includes both system-) 277.39 438 T
(independent and X system-speci\336c procedures.) 358.03 438 T
0 10 Q
(1.1) 175.71 409.33 T
(T) 201.6 409.33 T
(ypographical Conventions) 206.97 409.33 T
4 9 Q
(The following typographical conventions are used in this manual:) 201.6 385 T
78 347.99 534 358 C
78 347.99 534 358 R
7 X
0 K
V
210.12 351.66 562.39 351.66 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
0 8 Q
0 X
0 K
(T) 201.62 361 T
(able 1) 205.92 361 T
1 9 Q
(T) 233.03 361 T
(ypographical conventions) 237.36 361 T
78 327.48 534 337.49 C
78 327.48 534 337.49 R
7 X
0 K
V
210.12 333.58 562.39 333.58 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
6 8 Q
0 X
0 K
(Item) 201.6 340.15 T
(Example of T) 331 340.15 T
(ypographical Style) 377.51 340.15 T
4 F
(\336le or executable) 201.6 320.15 T
1 F
(<DPS/dpsXshar) 331 320.15 T
(e.h>, libdps.a) 383.19 320.15 T
4 F
(variable, typedef, code fragment) 201.6 303.65 T
6 F
(ctxt, x, y) 331 303.65 T
(, DPSContextRec, cid, drawable) 359.74 303.65 T
4 F
(code example) 201.6 287.15 T
7 8.5 Q
-0.17 (\320ldpstk \320ldps \320lX11) 331 287.15 S
4 8 Q
(procedure) 201.6 270.65 T
0 F
(XDPSCreateSimpleContext) 331 270.65 T
4 F
(PostScript operator or customop) 201.6 254.15 T
0 F
(\336le, currentXgcdrawable) 331 254.15 T
78 224.97 534 234.98 C
78 224.97 534 234.98 R
7 X
0 K
V
210.12 231.07 562.39 231.07 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 8 Q
0 X
0 K
(new term or emphasis) 201.6 237.65 T
(\322The toolkit procedures) 331 237.65 T
1 F
(must) 408.94 237.65 T
4 F
( be used...) 424.05 237.65 T
0 10 Q
(1.2) 175.71 199.31 T
(What this Manual Contains) 201.6 199.31 T
4 9 Q
(Section 2 brie\337y introduces the Display PostScript system extension to the X W) 201.6 174.97 T
(indow) 488.83 174.97 T
(System.) 201.6 162.97 T
(Section 3 introduces concepts that will enable you to write a simple application, including) 201.6 138.97 T
(connecting to the X server; creating and terminating a context; dif) 201.6 126.97 T
(ferences in coordinate) 438.56 126.97 T
(systems; issues of rendering in X versus PostScript language; clipping, repainting, and) 201.6 114.97 T
(resizing; error codes; and user object) 201.6 102.97 T
(indices.) 336.38 102.97 T
FMENDPAGE
%%EndPage: "9" 10
%%Page: "10" 10
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(10) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(Section 4 describes advanced concepts that not all applications need,) 201.6 702 T
(including client and) 450.96 702 T
(server identi\336ers, encodings, status events,) 201.6 690 T
(synchronization, shared resources, and multiple) 357.36 690 T
(servers.) 201.6 678 T
(Section 5 contains tips for the application programmer on \336les, fonts,) 201.6 654 T
(coordinate) 452.98 654 T
(conversions, and other issues that require special attention.) 201.6 642 T
(Section 6 describes the X-speci\336c data and procedures found in the) 201.6 618 T
1 F
(<DPS/dpsXclient.h>) 445.46 618 T
4 F
(header \336le.) 201.6 606 T
(Section 7 describes the X-speci\336c PostScript operators provided for the) 201.6 582 T
(Display PostScript) 460.7 582 T
(extension to X.) 201.6 570 T
(Appendix A lists changes to the manual since the previous version.) 201.6 546 T
0 12 Q
(2) 182.93 516 T
(About the Display PostScript Extension to X) 201.6 516 T
4 9 Q
(In order to understand the relationship of the Display PostScript system to the development) 201.6 491 T
(of X applications, you should be familiar with the following concepts:) 201.6 479 T
(\245) 201.6 455 T
1 F
(The PostScript imaging model) 213.6 455 T
4 F
(, which allows the application developer to express) 322.7 455 T
(graphical displays at a higher level of abstraction than is possible with Xlib. This) 213.6 443 T
-0.36 (improves device independence and portability) 213.6 431 P
-0.36 (. The integration of the imaging model with) 377.33 431 P
(X requires consideration of several issues, including coordinate system conversions \050see) 213.6 419 T
(\322Coordinate Systems\323 in section 3.3, \322Execution\323\051, event handling \050see section 3.4,) 213.6 407 T
(\322Status Events\323\051, and resource management \050see section 4.7, \322Sharing Resources\323\051.) 213.6 395 T
(\245) 201.6 375 T
1 F
(The PostScript interpr) 213.6 375 T
(eter) 293.66 375 T
4 F
(, which allows an application to execute) 307.28 375 T
(PostScript language) 453.55 375 T
(code.) 213.6 363 T
(\245) 201.6 343 T
1 F
(W) 213.6 343 T
(rapped pr) 220.59 343 T
(ocedur) 255.96 343 T
(es) 280.58 343 T
4 F
(, which allow PostScript language programs to be embedded in an) 288.07 343 T
(application as C-callable procedures.) 213.6 331 T
0 12 Q
(3) 182.93 301 T
(Basic Facilities) 201.6 301 T
4 9 Q
(The) 201.6 276 T
1 F
(Client Library Refer) 217.82 276 T
(ence Manual) 290.89 276 T
4 F
( introduces the facilities needed to write a simple) 337.56 276 T
(application program for the Display PostScript system. This manual discusses Display) 201.6 264 T
(PostScript system issues of particular concern in the X W) 201.6 252 T
(indow System environment, in the) 408.18 252 T
(following categories:) 201.6 240 T
(\245) 201.6 216 T
(Initialization) 213.6 216 T
(\245) 201.6 196 T
(Creating a context) 213.6 196 T
(\245) 201.6 176 T
(Execution of PostScript language code) 213.6 176 T
(\245) 201.6 156 T
(T) 213.6 156 T
(ermination) 218.46 156 T
0 10 Q
(3.1) 175.71 127.33 T
(Initialization) 201.6 127.33 T
4 9 Q
-0.08 (Before performing any DPS/X operations, the application must establish a connection to the) 201.6 103 P
(X server) 201.6 91 T
(. Y) 231.8 91 T
(ou can connect to the server by using Xlib\325) 241.88 91 T
(s) 396.14 91 T
0 F
(XOpenDisplay) 401.89 91 T
4 F
( routine or a) 462.82 91 T
(standard toolkit\325) 201.6 79 T
(s initialization process. Regardless of how the connection is established, an) 260.27 79 T
FMENDPAGE
%%EndPage: "10" 11
%%Page: "11" 11
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 11) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
-0.12 (X) 201.6 702 P
6 F
-0.16 0.36 (Display) 210.21 702 B
4 F
-0.12 ( record will be de\336ned for the connection. Subsequent Display PostScript system) 242.19 702 P
(operations will use this) 201.6 690 T
6 F
0.36 (Display) 286.98 690 S
4 F
( record to identify the server) 318.96 690 T
(. Once the) 420.55 690 T
6 F
0.36 (Display) 459.48 690 S
4 F
( record is) 491.46 690 T
(obtained, the application must create a) 201.6 678 T
6 F
0.36 (drawable) 342.13 678 S
4 F
( \050window or pixmap\051 for DPS/X) 381.47 678 T
(imaging) 500.29 678 T
-0.13 (operations, and an X) 201.6 666 P
6 F
-0.16 0.36 (GC) 277.72 666 B
4 F
-0.13 ( out of which certain \336elds are used by DPS/X. There are a number) 291.92 666 P
(of facilities in Xlib for creating new windows and) 201.6 654 T
6 F
0.36 (GC) 383.07 654 S
4 F
(s, such as) 397.27 654 T
0 F
(XCreateSimpleW) 433.71 654 T
(indow) 505.55 654 T
4 F
(and) 201.6 642 T
0 F
(XCreateGC) 216.82 642 T
4 F
(.) 264.27 642 T
0 10 Q
(3.2) 175.71 613.33 T
(Creating a Context) 201.6 613.33 T
4 9 Q
(In DPS/X, a context \050as described in the) 201.6 589 T
1 F
(Client Library Refer) 348.12 589 T
(ence Manual) 421.19 589 T
4 F
(\051 is a resource in) 467.86 589 T
-0.25 (the server that represents all of the execution state needed by the PostScript interpreter to run) 201.6 577 P
(PostScript language programs.) 201.6 565 T
6 F
-0.3 0.36 (DPSContextRec) 201.6 541 B
4 F
-0.24 ( is a data structure on the client side that represents all of the state needed) 271.71 541 P
(by the Client Library to communicate with a context. A pointer of type) 201.6 529 T
6 F
0.36 (DPSContext) 458.71 529 S
4 F
( is a) 511.76 529 T
(handle to this data structure. When the application creates a context in the interpreter) 201.6 517 T
(, a) 506.25 517 T
6 F
-0.2 0.36 (DPSContextRec) 201.6 505 B
4 F
-0.16 ( structure is automatically created for use by the client \050except for forked) 271.71 505 P
(contexts; see section 4.5, \322Forked Contexts\323\051. The) 201.6 493 T
6 F
0.36 (DPSContextRec) 384.82 493 S
4 F
( contains pointers to) 454.92 493 T
(procedures that implement all of the basic operations that a context can perform.) 201.6 481 T
(There are two procedures that create both a context in the server and a) 201.6 457 T
6 F
0.36 (DPSContextRec) 456.16 457 S
4 F
(for the client. The \336rst,) 201.6 445 T
0 F
(XDPSCreateSimpleContext) 286.72 445 T
4 F
(, uses the default colormap, and is) 402.08 445 T
(adequate for most applications. The second,) 201.6 433 T
0 F
(XDPSCreateContext) 361.85 433 T
4 F
(, is a more general) 447.74 433 T
-0.08 (function that allows you to specify colormap information. Other procedures for creating just) 201.6 421 P
-0.23 (the) 201.6 409 P
6 F
-0.29 0.36 (DPSContextRec) 214.6 409 B
4 F
-0.23 (\321for contexts that already exist in the server\321are covered in section) 284.7 409 P
(4, \322Additional Facilities.\323) 201.6 397 T
0 10 Q
(Using XDPSCreateSimpleContext) 201.6 368.33 T
4 9 Q
(T) 201.6 344 T
(o create a context using the default colormap, call) 206.46 344 T
0 F
(XDPSCreateSimpleContext) 387.67 344 T
4 F
(:) 503.03 344 T
0 F
(XDPSCreateSimpleContext) 78 299.66 T
7 8.5 Q
-0.17 (DPSContext XDPSCreateSimpleContext\050dpy, drawable, gc, x, y,) 201.6 299.66 S
-0.17 (textProc, errorProc, space\051) 231.6 288.66 S
-0.17 (Display *dpy;) 213.6 277.33 S
-0.17 (Drawable drawable;) 213.6 265.83 S
-0.17 (GC gc;) 213.6 254.33 S
-0.17 (int x;) 213.6 242.83 S
-0.17 (int y;) 213.6 231.33 S
-0.17 (DPSTextProc textProc;) 213.6 219.83 S
-0.17 (DPSErrorProc errorProc;) 213.6 208.33 S
-0.17 (DPSSpace space;) 213.6 196.83 S
4 9 Q
(The) 201.6 173 T
1 F
(Client Library Refer) 217.82 173 T
(ence Manual) 290.89 173 T
4 F
( contains a general discussion of) 337.56 173 T
0 F
-0.42 (XDPSCreateSimpleContext) 201.6 161 P
4 F
-0.38 (, but does not discuss the details that are) 316.96 161 P
-0.38 (relevant to X. These) 460.37 161 P
(details are covered here.) 201.6 149 T
(A context is created on the speci\336ed) 201.6 125 T
6 F
0.36 (Display) 334.14 125 S
4 F
( and is associated with a) 366.12 125 T
6 F
0.36 (Drawable) 455.48 125 S
4 F
( and) 496.31 125 T
6 F
0.36 (GC) 513.78 125 S
4 F
-0.13 (on that) 201.6 113 P
6 F
-0.17 0.36 (Display) 228.3 113 B
4 F
-0.13 (. The context uses the following \336elds in the) 259.69 113 P
6 F
-0.17 0.36 (GC) 420.26 113 B
4 F
-0.13 ( to render text and graphics) 434.46 113 P
(on the) 201.6 101 T
6 F
0.36 (Drawable) 226.06 101 S
4 F
(:) 266.9 101 T
6 F
0.36 (\245) 201.6 77 S
0.36 (plane_mask) 213.6 77 S
FMENDPAGE
%%EndPage: "11" 12
%%Page: "12" 12
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(12) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
6 9 Q
0 X
0.36 (\245) 201.6 702 S
0.36 (subwindow_mode) 213.6 702 S
0.36 (\245) 201.6 682 S
0.36 (clip_x_origin) 213.6 682 S
0.36 (\245) 201.6 662 S
0.36 (clip_y_origin) 213.6 662 S
0.36 (\245) 201.6 642 S
0.36 (clip_mask) 213.6 642 S
4 F
(If the) 201.6 622 T
6 F
0.36 (Drawable) 223.06 622 S
4 F
( or) 263.89 622 T
6 F
0.36 (GC) 275.88 622 S
4 F
( is not speci\336ed \050that is, passed as) 290.08 622 T
6 F
0.36 (None) 413.64 622 S
4 F
(\051, the context will execute) 436.56 622 T
(programs correctly but will not render any text or graphics \050it renders to the null device\051. A) 201.6 610 T
(valid) 201.6 598 T
6 F
0.36 (Drawable) 221.82 598 S
4 F
( and) 262.65 598 T
6 F
0.36 (GC) 280.13 598 S
4 F
( may be associated with such a context at a later time using the) 294.33 598 T
0 F
(setXgcdrawable) 201.6 586 T
4 F
( operator) 270.03 586 T
(,) 301.86 586 T
(documented in section 7, \322X-Speci\336c Custom PostScript) 306.36 586 T
(Operators.\323) 201.6 574 T
-0.28 (The ar) 201.6 550 P
-0.28 (guments) 224.37 550 P
6 F
-0.35 0.36 (x) 256.8 550 B
4 F
-0.28 ( and) 261.65 550 P
6 F
-0.35 0.36 (y) 278.58 550 B
4 F
-0.28 ( are of) 283.43 550 P
-0.28 (fsets that specify where the device space origin is relative to the) 305.67 550 P
(window origin. T) 201.6 538 T
(o place the device space origin \050and thus the user space origin\051 in the) 263.63 538 T
(standard location, pass zero for) 201.6 526 T
6 F
0.36 (x) 315.91 526 S
4 F
( and the height of the window in pixels for) 320.77 526 T
6 F
0.36 (y) 476.03 526 S
4 F
(. See the) 480.3 526 T
(discussion of coordinate systems in section 3.3, \322Execution.\323) 201.6 514 T
(The other ar) 201.6 490 T
(guments to) 245.36 490 T
0 F
(XDPSCreateSimpleContext) 287.3 490 T
4 F
( are described fully in the) 402.67 490 T
1 F
(Client) 496.51 490 T
(Library Refer) 201.6 478 T
(ence Manual) 250.45 478 T
4 F
(. T) 297.12 478 T
(o summarize:) 306.47 478 T
6 F
0.36 (textProc) 357.4 478 S
4 F
( is a callback procedure that handles) 393.24 478 T
-0.08 (text output from the context,) 201.6 466 P
6 F
-0.1 0.36 (errorProc) 306.07 466 B
4 F
-0.08 ( is a callback procedure that handles errors reported) 346.76 466 P
-0.11 (by the context, and) 201.6 454 P
6 F
-0.14 0.36 (space) 271.79 454 B
4 F
-0.11 ( is the private VM that the context uses for storage. If the space is) 297.57 454 P
(passed as) 201.6 442 T
6 F
0.36 (NULL) 237.54 442 S
4 F
(, a new space is created.) 261.95 442 T
(If all of the ar) 201.6 418 T
(guments are valid and the context is successfully created in the server) 250.85 418 T
(, a) 500.84 418 T
6 F
0.36 (DPSContext) 201.6 406 S
4 F
( handle is returned. Otherwise,) 254.65 406 T
6 F
0.36 (NULL) 367.21 406 S
4 F
( is returned.) 391.62 406 T
0 F
(XDPSCreateSimpleContext) 201.6 382 T
4 F
( uses the default colormap. A device-speci\336c number of) 316.96 382 T
(grays is reserved in the default colormap, which represents a gray ramp. If the device) 201.6 370 T
-0.04 (supports color) 201.6 358 P
-0.04 (, an RGB color cube is also reserved. If a requested RGB color is found in the) 252.38 358 P
(color cube or gray ramp, the associated pixel value is used. Otherwise, the color is) 201.6 346 T
-0.36 (approximated by dithering pixel values from the colormap to give the best possible rendering) 201.6 334 P
(of the color) 201.6 322 T
(.) 242.54 322 T
0 F
(XDPSCreateSimpleContext) 201.6 298 T
4 F
( may allocate a substantial number of cells in the default) 316.96 298 T
(colormap. For example, a typical allocation for an 8-plane PseudoColor device is 125 cells) 201.6 286 T
(for the color cube, representing a 5x5x5 RGB cube. \050The gray ramp typically uses the \336ve) 201.6 274 T
(grays that form the) 201.6 262 T
(diagonal of the cube.\051) 271.99 262 T
0 F
(XDPSCreateSimpleContext) 352.61 262 T
4 F
( checks the root) 467.97 262 T
(window for the) 201.6 250 T
6 F
0.36 (RGB_DEFAULT_MAP) 258.76 250 S
4 F
( property) 354.05 250 T
(. If the property exists, the color cells it) 386.16 250 T
(speci\336es are used for the context\325) 201.6 238 T
(s color cube. If the property does not exist, color cells are) 321.65 238 T
(allocated and the property is de\336ned. The) 201.6 226 T
(allocated cells are typically treated as \322read-only) 352.86 226 T
(retained\323 so that other DPS/X clients may share the allocated colors.) 201.6 214 T
(The Display PostScript system uses entries from the default X colormap to display colors) 201.6 190 T
(and grey values. Y) 201.6 178 T
(ou can con\336gure this usage. Giving the Display PostScript system more) 268.09 178 T
(colormap entries improves the quality of its rendering, but leaves fewer entries available to) 201.6 166 T
(other applications since the default colormap is shared.) 201.6 154 T
(Resources in your) 201.6 130 T
1 F
(.Xdefaults) 268.74 130 T
4 F
( \336le control the colormap usage. Each resource entry should be) 304.95 130 T
(of the form) 201.6 118 T
FMENDPAGE
%%EndPage: "12" 13
%%Page: "13" 13
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 13) 522.19 29.83 T
78 72 534 708 R
7 X
V
7 F
0 X
-0.17 (DPSColorCube.visualType.depth.color: size) 213.6 702.33 S
4 9 Q
(where) 201.6 678.5 T
6 F
0.36 (visualType) 213.6 654.5 S
4 F
( is one of) 260.15 654.5 T
6 F
0.36 (GrayScale) 295.6 654.5 S
4 F
(,) 340.79 654.5 T
6 F
0.36 (PseudoColor) 345.28 654.5 S
4 F
(, or) 400.83 654.5 T
6 F
0.36 (DirectColor) 415.05 654.5 S
4 F
(.) 463.45 654.5 T
6 F
0.36 (depth) 213.6 630.5 S
4 F
( is 1, 2, 4, 8, 12, or 24 and should be the lar) 237.89 630.5 T
(gest depth equal to or less than the) 393.49 630.5 T
(default depth.) 213.6 618.5 T
6 F
0.36 (color) 213.6 594.5 S
4 F
( is one of the strings \322reds\323, \322greens\323, \322blues\323, or \322grays\323.) 234.88 594.5 T
6 F
0.36 (size) 213.6 570.5 S
4 F
( is the number of values of that color to allocate .) 231.02 570.5 T
(These resources are not used for the static visual types) 201.6 546.5 T
6 F
0.36 (StaticGray) 399.28 546.5 S
4 F
(,) 444.25 546.5 T
6 F
0.36 (StaticColor) 448.74 546.5 S
4 F
(, or) 496.29 546.5 T
6 F
0.36 (TrueColor) 201.6 534.5 S
4 F
(. Specifying 0 for reds directs the Client Library to use only a gray ramp. This) 244.29 534.5 T
-0.3 (speci\336cation is particularly useful for gray-scale systems that incorrectly use) 201.6 522.5 P
6 F
-0.38 0.36 (PseudoColor) 476.15 522.5 B
4 F
(as the default visual.) 201.6 510.5 T
(For example, to con\336gure a 5x5x4 color cube and a 17-element gray ramp for an 8-bit) 201.6 486.5 T
6 F
0.36 (PseudoColor) 201.6 474.5 S
4 F
( screen, specify these resources:) 257.51 474.5 T
7 8.5 Q
-0.17 (DPSColorCube.PseudoColor.8.reds: 5) 213.6 450.83 S
-0.17 (DPSColorCube.PseudoColor.8.greens: 5) 213.6 439.33 S
-0.17 (DPSColorCube.PseudoColor.8.blues: 4) 213.6 427.83 S
-0.17 (DPSColorCube.PseudoColor.8.grays: 17) 213.6 416.33 S
4 9 Q
(These resources use 1) 201.6 392.5 T
(17 colormap entries, 100 for the color cube and 17 for the gray ramp.) 279.88 392.5 T
(For the best rendering results, specify an odd number for the gray ramp.) 201.6 380.5 T
(Resources that are not speci\336ed take these default values:) 201.6 356.5 T
7 8.5 Q
-0.17 (DPSColorCube.GrayScale.4.grays: 9) 213.6 332.83 S
-0.17 (DPSColorCube.GrayScale.8.grays: 17) 213.6 321.33 S
-0.17 (DPSColorCube.PseudoColor.4.reds: 2) 213.6 297.83 S
-0.17 (DPSColorCube.PseudoColor.4.greens: 2) 213.6 286.33 S
-0.17 (DPSColorCube.PseudoColor.4.blues: 2) 213.6 274.83 S
-0.17 (DPSColorCube.PseudoColor.4.grays: 2) 213.6 263.33 S
-0.17 (DPSColorCube.PseudoColor.8.reds: 4) 213.6 251.83 S
-0.17 (DPSColorCube.PseudoColor.8.greens: 4) 213.6 240.33 S
-0.17 (DPSColorCube.PseudoColor.8.blues: 4) 213.6 228.83 S
-0.17 (DPSColorCube.PseudoColor.8.grays: 9) 213.6 217.33 S
-0.17 (DPSColorCube.PseudoColor.12.reds: 6) 213.6 205.83 S
-0.17 (DPSColorCube.PseudoColor.12.greens: 6) 213.6 194.33 S
-0.17 (DPSColorCube.PseudoColor.12.blues: 5) 213.6 182.83 S
-0.17 (DPSColorCube.PseudoColor.12.grays: 17) 213.6 171.33 S
-0.17 (DPSColorCube.DirectColor.12.reds: 6) 213.6 147.83 S
-0.17 (DPSColorCube.DirectColor.12.greens: 6) 213.6 136.33 S
-0.17 (DPSColorCube.DirectColor.12.blues: 6) 213.6 124.83 S
-0.17 (DPSColorCube.DirectColor.12.grays: 6) 213.6 113.33 S
-0.17 (DPSColorCube.DirectColor.24.reds: 7) 213.6 101.83 S
FMENDPAGE
%%EndPage: "13" 14
%%Page: "14" 14
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(14) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
7 F
0 X
-0.17 (DPSColorCube.DirectColor.24.greens: 7) 213.6 702.33 S
-0.17 (DPSColorCube.DirectColor.24.blues: 7) 213.6 690.83 S
-0.17 (DPSColorCube.DirectColor.24.grays: 7) 213.6 679.33 S
4 9 Q
-0.24 (If none of the above defaults apply to the display) 201.6 655.5 P
-0.24 (, the Client Library uses no color cube and a) 374.86 655.5 P
(2-element gray ramp; that is, black and white.) 201.6 643.5 T
(The advantage of using the color) 201.6 619.5 T
(allocation facilities provided by) 321.91 619.5 T
0 F
(XDPSCreateSimpleContext) 201.6 607.5 T
4 F
( is that the application has available a wide range of colors) 316.96 607.5 T
(\050many more than the number of cells\051, each with a reasonable rendering, without having to) 201.6 595.5 T
(provide for the possibility that colormap allocations may fail. The disadvantage is that a) 201.6 583.5 T
(lar) 201.6 571.5 T
(ge number of color cells is allocated from the default colormap.) 210.92 571.5 T
0 10 Q
(Using XDPSCreateContext) 201.6 542.83 T
4 9 Q
(T) 201.6 518.5 T
(o create a context with speci\336c color information, call) 206.46 518.5 T
0 F
(XDPSCreateContext) 402.65 518.5 T
4 F
(:) 488.54 518.5 T
0 F
(XDPSCreateContext) 103.71 474.16 T
7 8.5 Q
-0.17 (DPSContext XDPSCreateContext\050dpy, drawable, gc, x, y, eventmask,) 201.6 474.16 S
-0.17 (grayramp, ccube, actual, textProc, errorProc, space\051) 231.6 463.16 S
-0.17 (Display *dpy;) 213.6 451.83 S
-0.17 (Drawable drawable;) 213.6 440.33 S
-0.17 (GC gc;) 213.6 428.83 S
-0.17 (int x;) 213.6 417.33 S
-0.17 (int y;) 213.6 405.83 S
-0.17 (unsigned int eventmask;) 213.6 394.33 S
-0.17 (XStandardColormap *grayramp;) 213.6 382.83 S
-0.17 (XStandardColormap *ccube;) 213.6 371.33 S
-0.17 (int actual;) 213.6 359.83 S
-0.17 (DPSTextProc textProc;) 213.6 348.33 S
-0.17 (DPSErrorProc errorProc;) 213.6 336.83 S
-0.17 (DPSSpace space;) 213.6 325.33 S
4 9 Q
(The) 201.6 301.5 T
6 F
0.36 (dpy) 217.82 301.5 S
4 F
(,) 232.8 301.5 T
6 F
0.36 (drawable) 237.3 301.5 S
4 F
(,) 276.64 301.5 T
6 F
0.36 (gc) 281.13 301.5 S
4 F
(,) 291.34 301.5 T
6 F
0.36 (x) 295.84 301.5 S
4 F
(,) 300.69 301.5 T
6 F
0.36 (y) 305.18 301.5 S
4 F
(,) 309.45 301.5 T
6 F
0.36 (textProc) 313.95 301.5 S
4 F
(,) 349.79 301.5 T
6 F
0.36 (errorProc) 354.29 301.5 S
4 F
(, and) 394.97 301.5 T
6 F
0.36 (space) 414.69 301.5 S
4 F
( ar) 440.47 301.5 T
(guments for) 449.54 301.5 T
0 F
(XDPSCreateContext) 201.6 289.5 T
4 F
( are the same as for) 287.49 289.5 T
0 F
(XDPSCreateSimpleContext) 359.36 289.5 T
4 F
(. The) 474.73 289.5 T
6 F
0.36 (eventmask) 201.6 277.5 S
4 F
( is currently not implemented and should be passed as zero.) 248.29 277.5 T
(The) 201.6 253.5 T
6 F
0.36 (grayramp) 217.82 253.5 S
4 F
( and) 258.65 253.5 T
6 F
0.36 (ccube) 276.13 253.5 S
4 F
( ar) 301.9 253.5 T
(guments are pointers to) 310.97 253.5 T
6 F
0.36 (XStandardColormap) 397.34 253.5 S
4 F
( data) 484.88 253.5 T
-0.14 (structures \050de\336ned in the) 201.6 241.5 P
1 F
-0.14 (<X1) 292.42 241.5 P
-0.14 (1/Xutil.h>) 307.8 241.5 P
4 F
-0.14 ( header \336le\051. An) 345.08 241.5 P
6 F
-0.17 0.36 (XStandardColormap) 405.19 241.5 B
4 F
-0.14 ( speci\336es a) 492.72 241.5 P
(colormap, a base pixel value, and multipliers and limits for red \050or gray\051, green, and blue) 201.6 229.5 T
(ramps. A valid gray ramp is required;) 201.6 217.5 T
6 F
0.36 (ccube) 338.88 217.5 S
4 F
( is optional \050may be passed as) 364.66 217.5 T
6 F
0.36 (NULL) 474.24 217.5 S
4 F
(\051. If a) 498.65 217.5 T
(color cube is present and is speci\336ed by) 201.6 205.5 T
6 F
0.36 (ccube) 346.87 205.5 S
4 F
(,) 372.65 205.5 T
6 F
0.36 (grayramp) 377.14 205.5 S
4 F
( may use pixel values in the) 417.98 205.5 T
(color cube in order to conserve colormap entries. The X colormap resource speci\336ed in the) 201.6 193.5 T
6 F
0.36 (ccube) 201.6 181.5 S
4 F
( and) 227.38 181.5 T
6 F
0.36 (grayramp) 244.85 181.5 S
4 F
( ar) 285.68 181.5 T
(guments must be identical. The application must ensure that the) 294.75 181.5 T
(speci\336ed colormap is installed\321for example, by using) 201.6 169.5 T
0 F
(XSetW) 400.3 169.5 T
(indowColormap) 428.68 169.5 T
4 F
( to set the) 496.59 169.5 T
(colormap as an attribute of the window) 201.6 157.5 T
(.) 341.8 157.5 T
(The application provides a colormap with a uniform distribution of colors. The colormap) 201.6 133.5 T
(must provide a uniform distribution of grays \050colors where red, green, and blue are equal in) 201.6 121.5 T
(intensity\051, which is described by) 201.6 109.5 T
6 F
0.36 (grayramp) 320.42 109.5 S
4 F
(. However) 361.26 109.5 T
(, the) 398.33 109.5 T
6 F
0.36 (grayramp) 416.05 109.5 S
4 F
( may be as simple as) 456.88 109.5 T
FMENDPAGE
%%EndPage: "14" 15
%%Page: "15" 15
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 15) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(two levels: black and white. The colormap may also contain a uniform distribution of RGB) 201.6 702 T
(colors arranged as a color cube, which is described by) 201.6 690 T
6 F
0.36 (ccube) 398.02 690 S
4 F
(. See X W) 423.8 690 T
(indow System) 460.38 690 T
(reference documents for details about the) 201.6 678 T
6 F
0.36 (XStandardColormap) 352.35 678 S
4 F
( data structure.) 439.88 678 T
(The ar) 201.6 654 T
(gument) 224.64 654 T
6 F
0.36 (actual) 253.85 654 S
4 F
( can be used to conserve colormap entries as well as to display pure) 279.99 654 T
(\050non-dithered\051 colors. If the application has been informed which colors it will use, or if the) 201.6 642 T
(number of colors to be used is relatively few \050fewer than the default allocation that) 201.6 630 T
0 F
(XDPSCreateSimpleContext) 201.6 618 T
4 F
( would use for the device\051, the) 316.96 618 T
6 F
0.36 (actual) 428.28 618 S
4 F
( ar) 454.42 618 T
(gument can be) 463.49 618 T
(used.) 201.6 606 T
6 F
0.36 (actual) 222.57 606 S
4 F
( is a hint about the number of colors the context is going to request. It is) 248.71 606 T
(considered a hint because the server cannot guarantee that the speci\336ed number of colors) 201.6 594 T
(will be available. The server will reserve the number of cells speci\336ed by) 201.6 582 T
6 F
0.36 (actual) 467.17 582 S
4 F
( or the) 493.31 582 T
(number of cells available in the speci\336ed colormap, whichever is smaller) 201.6 570 T
(. As the context) 463.44 570 T
(makes color requests, colormap entries are de\336ned on a \322\336rst come, \336rst served\323 basis. For) 201.6 558 T
-0.15 (example, suppose) 201.6 546 P
6 F
-0.19 0.36 (actual) 267.45 546 B
4 F
-0.15 ( is given the value 3 and there are at least three cells available. The) 293.59 546 P
(\336rst time the context executes the) 201.6 534 T
0 F
(setrgbcolor) 324.41 534 T
4 F
( operator) 373.85 534 T
(, the requested color will be stored) 405.69 534 T
(in the colormap, leaving two more cells reserved by) 201.6 522 T
6 F
0.36 (actual) 390.3 522 S
4 F
(. When the context executes) 416.44 522 T
0 F
(setrgbcolor) 201.6 510 T
4 F
( for a dif) 251.04 510 T
(ferent color) 282.07 510 T
(, the second cell reserved by) 323.39 510 T
6 F
0.36 (actual) 427.46 510 S
4 F
( is used, and so on.) 453.6 510 T
(The colors requested by the) 201.6 498 T
(PostScript language program executed by the context will be) 303.18 498 T
(rendered without dithering.) 201.6 486 T
1 F
(Note:) 169.63 462 T
-0.37 (Supporting) 201.6 462 P
6 F
-0.47 0.36 (actual) 243.43 462 B
1 F
-0.37 ( is an optional part of a Display PostScript system. Some implementations) 269.56 462 P
(ignor) 201.6 450 T
(e) 220.74 450 T
6 F
0.36 (actual) 226.98 450 S
1 F
(, so portable applications should not count on its effects.) 253.12 450 T
4 F
(Consider the characteristics of your application when deciding whether to use) 201.6 426 T
0 F
(XDPSCreateSimpleContext) 201.6 414 T
4 F
(, with its default allocation of colors, or) 316.96 414 T
0 F
(XDPSCreateContext) 201.6 402 T
4 F
(, with) 287.49 402 T
6 F
0.36 (actual) 310.21 402 S
4 F
(. An application may allow the end user to de\336ne a) 336.35 402 T
(variety of colors. Such an application\321a graphics editor) 201.6 390 T
(, for example\321could use) 404.42 390 T
0 F
(XDPSCreateSimpleContext) 201.6 378 T
4 F
(.) 316.96 378 T
(On the other hand, an application that uses only a few colors\321the foreground and) 201.6 354 T
-0.37 (background colors of a performance meter) 201.6 342 P
-0.37 (, for example\321could use) 352.37 342 P
0 F
-0.41 (XDPSCreateContext) 443.98 342 P
4 F
-0.37 (,) 529.88 342 P
-0.16 (specify a small color cube, and set) 201.6 330 P
6 F
-0.21 0.36 (actual) 326.25 330 B
4 F
-0.16 ( to the number of colors used. Since) 352.39 330 P
6 F
-0.21 0.36 (actual) 482.63 330 B
4 F
-0.16 ( is just) 508.77 330 P
(a hint, the small cube is necessary as a fallback strategy; it ensures that the application will) 201.6 318 T
(display correctly regardless of the environment.) 201.6 306 T
(If all the ar) 201.6 282 T
(guments are valid and the context is successfully created in the server) 241.12 282 T
(, a) 491.1 282 T
6 F
0.36 (DPSContext) 201.6 270 S
4 F
( handle is returned. Otherwise,) 254.65 270 T
6 F
0.36 (NULL) 367.21 270 S
4 F
( is returned.) 391.62 270 T
0 10 Q
(3.3) 175.71 241.33 T
(Execution) 201.6 241.33 T
4 9 Q
(This section discusses the following DPS/X issues: coordinate systems, rendering, clipping,) 201.6 217 T
(repainting, resizing a window) 201.6 205 T
(, user object indices, and errors.) 307.85 205 T
0 10 Q
(Coordinate Systems) 201.6 176.33 T
4 9 Q
(The application must specify user space coordinates when communicating with the) 201.6 152 T
(PostScript interpreter and X coordinates when communicating with other parts of the X) 201.6 140 T
-0.01 (W) 201.6 128 P
-0.01 (indow System. Therefore coordinate conversions may be necessary) 209.73 128 P
-0.01 (. This section explains:) 451.16 128 P
(\245) 201.6 104 T
(How to specify the device space origin for the window at context creation time.) 213.6 104 T
(\245) 201.6 84 T
(How to convert user space coordinates to X coordinates.) 213.6 84 T
FMENDPAGE
%%EndPage: "15" 16
%%Page: "16" 16
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(16) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(\245) 201.6 702 T
(How to convert X coordinates to user space coordinates.) 213.6 702 T
(The) 201.6 682 T
1 F
(PostScript Language Refer) 217.82 682 T
(ence Manual, Second Edition) 314.85 682 T
4 F
(, describes the coordinate) 420.69 682 T
(system used by the PostScript imaging model. T) 201.6 670 T
(o summarize: coordinates are speci\336ed in a) 374.73 670 T
(user) 201.6 658 T
(-de\336ned space and are automatically converted to the output device space. The default) 216.39 658 T
(user space unit is 1/72 of an inch. The default origin is in the lower left corner of the page,) 201.6 646 T
(with) 201.6 634 T
1 F
(x) 219.83 634 T
4 F
( increasing to the right and) 223.82 634 T
1 F
(y) 322.17 634 T
4 F
( increasing to the top \050upwards\051.) 326.16 634 T
(Figure 1 shows a linear transformation from user space to device space by means of the) 201.6 610 T
(current transformation matrix \050CTM\051. Note that this) 201.6 598 T
(transformation is one-way only) 390.81 598 T
(.) 502.8 598 T
0 8 Q
(Figure 1) 201.6 574.33 T
1 8.5 Q
(User space and device space) 237.15 574.33 T
4 9 Q
-0.16 (In PostScript language terminology) 201.6 331.5 P
-0.16 (, the window is the output device. In DPS/X, the window) 328.09 331.5 P
-0.03 (is treated as a page, with the conventional location of the origin in the lower left corner) 201.6 319.5 P
-0.03 (. The) 513.35 319.5 P
(device space is equivalent to the X) 201.6 307.5 T
(coordinate system for the window) 328.65 307.5 T
(, except for the) 450.37 307.5 T
(following:) 201.6 295.5 T
(\245) 201.6 271.5 T
(The device space origin is of) 213.6 271.5 T
(fset from the window origin.) 317.02 271.5 T
(\245) 201.6 251.5 T
(Device space is a real-number space, whereas the X coordinate system is an integer) 213.6 251.5 T
(space.) 213.6 239.5 T
(As described in the) 201.6 219.5 T
1 F
(PostScript Language Refer) 272.99 219.5 T
(ence Manual, Second Edition) 370.02 219.5 T
4 F
(, pixel) 475.85 219.5 T
(boundaries fall on integer coordinates in device space. A pixel is a half-open region,) 201.6 207.5 T
(meaning that it includes half its boundary points. For any point \050) 201.6 195.5 T
1 F
(x) 433.27 195.5 T
4 F
(,) 437.26 195.5 T
1 F
(y) 441.75 195.5 T
4 F
(\051 in device space, let) 445.74 195.5 T
1 F
(i) 521.61 195.5 T
4 F
( =) 524.11 195.5 T
(\337oor\050) 201.6 183.5 T
1 F
(x) 221.57 183.5 T
4 F
(\051 and) 225.56 183.5 T
1 F
(j) 246.02 183.5 T
4 F
( = \337oor\050) 248.52 183.5 T
1 F
(y) 278.06 183.5 T
4 F
(\051, where) 282.05 183.5 T
1 F
(x) 313.74 183.5 T
4 F
( and) 317.73 183.5 T
1 F
(y) 335.2 183.5 T
4 F
( are real numbers and) 339.19 183.5 T
1 F
(i) 418.8 183.5 T
4 F
( and) 421.3 183.5 T
1 F
(j) 438.77 183.5 T
4 F
( are integers. The pixel) 441.27 183.5 T
(that contains this point is the one identi\336ed as \050) 201.6 171.5 T
1 F
(i,) 371.11 171.5 T
(j) 378.1 171.5 T
4 F
(\051, which is equivalent to the X coordinate) 380.6 171.5 T
(for that pixel.) 201.6 159.5 T
(T) 201.6 135.5 T
(o convert user space coordinates to X coordinates:) 206.46 135.5 T
201.6 360.5 486.6 564.5 C
0 -162 4 3 168 200.97 194.22 216.28 366.11 FMBEGINEPSF
%%BeginDocument: /user/palkovic/work/source/ICS/DEC_Xclient/x.01.ai
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (Tech Pubs #13) (Adobe Systems Incorporated)
%%Title: (XSupp.01)
%%CreationDate: (10/16/91) (2:08 PM)
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Helvetica-Oblique
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: -162 4 3 168
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: -64 90 -64 90
%AI3_TileBox: -352 -270 200 460
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Oblique
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
0 O
0.7 g
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
-104.5 82 m
-33.5 82 l
-33.5 85 l
-23.25 79 l
-33.25 73 l
-33.25 76 l
-98.5 76 l
-98.5 34.75 l
-95.5 34.75 l
-101.5 25.25 l
-107.5 34.5 l
-104.5 34.5 l
-104.5 82 l
f
1.95 4.5 m
1.95 167.5 L
-160.2 167.5 L
-160.2 4.5 L
1.95 4.5 L
n
0 R
0 G
0.3 w
-97.7406 82.3794 m
-89.1551 89.7729 l
S
u
0 O
0 g
0.5 w
-99.1654 81.2547 m
-95.9667 82.3795 L
-97.2924 84.0822 L
-99.1654 81.2547 L
f
U
0 R
0 G
-101.5 151 m
-101.5 12.5 l
S
-150 79 m
-12 79 l
S
0 To
1 0 0 1 -101.5 154.5 0 Tp
TP
-2 0 Td
0 Tr
0 O
0 g
1 w
/_Helvetica-Oblique 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
8 0 Tl
0 Tc
0 Tw
(y\r) Tx 
TO
u
-101.5 77.2322 m
-100.5237 77.2322 -99.7322 78.0237 -99.7322 79 c
-99.7322 79.9763 -100.5237 80.7678 -101.5 80.7678 c
-102.4763 80.7678 -103.2678 79.9763 -103.2678 79 c
-103.2678 78.0237 -102.4763 77.2322 -101.5 77.2322 c
f
-101.5 79 m
F
U
u
-31.77 77.11 m
-26.7299 79 L
-31.7698 80.89 L
-31.77 77.11 L
f
U
0 R
0 G
0.3 w [3 2 ]0 d
-101.5 133 m
-139.471 116.6086 -142.5 51.5 -101.5 25 c
S
0 To
1 0 0 1 -91 127.125 0 Tp
TP
0 Tr
0 O
0 g
1 w []0 d
/_Helvetica 8 Tf
0 Ta
(User space\r) Tx 
T*
/_Helvetica-Oblique 8 Tf
(y) Tx 
/_Helvetica 8 Tf
( increases upward\r) Tx 
TO
0 To
1 0 0 1 -91 35.25 0 Tp
TP
0 Tr
(Device space\r) Tx 
T*
/_Helvetica-Oblique 8 Tf
(y) Tx 
/_Helvetica 8 Tf
( increases downward\r) Tx 
TO
0 To
1 0 0 1 -85.8125 91.75 0 Tp
TP
-8.5552 0 Td
0 Tr
/_Helvetica 7 Tf
1 Ta
(origin\r) Tx 
TO
0 To
1 0 0 1 -144.375 116.25 0 Tp
TP
0 Tr
0 Ta
(CTM\r) Tx 
TO
u
-99.61 128.1049 m
-101.5 133.145 L
-103.39 128.1051 L
-99.61 128.1049 L
f
U
0 R
0 G
1.5 w
-101.5 128.875 m
-101.5 79 l
-29.75 79 l
S
0 To
1 0 0 1 -9 76.8125 0 Tp
TP
-2 0 Td
0 Tr
0 O
0 g
1 w
/_Helvetica-Oblique 8 Tf
1 Ta
(x\r) Tx 
TO
u
1 g
0 R
0 G
0.3 w
-122.9261 109.5061 m
-126.7018 105.6696 L
-126.3798 111.0426 L
-122.9261 109.5061 L
b
U
u
-126.4768 51.4758 m
-122.6087 47.7324 L
-123.0616 53.096 L
-126.4768 51.4758 L
b
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
0 0 612 792 C
201.6 360.5 486.6 564.5 R
0.5 H
0 Z
0 X
0 K
N
FMENDPAGE
%%EndPage: "16" 17
%%Page: "17" 17
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 17) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(1.) 201.6 702 T
(Convert the user space coordinates to device space coordinates by computing a linear) 213.6 702 T
(transformation using the current transformation matrix \050CTM\051.) 213.6 690 T
(2.) 201.6 666 T
(Compute the X coordinates by applying an additional translation to the device space) 213.6 666 T
-0.13 (coordinates derived in Step 1 to account for the of) 213.6 654 P
-0.13 (fset of the device space origin from the) 392.26 654 P
(window origin.) 213.6 642 T
(Similarly) 201.6 618 T
(, to convert X coordinates to user space coordinates:) 234.48 618 T
(1.) 201.6 594 T
(T) 213.6 594 T
(ranslate the X coordinates to device space coordinates by applying the of) 218.78 594 T
(fset of the) 480.94 594 T
(device space origin to the X coordinates.) 213.6 582 T
(2.) 201.6 558 T
-0.35 (Convert the device space coordinates to user space coordinates by using the inverse of the) 213.6 558 P
(current transformation matrix.) 213.6 546 T
(See section 5.5, \322Coordinate Conversions,\323 for examples of coordinate conversions.) 201.6 522 T
-0.33 (Figure 2 illustrates how the device space origin is located in the window as an of) 201.6 498 P
-0.33 (fset from the) 486.81 498 P
-0.2 (window origin. The) 201.6 486 P
1 F
-0.2 (x) 274.4 486 P
4 F
-0.2 ( and) 278.39 486 P
1 F
-0.2 (y) 295.47 486 P
4 F
-0.2 ( of) 299.46 486 P
-0.2 (fset values are established at context creation time \050see section) 308.84 486 P
(3.2, \322Creating a Context\323\051; they can be changed by X-speci\336c PostScript operators such as) 201.6 474 T
0 F
(setXoffset) 201.6 462 T
4 F
(.) 245.04 462 T
0 8 Q
(Figure 2) 201.6 438.33 T
1 8.5 Q
(W) 237.15 438.33 T
(indow origin and device space origin) 243.76 438.33 T
4 9 Q
(The device origin is of) 201.6 166.92 T
(fset in order to support the method of scrolling that involves copying) 282.81 166.92 T
-0.01 (areas of the window \050as opposed to shifting a child window under an ancestor\051. Y) 201.6 154.92 P
-0.01 (ou can put) 494.34 154.92 P
(the device space origin anywhere in the window) 201.6 142.92 T
(. Then, as you scroll the contents of the) 374.48 142.92 T
(window) 201.6 130.92 T
(, you can of) 229.97 130.92 T
(fset the origin from its original position to make coordinate conversions) 272.24 130.92 T
(easier) 201.6 118.92 T
(. The default location for the device space origin is in the lower left corner of the) 222.06 118.92 T
(window) 201.6 106.92 T
(.) 229.97 106.92 T
(Coordinate conversions are required under the following conditions:) 201.6 82.92 T
78 72 534 708 C
200.4 195.92 534 419.5 C
0 -163 4 3 170 235.07 199.81 202.19 217.15 FMBEGINEPSF
%%BeginDocument: /user/palkovic/work/source/ICS/DEC_Xclient/x.02.epsi
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: Adobe Illustrator(TM) 3.0
%%For: (Tech Pubs #13) (Adobe Systems Incorporated)
%%Title: (x.02.ai)
%%CreationDate: (10/31/91) (1:01 PM)
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Helvetica-Oblique
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 0
%%BoundingBox: -163 4 3 170
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: -64 90 -64 90
%AI3_TileBox: -352 -270 200 460
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 46 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			Encoding StandardEncoding eq 1 _useNativeEncoding eq and
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
W B
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	2 dict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	Te currentpoint newpath moveto
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def 
/_renderEnd [null null null null /e1 /r1 /a1 /clip] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Oblique
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
-107.2 27.225 m
-107.2 95 l
-52.4301 95 l
S
1 w
1.95 4.5 m
1.95 167.5 L
-160.2 167.5 L
-160.2 4.5 L
1.95 4.5 L
n
0 R
0 G
0.3 w
-103.4406 91.6206 m
-97.8551 86.8521 l
S
u
0 O
0 g
0.5 w
-104.8654 92.7453 m
-101.6667 91.6205 L
-102.9924 89.9178 L
-104.8654 92.7453 L
f
U
0 R
0 G
0.3 w [3 2 ]0 d
-107.2 167.25 m
-107.2 100.5 l
S
-160.25 95 m
-112.575 95 l
S
0 To
1 0 0 1 -107.2 15.725 0 Tp
TP
-18.6689 0 Td
0 Tr
0 O
0 g
1 w []0 d
/_Helvetica-Oblique 7 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
8 0 Tl
0 Tc
0 Tw
(y ) Tx 
/_Helvetica 7 Tf
(increasing\r) Tx 
TO
u
-107.2 93.2322 m
-106.2237 93.2322 -105.4322 94.0237 -105.4322 95 c
-105.4322 95.9763 -106.2237 96.7678 -107.2 96.7678 c
-108.1763 96.7678 -108.9678 95.9763 -108.9678 95 c
-108.9678 94.0237 -108.1763 93.2322 -107.2 93.2322 c
f
-107.2 95 m
F
U
u
-54.4501 96.89 m
-49.41 95 L
-54.4499 93.11 L
-54.4501 96.89 L
f
U
u
-105.31 27.9951 m
-107.2 22.955 L
-109.09 27.9949 L
-105.31 27.9951 L
f
U
u
-160.1875 165.7322 m
-159.2112 165.7322 -158.4197 166.5237 -158.4197 167.5 c
-158.4197 168.4763 -159.2112 169.2678 -160.1875 169.2678 c
-161.1638 169.2678 -161.9553 168.4763 -161.9553 167.5 c
-161.9553 166.5237 -161.1638 165.7322 -160.1875 165.7322 c
f
-160.1875 167.5 m
F
U
u
-114.095 96.89 m
-109.0549 95 L
-114.0948 93.11 L
-114.095 96.89 L
f
U
u
-105.31 101.8951 m
-107.2 96.855 L
-109.09 101.8949 L
-105.31 101.8951 L
f
U
0 To
1 0 0 1 -137.5625 86.875 0 Tp
TP
-11.281 0 Td
0 Tr
/_Helvetica-Oblique 7 Tf
(x) Tx 
/_Helvetica 7 Tf
( offset\r) Tx 
TO
0 To
1 0 0 1 -92.2625 131.125 0 Tp
TP
-11.281 0 Td
0 Tr
/_Helvetica-Oblique 7 Tf
(y) Tx 
/_Helvetica 7 Tf
( offset\r) Tx 
TO
0 To
1 0 0 1 -82.7625 79.25 0 Tp
TP
-20.4232 0 Td
0 Tr
7 0 Tl
(device space\r) Tx 
3.7025 -7 Td
(origin \(0,0\)\r) Tx 
TO
0 To
1 0 0 1 -27.9501 92.9375 0 Tp
TP
-18.6689 0 Td
0 Tr
/_Helvetica-Oblique 7 Tf
8 0 Tl
(x ) Tx 
/_Helvetica 7 Tf
(increasing\r) Tx 
TO
0 R
0 G
0.3 w
-156.3781 164.0581 m
-150.7926 159.2896 l
S
u
0 O
0 g
0.5 w
-157.8029 165.1828 m
-154.6042 164.058 L
-155.9299 162.3553 L
-157.8029 165.1828 L
f
U
0 To
1 0 0 1 -135.7 151.6875 0 Tp
TP
-14.9741 0 Td
0 Tr
1 w
7 0 Tl
(X window\r) Tx 
-1.7466 -7 Td
(origin \(0,0\)\r) Tx 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
205.76 199.82 530.22 413.49 R
0.5 H
0 Z
0 X
0 K
N
78 72 534 708 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "17" 18
%%Page: "18" 18
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(18) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(\245) 201.6 702 T
(If you use the PostScript imaging model to render graphics using coordinates received) 213.6 702 T
-0.12 (from X events, the X coordinates must \336rst be converted into user space coordinates. For) 213.6 690 P
(instance, if you allow the user to select a line of text in a text editor) 213.6 678 T
(, coordinate) 454.87 678 T
(conversions are required.) 213.6 666 T
(\245) 201.6 646 T
-0.18 (If X rendering is to be done in the same window as PostScript language rendering, it may) 213.6 646 P
(be necessary to convert user space coordinates to X coordinates\321for example, call) 213.6 634 T
0 F
(XCopyArea) 213.6 622 T
4 F
( to move a graphical object that was rendered by the PostScript interpreter) 262.04 622 T
(.) 528.12 622 T
(Coordinate conversions are not required under the following conditions:) 201.6 602 T
(\245) 201.6 578 T
(If you use the PostScript imaging model for output only \050rendering text and graphics) 213.6 578 T
(without user interaction in the display area\051, no coordinate conversions are required.) 213.6 566 T
(Simply express coordinates in user space.) 213.6 554 T
(For example, assuming the default user space, the letter) 213.6 534 T
1 F
(A) 415.53 534 T
4 F
( shown at) 421.02 534 T
(coordinate) 457.72 534 T
1 F
(x) 497.9 534 T
4 F
(=72,) 501.89 534 T
1 F
-0.18 (y) 213.6 522 P
4 F
-0.18 (=72 will appear upright 1 inch to the right and 1 inch above the bottom left corner of the) 217.59 522 P
(window) 213.6 510 T
(.) 241.97 510 T
(\245) 201.6 486 T
-0.07 (If the only rendering you do in response to X events is with X primitives, you don\325) 213.6 486 P
-0.07 (t have) 510.17 486 P
(to perform coordinate conversions unless you are altering pixels that were rendered by) 213.6 474 T
(the PostScript interpreter) 213.6 462 T
(.) 302.97 462 T
(Resizing the window may have an ef) 201.6 442 T
(fect on the device space origin, and thus the of) 334.23 442 T
(fsets to) 501.3 442 T
(that origin, depending upon the bit gravity of the window) 201.6 430 T
(. See \322Resizing the W) 407.21 430 T
(indow\323 in) 485.98 430 T
(section 3.3, \322Execution.\323) 201.6 418 T
0 10 Q
(Mixing Display PostScript and X Rendering) 201.6 389.33 T
4 9 Q
(X drawing requests and PostScript language code can be sent to the same drawable. For) 201.6 365 T
(example, X primitives such as) 201.6 353 T
0 F
(XCopyArea) 312.43 353 T
4 F
( can be used to move, copy) 360.88 353 T
(, and change pixels) 457.89 353 T
(that have been painted with PostScript language programs.) 201.6 341 T
-0.05 (Interactive feedback, such as selection highlighting and control points, can be accomplished) 201.6 317 P
(with X drawing requests. For example, control points on a graphics object in a graphics) 201.6 305 T
(editor application can be displayed with X primitives as follows:) 201.6 293 T
(\245) 201.6 269 T
(Copy the pixels that were painted by a PostScript language program to a pixmap with) 213.6 269 T
(several) 213.6 257 T
0 F
(XCopyArea) 241.3 257 T
4 F
( calls. These pixels will temporarily be obscured by the control) 289.74 257 T
(points, so they must be preserved.) 213.6 245 T
(\245) 201.6 225 T
(Call) 213.6 225 T
0 F
(XFillRectangle) 230.83 225 T
4 F
( to paint the control points, which may be grabbed and stretched,) 292.76 225 T
(rotated, moved, and so on.) 213.6 213 T
(Now suppose a control point is moved. Handle a series of subsequent mouse events as) 201.6 193 T
(follows:) 201.6 181 T
(\245) 201.6 157 T
(Copy the pixels underlying the control point back from the pixmap,) 213.6 157 T
(ef) 458.74 157 T
(fectively erasing) 465.56 157 T
(the control point at the original location.) 213.6 145 T
(\245) 201.6 125 T
(Compute the new position of the control point from the mouse event.) 213.6 125 T
(\245) 201.6 105 T
(Copy the pixels at the new location to the pixmap. Call) 213.6 105 T
0 F
(XFillRectangle) 413.81 105 T
4 F
( to display the) 475.74 105 T
(control point at the new location.) 213.6 93 T
FMENDPAGE
%%EndPage: "18" 19
%%Page: "19" 19
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 19) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
-0.29 (Here are some considerations to keep in mind when mixing X and Display PostScript system) 201.6 702 P
(imaging:) 201.6 690 T
(\245) 201.6 666 T
(Their coordinate systems are dif) 213.6 666 T
(ferent. See \322Coordinate Systems\323 in section 3.3,) 329.25 666 T
(\322Execution\323 for more information.) 213.6 654 T
(\245) 201.6 634 T
(PostScript language programs run asynchronously with respect to other X requests. A) 213.6 634 T
(PostScript language rendering request is not guaranteed to be complete before a) 213.6 622 T
(subsequent X request is executed, unless synchronized. See section 4.8,) 213.6 610 T
(\322Synchronization,\323 for more information on synchronization.) 213.6 598 T
(\245) 201.6 578 T
(X tends to be pixel and plane oriented; graphic operations that manipulate pixels and) 213.6 578 T
(planes are necessarily device dependent. The PostScript imaging model deals with) 213.6 566 T
(abstract graphical representations \050paths\051 and abstract colors. The PostScript interpreter) 213.6 554 T
(tries to give the best rendering possible for the device. If device independence is) 213.6 542 T
(important for your) 213.6 530 T
(application, use X primitives sparingly) 282.25 530 T
(, preserving device) 421.21 530 T
(independence as much as possible.) 213.6 518 T
0 10 Q
(Clipping and Repainting) 201.6 489.33 T
4 9 Q
-0.15 (T) 201.6 465 P
-0.15 (ext and graphics rendered with the PostScript interpreter are subject to all of the X clipping) 206.46 465 P
(rules as well as the clipping de\336ned by the PostScript imaging model.) 201.6 453 T
(The default clipping region is the window) 201.6 429 T
(. When clipping other than to the default, the) 351.79 429 T
(following recommendations apply:) 201.6 417 T
(\245) 201.6 393 T
(If you\325re drawing with PostScript language code only) 213.6 393 T
(, use the clipping mechanism) 405.97 393 T
(provided by the PostScript imaging model. This is suf) 213.6 381 T
(\336cient for nearly all applications.) 407.42 381 T
(\245) 201.6 361 T
(If you\325re also using X primitives and want to clip them as well as draw using PostScript) 213.6 361 T
(language code, use the clipping speci\336ed by the X GC.) 213.6 349 T
(Exposure events may be handled with a variety of strategies:) 201.6 329 T
(\245) 201.6 305 T
(Repainting all graphics for the window) 213.6 305 T
(\245) 201.6 285 T
(Repainting all graphics through composite view clip) 213.6 285 T
(\245) 201.6 265 T
(Repainting selected graphics through composite view clip) 213.6 265 T
-0.22 (Repainting the entire window is the simplest strategy to implement and is suitable for simple) 201.6 245 P
(applications. T) 201.6 233 T
(o do so:) 254.39 233 T
(\245) 201.6 209 T
(Ignore exposure events with counts greater than zero.) 213.6 209 T
(\245) 201.6 189 T
-0.15 (For exposure events with counts equal to zero, clear the window and then redisplay all of) 213.6 189 P
-0.3 (the text and graphics objects by executing the PostScript language programs that describe) 213.6 177 P
(them.) 213.6 165 T
-0.12 (Though simple to implement, this strategy makes the window \337ash or \337icker every time it is) 201.6 145 P
(repainted, which can be distracting to the end user) 201.6 133 T
(.) 381.56 133 T
-0.15 (A somewhat more sophisticated strategy involves making a list of the rectangles speci\336ed in) 201.6 109 P
(a series of exposure events until a zero count is detected, as follows:) 201.6 97 T
FMENDPAGE
%%EndPage: "19" 20
%%Page: "20" 20
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(20) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(\245) 201.6 702 T
(Create a view clip \050see the) 213.6 702 T
1 F
(PostScript Language Refer) 310.93 702 T
(ence Manual, Second Edition) 407.96 702 T
4 F
(\051 by) 513.8 702 T
-0.29 (converting the coordinates of the list of exposure) 213.6 690 P
-0.29 (rectangles to user space coordinates and) 389.49 690 P
(executing) 213.6 678 T
0 F
(rectviewclip) 250.79 678 T
4 F
( with this list.) 302.24 678 T
(\245) 201.6 658 T
(Then redisplay all the text and graphics objects by executing the) 213.6 658 T
(PostScript language) 446.98 658 T
(programs that describe them. Only those areas within the view clip will actually be) 213.6 646 T
(repainted.) 213.6 634 T
(This strategy reduces annoying window \337icker) 201.6 614 T
(, but may do more work than is necessary) 369.73 614 T
-0.13 (since programs describing graphics objects that are completely clipped are executed anyway) 201.6 602 P
-0.13 (.) 531.75 602 P
(The most sophisticated technique, perhaps the optimal strategy) 201.6 578 T
(, is similar to the one just) 427.17 578 T
(described:) 201.6 566 T
(\245) 201.6 542 T
(Use a list of rectangles from the exposure events to create a view clip.) 213.6 542 T
(\245) 201.6 522 T
(Then, instead of running all of the PostScript language programs, redraw only those) 213.6 522 T
(graphics objects whose bounding boxes intersect the view clip.) 213.6 510 T
-0.02 (This strategy requires that the application keep track of the bounding boxes and locations of) 201.6 490 P
(each graphical object, but this task is usually necessary anyway) 201.6 478 T
(, particularly for interactive) 429.15 478 T
(applications that allow selection and manipulation of objects. User paths are handy for this) 201.6 466 T
(purpose \050see the) 201.6 454 T
1 F
(PostScript Language Refer) 262.25 454 T
(ence Manual, Second Edition) 359.27 454 T
4 F
(\051, since they are) 465.11 454 T
(compact data structures that contain their own bounding box information. The list of) 201.6 442 T
(rectangles obtained from the exposure events can be enumerated and intersected with the) 201.6 430 T
(bounding box of each user path. Bounding box intersection may still result in some code) 201.6 418 T
(being executed unnecessarily) 201.6 406 T
(, but it is a good compromise between time spent deciding) 306.34 406 T
(which graphical objects to redraw and time spent drawing the objects.) 201.6 394 T
0 10 Q
(Resizing the W) 201.6 365.33 T
(indow) 272.59 365.33 T
4 9 Q
-0.3 (When the window is resized, the X server moves the window bits according to the bit gravity) 201.6 341 P
(of the window) 201.6 329 T
(. If the window is being used for imaging with the PostScript language, the) 252.94 329 T
(origin of the device space is also moved according to the bit gravity of the window; see) 201.6 317 T
(\322Coordinate Systems\323 in section 3.3, \322Execution,\323 for a discussion of coordinate systems.) 201.6 305 T
-0.25 (The result of this automatic movement is that the) 201.6 293 P
1 F
-0.25 (x) 377.88 293 P
4 F
-0.25 ( and) 381.87 293 P
1 F
-0.25 (y) 398.86 293 P
4 F
-0.25 ( of) 402.85 293 P
-0.25 (fsets that were speci\336ed when the) 412.17 293 P
(context was created \050or that were last changed with the) 201.6 281 T
0 F
(setXoffset) 401.27 281 T
4 F
( operator\051 are changed.) 444.71 281 T
(The application may need to keep track of these changes.) 201.6 269 T
(T) 201.6 245 T
(able 2 shows the changes to the) 206.46 245 T
1 F
(x) 322.03 245 T
4 F
( and) 326.02 245 T
1 F
(y) 343.49 245 T
4 F
( of) 347.48 245 T
(fsets for each bit gravity type.) 357.06 245 T
FMENDPAGE
%%EndPage: "20" 21
%%Page: "21" 21
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 21) 522.19 29.83 T
78 72 534 708 R
7 X
V
78 689.99 534 700 C
78 689.99 534 700 R
7 X
0 K
V
210.12 693.66 562.39 693.66 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
0 8 Q
0 X
0 K
(T) 201.6 702.66 T
(able 2) 205.89 702.66 T
1 F
(How bit gravity affects offsets) 233.01 702.66 T
78 668.48 534 678.49 C
78 668.48 534 678.49 R
7 X
0 K
V
210.12 674.58 562.39 674.58 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
6 9 Q
0 X
0 K
(Symbol) 210 681.49 T
(Meaning) 291 681.49 T
4 8 Q
(oldX) 210 661.15 T
(original) 291 661.15 T
1 F
(x) 317.87 661.15 T
4 F
( of) 321.42 661.15 T
(fset) 329.94 661.15 T
(oldY) 210 644.65 T
(original) 291 644.65 T
1 F
(y) 317.87 644.65 T
4 F
( of) 321.42 644.65 T
(fset) 329.94 644.65 T
(x) 210 628.15 T
(new) 291 628.15 T
1 F
(x) 306.32 628.15 T
4 F
( of) 309.87 628.15 T
(fset) 318.39 628.15 T
(y) 210 611.65 T
(new) 291 611.65 T
1 F
(y) 306.32 611.65 T
4 F
( of) 309.87 611.65 T
(fset) 318.39 611.65 T
(wc) 210 595.15 T
(Change in window size along the) 291 595.15 T
1 F
(x) 399.37 595.15 T
4 F
( axis \050width\051) 402.92 595.15 T
78 565.97 534 575.98 C
78 565.97 534 575.98 R
7 X
0 K
V
210.12 568.65 562.39 568.65 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 8 Q
0 X
0 K
(hc) 210 578.65 T
(Change in window size along the) 291 578.65 T
1 F
(y) 399.37 578.65 T
4 F
( axis \050height\051) 402.92 578.65 T
78 531.96 534 541.97 C
78 531.96 534 541.97 R
7 X
0 K
V
210.12 538.06 562.39 538.06 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
6 9 Q
0 X
0 K
(Bit Gravity) 210 544.97 T
(x) 279 544.97 T
(y) 375 544.97 T
4 8 Q
(NorthW) 210 524.63 T
(est) 235.56 524.63 T
(oldX) 279 524.63 T
(oldY) 375 524.63 T
(North) 210 508.13 T
(oldX + wc/2) 279 508.13 T
(oldY) 375 508.13 T
(NorthEast) 210 491.63 T
(oldX + wc) 279 491.63 T
(oldY) 375 491.63 T
(W) 210 475.13 T
(est) 216.91 475.13 T
(oldX) 279 475.13 T
(oldY + hc/2) 375 475.13 T
(Center) 210 458.63 T
(oldX + wc/2) 279 458.63 T
(oldY + wc/2) 375 458.63 T
(East) 210 442.13 T
(oldX + wc) 279 442.13 T
(oldY + hc/2) 375 442.13 T
(SouthW) 210 425.63 T
(est) 235.57 425.63 T
(oldX) 279 425.63 T
(oldY + hc) 375 425.63 T
(South) 210 409.13 T
(oldX + wc/2) 279 409.13 T
(oldY + hc) 375 409.13 T
(SouthEast) 210 392.63 T
(oldX + wc) 279 392.63 T
(oldY + hc) 375 392.63 T
(For) 210 376.13 T
(getGravity) 220.96 376.13 T
1 F
(no change) 279 376.13 T
(no change\321appears as if NorthW) 375 376.13 T
(est) 483.09 376.13 T
78 346.96 534 356.96 C
78 346.96 534 356.96 R
7 X
0 K
V
210.12 349.63 562.39 349.63 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 8 Q
0 X
0 K
(Static) 210 359.63 T
(oldX + wc) 279 359.63 T
(oldY + hc) 375 359.63 T
4 9 Q
(T) 201.6 325.96 T
(o get the current) 206.46 325.96 T
1 F
(x) 267.36 325.96 T
4 F
( and) 271.35 325.96 T
1 F
(y) 288.82 325.96 T
4 F
( of) 292.81 325.96 T
(fsets, use) 302.39 325.96 T
0 F
(currentXoffset) 337.58 325.96 T
4 F
(.) 399 325.96 T
0 10 Q
(User Object Indices) 201.6 297.29 T
4 9 Q
(The Client Library provides a convenient and ef) 201.6 272.96 T
(\336cient way to refer to) 374.41 272.96 T
(PostScript language) 454.03 272.96 T
-0.22 (objects. This section presents one set of utilities available for working with these objects. An) 201.6 260.96 P
(alternate set of utilities is available in the Display PostScript toolkit and documented in) 201.6 248.96 T
(section 4 of the) 201.6 236.96 T
1 F
(Display PostScript T) 259.01 236.96 T
(oolkit for X) 333.09 236.96 T
4 F
(.) 374.03 236.96 T
(Some types of composite or structured objects, such as dictionaries, gstates, and user paths,) 201.6 212.96 T
(are not visible as data outside the PostScript interpreter; that is, they cannot be represented) 201.6 200.96 T
(directly in any encoding of the language, not even in binary object sequence encoding.) 201.6 188.96 T
(Instead, an application must refer to such objects by means of surrogate objects whose) 201.6 176.96 T
(values can be encoded and communicated easily) 201.6 164.96 T
(.) 375.23 164.96 T
-0.11 (The surrogate objects provided by the Client Library are called user objects. A user object is) 201.6 140.96 P
-0.29 (simply an identi\336er \050typically an integer of type) 201.6 128.96 P
6 F
-0.37 0.36 (long int) 373.52 128.96 B
4 F
-0.29 (\051 that represents an actual object \050of) 405 128.96 P
(any type\051 in the interpreter) 201.6 116.96 T
(. T) 296.95 116.96 T
(o de\336ne a new user object, the application must \336rst obtain a) 306.3 116.96 T
(user object index from the Client Library) 201.6 104.96 T
(. The procedure) 348.79 104.96 T
0 F
(DPSNewUserObjectIndex) 407.68 104.96 T
4 F
(returns a new user object index. The Client Library is the sole allocator of new user object) 201.6 92.96 T
FMENDPAGE
%%EndPage: "21" 22
%%Page: "22" 22
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(22) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(indices in order to guarantee that indices are unique. User object indices are dynamic and) 201.6 702 T
(should not be used as arithmetic values \050for example, don\325) 201.6 690 T
(t add 1 to get the next) 411.61 690 T
(available) 491.74 690 T
(index\051. Also, do not store user object indices in a \336le or other long-term storage.) 201.6 678 T
(After obtaining a user object index, the application must associate this index with an actual) 201.6 654 T
-0.19 (object. Y) 201.6 642 P
-0.19 (ou \336rst execute a PostScript language program to create the object, then execute the) 233.46 642 P
0 F
(de\336neuserobject) 201.6 630 T
4 F
( operator) 273.52 630 T
(.) 305.22 630 T
(Once a user object has been de\336ned, the application may call wrapped) 201.6 606 T
(procedures to) 456.43 606 T
(manipulate it. User objects may be passed as input ar) 201.6 594 T
(guments to a wrapped procedure.) 392.14 594 T
(User objects are typically employed under the following circumstances:) 201.6 570 T
(\245) 201.6 546 T
1 F
-0.14 (When graphical objects or other application objects ar) 213.6 546 P
-0.14 (e cr) 410.23 546 P
-0.14 (eated) 423.48 546 P
-0.14 (dynamically) 445.05 546 P
4 F
-0.14 (, such as the) 488.39 546 P
(user path a graphics editor builds as the user draws an illustration.) 213.6 534 T
(\245) 201.6 514 T
1 F
(When a user name should not be employed) 213.6 514 T
4 F
(. A user object is a convenient and ef) 367.61 514 T
(\336cient) 500.48 514 T
(substitute for a dynamically de\336ned user name, which must be passed to a wrap as a) 213.6 502 T
(string.) 213.6 490 T
(See the) 201.6 470 T
1 F
(PostScript Language Refer) 230.05 470 T
(ence Manual, Second Edition) 327.08 470 T
4 F
(, and the) 432.92 470 T
1 F
(pswrap Refer) 465.87 470 T
(ence) 513.72 470 T
(Manual) 201.6 458 T
4 F
( for further discussion of user objects.) 229.56 458 T
(Note that it is the responsibility of the application and any runtime facilities or support) 201.6 434 T
(software \050such as toolkits\051 to keep track of user object de\336nitions. A user object must be) 201.6 422 T
(de\336ned before it is used. Unlike user name indices \050which are de\336ned automatically by the) 201.6 410 T
(Client Library\051, user objects must be de\336ned explicitly) 201.6 398 T
(. T) 397.72 398 T
(o assist in keeping track of user) 407.08 398 T
(object de\336nitions, the last user object index assigned can be read from) 201.6 386 T
6 F
0.36 (DPSLastUserObjectIndex) 201.6 374 S
4 F
(, which should be treated as read-only) 311.91 374 T
(.) 447.85 374 T
(In the following code example, a hypothetical toolkit implements a user interface that) 201.6 350 T
-0.24 (displays icons for \336les and programs. The user interface allows the end user to customize the) 201.6 338 P
(label of the icon by changing the text and to specify the font of the label text. The icon is) 201.6 326 T
(represented as a PostScript language dictionary) 201.6 314 T
(.) 370.99 314 T
7 8.5 Q
-0.17 (defineps New_Icon\050long iconIndex; int x,y; long progIndex;) 213.83 290.33 S
-0.17 (char) 225.11 278.83 S
-0.17 (*font, *text\051) 249.76 278.83 S
-0.17 (% Input Arguments:) 318 267.33 S
-0.17 (% iconIndex) 318 255.83 S
-0.17 (%) 318 244.33 S
-0.17 (user object index) 342 244.33 S
-0.17 (%) 318 232.83 S
-0.17 (provided by application) 342 232.83 S
-0.17 (% x,y coordinates of lower left) 318 221.33 S
-0.17 (%) 318 209.83 S
-0.17 (corner or icon) 342 209.83 S
-0.17 (% progIndex) 318 198.33 S
-0.17 (%) 318 186.83 S
-0.17 (user object index which) 342 186.83 S
-0.17 (%) 318 175.33 S
-0.17 (represents a PostScript) 342 175.33 S
-0.17 (%) 318 163.83 S
-0.17 (language program for drawing) 342 163.83 S
-0.17 (%) 318 152.33 S
-0.17 (the icon) 342 152.33 S
-0.17 (% font) 318 140.83 S
-0.17 (%) 318 129.33 S
-0.17 (string to be used as a font name) 342 129.33 S
-0.17 (% text) 318 117.83 S
-0.17 (%) 318 106.33 S
-0.17 (label for icon) 342 106.33 S
-0.17 (5 dict dup) 234 83.33 S
-0.17 (% Create the icon dict.) 318 83.33 S
FMENDPAGE
%%EndPage: "22" 23
%%Page: "23" 23
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 23) 522.19 29.83 T
78 72 534 708 R
7 X
V
7 F
0 X
-0.17 (iconIndex exch defineuserobject) 234 702.33 S
-0.17 (% Define the user object for the dict.) 306 690.83 S
-0.17 (begin) 234 667.83 S
-0.17 (% Begin the icon dict.) 354 667.83 S
-0.17 (/icon_x x def) 234 656.33 S
-0.17 (% Assign x coordinate.) 354 656.33 S
-0.17 (/icon_y y def) 234 644.83 S
-0.17 (% Assign y coordinate.) 354 644.83 S
-0.17 (/icon_prog) 234 633.33 S
-0.17 (UserObjects progIndex get) 246 621.83 S
-0.17 (% Get and def icon drawing procedure) 318 610.33 S
-0.17 (def) 246 598.83 S
-0.17 (% \050assumes userdict is on dict stack\051) 318 598.83 S
-0.17 (/icon_font /font def) 234 587.33 S
-0.17 (% Assign label font name.) 354 587.33 S
-0.17 (/icon_label \050text\051 def) 234 575.83 S
-0.17 (% Assign label text.) 354 575.83 S
-0.17 (end) 234 564.33 S
-0.17 (% End icon dictionary.) 354 564.33 S
-0.17 (endps) 213.83 552.83 S
-0.17 (/*) 213.83 529.83 S
-0.17 (a wrapped procedure to draw an arbitrary icon */) 234 529.83 S
-0.17 (defineps Draw_Icon\050userobject icon\051) 213.83 506.83 S
-0.17 (%) 354 495.33 S
-0.17 (Input Arguments:) 366 495.33 S
-0.17 (%) 354 483.83 S
-0.17 (icon user object representing) 366 483.83 S
-0.17 (%) 354 472.33 S
-0.17 (an icon dictionary.) 366 472.33 S
-0.17 (%) 354 460.83 S
-0.17 (Note: since we are going) 366 460.83 S
-0.17 (%) 354 449.33 S
-0.17 (to execute the object,) 366 449.33 S
-0.17 (%) 354 437.83 S
-0.17 (we can declare it as) 366 437.83 S
-0.17 (%) 354 426.33 S
-0.17 (userobject to pswrap.) 366 426.33 S
-0.17 (icon begin) 234 403.33 S
-0.17 (% Gets and execs the user object) 330 403.33 S
-0.17 (% which is a dictionary, begins it.) 330 391.83 S
-0.17 (% Note that there is an implicit) 330 380.33 S
-0.17 (% execuserobject here since icon) 330 368.83 S
-0.17 (% was declared 'userobject'.) 330 357.33 S
-0.17 (gsave) 234 334.33 S
-0.17 (icon_x icon_y translate) 234 322.83 S
-0.17 (% Put origin at specified) 354 322.83 S
-0.17 (% coordinates.) 354 311.33 S
-0.17 (gsave) 234 288.33 S
-0.17 (icon_prog) 234 276.83 S
-0.17 (% Draw icon.) 354 276.83 S
-0.17 (grestore) 234 265.33 S
-0.17 (1 setgray) 234 242.33 S
-0.17 (icon_font 10 selectfont) 234 230.83 S
-0.17 (% Scale and set icon label font.) 354 230.83 S
-0.17 (0 0 moveto) 234 219.33 S
-0.17 (icon_label show) 234 207.83 S
-0.17 (% Show label.) 354 207.83 S
-0.17 (grestore) 234 196.33 S
-0.17 (end) 234 184.83 S
-0.17 (endps) 213.83 173.33 S
-0.17 (/*) 213.83 150.33 S
-0.17 (C procedure to create and display a new icon */) 234 150.33 S
-0.17 (void MakeNewIcon\050x, y, prog, label\051) 213.83 127.33 S
-0.17 (int x, y;) 234 115.83 S
-0.17 (long prog;) 234 104.33 S
-0.17 (/* user object defined by application code */) 294 104.33 S
-0.17 (char *label;) 234 92.83 S
-0.17 ({) 213.83 81.33 S
FMENDPAGE
%%EndPage: "23" 24
%%Page: "24" 24
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(24) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
7 F
0 X
-0.17 (/*) 234 702.33 S
-0.17 (get a new user object index */) 246 702.33 S
-0.17 (long icon = DPSNewUserObjectIndex\050) 234 690.83 S
-0.17 (\051;) 406.54 690.83 S
-0.17 (/* client library routine */) 366 679.33 S
-0.17 (char *defaultFontName = GetDefaultFontName\050) 234 667.83 S
-0.17 (\051;) 450.91 667.83 S
-0.17 (/* Icon is a user object index: define icon user object */) 234 644.83 S
-0.17 (NewIcon\050icon, x, y, prog, defaultFontName, label\051;) 234 633.33 S
-0.17 (/* Icon is now a user object: draw it */) 234 621.83 S
-0.17 (DrawIcon\050icon\051;) 234 610.33 S
-0.17 (/*) 234 598.83 S
-0.17 (The following procedure call is not defined) 258 598.83 S
-0.17 (in this example. It saves the user object created for) 258 587.33 S
-0.17 (the new icon so that the application can use the user) 258 575.83 S
-0.17 (object to refer to the icon. */) 258 564.33 S
-0.17 (SaveNewIconObject\050icon\051;) 234 552.83 S
-0.17 (}) 215.99 541.33 S
0 10 Q
(Errors and Error Codes) 201.6 512.83 T
4 9 Q
(T) 201.6 488.5 T
(wo classes of errors can occur while using DPS/X: protocol errors and context errors.) 206.46 488.5 T
1 F
(Pr) 201.6 464.5 T
(otocol err) 210.26 464.5 T
(ors) 245.62 464.5 T
4 F
( are generated when invalid requests are sent to the server) 257.11 464.5 T
(. The result of) 464.26 464.5 T
(receiving a protocol error is that lower) 201.6 452.5 T
(-level facilities in Xlib handle the error and perhaps) 339.69 452.5 T
(print a message, while the higher) 201.6 440.5 T
(-level facilities simply return) 320.23 440.5 T
6 F
0.36 (NULL) 426.57 440.5 S
4 F
( or do nothing. The) 450.98 440.5 T
-0.1 (default protocol error handler prints an error message and causes the application to exit. The) 201.6 428.5 P
(application can substitute its own error handler for protocol errors, but results are unde\336ned) 201.6 416.5 T
(if the handler returns rather than exiting. \050Generally) 201.6 404.5 T
(, an attempt to continue processing after) 387.21 404.5 T
(a protocol error results in incorrect operation of procedures further up in the call stack.\051) 201.6 392.5 T
1 F
(Context err) 201.6 368.5 T
(ors) 242.46 368.5 T
4 F
( can arise whenever a) 253.94 368.5 T
6 F
0.36 (DPSContext) 333.54 368.5 S
4 F
( handle is passed to a DPS/X procedure) 386.59 368.5 T
(or wrap. X-speci\336c error codes are discussed in \322Extended Error Codes\323 in section 6.1,) 201.6 356.5 T
-0.04 (\322Data Structures.\323 See the) 201.6 344.5 P
1 F
-0.04 (Client Library Refer) 298.05 344.5 P
-0.04 (ence Manual) 371.04 344.5 P
4 F
-0.04 ( for a discussion of the standard) 417.68 344.5 P
(Display PostScript error codes.) 201.6 332.5 T
(Because of various delays related to buf) 201.6 308.5 T
(fering and scheduling, a PostScript language error) 345.2 308.5 T
(may be reported long after the C procedure responsible for the error has returned. Consider) 201.6 296.5 T
(the following example:) 201.6 284.5 T
7 8.5 Q
-0.17 (DPSPrintf\050ctxt, "%d %d %s\134n", x, y, operatorName\051;) 213.83 260.83 S
-0.17 (MyWrap1\050ctxt\051;) 213.83 249.33 S
-0.17 (MyWrap2\050ctxt, &result\051;) 213.83 237.83 S
4 9 Q
(Suppose the string pointed to by) 201.6 214 T
6 F
0.36 (operatorName) 319.94 214 S
4 F
( does not contain a valid) 381.69 214 T
(operator and) 471.56 214 T
(therefore generates an) 201.6 202 T
0 F
(unde\336ned) 283.2 202 T
4 F
( error) 326.14 202 T
(. The error may not be received when) 345.35 202 T
0 F
(DPSPrintf) 482.37 202 T
4 F
(returns. It may not be received even when) 201.6 190 T
0 F
(MyW) 354.59 190 T
(rap1) 375.4 190 T
4 F
( returns.) 394.38 190 T
0 F
(MyW) 426.08 190 T
(rap2) 446.89 190 T
4 F
( returns a result,) 465.87 190 T
-0.3 (thereby forcing synchronization, so any errors caused by the call to) 201.6 178 P
0 F
-0.33 (DPSPrint) 441.93 178 P
4 F
-0.3 ( or) 480.88 178 P
0 F
-0.33 (MyW) 492.26 178 P
-0.33 (rap1) 513.07 178 P
4 F
(will \336nally be received.) 201.6 166 T
(If) 201.6 142 T
0 F
(MyW) 209.83 142 T
(rap2) 230.64 142 T
4 F
( is called several statements after) 249.62 142 T
0 F
(MyW) 370.42 142 T
(rap1) 391.23 142 T
4 F
(, it may be dif) 410.21 142 T
(\336cult to \336gure out) 460.22 142 T
(where the error originated. However) 201.6 130 T
(, you can determine where errors are likely to collect,) 332.26 130 T
(such as places where the application and context will be forced into synchronization, and) 201.6 118 T
-0.16 (work backward from there. If you make a list of synchronization points in your code, say) 201.6 106 P
-0.16 (, A,) 518.84 106 P
(B, C, D, and so on, an error received at point C must have been generated by code) 201.6 94 T
(somewhere between B and C. This will help narrow down your debugging search.) 201.6 82 T
FMENDPAGE
%%EndPage: "24" 25
%%Page: "25" 25
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 25) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(A debugging alternative is to have the application check for an error by forcing) 201.6 702 T
-0.35 (synchronization. \050The synchronization should be removed in the \336nal version of the software) 201.6 690 P
(because of its negative impact on performance.\051 For the details of implementing) 201.6 678 T
(synchronization, see section 6.4 in the) 201.6 666 T
1 F
(Client Library Refer) 340.89 666 T
(ence Manual) 413.95 666 T
4 F
(.) 460.63 666 T
3 F
-0.31 (Example:) 201.6 642 P
4 F
-0.31 ( This code has been simpli\336ed to make the principle clear; in an actual application,) 238.55 642 P
(you would probably want to choose a less verbose means of including the debugging) 201.6 630 T
-0.27 (procedures. Every procedure call that sends) 201.6 618 P
-0.27 (PostScript language code is followed by a call to) 358.95 618 P
6 F
0.36 (DEBUG_SYNC) 201.6 606 S
4 F
(. If the macro) 267.12 606 T
6 F
0.36 (DEBUGGING) 317.78 606 S
4 F
( is) 375.95 606 T
6 F
0.36 (true) 386.44 606 S
4 F
(,) 403.37 606 T
6 F
0.36 (DEBUG_SYNC) 407.86 606 S
4 F
( will force the) 473.38 606 T
(context to be synchronized; if there are any errors, they will be reported. If) 201.6 594 T
6 F
0.36 (DEBUGGING) 472.15 594 S
4 F
(is) 201.6 582 T
6 F
0.36 (false) 209.84 582 S
4 F
(,) 230.62 582 T
6 F
0.36 (DEBUG_SYNC) 235.12 582 S
4 F
( will do nothing. Note that although a call to) 300.64 582 T
6 F
0.36 (DEBUG_SYNC) 462.16 582 S
4 F
-0.06 (after the call to) 201.6 570 P
0 F
-0.07 (MyW) 257.75 570 P
-0.07 (rap2) 278.56 570 P
4 F
-0.06 ( would be harmless, it is not needed because) 297.54 570 P
0 F
-0.07 (MyW) 458.71 570 P
-0.07 (rap2) 479.52 570 P
4 F
-0.06 ( returns a) 498.5 570 P
(value and is therefore automatically synchronized.) 201.6 558 T
7 8.5 Q
-0.17 (#ifdef DEBUGGING) 213.83 534.33 S
-0.17 (#define DEBUG_SYNC\050c\051 DPSWaitContext\050\050c\051\051) 213.83 522.83 S
-0.17 (#else) 213.83 511.33 S
-0.17 (#define DEBUG_SYNC\050c\051) 213.83 499.83 S
-0.17 (#endif) 213.83 488.33 S
-0.17 (...) 234 476.83 S
-0.17 (DPSPrintf\050ctxt, "%d %d %s\134n", x, y, operatorName\051;) 213.83 465.33 S
-0.17 (DEBUG_SYNC\050ctxt\051;) 213.83 453.83 S
-0.17 (MyWrap1\050ctxt\051;) 213.83 442.33 S
-0.17 (DEBUG_SYNC\050ctxt\051;) 213.83 430.83 S
-0.17 (MyWrap2\050ctxt, &result\051;) 213.83 419.33 S
0 10 Q
(T) 201.6 390.83 T
(ermination) 206.97 390.83 T
4 9 Q
(When an application exits normally) 201.6 366.5 T
(, all resources allocated on its behalf, including contexts) 329.32 366.5 T
(and spaces, are automatically freed. \050This actually depends upon the \322close-down mode\323 of) 201.6 354.5 T
-0.14 (the server) 201.6 342.5 P
-0.14 (.\051 This is the most typical and convenient method of releasing resources. However) 236.15 342.5 P
-0.14 (,) 529.65 342.5 P
(any storage allocated in shared VM \050such as fonts loaded by the application\051 remains) 201.6 330.5 T
(allocated even after the application exits.) 201.6 318.5 T
0 F
(DPSDestroyContext) 201.6 294.5 T
4 F
( and) 286.99 294.5 T
0 F
(DPSDestroySpace) 304.46 294.5 T
4 F
( are provided to allow an) 382.88 294.5 T
(application to) 474.73 294.5 T
(release these resources without exiting. This might be needed if, for example, the context) 201.6 282.5 T
(and space must be destroyed and recreated from scratch to recover from a PostScript) 201.6 270.5 T
(language error) 201.6 258.5 T
(. These procedures are described in detail in the) 253.26 258.5 T
1 F
(Client Library Refer) 426.97 258.5 T
(ence) 500.04 258.5 T
(Manual) 201.6 246.5 T
4 F
(. T) 229.56 246.5 T
(o summarize,) 238.92 246.5 T
0 F
(DPSDestroyContext) 289.59 246.5 T
4 F
( destroys the context resource in the server) 374.98 246.5 T
(and the) 201.6 234.5 T
6 F
0.36 (DPSContextRec) 230.05 234.5 S
4 F
( in the client.) 300.16 234.5 T
0 F
(DPSDestroySpace) 349.34 234.5 T
4 F
( destroys the space resource) 427.76 234.5 T
(in the server and the) 201.6 222.5 T
6 F
0.36 (DPSSpaceRec) 276.73 222.5 S
4 F
( in the client as well as all) 340.62 222.5 T
(contexts within the space,) 435.98 222.5 T
(including their) 201.6 210.5 T
6 F
0.36 (DPSContextRec) 256.52 210.5 S
4 F
( records.) 326.63 210.5 T
-0.32 (Note that closing the display\321with) 201.6 186.5 P
0 F
-0.36 (XCloseDisplay) 330.06 186.5 P
4 F
-0.32 (, for example\321destroys all context and) 391.91 186.5 P
(space resources associated with that display) 201.6 174.5 T
(, but does not destroy the corresponding client) 358.51 174.5 T
(data structures \050) 201.6 162.5 T
6 F
0.36 (DPSContextRec) 259 162.5 S
4 F
( or) 329.11 162.5 T
6 F
0.36 (DPSSpaceRec) 341.09 162.5 S
4 F
(\051.) 404.98 162.5 T
0 10 Q
(3.4) 175.71 133.83 T
(Status Events) 201.6 133.83 T
4 9 Q
(At any given time, a context has a speci\336c execution status. Status events are provided for) 201.6 109.5 T
(low level monitoring of context status. Most simple applications won\325) 201.6 97.5 T
(t need this facility) 453.58 97.5 T
(.) 517.65 97.5 T
FMENDPAGE
%%EndPage: "25" 26
%%Page: "26" 26
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(26) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(Status events can be used to perform the following tasks:) 201.6 702 T
(\245) 201.6 678 T
(Sending code, using \337ow control, from the application to a context.) 213.6 678 T
(\245) 201.6 658 T
(Controlling the suspension and resumption of execution.) 213.6 658 T
(\245) 201.6 638 T
(Synchronizing PostScript interpreter execution with X rendering requests.) 213.6 638 T
(\245) 201.6 618 T
(Monitoring a context to determine whether it is runaway) 213.6 618 T
(, \322wedged\323 \050stuck\051, or zombie.) 416.2 618 T
(A status event is generated whenever a context changes from one state to another) 201.6 598 T
(. Status) 492.87 598 T
-0 (events can be masked in the server so that uninteresting events are not sent to the client \050see) 201.6 586 P
0 F
(XDPSSetStatusMask) 201.6 574 T
4 F
(\051. Furthermore, the application will not see any status events unless) 290 574 T
(it registers a status event handler by calling) 201.6 562 T
0 F
(XDPSRegisterStatusProc) 359.36 562 T
4 F
(. The default is to) 467.23 562 T
(have no status events enabled and no status event handler registered.) 201.6 550 T
(The procedure) 201.6 526 T
0 F
(XDPSGetContextStatus) 256 526 T
4 F
( returns the current status of a context \050as a) 356.37 526 T
(synchronous reply to a request, not as an asynchronous event\051. The status of a context may) 201.6 514 T
(be one of the following states:) 201.6 502 T
(\245) 201.6 478 T
6 F
0.36 (PSSTATUSERROR) 213.6 478 S
4 F
(. The context is in a state that is not described by the other four) 298.18 478 T
(status values. For example, a context that has been created but has never been scheduled) 213.6 466 T
(to execute will return) 213.6 454 T
6 F
0.36 (PSSTATUSERROR) 292.47 454 S
4 F
( to) 377.05 454 T
0 F
(XDPSGetContextStatus) 388.54 454 T
4 F
(. No) 488.91 454 T
(asynchronous status event will have this value.) 213.6 442 T
(\245) 201.6 422 T
6 F
0.36 (PSRUNNING) 213.6 422 S
4 F
(. The context has been running, has code to execute, or is capable of) 270.76 422 T
(being run. Fine point: No context is running while the server processes requests or) 213.6 410 T
(generates events, so this value really means that the context is runnable.) 213.6 398 T
(\245) 201.6 378 T
6 F
0.36 (PSNEEDSINPUT) 213.6 378 S
4 F
(. The context is waiting for code to execute, a condition commonly) 287.17 378 T
(known as being \322blocked on input.\323) 213.6 366 T
(\245) 201.6 346 T
6 F
0.36 (PSFROZEN) 213.6 346 S
4 F
(. The execution of the context has been suspended by the) 265.42 346 T
0 F
(clientsync) 472.58 346 T
4 F
(operator) 213.6 334 T
(. A frozen context may be killed with) 243.05 334 T
0 F
(DPSDestroyContext) 379.59 334 T
4 F
(, interrupted with) 464.98 334 T
0 F
(DPSInterruptContext) 213.6 322 T
4 F
(, or) 302.48 322 T
(reactivated with) 316.7 322 T
0 F
(XDPSUnfreezeContext) 376.61 322 T
4 F
(.) 472.48 322 T
(\245) 201.6 302 T
6 F
-0.18 0.36 (PSZOMBIE) 213.6 302 B
4 F
-0.14 (. The context is dead. The resource data allocated for the context still exists) 262.92 302 P
(in the server) 213.6 290 T
(, but the PostScript interpreter no longer recognizes the context.) 257.67 290 T
(Except for) 201.6 270 T
6 F
0.36 (PSSTATUSERROR) 241.53 270 S
4 F
(, these status events can be disabled \050see below\051.) 326.11 270 T
(If an application requires information about one or more types of status events, a handler of) 201.6 246 T
(type) 201.6 234 T
6 F
0.36 (XDPSStatusProc) 219.32 234 S
4 F
( must be de\336ned. T) 292.79 234 T
(wo ar) 361.31 234 T
(guments will be passed to the callback) 381.36 234 T
(procedure: the) 201.6 222 T
6 F
0.36 (DPSContext) 255.51 222 S
4 F
( handle for the context that generated the status event and a) 308.55 222 T
(code specifying the status event type. The) 201.6 210 T
0 F
(XDPSRegisterStatusProc) 354.36 210 T
4 F
( procedure) 462.23 210 T
(associates a status event handler with a particular) 201.6 198 T
6 F
0.36 (DPSContext) 380.81 198 S
4 F
(. Each context may have a) 433.86 198 T
(dif) 201.6 186 T
(ferent handler) 211.42 186 T
(.) 261.09 186 T
(Once a status event handler is established for the context, the application should set the) 201.6 162 T
(status event masks for the context by calling) 201.6 150 T
0 F
(XDPSSetStatusMask) 363.36 150 T
4 F
(. The symbols for the) 451.76 150 T
(mask values are) 201.6 138 T
6 F
0.36 (\245) 201.6 114 S
0.36 (PSRUNNINGMASK) 213.6 114 S
0.36 (\245) 201.6 94 S
0.36 (PSNEEDSINPUTMASK) 213.6 94 S
FMENDPAGE
%%EndPage: "26" 27
%%Page: "27" 27
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 27) 522.19 29.83 T
78 72 534 708 R
7 X
V
6 9 Q
0 X
0.36 (\245) 201.6 702 S
0.36 (PSZOMBIEMASK) 213.6 702 S
0.36 (\245) 201.6 682 S
0.36 (PSFROZENMASK) 213.6 682 S
4 F
-0.05 (A mask is constructed by applying a logical OR of the mask values to the appropriate mask;) 201.6 662 P
(for example,) 201.6 650 T
7 8.5 Q
-0.17 (enableMask = PSRUNNINGMASK | PSNEEDSINPUTMASK;) 213.83 626.33 S
4 9 Q
-0.38 (sets the bits that indicate interest in the) 201.6 602.5 P
6 F
-0.48 0.36 (PSRUNNING) 340.35 602.5 B
4 F
-0.38 ( and) 397.52 602.5 P
6 F
-0.48 0.36 (PSNEEDSINPUT) 414.23 602.5 B
4 F
-0.38 ( status event) 488.46 602.5 P
(types. A 1-bit means interest in that type; a 0-bit means \322no change\323 or \322don\325) 201.6 590.5 T
(t care.\323) 479.75 590.5 T
(The context can handle a given status event type in one of three ways:) 201.6 566.5 T
(\245) 201.6 542.5 T
(If the application wants to be noti\336ed of the event every time it occurs, the event should) 213.6 542.5 T
(be enabled.) 213.6 530.5 T
(\245) 201.6 510.5 T
(If the application wants never to be noti\336ed of the event, the event should be disabled.) 213.6 510.5 T
(\245) 201.6 490.5 T
(If the application wants to be noti\336ed of only the next occurrence of the event, the event) 213.6 490.5 T
(should be set to) 213.6 478.5 T
1 F
(next) 272.02 478.5 T
4 F
(.) 286.99 478.5 T
1 F
(Caution:) 157.64 458.5 T
-0.1 (Because DPS/X executes asynchr) 201.6 458.5 P
-0.1 (onously fr) 321.01 458.5 P
-0.1 (om the application, car) 356.77 458.5 P
-0.1 (eful synchr) 440.02 458.5 P
-0.1 (onization must) 479.27 458.5 P
(take place when r) 201.6 446.5 T
(equesting the next occurr) 264.92 446.5 T
(ence of an event or futur) 355.69 446.5 T
(e occurr) 443.47 446.5 T
(ences of the) 473.33 446.5 T
(event. W) 201.6 434.5 T
(ithout this synchr) 232.05 434.5 T
(onization, the event that the application is looking for may have) 294.14 434.5 T
(alr) 201.6 422.5 T
(eady occurr) 211.76 422.5 T
(ed and been discar) 254.6 422.5 T
(ded.) 322.41 422.5 T
4 F
-0.16 (The application de\336nes the method of handling each status event type by setting bits in three) 201.6 398.5 P
(masks:) 201.6 386.5 T
6 F
0.36 (enableMask) 228.81 386.5 S
4 F
(,) 280.86 386.5 T
6 F
0.36 (disableMask) 285.36 386.5 S
4 F
(, and) 339.26 386.5 T
6 F
0.36 (nextMask) 358.98 386.5 S
4 F
(.) 400.31 386.5 T
(Call) 201.6 362.5 T
0 F
(XDPSSetStatusMask) 218.83 362.5 T
4 F
( to set the masks. Note that a particular bit may be set in only) 307.23 362.5 T
(one mask. Bits set in the) 201.6 350.5 T
6 F
0.36 (nextMask) 291.73 350.5 S
4 F
( enable the events of that type. When the context) 333.06 350.5 T
-0.17 (changes state, an event is generated. If its type is speci\336ed in the) 201.6 338.5 P
6 F
-0.22 0.36 (nextMask) 433.27 338.5 B
4 F
-0.17 (, the application) 474.6 338.5 P
(is noti\336ed of the event and all subsequent events of that type are automatically disabled.) 201.6 326.5 T
3 F
(Example:) 201.6 302.5 T
4 F
( An application currently has) 238.55 302.5 T
6 F
0.36 (PSNEEDSINPUT) 345.13 302.5 S
4 F
( and) 419.36 302.5 T
6 F
0.36 (PSRUNNING) 436.83 302.5 S
4 F
( enabled) 493.99 302.5 T
(and all other types disabled. It now asks to be noti\336ed of every) 201.6 290.5 T
(transition to) 429.25 290.5 T
6 F
0.36 (PSFROZEN) 474.69 290.5 S
4 F
(and) 201.6 278.5 T
6 F
0.36 (PSZOMBIE) 216.82 278.5 S
4 F
( and only the next transition to) 266.15 278.5 T
6 F
0.36 (PSNEEDSINPUT) 378.24 278.5 S
4 F
(. The masks would be) 451.81 278.5 T
(constructed as follows:) 201.6 266.5 T
7 8.5 Q
-0.17 (enableMask = PSFROZENMASK | PSZOMBIEMASK;) 213.83 242.83 S
-0.17 (disableMask = PSRUNNINGMASK;) 213.83 231.33 S
-0.17 (nextMask = PSNEEDSINPUTMASK;) 213.83 219.83 S
-0.17 (XDPSSetStatusMask\050ctxt, enableMask, disableMask, nextMask\051;) 213.83 196.83 S
4 9 Q
-0.25 (Even though the previous setting for) 201.6 173 P
6 F
-0.32 0.36 (PSNEEDSINPUT) 333.39 173 B
4 F
-0.25 ( was enabled,) 407.62 173 P
6 F
-0.32 0.36 (PSNEEDSINPUT) 457.77 173 B
4 F
(need not be disabled in order to change the treatment of this event to \322next only) 201.6 161 T
(.\323) 487.32 161 T
-0.16 (See section 4.8, \322Synchronization,\323 for details on how the) 201.6 137 P
6 F
-0.2 0.36 (PSFROZEN) 410.85 137 B
4 F
-0.16 ( status event can be) 462.66 137 P
(used.) 201.6 125 T
FMENDPAGE
%%EndPage: "27" 28
%%Page: "28" 28
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(28) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
0 10 Q
0 X
(Event Dispatching) 201.6 701.33 T
4 9 Q
-0.1 (The Client Library is responsible for handling events from the DPS/X extension. In addition) 201.6 677 P
(to the status events described in the previous section, the library handles) 201.6 665 T
1 F
(output) 463.45 665 T
4 F
( events that) 486.42 665 T
(send wrap return values and) 201.6 653 T
(PostScript language output back to the application.) 304.68 653 T
(The Client Library usually dispatches events from the DPS/X extension in a wire-to-event) 201.6 629 T
-0.12 (converter \050a procedure that Xlib calls to format event data from the X server\051. The events do) 201.6 617 P
(not appear in the normal X event stream. This can cause problems with certain software) 201.6 605 T
(libraries\321for example, the R4 Xt library\321that assume that) 201.6 593 T
0 F
(XNextEvent) 418.02 593 T
4 F
( will not block if) 467.96 593 T
(its connection has data available to be read. If you use one of these libraries and the library) 201.6 581 T
(calls) 201.6 569 T
0 F
(XNextEvent) 220.32 569 T
4 F
(, that call does not return until there is an actual X event to dispatch.) 270.26 569 T
(Since the events the DPS/X extension sends do not appear on the normal X event stream,) 201.6 557 T
(your application may hang until the user does something to generate an event.) 201.6 545 T
-0.09 (Further) 201.6 521 P
-0.09 (, event handlers that are invoked using this internal dispatching scheme \050described in) 227.7 521 P
(the previous paragraph\051 cannot call X or Display) 201.6 509 T
(PostScript procedures, since Xlib is not) 379.31 509 T
(reentrant at this level. In that case, the event handler must either queue a task to be done) 201.6 497 T
(outside the handler or must set a \337ag. The resulting program logic is often complex.) 201.6 485 T
(An alternative to internal event dispatching is pass-through event dispatching. Here, the) 201.6 461 T
(Client Library causes the events to appear in the normal X event stream. The application is) 201.6 449 T
(then responsible for dispatching the events by calling) 201.6 437 T
0 F
(XDPSDispatchEvent) 395.31 437 T
4 F
(.) 482.2 437 T
(T) 201.6 413 T
(o change or query how the Client Library delivers events, an application can call) 206.46 413 T
0 F
(XDPSSetEventDelivery) 201.6 401 T
4 F
(.) 298.92 401 T
0 F
(XDPSSetEventDelivery) 303.41 401 T
4 F
( allows an application to choose) 401.31 401 T
(between the default, internal event dispatching, and pass-through event dispatching.) 201.6 389 T
(Applications that use pass-through event delivery can call) 201.6 365 T
0 F
(XDPSIsDPSEvent) 411.77 365 T
4 F
(,) 486.69 365 T
0 F
(XDPSIsStatusEvent) 201.6 353 T
4 F
(, and) 285.51 353 T
0 F
(XDPSIsOutputEvent) 305.23 353 T
4 F
( to) 391.12 353 T
(identify events from the DPS/X) 402.6 353 T
(extension. Alternatively) 201.6 341 T
(, they can pass all events to) 287.39 341 T
0 F
(XDPSDispatchEvent) 387.73 341 T
4 F
( and let) 474.63 341 T
0 F
(XDPSDispatchEvent) 201.6 329 T
4 F
(identify the extension events.) 290.75 329 T
(Pass-through event dispatching is strongly recommended for the following types of) 201.6 305 T
(applications:) 201.6 293 T
(\245) 201.6 269 T
(applications that use the X T) 213.6 269 T
(oolkit \050Including OSF/Motif applications\051.) 316.07 269 T
(\245) 201.6 249 T
(applications that handle status events.) 213.6 249 T
(\245) 201.6 229 T
-0.22 (applications that handle text messages from the DPS/X extension by displaying them in a) 213.6 229 P
(window) 213.6 217 T
(.) 241.97 217 T
(When using pass-through event delivery) 201.6 197 T
(, you) 346.29 197 T
1 F
(must) 366.51 197 T
4 F
( pass all output events to) 383.49 197 T
0 F
(XDPSDispatchEvent) 201.6 185 T
4 F
(. Status events may be passed to) 288.5 185 T
0 F
(XDPSDispatchEvent) 406.33 185 T
4 F
(, or they) 493.22 185 T
-0.28 (may be handled in place.) 201.6 173 P
0 F
-0.31 (XDPSDispatchEvent) 292.07 173 P
4 F
-0.28 ( passes any status events to the status event) 378.97 173 P
(handler for the event\325) 201.6 161 T
(s context. If the application wants to handle events in place, it can call) 278.72 161 T
0 F
(XDPSIsStatusEvent) 201.6 149 T
4 F
(, which) 285.51 149 T
(identi\336es an event as a status event and extracts the status) 314.21 149 T
(information from it. The application can then process the information directly) 201.6 137 T
(.) 480.34 137 T
(Applications that use pass-through event delivery must not use) 201.6 113 T
0 F
(XtAppProcessEvent) 429.51 113 T
4 F
( to) 515.41 113 T
(handle X events;) 201.6 101 T
0 F
(XtAppProcessEvent) 264.25 101 T
4 F
( ignores the extension events. It is safe to call) 350.15 101 T
0 F
(XtAppProcessEvent) 201.6 89 T
4 F
( with a mask of) 287.5 89 T
6 F
0.36 (XtIMTimer) 345.17 89 S
4 F
( or) 389.84 89 T
6 F
0.36 (XtIMAlternateInput) 401.83 89 S
4 F
(, but it is) 482.73 89 T
(unsafe to call it with a mask of) 201.6 77 T
6 F
0.36 (XtIMXEvent) 314.43 77 S
4 F
( or) 365.48 77 T
6 F
0.36 (XtIMAll) 377.46 77 S
4 F
(.) 408.44 77 T
FMENDPAGE
%%EndPage: "28" 29
%%Page: "29" 29
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(3  Basic Facilities) 426.35 29.83 T
( 29) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
-0.19 (Always call) 201.6 702 P
0 F
-0.21 (XDPSDispatchEvent) 246.14 702 P
4 F
-0.19 ( before calling) 333.04 702 P
0 F
-0.21 (XtDispatchEvent) 386.62 702 P
4 F
-0.19 (. In the R4 release of) 458.04 702 P
-0.25 (the X W) 201.6 690 P
-0.25 (indow System, a bug in the implementation of) 231.19 690 P
0 F
-0.28 (XtDispatchEvent) 397.7 690 P
4 F
-0.25 ( may cause a core) 469.12 690 P
(dump when an extension event is passed. The Xt main loop for this case is:) 201.6 678 T
7 8.5 Q
-0.17 (while \0501\051 {) 213.83 654.33 S
-0.17 (XEvent event;) 234 642.83 S
-0.17 (XtAppNextEvent\050app, &event\051;) 234 631.33 S
-1.13 -0.17 (if \050!XDPSDispatchEvent\050&event\051 && !XtDispatchEvent\050&event\051\051 {) 234 619.83 B
-0.17 (/* Handle undispatched event */) 246 608.33 S
-0.17 ( }) 234 596.83 S
-0.17 (}) 213.83 585.33 S
4 9 Q
(The call) 201.6 561.5 T
7 8.5 Q
-0.17 (XDPSIsDPSEvent\050&event\051) 213.83 537.83 S
4 9 Q
(is equivalent to) 201.6 514 T
7 8.5 Q
-0.17 (\050XDPSIsStatusEvent\050&event, NULL, NULL\051 ||) 213.83 490.33 S
-0.17 (XDPSIsOutputEvent \050&event\051\051) 224.39 478.83 S
4 9 Q
(The call) 201.6 455 T
7 8.5 Q
-0.17 (XDPSDispatchEvent\050&event\051) 213.83 431.33 S
4 9 Q
(is equivalent to) 201.6 407.5 T
7 8.5 Q
-0.17 (if \050XDPSIsStatusEvent\050&event, NULL, NULL\051\051 {) 213.83 383.83 S
-0.17 (<Call status event handler>) 246 372.33 S
-0.17 (return True;) 246 360.83 S
-0.17 (} else if \050XDPSIsOutputEvent\050&event\051\051 {) 213.83 349.33 S
-0.17 (<call output event handler>) 246 337.83 S
-0.17 (return True;) 246 326.33 S
-0.17 (} else return False;) 213.83 314.83 S
0 10 Q
(W) 201.6 286.33 T
(rap Considerations) 210.85 286.33 T
4 9 Q
(When an application calls a wrap that returns a value, the Client Library must wait for the) 201.6 262 T
(results. During this wait, the Client Library dispatches any status and output events to the) 201.6 250 T
(appropriate event handler as they arrive, using the current event dispatching mode.) 201.6 238 T
(If pass-through event dispatching is used, status event handlers and text procedures are) 201.6 214 T
(allowed to call wraps that do not return values, Xlib procedures, and Display PostScript) 201.6 202 T
(procedures other than) 201.6 190 T
0 F
(DPSW) 281.71 190 T
(aitContext) 308.34 190 T
4 F
(. They are not allowed to call) 352.28 190 T
0 F
(DPSW) 459.61 190 T
(aitContext) 486.24 190 T
4 F
(or wraps that return a value; if they do, a) 201.6 178 T
6 F
0.36 (dps_err_recursiveWait) 350.11 178 S
4 F
( error can occur) 447.56 178 T
(.) 503.7 178 T
(If a status event handler or text procedure is invoked with internal event dispatching, it may) 201.6 154 T
(not call wraps or any X or Client Library procedures.) 201.6 142 T
(If a) 201.6 118 T
6 F
0.36 (dps_err_recursiveWait) 216.07 118 S
4 F
( error occurs, wraps usually return incorrect values, and) 313.52 118 T
(further errors may be triggered. Applications that handle their own errors should treat) 201.6 106 T
6 F
0.36 (dps_err_recursiveWait) 201.6 94 S
4 F
( as a fatal error) 299.05 94 T
(.) 352.45 94 T
FMENDPAGE
%%EndPage: "29" 30
%%Page: "30" 30
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(30) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
1 9 Q
0 X
(Note:) 169.63 702 T
(T) 201.6 702 T
(o avoid occurr) 205.77 702 T
(ences of) 258.36 702 T
6 F
0.36 (dps_err_recursiveWait) 289.8 702 S
1 F
( err) 387.25 702 T
(ors, status event handlers and text) 400.15 702 T
(pr) 201.6 690 T
(ocedur) 209.26 690 T
(es must not call) 233.88 690 T
8 F
(DPSW) 292.3 690 T
(aitContext) 319.1 690 T
1 F
(or wraps that r) 365.54 690 T
(eturn values.) 419.39 690 T
0 12 Q
(4) 182.93 660 T
(Additional Facilities) 201.6 660 T
4 9 Q
(This section describes advanced features of the Display PostScript extension to the X) 201.6 635 T
(W) 201.6 623 T
(indow System.) 209.73 623 T
0 10 Q
(4.1) 175.71 594.33 T
(Identi\336ers) 201.6 594.33 T
4 9 Q
(DPS/X de\336nes two new server resource types: one for contexts and another for spaces. A) 201.6 570 T
(context or space resource in the server is de\336ned by an X resource ID \050XID\051.) 201.6 558 T
(The client has its own representation of contexts and spaces.) 201.6 534 T
6 F
0.36 (DPSContext) 421 534 S
4 F
( is a handle \050a) 474.05 534 T
(pointer to a pointer\051 to a) 201.6 522 T
6 F
0.36 (DPSContextRec) 290.96 522 S
4 F
( allocated in the client\325) 361.07 522 T
(s memory) 442.94 522 T
(.) 478.06 522 T
6 F
0.36 (DPSSpace) 482.55 522 S
4 F
(is a handle to a) 201.6 510 T
6 F
0.36 (DPSSpaceRec) 257.76 510 S
4 F
( allocated in the client\325) 321.66 510 T
(s memory) 403.53 510 T
(.) 438.65 510 T
(Applications need not use X resource IDs to refer to contexts or spaces. Instead, they can) 201.6 486 T
(pass the appropriate handle to Client Library procedures.) 201.6 474 T
-0.08 (However) 201.6 450 P
-0.08 (, if the resource ID of a context or space is required, there are) 234.18 450 P
-0.08 (routines available for) 455.63 450 P
(translating back and forth between handles and IDs.) 201.6 438 T
(\245) 201.6 414 T
0 F
(XDPSXIDFromContext) 213.6 414 T
4 F
( returns an X resource ID for a given) 308.98 414 T
6 F
0.36 (DPSContext) 443.49 414 S
4 F
( handle.) 496.54 414 T
(\245) 201.6 394 T
0 F
(XDPSXIDFromSpace) 213.6 394 T
4 F
( returns an X resource ID for a given) 302 394 T
6 F
0.36 (DPSSpace) 436.52 394 S
4 F
( handle.) 483.35 394 T
(\245) 201.6 374 T
0 F
(XDPSContextFromXID) 213.6 374 T
4 F
( returns a) 308.98 374 T
6 F
0.36 (DPSContext) 344.66 374 S
4 F
( handle, given its X resource ID.) 397.71 374 T
(\245) 201.6 354 T
0 F
(XDPSSpaceFromXID) 213.6 354 T
4 F
( returns a) 302 354 T
6 F
0.36 (DPSSpace) 337.69 354 S
4 F
( handle, given its X resource ID.) 384.52 354 T
(The PostScript interpreter uses a unique integer) 201.6 334 T
(, the) 371.98 334 T
1 F
(context identi\336er) 389.7 334 T
4 F
(, to identify a context.) 449.99 334 T
-0.29 (The context identi\336er is de\336ned by the PostScript language and is completely independent of) 201.6 322 P
(X resource IDs. The) 201.6 310 T
0 F
(currentcontext) 276.72 310 T
4 F
( operator returns the context identi\336er for the current) 339.64 310 T
(PostScript context.) 201.6 298 T
1 F
(Note:) 169.63 274 T
-0.27 (A context cr) 201.6 274 P
-0.27 (eated by an existing context with the) 244.16 274 P
8 F
-0.3 (fork) 375.35 274 P
1 F
-0.27 ( operator has no) 392.33 274 P
-0.27 (identity other than the) 453.18 274 P
-0.29 (context identi\336er r) 201.6 262 P
-0.29 (eturned by the) 267.09 262 P
8 F
-0.32 (fork) 319.89 262 P
1 F
-0.29 ( operator; the forked context has neither an X r) 336.86 262 P
-0.29 (esour) 504.42 262 P
-0.29 (ce) 524.06 262 P
-0.3 (ID nor a) 201.6 250 P
6 F
-0.38 0.36 (DPSContext) 233.91 250 B
1 F
-0.3 ( handle. See section 4.5, \322Forked Contexts\323 for mor) 286.96 250 P
-0.3 (e information on) 472.72 250 P
(forked contexts.) 201.6 238 T
4 F
(T) 201.6 214 T
(o get the) 206.46 214 T
6 F
0.36 (DPSContext) 239.66 214 S
4 F
( handle associated with a particular context identi\336er) 292.71 214 T
(, call) 482.3 214 T
0 F
-0.07 (XDPSFindContext) 201.6 202 P
4 F
-0.06 (. If the client knows about the speci\336ed context, a valid) 278.5 202 P
6 F
-0.08 0.36 (DPSContext) 478.77 202 B
4 F
(handle is returned; otherwise) 201.6 190 T
6 F
0.36 (NULL) 307.93 190 S
4 F
( is returned.) 332.34 190 T
-0.2 (There is no direct translation between the PostScript context identi\336er and the X resource ID.) 201.6 166 P
-0.06 (If a PostScript context terminates \050either by request or as the result of an error\051, the resource) 201.6 142 P
(allocated for it lingers in the server) 201.6 130 T
(. The X resource ID for the context is still valid, but the) 326.9 130 T
(context identi\336er is not. Such a context is called a zombie. See section 4.2, \322Zombie) 201.6 118 T
(Contexts,\323 for more information.) 201.6 106 T
FMENDPAGE
%%EndPage: "30" 31
%%Page: "31" 31
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(4  Additional Facilities) 409.81 29.83 T
( 31) 522.19 29.83 T
78 72 534 708 R
7 X
V
0 10 Q
0 X
(4.2) 175.71 701.33 T
(Zombie Contexts) 201.6 701.33 T
4 9 Q
(A context can die in a number of ways, most commonly as the result of a PostScript) 201.6 677 T
(language error) 201.6 665 T
(, such as operand stack under\337ow or use of an) 253.4 665 T
(unde\336ned name.) 421.37 665 T
(If a context is killed, or dies from an error) 201.6 641 T
(, its server resource lingers. An X server resource) 352 641 T
(that represents a terminated context is known as a) 201.6 629 T
1 F
(zombie context) 382.56 629 T
4 F
(. Requests made to a) 436.23 629 T
-0.33 (zombie context will fail. The resource associated with a zombie context can be freed with the) 201.6 617 P
0 F
(DPSDestroyContext) 201.6 605 T
4 F
( procedure. Alternatively) 286.99 605 T
(, the resources will be freed when the) 376.5 605 T
6 F
0.36 (Display) 201.6 593 S
4 F
( is closed, typically at application exit.) 233.58 593 T
-0.26 (Any request made to a zombie context will generate a status event of type) 201.6 569 P
6 F
-0.34 0.36 (PSZOMBIE) 465.48 569 B
4 F
-0.26 (. See) 514.81 569 P
(section 3.4, \322Status Events,\323 for more information.) 201.6 557 T
0 10 Q
(4.3) 175.71 528.33 T
(Buffers) 201.6 528.33 T
4 9 Q
(As discussed in the) 201.6 504 T
1 F
(Client Library Refer) 273 504 T
(ence Manual) 346.06 504 T
4 F
(, buf) 392.74 504 T
(fering is often used to enhance) 409.05 504 T
(throughput. For the most part, an application need not be concerned with buf) 201.6 492 T
(fering of) 477.51 492 T
(requests to a context or output from a context. However) 201.6 480 T
(, facilities are provided to \337ush) 401.92 480 T
(buf) 201.6 468 T
(fers if needed.) 213.42 468 T
(All DPS/X requests sent to the server are buf) 201.6 444 T
(fered by Xlib, like any other X requests.) 363.18 444 T
0 F
(DPSFlushContext) 201.6 432 T
4 F
( will \337ush any code or data pending for a context, as well as any X) 277.5 432 T
(requests that have been buf) 201.6 420 T
(fered. For portability and performance enhancement, use) 299.27 420 T
0 F
-0.25 (DPSFlushContext) 201.6 408 P
4 F
-0.22 ( rather than) 277.5 408 P
0 F
-0.25 (XFlush) 320.01 408 P
4 F
-0.22 ( if the application has sent code or data to a context) 349.97 408 P
(since the last \337ush.) 201.6 396 T
(Streams created by the PostScript interpreter are buf) 201.6 372 T
(fered, including the input and output) 389.38 372 T
(streams associated with a PostScript execution context. Buf) 201.6 360 T
(fers are automatically \337ushed as) 415.62 360 T
-0.31 (needed. The automatic \337ushing is usually suf) 201.6 348 P
-0.31 (\336cient. However) 362.07 348 P
-0.31 (, should the application need to) 421.3 348 P
(\337ush output from a context, the) 201.6 336 T
0 F
(\337ush) 316.68 336 T
4 F
( operator can be used. Note that wrapped procedures) 338.15 336 T
(that return results include a) 201.6 324 T
0 F
(\337ush) 301.69 324 T
4 F
( operator at the end of the wrap code.) 323.16 324 T
0 10 Q
(4.4) 175.71 295.33 T
(Encodings) 201.6 295.33 T
4 9 Q
(The) 201.6 271 T
1 F
(Client Library Refer) 217.82 271 T
(ence Manual) 290.89 271 T
4 F
( discusses the general concept of encodings and) 337.56 271 T
(conversions. A wrapped procedure always generates a binary object sequence, which is) 201.6 259 T
(passed to the context for further processing.) 201.6 247 T
(T) 361.34 247 T
(ypically) 366.2 247 T
(, the binary object sequence is simply) 394.58 247 T
(passed to the lowest level of the Client Library to be packaged into a request, without any) 201.6 235 T
(change to its contents. However) 201.6 223 T
(, by setting the encoding parameters of the) 316.31 223 T
6 F
0.36 (DPSContextRec) 201.6 211 S
4 F
( with the) 271.71 211 T
0 F
(DPSChangeEncoding) 305.41 211 T
4 F
( procedure, you can convert the) 397.79 211 T
(binary object sequence to some other encoding before it is sent or written.) 201.6 199 T
(DPS/X supports the conversions shown in T) 201.6 175 T
(able 3:) 360.25 175 T
FMENDPAGE
%%EndPage: "31" 32
%%Page: "32" 32
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(32) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
78 689.99 534 700 C
78 689.99 534 700 R
7 X
0 K
V
78 693.98 547.01 693.98 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
0 8 Q
0 X
0 K
(T) 201.6 702.66 T
(able 3) 205.89 702.66 T
1 F
(Encoding conversions) 233.01 702.66 T
78 668.48 534 678.49 C
78 668.48 534 678.49 R
7 X
0 K
V
78 675.3 547.01 675.3 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
6 9 Q
0 X
0 K
(Conversion) 78 681.49 T
(Description) 201.6 681.49 T
1 F
(binary object sequence to ASCII) 78 662.81 T
4 8.5 Q
(This conversion makes a binary object sequence readable by humans. It allows the output of) 201.6 662.81 T
(wrapped procedures to be inspected and analyzed. It is also useful for generating page) 201.6 651.31 T
-0.15 (descriptions to be printed. This is the default setting for text contexts. Execution contexts can also) 201.6 639.81 P
(be made to convert binary object sequences to ASCII, but there is little purpose in doing so.) 201.6 628.31 T
1 9 Q
(binary object sequence to binary-encoded tokens) 78 611.31 T
4 8.5 Q
(Binary-encoded token encoding is the most compact encoding for the) 201.6 599.81 T
(PostScript language. This) 440.01 599.81 T
(conversion is useful for storing code permanently or for exchanging code with another) 201.6 588.31 T
(application. Either a text context or an execution context can perform this conversion, but it is) 201.6 576.81 T
(mainly used for text contexts.) 201.6 565.31 T
1 9 Q
(binary object sequence with user name indices to binary object sequence with user name strings) 78 548.31 T
4 8.5 Q
(This conversion is necessary if the binary object sequence is going to be stored permanently \050for) 201.6 536.81 T
-0.11 (example, on a \336le\051 or if the binary object sequence is to be used by another client or with a shared) 201.6 525.31 P
-0.35 (context \050see section 4.7, \322Sharing Resources\323\051. User name indices are created dynamically and are) 201.6 513.81 P
(unique only within a single \322instance\323 of the Client Library\321for example, in the application\325) 201.6 502.31 T
(s) 518.86 502.31 T
(process address space. In this case, user names must be represented by strings if they are to be) 201.6 490.81 T
(used outside the application\325) 201.6 479.31 T
(s process address space.) 298.63 479.31 T
1 9 Q
(binary-encoded tokens to ASCII) 78 462.31 T
4 8.5 Q
(This conversion allows binary-encoded tokens read from an external data source such as a \336le to) 201.6 462.31 T
-0.1 (be converted to ASCII for human inspection, sent to an interpreter) 201.6 450.81 P
-0.1 (, or stored in a page description) 425.66 450.81 P
-0 (for printing. After the context\325) 201.6 439.31 P
-0 (s encoding has been set using) 304.73 439.31 P
0 F
-0 (DPSChangeEncoding) 407.16 439.31 P
4 F
-0 (, buf) 494.52 439.31 P
-0 (fers of) 509.94 439.31 P
-0.09 (binary-encoded tokens can be read and passed to) 201.6 427.81 P
0 F
-0.1 (DPSW) 368.9 427.81 P
-0.1 (ritePostScript) 394.24 427.81 P
4 F
-0.09 ( for conversion. Either a) 449.97 427.81 P
(text context or an execution context can perform this conversion, but it is used mainly for text) 201.6 416.31 T
78 391.97 534 401.98 C
78 391.97 534 401.98 R
7 X
0 K
V
78 398.79 547.01 398.79 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 8.5 Q
0 X
0 K
(contexts.) 201.6 404.81 T
4 9 Q
(For example, the procedure call below causes a text context to generate binary-encoded) 201.6 371.97 T
(tokens:) 201.6 359.97 T
7 8.5 Q
-0.17 (DPSChangeEncoding\050textContext, dps_encodedTokens,) 213.83 336.31 S
-0.17 (textContext->nameEncoding\051;) 224.39 324.81 S
4 9 Q
(The next example causes an execution context to convert user name indices to user name) 201.6 300.97 T
(strings:) 201.6 288.97 T
7 8.5 Q
-0.17 (DPSChangeEncoding\050context, context->programEncoding,) 213.83 265.31 S
-0.17 (dps_strings\051;) 224.39 253.81 S
0 10 Q
(4.5) 175.71 225.31 T
(Forked Contexts) 201.6 225.31 T
4 9 Q
-0.25 (The PostScript language allows an existing context to create another context by means of the) 201.6 200.97 P
0 F
-0.21 (fork) 201.6 188.97 P
4 F
-0.19 ( operator) 218.58 188.97 P
-0.19 (. However) 250.09 188.97 P
-0.19 (, when a forked context is created, it has no) 286.97 188.97 P
6 F
-0.24 0.36 (DPSContext) 443.33 188.97 B
4 F
-0.19 ( handle or) 496.38 188.97 P
-0.18 (X resource ID associated with it \050see section 4.1, \322Identi\336ers\323\051. This is \336ne if the application) 201.6 176.97 P
-0.24 (does not need to communicate with the forked context. A context that was forked to do some) 201.6 164.97 P
(simple task in the) 201.6 152.97 T
(background may terminate without generating any output. If the) 267.01 152.97 T
(application does need to communicate with a forked context, both a) 201.6 140.97 T
6 F
0.36 (DPSContext) 447.22 140.97 S
4 F
( handle) 500.26 140.97 T
(and an X resource ID must be created for the context.) 201.6 128.97 T
(T) 201.6 104.97 T
(o create a resource ID and) 206.46 104.97 T
6 F
0.36 (DPSContext) 302.78 104.97 S
4 F
( handle for a forked context, call) 355.83 104.97 T
0 F
(DPSContextFromContextID) 201.6 92.97 T
4 F
(:) 318.44 92.97 T
FMENDPAGE
%%EndPage: "32" 33
%%Page: "33" 33
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(4  Additional Facilities) 409.81 29.83 T
( 33) 522.19 29.83 T
78 72 534 708 R
7 X
V
7 F
0 X
-0.17 (DPSContext DPSContextFromContextID\050ctxt, cid, textProc,) 213.83 702.33 S
-0.17 (errorProc\051) 225.11 690.83 S
-0.17 (DPSContext ctxt;) 234 679.33 S
-0.17 (ContextPSID cid;) 234 667.83 S
-0.17 (DPSTextProc textProc;) 234 656.33 S
-0.17 (DPSErrorProc errorProc;) 234 644.83 S
6 9 Q
0.36 (ctxt) 201.6 621 S
4 F
( speci\336es the context that created the forked context. In other words,) 217.02 621 T
6 F
0.36 (ctxt) 465.12 621 S
4 F
( is the context) 480.55 621 T
(that executed the) 201.6 609 T
0 F
(fork) 264.75 609 T
4 F
( operator) 281.72 609 T
(.) 313.42 609 T
6 F
0.36 (cid) 317.92 609 S
4 F
( is a) 330.48 609 T
6 F
0.36 (long int) 347.21 609 S
4 F
( that speci\336es the PostScript context) 379.06 609 T
(identi\336er \050not the X resource ID\051 of the forked context.) 201.6 597 T
6 F
0.36 (textProc) 201.6 573 S
4 F
( and) 237.44 573 T
6 F
0.36 (errorProc) 254.92 573 S
4 F
( are the usual context output handlers. If) 295.61 573 T
6 F
0.36 (textProc) 442.62 573 S
4 F
( is) 478.46 573 T
6 F
0.36 (NULL) 488.95 573 S
4 F
(, the) 513.36 573 T
(text handler from) 201.6 561 T
6 F
0.36 (ctxt) 266.25 561 S
4 F
( is used. If) 281.67 561 T
6 F
0.36 (errorProc) 321.36 561 S
4 F
( is) 362.05 561 T
6 F
0.36 (NULL) 372.54 561 S
4 F
(, the error) 396.95 561 T
(handler from) 434.38 561 T
6 F
0.36 (ctxt) 483.3 561 S
4 F
( is used.) 498.72 561 T
0 F
(DPSContextFromContextID) 201.6 537 T
4 F
( returns a) 318.44 537 T
6 F
0.36 (DPSContext) 354.13 537 S
4 F
( handle if) 407.17 537 T
6 F
0.36 (ctxt) 443.36 537 S
4 F
( and) 458.79 537 T
6 F
0.36 (cid) 476.26 537 S
4 F
( are valid,) 488.83 537 T
(otherwise it returns) 201.6 525 T
6 F
0.36 (NULL) 273.24 525 S
4 F
(.) 297.65 525 T
1 F
(Note:) 169.63 501 T
(Implementation limitations should be kept in mind when using the) 201.6 501 T
8 F
(fork) 440.76 501 T
1 F
(operator) 459.99 501 T
(. A context) 490.45 501 T
-0.27 (can consume a signi\336cant amount of memory) 201.6 489 P
-0.27 (. Furthermor) 362.24 489 P
-0.27 (e, the total number of contexts that) 408.57 489 P
(can be cr) 201.6 477 T
(eated in a server is r) 234.71 477 T
(elatively small\321on the or) 308.51 477 T
(der of 50 to 100.) 400.8 477 T
(Caution:) 157.64 453 T
(When using forked contexts, plan to use) 201.6 453 T
8 F
(DPSContextFromContextID) 346.88 453 T
1 F
( to hook up with) 463.72 453 T
(them for debugging, even if the eventual use of the forked context does not r) 201.6 441 T
(equir) 474.1 441 T
(e that the) 492.74 441 T
(application communicate with it. If a forked context generates a PostScript language err) 201.6 429 T
(or) 520.05 429 T
(but ther) 201.6 417 T
(e is no r) 229.48 417 T
(esour) 258.36 417 T
(ce ID or) 277.99 417 T
6 F
0.36 (DPSContext) 310.19 417 S
1 F
( handle associated with it, the application will) 363.23 417 T
(never see the err) 201.6 405 T
(or) 261.41 405 T
(.) 268.4 405 T
4 F
(Contexts created by) 201.6 381 T
0 F
(fork) 275.23 381 T
4 F
( exist until they are killed or joined \050using the) 292.21 381 T
0 F
(join) 458.47 381 T
4 F
( operator\051. A) 474.45 381 T
(context terminated by the) 201.6 369 T
0 F
(detach) 295.46 369 T
4 F
( operator) 324.42 369 T
(, however) 356.26 369 T
(, goes away as soon as it \336nishes) 391.33 369 T
(executing.) 201.6 357 T
0 10 Q
(4.6) 175.71 328.33 T
(Multiple Servers) 201.6 328.33 T
4 9 Q
(An application may create contexts simultaneously on several display devices, each with its) 201.6 304 T
(own server) 201.6 292 T
(, at the same time. In these cases, the application must process events from each) 240.92 292 T
(server to which it is connected.) 201.6 280 T
(In order to support access to multiple servers, DPS/X procedures take a pointer to) 201.6 256 T
6 F
0.36 (Display) 497.39 256 S
4 F
(records where appropriate.) 201.6 244 T
0 10 Q
(4.7) 175.71 215.33 T
(Sharing Resources) 201.6 215.33 T
4 9 Q
(Execution contexts and spaces can be identi\336ed by their X resource identi\336ers. These) 201.6 191 T
(identi\336ers can be passed to other clients to enable sharing of resources.) 201.6 179 T
1 F
(Caution:) 157.64 155 T
(Ther) 201.6 155 T
(e is no support in the Client Library for maintaining the consistency of shar) 218.24 155 T
(ed) 490.29 155 T
(r) 201.6 143 T
(esour) 204.76 143 T
(ces. In general, applications should not shar) 224.4 143 T
(e r) 384.34 143 T
(esour) 393.74 143 T
(ces because of the complexity of) 413.38 143 T
(managing them.) 201.6 131 T
(If an application needs to shar) 201.6 107 T
(e execution context information with other) 311.36 107 T
(clients, the shar) 466.14 107 T
(ed) 522.97 107 T
(VM facility and the mutual exclusion operators pr) 201.6 95 T
(ovided by the PostScript language \050) 381.26 95 T
8 F
(lock) 509.82 95 T
1 F
(,) 527.8 95 T
8 F
(monitor) 201.6 83 T
1 F
(, and so on\051 may be adequate for that purpose. See the) 234.05 83 T
4 F
( PostScript Language) 430.01 83 T
FMENDPAGE
%%EndPage: "33" 34
%%Page: "34" 34
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(34) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(Reference Manual, Second) 201.6 702 T
(Edition.) 300.93 702 T
1 F
(If these facilities ar) 201.6 678 T
(e not adequate, the pr) 270.92 678 T
(ocedur) 349.22 678 T
(es described in this section can be used.) 373.84 678 T
0 F
(XDPSContextFromSharedID) 201.6 654 T
4 F
( and) 321.45 654 T
0 F
(XDPSSpaceFromSharedID) 338.92 654 T
4 F
( are provided to allow) 451.79 654 T
(a client to communicate with resources created by a dif) 201.6 642 T
(ferent client.) 399.86 642 T
-0.13 (For the most part, a) 201.6 618 P
6 F
-0.16 0.36 (DPSContext) 273.36 618 B
4 F
-0.13 ( handle created for a shared resource can be used like any) 326.4 618 P
(other handle. However) 201.6 606 T
(, there are some restrictions. The following list, though not) 283.35 606 T
(exhaustive, presents some of the issues related to sharing resources:) 201.6 594 T
(\245) 201.6 570 T
(User names in binary encodings of the PostScript language must be sent as strings. This) 213.6 570 T
-0.3 (is because the mapping of user name indices is not guaranteed to be unique across clients.) 213.6 558 P
(The default) 213.6 546 T
6 F
0.36 (DPSNameEncoding) 257.03 546 S
4 F
( of the) 342.34 546 T
6 F
0.36 (DPSContextRec) 367.55 546 S
4 F
( created for a shared) 437.66 546 T
(context is) 213.6 534 T
6 F
0.36 (dps_string) 250.55 534 S
4 F
(. It cannot be changed to) 295.6 534 T
6 F
0.36 (dps_indexed) 386.21 534 S
4 F
(.) 441.12 534 T
(\245) 201.6 514 T
-0.07 (Output from the context, including wrap result values, text, and errors, is sent only to the) 213.6 514 P
(context\325) 213.6 502 T
(s original creator) 242.56 502 T
(, not to any clients sharing the context. Status events, however) 303.1 502 T
(,) 526.65 502 T
(are sent to all clients sharing the context, as speci\336ed by the status event mask \050see) 213.6 490 T
(section 3.4, \322Status Events\323\051.) 213.6 478 T
(\245) 201.6 458 T
(When) 213.6 458 T
0 F
(DPSDestroyContext) 237.31 458 T
4 F
( or) 322.7 458 T
0 F
(DPSDestroySpace) 334.68 458 T
4 F
( is applied to a shared context or) 413.09 458 T
-0.33 (space, only the client-side data structures are destroyed. The execution context, the space,) 213.6 446 P
(and the resources associated with these objects can be destroyed only by the creator) 213.6 434 T
(.) 513.86 434 T
(\245) 201.6 414 T
(If the creator destroys resources, any reference to a destroyed resource will result in a) 213.6 414 T
(protocol error) 213.6 402 T
(, which is sent to the client sharing the resource.) 262.9 402 T
-0.15 (It is up to the application that allows resource identi\336ers to be shared, and the clients sharing) 201.6 382 P
(those resources, to cooperate and maintain consistency) 201.6 370 T
(.) 397.95 370 T
0 10 Q
(4.8) 175.71 341.33 T
(Synchronization) 201.6 341.33 T
4 9 Q
(As discussed in \322Mixing Display PostScript and X Rendering\323 in section 3.3, \322Execution,\323) 201.6 317 T
-0.14 (X rendering primitives and PostScript language execution may) 201.6 305 P
-0.14 (, in most cases, be intermixed) 425.98 305 P
-0.05 (freely) 201.6 293 P
-0.05 (. However) 221.97 293 P
-0.05 (, in some situations PostScript language execution needs to be synchronized) 258.99 293 P
(with X.) 201.6 281 T
(See the) 201.6 257 T
1 F
(Client Library Refer) 230.05 257 T
(ence Manual) 303.12 257 T
4 F
( for a discussion of the general requirements for) 349.79 257 T
(synchronization. T) 201.6 245 T
(o summarize, you can synchronize either by calling wraps that return) 268.37 245 T
(results or by calling) 201.6 233 T
0 F
(DPSW) 274.99 233 T
(aitContext) 301.62 233 T
4 F
(. Enforced synchronization is expensive and should) 345.56 233 T
(be used only when absolutely) 201.6 221 T
(necessary) 310.19 221 T
(.) 344.54 221 T
1 F
(Note:) 169.63 197 T
(Synchr) 201.6 197 T
(onizing with the Display PostScript extension also synchr) 226.23 197 T
(onizes with the X server;) 432.86 197 T
(ther) 201.6 185 T
(e is no need to call) 215.75 185 T
8 F
(XSync) 285.64 185 T
1 F
( explicitly) 313.12 185 T
(. The r) 347.82 185 T
(everse is not true; calling) 371.2 185 T
8 F
(XSynch) 465.31 185 T
1 F
( does not) 498.27 185 T
(synchr) 201.6 173 T
(onize with the Display PostScript extension.) 225.23 173 T
(Flushing, however) 201.6 149 T
(, works both ways: \337ushing an X connection \337ushes all contexts on that) 267.51 149 T
(connection, and \337ushing a context \337ushes the X connection of that context.) 201.6 137 T
3 F
(Example:) 201.6 113 T
4 F
( Suppose a previewer application displays a page of text and graphics that is) 238.55 113 T
(represented by a PostScript language page description in a \336le. The user interface of the) 201.6 101 T
(application may require the entire page to be imaged to a pixmap before it is realized on the) 201.6 89 T
FMENDPAGE
%%EndPage: "34" 35
%%Page: "35" 35
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(4  Additional Facilities) 409.81 29.83 T
( 35) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(physical display) 201.6 702 T
(. The) 259.18 702 T
(application reads the ASCII-encoded PostScript language code from) 279.9 702 T
(the \336le and sends it to the server with the) 201.6 690 T
0 F
(DPSW) 351.38 690 T
(ritePostScript) 378.18 690 T
4 F
( procedure. The context) 437.11 690 T
(executes the code as it is received, and renders to the pixmap.) 201.6 678 T
(If the \336le contains only one page, and the page description is simple, the application knows) 201.6 654 T
(that the pixmap is complete when it has read to the end of the input \336le and called) 201.6 642 T
0 F
(DPSW) 201.6 630 T
(aitContext) 228.23 630 T
4 F
(. It may now call) 272.17 630 T
0 F
(XCopyArea) 335.07 630 T
4 F
( to copy the pixmap to the application) 383.51 630 T
(display window) 201.6 618 T
(.) 258.18 618 T
(However) 201.6 594 T
(, if the \336le contains more than one page, the application cannot know when the) 234.18 594 T
(rendering to the pixmap is complete. If it calls) 201.6 582 T
0 F
(XCopyArea) 369.85 582 T
4 F
( too soon, the context may not) 418.29 582 T
(have \336nished drawing. As a result, an) 201.6 570 T
(incomplete image will be displayed on the screen.) 339.14 570 T
(There are two main strategies for handling situations such as the one described above:) 201.6 546 T
-0.23 (waiting and freezing. The \336rst is applicable if the application has suf) 201.6 534 P
-0.23 (\336cient knowledge of the) 445.55 534 P
(content of the PostScript language code to know where the beginning and the end are) 201.6 522 T
(located. The second is used only if the application has no reliable knowledge of the code) 201.6 510 T
(content.) 201.6 498 T
0 10 Q
(W) 201.6 469.33 T
(aiting) 210.66 469.33 T
4 9 Q
-0.12 (Causing the context to wait is appropriate when the PostScript language code to be executed) 201.6 445 P
(has a known structure. This is true in either of the following circumstances:) 201.6 433 T
(\245) 201.6 409 T
-0.07 (The application has complete control of the code to be executed. That is, it uses wrapped) 213.6 409 P
-0.35 (procedures, single-operator procedures, or dynamically generated code fragments such as) 213.6 397 P
(user path descriptions. No code comes from external sources such as end-user input.) 213.6 385 T
(\245) 201.6 365 T
(The application reads external \336les with a known structure that can be parsed and) 213.6 365 T
(understood, such as PostScript language page descriptions that are compliant with) 213.6 353 T
(Adobe\325) 213.6 341 T
(s Document Structuring Conventions.) 240.06 341 T
(Most applications that require synchronization fall into one of the two) 201.6 321 T
(categories described) 455.47 321 T
(above. In both cases, the application knows exactly) 201.6 309 T
(how much PostScript language code needs to be sent for a complete display) 201.6 297 T
(. In these cases,) 473.6 297 T
(the application sends the code and then forces all code to be executed, either with) 201.6 285 T
0 F
(DPSW) 201.6 273 T
(aitContext) 228.23 273 T
4 F
( or as a side ef) 272.17 273 T
(fect of calling a wrap that returns a value. When either of) 323.67 273 T
(these procedures returns, the application knows that all rendering is done and that other X) 201.6 261 T
(requests can now be sent.) 201.6 249 T
0 10 Q
(Freezing) 201.6 220.33 T
4 9 Q
-0.15 (Freezing a context is appropriate if the application cannot determine the completeness of the) 201.6 196 P
(PostScript language code to be executed. This can happen if an end user is allowed to enter) 201.6 184 T
-0 (arbitrary PostScript language programs \050for instance, in an interactive interpreter executive\051) 201.6 172 P
(or if an input \336le lacks a well-de\336ned structure.) 201.6 160 T
(In this case, the input must contain an executable name that the application has de\336ned. For) 201.6 136 T
(example, the) 201.6 124 T
0 F
(showpage) 249.77 124 T
4 F
( operator terminates each page in a page description \336le. The) 293.72 124 T
(application can take advantage of this, as shown in the following example.) 201.6 112 T
3 F
-0.36 (Example:) 201.6 88 P
4 F
-0.36 ( The application has de\336ned) 238.55 88 P
0 F
-0.41 (showpage) 340.32 88 P
4 F
-0.36 ( to execute an operator that will notify the) 384.27 88 P
(application that the page is done. The) 201.6 76 T
0 F
(clientsync) 338.39 76 T
4 F
( operator ful\336ls this function:) 382.35 76 T
FMENDPAGE
%%EndPage: "35" 36
%%Page: "36" 36
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(36) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
7 F
0 X
-0.17 (/old_showpage /showpage load def) 213.83 702.33 S
-0.17 (/showpage {old_showpage clientsync} bind def) 213.83 690.83 S
4 9 Q
(When) 201.6 667 T
0 F
(clientsync) 225.31 667 T
4 F
( is executed, the context is put into the) 269.27 667 T
6 F
0.36 (PSFROZEN) 409.56 667 S
4 F
( state, and a) 461.38 667 T
6 F
0.36 (PSFROZEN) 201.6 655 S
4 F
( event is generated. The application must have enabled the) 253.41 655 T
6 F
0.36 (PSFROZEN) 465.82 655 S
4 F
(event and registered a handler for that context; see section 3.4, \322Status Events\323 for more) 201.6 643 T
-0.15 (information on status events. The handler may then set a \337ag indicating that the image in the) 201.6 631 P
(pixmap is complete. The next time the application goes around its main loop, it can test the) 201.6 619 T
(\337ag and call) 201.6 607 T
0 F
(XCopyArea) 247.78 607 T
4 F
(.) 296.22 607 T
-0.28 (A frozen context can still receive interrupts.) 201.6 583 P
0 F
-0.31 (DPSInterruptContext) 359.89 583 P
4 F
-0.28 ( will) 448.77 583 P
-0.28 (interrupt a context) 466.69 583 P
(whether it is frozen or not.) 201.6 571 T
0 12 Q
(5) 182.93 541 T
(Programming T) 201.6 541 T
(ips) 290.02 541 T
4 9 Q
(This section contains tips to help you program applications that use the) 201.6 516 T
(Display PostScript) 459.23 516 T
(system extension to the X W) 201.6 504 T
(indow System.) 304.84 504 T
0 10 Q
(5.1) 175.71 475.33 T
(A) 201.6 475.33 T
(void XIfEvent) 208.45 475.33 T
4 9 Q
(If your application uses internal event dispatching as described in section 3.4, it should not) 201.6 451 T
(use) 201.6 439 T
0 F
(XIfEvent) 215.83 439 T
4 F
(. This routine will cause events that were generated and queued by an) 251.79 439 T
-0.15 (execution context to be processed repeatedly \050once for each call to) 201.6 427 P
0 F
-0.16 (XIfEvent) 441.32 427 P
4 F
-0.15 (\051 without being) 477.27 427 P
-0.31 (dequeued. This may result in wrap results or text output being erroneously duplicated or may) 201.6 415 P
(cause false status events to be reported. Use) 201.6 403 T
0 F
(XCheckIfEvent) 361.58 403 T
4 F
( instead.) 424.52 403 T
-0.22 (This restriction does not apply to applications using pass-through event dispatching and may) 201.6 379 P
(not apply to future implementations of Xlib.) 201.6 367 T
1 F
(Caution:) 157.64 343 T
(If your toolkit uses) 201.6 343 T
8 F
(XIfEvent) 271 343 T
1 F
(, you may see the err) 306.96 343 T
(oneous effects described above even) 381.5 343 T
(though your application does not use) 201.6 331 T
8 F
(XIfEvent) 337.41 331 T
1 F
( dir) 373.37 331 T
(ectly) 385.77 331 T
(.) 402.24 331 T
0 10 Q
(5.2) 175.71 302.33 T
(Include Files) 201.6 302.33 T
4 9 Q
(Include the) 201.6 278 T
1 F
(<DPS/dpsXclient.h>) 244.03 278 T
4 F
( header \336le when compiling DPS/X applications. This) 319.82 278 T
(header \336le includes the required header \336les \050) 201.6 266 T
1 F
(dpsclient.h) 365.58 266 T
4 F
( and) 404.77 266 T
1 F
(dpsfriends.h) 422.24 266 T
4 F
(\051 described in) 466.43 266 T
(sections 9 and 1) 201.6 254 T
(1 of the) 258.93 254 T
1 F
(Client Library Refer) 288.63 254 T
(ence Manual) 361.7 254 T
4 F
(.) 408.37 254 T
(Include) 201.6 230 T
1 F
(<DPS/dpsops.h>) 230.8 230 T
4 F
( if your application uses single-operator procedures with explicit) 293.61 230 T
(contexts.) 201.6 218 T
(Include) 201.6 194 T
1 F
(<DPS/psops.h>) 230.8 194 T
4 F
( if your application uses single-operator procedures with implicit) 289.12 194 T
(contexts.) 201.6 182 T
(Include) 201.6 158 T
1 F
(<DPS/dpsexcept.h>) 230.8 158 T
4 F
( if your application uses exception handling as de\336ned in the) 304.08 158 T
1 F
(Client Library Refer) 201.6 146 T
(ence Manual) 274.67 146 T
4 F
(.) 321.34 146 T
0 10 Q
(5.3) 175.71 117.33 T
(Use Pass-Through Event Dispatching) 201.6 117.33 T
4 9 Q
(Use) 201.6 93 T
0 F
(XDPSSetEventDelivery) 217.82 93 T
4 F
( as described in section 3.4 to set pass-through event) 315.72 93 T
(dispatching for your application\325) 201.6 81 T
(s contexts. This procedure has many advantages:) 319.17 81 T
FMENDPAGE
%%EndPage: "36" 37
%%Page: "37" 37
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(5  Programming Tips) 413.13 29.83 T
( 37) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(\245) 201.6 702 T
(Y) 213.6 702 T
(our application can make X and Display PostScript calls in its text and status event) 219.19 702 T
-0.27 (handlers. For example, writing a text handler that displays the text in a window is easy) 213.6 690 P
-0.27 (. In) 520.3 690 P
-0.28 (contrast, internal event dispatching would require the text handler to queue up the display) 213.6 678 P
(task and leave its execution to the main application.) 213.6 666 T
(\245) 201.6 646 T
(Y) 213.6 646 T
(our application avoids potential delays from toolkits that do not expect events to be) 219.19 646 T
(dispatched internally) 213.6 634 T
(.) 288.15 634 T
(\245) 201.6 614 T
(Y) 213.6 614 T
(our application can handle status events directly rather than having a status event) 219.19 614 T
(handler that sets \337ags for the main application to test.) 213.6 602 T
1 F
(Note:) 169.63 582 T
-0.06 (Her) 201.6 582 P
-0.06 (e ar) 215.24 582 P
-0.06 (e two important things to r) 229.08 582 P
-0.06 (emember when using pass-thr) 324.6 582 P
-0.06 (ough event dispatching in X) 431.68 582 P
(T) 201.6 570 T
(oolkit applications:) 205.77 570 T
(\245) 201.6 550 T
(Always call) 213.6 550 T
8 F
(XDPSDispatchEvent) 257.54 550 T
1 F
( befor) 344.44 550 T
(e calling) 365.33 550 T
8 F
(XtDispatchEvent) 398.78 550 T
1 F
(.) 470.19 550 T
(\245) 201.6 530 T
(Never use) 213.6 530 T
8 F
(XtAppProcessEvent) 251.54 530 T
1 F
( to handle X events.) 337.44 530 T
0 10 Q
(5.4) 175.71 501.33 T
( Be Careful W) 201.6 501.33 T
(ith Exception Handling) 266.48 501.33 T
4 9 Q
(The exception handling facilities described in Appendix B of the) 201.6 477 T
1 F
(Client Library Refer) 436.74 477 T
(ence) 509.81 477 T
(Manual) 201.6 465 T
4 F
( can be used in X programs, but you must be very careful not to jump through any) 229.56 465 T
-0.14 (Xlib or X T) 201.6 453 P
-0.14 (oolkit procedures. The internal state of the libraries may become corrupted. Here) 242.72 453 P
(are some examples of uses that) 201.6 441 T
1 F
(not) 315.42 441 T
4 F
( safe:) 326.9 441 T
(\245) 201.6 417 T
(Do not raise an exception in any X T) 213.6 417 T
(oolkit callback procedure.) 345.76 417 T
(\245) 201.6 397 T
(Do not raise an exception in the predicate procedure to) 213.6 397 T
0 F
(XIfEvent) 412.77 397 T
4 F
( or any of the related) 448.73 397 T
(event handling procedures.) 213.6 385 T
(\245) 201.6 365 T
-0.13 (Do not raise an exception in an event handler or text procedure unless you are using pass-) 213.6 365 P
(through event dispatching.) 213.6 353 T
(\245) 201.6 333 T
(Do not raise an exception in an error handler) 213.6 333 T
(.) 373.84 333 T
0 10 Q
(5.5) 175.71 304.33 T
(Coordinate Conversions) 201.6 304.33 T
4 9 Q
(The code examples in this section demonstrate an ef) 201.6 280 T
(\336cient method of doing coordinate) 389.14 280 T
(conversions. \050For an introduction to coordinate system issues, see \322Coordinate Systems\323 in) 201.6 268 T
(section 3.3, \322Execution.\323\051) 201.6 256 T
(At initialization, and immediately after any user space transformation has been performed) 201.6 232 T
-0.09 (\050for example, after) 201.6 220 P
0 F
-0.1 (scale) 270.69 220 P
4 F
-0.09 (,) 293.18 220 P
0 F
-0.1 (rotate) 297.58 220 P
4 F
-0.09 (, or) 322.55 220 P
0 F
-0.1 (setmatrix) 336.59 220 P
4 F
-0.09 (\051, the application should execute PostScript) 376.55 220 P
(language code to get the CTM \050current transformation matrix\051, the inverse of the CTM, and) 201.6 208 T
(the current origin of) 201.6 196 T
(fset. The following wrap will return these values:) 273.57 196 T
7 8.5 Q
-0.17 (defineps PSWGetTransform\050DPSContext ctxt | float ctm[6],) 213.83 172.33 S
-0.17 (invctm[6];) 225.11 160.83 S
-0.17 (int *xOffset, *yOffset\051) 246 149.33 S
-0.17 (matrix currentmatrix dup ctm) 234 137.83 S
-0.17 (matrix invertmatrix invctm) 234 126.33 S
-0.17 (currentXoffset yOffset xOffset) 234 114.83 S
-0.17 (endps) 213.83 103.33 S
FMENDPAGE
%%EndPage: "37" 38
%%Page: "38" 38
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(38) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(Call the) 201.6 702 T
0 F
(PSWGetT) 232.06 702 T
(ransform) 272.51 702 T
4 F
( wrap as necessary) 311.46 702 T
(, saving the return values in storage) 378.01 702 T
(associated with the window:) 201.6 690 T
7 8.5 Q
-0.17 (DPSContext ctxt;) 213.83 666.33 S
-0.17 (float ctm[6], invctm[6];) 213.83 654.83 S
-0.17 (int xOffset, yOffset;) 213.83 643.33 S
-0.17 (PSWGetTransform\050ctxt, ctm, invctm, &xOffset, &yOffset\051;) 213.83 620.33 S
4 9 Q
(T) 201.6 596.5 T
(o convert an X coordinate into a user space coordinate, perform the) 206.46 596.5 T
(following calculations:) 450.8 596.5 T
7 8.5 Q
-0.17 (#define A_COEFF 0) 213.83 572.83 S
-0.17 (#define B_COEFF 1) 213.83 561.33 S
-0.17 (#define C_COEFF 2) 213.83 549.83 S
-0.17 (#define D_COEFF 3) 213.83 538.33 S
-0.17 (#define TX_CONS 4) 213.83 526.83 S
-0.17 (#define TY_CONS 5) 213.83 515.33 S
-0.17 (int x, y;) 213.83 503.83 S
-0.17 (/* X coordinate */) 294 503.83 S
-0.17 (float ux, uy;) 213.83 492.33 S
-0.17 (/* user space coordinate */) 294 492.33 S
-0.17 (x \320= xOffset;) 213.83 469.33 S
-0.17 (y \320= yOffset;) 213.83 457.83 S
-0.03 -0.17 (ux = invctm[A_COEFF] * x + invctm[C_COEFF] * y + invctm[TX_CONS];) 213.83 446.33 B
-0.03 -0.17 (uy = invctm[B_COEFF] * x + invctm[D_COEFF] * y + invctm[TY_CONS];) 213.83 434.83 B
4 9 Q
(T) 201.6 411 T
(o convert a user space coordinate into an X coordinate, perform the) 206.46 411 T
(following calculations:) 450.8 411 T
7 8.5 Q
-0.17 (x = ctm[A_COEFF] * ux + ctm[C_COEFF] * uy + ctm[TX_CONS] +) 213.83 387.33 S
-0.17 (xOffset;) 225.11 375.83 S
-0.17 (y = ctm[B_COEFF] * ux + ctm[D_COEFF] * uy + ctm[TY_CONS] +) 213.83 364.33 S
-0.17 (yOffset;) 224.39 352.83 S
4 9 Q
(The equations listed above have the following limitations:) 201.6 329 T
(\245) 201.6 305 T
(X coordinates must be positive. Otherwise, use the) 213.6 305 T
0 F
(\337oor) 398.32 305 T
4 F
( function to avoid the implicit) 418.29 305 T
(truncation that happens when \337oating-point values are assigned to integers.) 213.6 293 T
(\245) 201.6 273 T
(Beware of round-of) 213.6 273 T
(f errors. Incorrect coordinates may be computed in either direction.) 284.31 273 T
0 10 Q
(5.6) 175.71 244.33 T
(Fonts) 201.6 244.33 T
4 9 Q
-0.04 (The) 201.6 220 P
0 F
-0.04 (\336lenameforall) 217.79 220 P
4 F
-0.04 ( operator can be used to obtain a list of the fonts available to the server) 276.22 220 P
-0.04 (.) 529.54 220 P
(See the) 201.6 208 T
1 F
(PostScript Language Refer) 230.05 208 T
(ence Manual, Second Edition) 327.08 208 T
4 F
(, for a description of) 432.92 208 T
0 F
(\336lenameforall) 201.6 196 T
4 F
(. Use the pattern) 260.04 196 T
7 F
-0.18 (\050%) 213.83 176.33 S
1 8.5 Q
-0.17 (font) 224.26 176.33 S
7 9 Q
-0.18 (%*\051) 236.8 176.33 S
4 F
-0.08 (to generate a list of fonts. The font \336le names may be sent back as ASCII text and processed) 201.6 156.5 P
(with a customized text handler) 201.6 144.5 T
(, or they may be stored in an array and then accessed one at a) 311.57 144.5 T
(time by calling a wrapped procedure.) 201.6 132.5 T
-0.35 (Outline fonts are resources. As with any other resource, there\325) 201.6 108.5 P
-0.35 (s no guarantee that a given font) 421.36 108.5 P
(will be present on any particular server) 201.6 96.5 T
(. The application must be written to deal with a) 341.37 96.5 T
0 F
(\336ndfont) 201.6 84.5 T
4 F
( or) 235.04 84.5 T
0 F
(selectfont) 247.02 84.5 T
4 F
( operator that fails because it can\325) 289.47 84.5 T
(t \336nd the font. It is possible to) 410.6 84.5 T
FMENDPAGE
%%EndPage: "38" 39
%%Page: "39" 39
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(5  Programming Tips) 413.13 29.83 T
( 39) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(rede\336ne) 201.6 702 T
0 F
(\336ndfont) 232.79 702 T
4 F
( and) 266.24 702 T
0 F
(selectfont) 283.71 702 T
4 F
( so that they substitute some default font when the) 326.16 702 T
(requested font is not available. Indeed, the default de\336nition of) 201.6 690 T
0 F
(\336ndfont) 429.75 690 T
4 F
( in a given) 463.19 690 T
(environment may already do this.) 201.6 678 T
0 10 Q
(5.7) 175.71 649.33 T
(Portability Issues) 201.6 649.33 T
4 9 Q
(Portability issues may arise under any of the following situations:) 201.6 625 T
(\245) 201.6 601 T
(Converting an existing X application to use the DPS/X extension) 213.6 601 T
(\245) 201.6 581 T
(Porting a non-X window system application to use the DPS/X extension) 213.6 581 T
(\245) 201.6 561 T
(W) 213.6 561 T
(riting a portable application that uses the DPS/X extension) 221.73 561 T
(A major factor in portability is device independence. The DPS/X extension enhances the) 201.6 541 T
(device independence of X applications by providing \337exibility with respect to color) 201.6 529 T
(,) 502.03 529 T
(resolution, and fonts.) 201.6 517 T
0 10 Q
(Color) 201.6 488.33 T
4 9 Q
(Use PostScript operators such as) 201.6 464 T
0 F
(setrgbcolor) 321.17 464 T
4 F
( rather than X primitives to draw with color) 370.61 464 T
(.) 526.87 464 T
(The PostScript interpreter will provide the best rendering possible for the device. The) 201.6 452 T
(Display PostScript system can produce a variety of halftone patterns representing gray) 201.6 440 T
(values or colors, so that one color can be seen against the background of another color even) 201.6 428 T
(on a monochrome device. Contrast this with the rendering facilities of the X W) 201.6 416 T
(indow) 485.8 416 T
(System, where a request for any color other than white on a monochrome device will give) 201.6 404 T
(you black.) 201.6 392 T
(DPS/X color rendering is device independent. Here\325) 201.6 368 T
(s how DPS/X handles color requests:) 389.05 368 T
(\245) 201.6 344 T
(On a monochrome device, you\325ll get a dithered \050halftone\051 pattern of black and white) 213.6 344 T
(pixels. For example, if you ask for red by specifying) 213.6 332 T
6 F
(1) 404.3 332 T
(0) 411.8 332 T
(0) 419.3 332 T
(setrgbcolor) 426.79 332 T
4 F
( you\325ll get some) 471.24 332 T
(halftone gray pattern composed of black and white pixels; this pattern will be distinct) 213.6 320 T
(from other \322colors.\323) 213.6 308 T
(\245) 201.6 288 T
(On a grayscale device, you\325ll get a halftone pattern using gray levels; this of) 213.6 288 T
(fers greater) 487.5 288 T
(distinction among \322colors.\323) 213.6 276 T
(\245) 201.6 256 T
(On a color device \0504-plane, 8-plane, and so on\051, you\325ll get the requested color if it\325) 213.6 256 T
(s one) 510.12 256 T
-0.09 (of those prede\336ned for the context; otherwise you\325ll get a dithered pattern of RGB pixels) 213.6 244 P
(that approximates the color) 213.6 232 T
(.) 311.2 232 T
(\245) 201.6 212 T
-0.03 (If you\325ve allocated solid colors beyond those prede\336ned for the context, you\325ll get a non-) 213.6 212 P
(dithered color just as you would with X \050subject to the same restrictions\051.) 213.6 200 T
(\245) 201.6 180 T
(A color request will never simply fail.) 213.6 180 T
(X W) 201.6 160 T
(indow System color rendering, on the other hand, is device dependent:) 218.46 160 T
(\245) 201.6 136 T
-0.02 (On a monochrome device, a request for any color will give you black. There\325) 213.6 136 P
-0.02 (s no way to) 490.64 136 P
-0.22 (dif) 213.6 124 P
-0.22 (ferentiate between \322pink\323 and \322olive green,\323 as there is with PostScript language color) 223.42 124 P
(rendering.) 213.6 112 T
(\245) 201.6 92 T
-0.24 (On a color device, you\325ll get the color you requested only if there\325) 213.6 92 P
-0.24 (s space in the colormap) 448.59 92 P
(or the device is a T) 213.6 80 T
(rueColor device.) 281.92 80 T
FMENDPAGE
%%EndPage: "39" 40
%%Page: "40" 40
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(40) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(\245) 201.6 702 T
-0.01 (A color request can fail, and there\325) 213.6 702 P
-0.01 (s no recourse except to try requesting a dif) 338.08 702 P
-0.01 (ferent color) 490.58 702 P
-0.01 (.) 531.75 702 P
0 10 Q
(Resolution) 201.6 673.33 T
4 9 Q
(The Display PostScript extension of) 201.6 649 T
(fers you device independence with respect to resolution.) 331.25 649 T
(In DPS/X, positions and extents are speci\336ed with resolution-independent units such as) 201.6 625 T
-0.34 (points. An inch is always an inch. W) 201.6 613 P
-0.34 (indow elements will always have the same absolute size,) 330.9 613 P
(regardless of the device.) 201.6 601 T
-0.07 (In the X W) 201.6 577 P
-0.07 (indow System, positions and extents are speci\336ed in units of pixels. The size of a) 241.22 577 P
(pixel depends on the device. One inch may be 75 pixels on one display and 100 pixels on) 201.6 565 T
(another display) 201.6 553 T
(. This causes strange) 256.18 553 T
(distortions of size when creating windows on various) 332.81 553 T
(display devices.) 201.6 541 T
0 10 Q
(Fonts) 201.6 512.33 T
4 9 Q
(In the X W) 201.6 488 T
(indow System, you can\325) 241.42 488 T
(t rely on the availability of a given point size/typeface) 328.13 488 T
(combination. If you request 9-point Helvetica*, for example, and that point size is not) 201.6 476 T
(available, you must make another request.) 201.6 464 T
(The Display PostScript extension gives you added \337exibility with respect to fonts:) 201.6 440 T
(\245) 201.6 416 T
-0.06 (Y) 213.6 416 P
-0.06 (ou can have any point size as long as the typeface is present. If you request a size that\325) 219.19 416 P
-0.06 (s) 528.32 416 P
(not available, DPS/X generates it for you.) 213.6 404 T
(\245) 201.6 384 T
(The typeface can be rendered in any rotation or two-dimensional) 213.6 384 T
(transformation.) 448.71 384 T
0 10 Q
(5.8) 175.71 355.33 T
(Using Custom Operators) 201.6 355.33 T
4 9 Q
(After the execution of a) 201.6 331 T
0 F
(setXgcdrawable) 289.2 331 T
4 F
(,) 357.63 331 T
0 F
(setXgcdrawablecolor) 362.12 331 T
4 F
(, or) 452.17 331 T
0 F
(setXoffset) 466.4 331 T
4 F
(operator) 201.6 319 T
(, the following graphics state parameters are left in an indeterminate state:) 231.19 319 T
(\245) 201.6 295 T
(The current transformation matrix) 213.6 295 T
(\245) 201.6 275 T
(The clipping path) 213.6 275 T
(\245) 201.6 255 T
(The transfer function) 213.6 255 T
(Each of the parameters will either keep its previous values or be restored to its initial value,) 201.6 235 T
(but it is not always possible to predict which. T) 201.6 223 T
(o return the parameters to a known state,) 371.23 223 T
(follow one of the following techniques:) 201.6 211 T
(\245) 201.6 187 T
(Reset the parameters to their initial values after executing) 213.6 187 T
0 F
(setXgcdrawable) 423.02 187 T
4 F
(,) 491.45 187 T
0 F
-0.29 (setXgcdrawablecolor) 213.6 175 P
4 F
-0.26 (, or) 303.64 175 P
0 F
-0.29 (setXoffset) 317.36 175 P
4 F
-0.26 ( by executing the following PostScript language) 360.8 175 P
(code:) 213.6 163 T
7 8.5 Q
-0.17 (initmatrix) 234 143.33 S
-0.17 (initclip) 234 131.83 S
-0.17 (gsave initgraphics currenttransfer grestore settransfer) 234 120.33 S
FMENDPAGE
%%EndPage: "40" 41
%%Page: "41" 41
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(6  X-Specific Data and Procedures) 361.62 29.83 T
( 41) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(\245) 201.6 702 T
(Retain the previous values of the parameters by surrounding the use of) 213.6 702 T
0 F
(setXgcdrawable) 213.6 690 T
4 F
(,) 282.03 690 T
0 F
(setXgcdrawablecolor) 286.52 690 T
4 F
(, or) 376.57 690 T
0 F
(setXoffset) 390.8 690 T
4 F
( with the following) 434.24 690 T
(PostScript language code:) 213.6 678 T
7 8.5 Q
-0.17 (matrix currentmatrix) 234 658.33 S
-0.17 (clippath) 234 646.83 S
-0.17 (currenttransfer) 234 635.33 S
-0.17 (%) 234 623.83 S
-0.17 (% use of setXgcdrawable,) 234 612.33 S
-0.17 (% setXgcdrawablecolor, or setXoffset) 234 600.83 S
-0.17 (%) 234 589.33 S
-0.17 (settransfer) 234 577.83 S
-0.17 (initclip clip) 234 566.33 S
-0.17 (setmatrix) 234 554.83 S
4 9 Q
-0.16 (Note that the second method changes the current path; maintaining both the current path and) 201.6 531 P
(the clipping path is complex and rarely necessary) 201.6 519 T
(. Retaining the graphics state parameter) 378.48 519 T
(values may lead to unexpected results when the application switches among drawables on) 201.6 507 T
(dif) 201.6 495 T
(ferent screens or dif) 211.42 495 T
(ferent visuals, and is not recommended in this case.) 282.88 495 T
(Y) 201.6 471 T
(ou may mix the two techniques for dif) 207.19 471 T
(ferent graphics state parameters. For example, to) 344.57 471 T
(reset the clipping path and transfer function but keep the current transformation matrix,) 201.6 459 T
(execute the following PostScript language code:) 201.6 447 T
7 8.5 Q
-0.17 (matrix currentmatrix) 213.83 423.33 S
-0.17 (%) 213.83 411.83 S
-0.17 (% use of setXgcdrawable, setXgcdrawablecolor, or setXoffset) 213.83 400.33 S
-0.17 (%) 213.83 388.83 S
-0.17 (setmatrix) 213.83 377.33 S
-0.17 (initclip) 213.83 365.83 S
-0.17 (gsave initgraphics currenttransfer grestore settransfer) 213.83 354.33 S
4 9 Q
(If you know that one of the parameters has not been changed from its initial value, you can) 201.6 330.5 T
(safely ignore that parameter) 201.6 318.5 T
(. For example, if you do not change the transfer function, it will) 301.68 318.5 T
(be left in its initial state after you execute) 201.6 306.5 T
0 F
(setXgcdrawable) 352.62 306.5 T
4 F
(,) 421.05 306.5 T
0 F
(setXgcdrawablecolor) 425.54 306.5 T
4 F
(, or) 515.59 306.5 T
0 F
(setXoffset) 201.6 294.5 T
4 F
(\321either because the initial value has been reestablished, or because it has been) 245.04 294.5 T
(inherited.) 201.6 282.5 T
-0.07 (For performance reasons, you should execute) 201.6 258.5 P
0 F
-0.08 (setXgcdrawable) 366.67 258.5 P
4 F
-0.07 (,) 435.1 258.5 P
0 F
-0.08 (setXgcdrawablecolor) 439.53 258.5 P
4 F
-0.07 (,) 529.57 258.5 P
(and) 201.6 246.5 T
0 F
(setXoffset) 216.82 246.5 T
4 F
( as infrequently as possible. It is more ef) 260.27 246.5 T
(\336cient to capture a particular) 405.63 246.5 T
(graphics state con\336guration as a gstate object and use) 201.6 234.5 T
0 F
(setgstate) 396.04 234.5 T
4 F
( to return to it than to use) 435.5 234.5 T
0 F
-0.53 (setXgcdrawable) 201.6 222.5 P
4 F
-0.48 (,) 270.03 222.5 P
0 F
-0.53 (setXgcdrawablecolor) 274.05 222.5 P
4 F
-0.48 (, or) 364.09 222.5 P
0 F
-0.53 (setXoffset) 377.36 222.5 P
4 F
-0.48 ( to reestablish the con\336guration) 420.81 222.5 P
-0.02 (each time you need it. In addition, the graphics state indeterminicies described above do not) 201.6 210.5 P
(occur when using gstate objects.) 201.6 198.5 T
0 12 Q
(6) 182.93 168.5 T
(X-Speci\336c Data and Procedures) 201.6 168.5 T
4 9 Q
(This section describes the system-speci\336c data types and procedures for the Display) 201.6 143.5 T
(PostScript extension to X.) 201.6 131.5 T
0 10 Q
(6.1) 175.71 102.83 T
(Data Structures) 201.6 102.83 T
4 9 Q
(Data structures de\336ned in the) 201.6 78.5 T
1 F
(<DPS/dpsXclient.h>) 309.18 78.5 T
4 F
( header \336le are described below) 384.97 78.5 T
(.) 498.44 78.5 T
FMENDPAGE
%%EndPage: "41" 42
%%Page: "42" 42
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(42) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
0 10 Q
0 X
(Extended Error Codes) 201.6 701.33 T
4 9 Q
-0.23 (The following error codes for the X W) 201.6 677 P
-0.23 (indow System are in addition to those described under) 338.63 677 P
6 F
0.36 (DPSErrorCode) 201.6 665 S
4 F
( in the) 265.85 665 T
1 F
(Client Library Refer) 290.56 665 T
(ence Manual) 363.63 665 T
4 F
(:) 410.3 665 T
6 F
0.36 (dps_err_invalidAccess) 210 641 S
4 F
-0.35 (An attempt was made to receive output from a context created) 312 641 P
(by another client. Contexts send their output only to the) 312 629 T
(original creator) 312 617 T
(. If the application tries to get output from a) 366.66 617 T
(context created by another client\321for example, by calling a) 312 605 T
(wrap that returns a result\321this error is reported.) 312 593 T
6 F
0.36 (dps_err_encodingCheck) 210 575.5 S
4 F
(An attempt was made to change name or program encoding) 314.96 575.5 T
(to unacceptable values. This error can occur when changing) 312 563.5 T
(name encoding for a context created by another client or a) 312 551.5 T
(context created in a space that was created by another client.) 312 539.5 T
(Such contexts must have string name encoding) 312 527.5 T
(\050) 312 515.5 T
6 F
0.36 (dps_strings) 314.99 515.5 S
4 F
(\051.) 364.9 515.5 T
6 F
0.36 (dps_err_closedDisplay) 210 498 S
4 F
(An attempt was made to send PostScript language code to a) 312 498 T
(context whose display is closed.) 312 486 T
6 F
0.36 (dps_err_deadContext) 210 468.5 S
4 F
(An attempt was made to get output from a zombie context \050a) 312 468.5 T
-0.03 (context that has died in the server but still has its X resources) 312 456.5 P
(active\051.) 312 444.5 T
6 F
0.36 (dps_err_recursiveWait) 210 427 S
4 F
(An event handler called) 312 427 T
0 F
(DPSW) 399.85 427 T
(aitContext) 426.48 427 T
4 F
(or a wrap that) 472.92 427 T
(returns a value; see \322W) 312 415 T
(rap Considerations\323 in section 3.4,) 395.49 415 T
(\322Status Events,\323 for more information.) 312 403 T
0 10 Q
(Status Event Masks) 201.6 374.33 T
4 9 Q
-0.17 (The status event types supported in DPS/X are shown in T) 201.6 350 P
-0.17 (able 4. The \336rst column shows the) 409.41 350 P
(status event type that is reported by the server) 201.6 338 T
(. The second column shows the associated) 365.85 338 T
(single-bit status mask values that can be combined with logical OR to set a context\325) 201.6 326 T
(s status) 502.16 326 T
(mask. The third column describes the status event.) 201.6 314 T
78 277.99 534 288 C
78 277.99 534 288 R
7 X
0 K
V
78 281.98 547.01 281.98 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
0 8 Q
0 X
0 K
(T) 201.6 290.66 T
(able 4) 205.89 290.66 T
1 F
(Status events) 233.01 290.66 T
78 257.48 534 267.49 C
78 257.48 534 267.49 R
7 X
0 K
V
78 264.3 547.01 264.3 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
6 8 Q
0 X
0 K
(Status Event) 78 270.16 T
(Mask V) 201.6 270.16 T
(alueStatus) 227.96 270.16 T
(Description) 306 270.16 T
4 F
(PSRUNNING) 78 252.15 T
(PSRUNNINGMASK) 201.6 252.15 T
(Context is runnable.) 306 252.15 T
(PSNEEDSINPUT) 78 229.15 T
(PSNEEDSINPUTMASK) 201.6 229.15 T
(Context needs input to continue running.) 306 229.15 T
(PSZOMBIE) 78 206.15 T
(PSZOMBIEMASK) 201.6 206.15 T
(Context is dead, but its X resources remain.) 306 206.15 T
(PSFROZEN) 78 183.15 T
(PSFROZENMASK) 201.6 183.15 T
(Context was frozen by PostScript language program.) 306 183.15 T
78 147.47 534 157.48 C
78 147.47 534 157.48 R
7 X
0 K
V
78 154.29 547.01 154.29 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
4 8 Q
0 X
0 K
(PSST) 78 160.15 T
(A) 95.58 160.15 T
(TUSERROR) 100.47 160.15 T
(\321) 201.6 160.15 T
(Could not reply to status request.) 306 160.15 T
4 9 Q
(For more information on status events, see section 3.4, \322Status Events.\323) 201.6 127.47 T
FMENDPAGE
%%EndPage: "42" 43
%%Page: "43" 43
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(6  X-Specific Data and Procedures) 361.62 29.83 T
( 43) 522.19 29.83 T
78 72 534 708 R
7 X
V
0 10 Q
0 X
(T) 201.6 701.33 T
(ypes and Global V) 206.97 701.33 T
(ariables) 293.07 701.33 T
0 9 Q
(DPSEventDelivery) 111.68 656.66 T
7 8.5 Q
-0.17 (typedef enum {) 201.6 656.66 S
-0.17 (dps_event_pass_through,) 213.6 645.33 S
-0.17 (dps_event_internal_dispatch,) 213.6 633.83 S
-0.17 (dps_event_query) 213.6 622.33 S
-0.17 (} DPSEventDelivery;) 201.6 610.83 S
6 9 Q
0.36 (DPSEventDelivery) 201.6 587 S
4 F
( provides the possible options for) 281.27 587 T
0 F
(XDPSSetEventDelivery) 403.09 587 T
4 F
(.) 500.41 587 T
(This enumeration is not available in early versions of the Client Library) 201.6 564 T
(.) 458.87 564 T
0 F
(DPSLastUserObjectIndex) 81.22 519.66 T
2 8 Q
(l) 201.6 519.66 T
7 8.5 Q
-0.17 (ong int DPSLastUserObjectIndex;) 203.38 519.66 S
6 9 Q
0.36 (DPSLastUserObjectIndex) 201.6 496 S
4 F
( is a global variable containing the last user object index) 311.91 496 T
(assigned for this application. This variable should be treated as read-only) 201.6 484 T
(. For more) 463.85 484 T
(information about user object indices, see) 201.6 472 T
0 F
(DPSNewUserObjectIndex) 353.61 472 T
4 F
( and \322User Object) 461.99 472 T
(Indices\323 in section 3.3, \322Execution.\323) 201.6 460 T
0 F
(XDPSStatusProc) 117.68 415.66 T
7 8.5 Q
-0.17 (typedef void \050*XDPSStatusProc\051\050/*) 201.6 415.66 S
-0.17 (DPSContext ctxt,) 213.6 404.33 S
-0.17 (int code */\051;) 213.6 392.83 S
4 9 Q
-0.22 (This is a procedure type for de\336ning the callback procedure that handles status events for the) 201.6 369 P
(client. The procedure will be called with two parameters: the context it was registered with) 201.6 357 T
(and the status code derived from the event. For more information about status events, see) 201.6 345 T
0 F
(XDPSRegisterStatusProc) 201.6 333 T
4 F
( and \322Status Event Masks\323 in section 6.1, \322Data Structures.\323) 309.48 333 T
0 10 Q
(6.2) 175.71 304.33 T
(Procedures) 201.6 304.33 T
4 9 Q
(This section contains descriptions of the system-speci\336c procedures in the) 201.6 280 T
1 F
(<DPS/dpsXclient.h>) 201.6 268 T
4 F
( header \336le, listed alphabetically) 277.39 268 T
(.) 393.37 268 T
0 F
(DPSChangeEncoding) 97.22 223.66 T
7 8.5 Q
-0.17 (void DPSChangeEncoding\050ctxt, newProgEncoding, newNameEncoding\051) 201.6 223.66 S
-0.17 (DPSContext ctxt;) 213.6 212.33 S
-0.17 (DPSProgramEncoding newProgEncoding;) 213.6 200.83 S
-0.17 (DPSNameEncoding newNameEncoding;) 213.6 189.33 S
0 9 Q
(DPSChangeEncoding) 201.6 165.5 T
4 F
( changes one or both of the context\325) 293.98 165.5 T
(s encoding) 422.53 165.5 T
(parameters.) 463.47 165.5 T
-0.27 (Supported conversions are described in T) 201.6 153.5 P
-0.27 (able 3 on page 32. See the) 348.61 153.5 P
1 F
-0.27 (Client Library Refer) 443.04 153.5 P
-0.27 (ence) 515.56 153.5 P
(Manual) 201.6 141.5 T
4 F
( for de\336nitions of) 229.56 141.5 T
6 F
0.36 (DPSNameEncoding) 294.47 141.5 S
4 F
( and) 379.78 141.5 T
6 F
0.36 (DPSProgramEncoding) 397.25 141.5 S
4 F
(.) 494.13 141.5 T
FMENDPAGE
%%EndPage: "43" 44
%%Page: "44" 44
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(44) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
0 9 Q
0 X
(DPSContextFromContextID) 78 702.66 T
7 8.5 Q
-0.17 (DPSContext DPSContextFromContextID\050ctxt, cid, textProc,) 201.6 702.66 S
-0.17 (errorProc\051) 231.6 691.66 S
-0.17 (DPSContext ctxt;) 213.6 680.33 S
-0.17 (ContextPSID cid;) 213.6 668.83 S
-0.17 (DPSTextProc textProc;) 213.6 657.33 S
-0.17 (DPSErrorProc errorProc;) 213.6 645.83 S
0 9 Q
(DPSContextFromContextID) 201.6 622 T
4 F
( creates a) 318.44 622 T
6 F
0.36 (DPSContextRec) 354.12 622 S
4 F
( and returns a) 424.22 622 T
6 F
0.36 (DPSContext) 475.14 622 S
4 F
(handle for a forked context; it returns) 201.6 610 T
6 F
0.36 (NULL) 338.13 610 S
4 F
( if it is unable to create these data structures.) 362.54 610 T
(The application must call this procedure before attempting to communicate with a forked) 201.6 587 T
(context.) 201.6 575 T
0 F
(DPSContextFromContextID) 232.55 575 T
4 F
( creates the client-side data structures for the) 349.39 575 T
(context and associates them with the server) 201.6 563 T
(-side) 357.17 563 T
(structures previously created by the) 376.89 563 T
0 F
(fork) 506.93 563 T
4 F
-0.16 (operator) 201.6 551 P
-0.16 (.) 231.05 551 P
6 F
-0.21 0.36 (cid) 235.38 551 B
4 F
-0.16 ( is the context identi\336er \050of type) 247.95 551 P
6 F
-0.21 0.36 (long int) 364.38 551 B
4 F
-0.16 (\051 that is assigned to the forked context) 396.02 551 P
-0.24 (by the) 201.6 539 P
-0.24 (PostScript) 225.59 539 P
-0.24 (interpreter) 264.56 539 P
-0.24 (.) 301.5 539 P
6 F
-0.3 0.36 (ctxt) 305.76 539 B
4 F
-0.24 ( is the handle of the context that created the forked context;) 321.18 539 P
(its) 201.6 527 T
6 F
0.36 (DPSContextRec) 212.34 527 S
4 F
( will be used as a model for the) 282.45 527 T
6 F
0.36 (DPSContextRec) 397.02 527 S
4 F
( of the forked) 467.12 527 T
(context, as described below) 201.6 515 T
(.) 300.35 515 T
(If a) 201.6 492 T
6 F
0.36 (DPSContextRec) 216.07 492 S
4 F
( has already been created for) 286.18 492 T
6 F
0.36 (cid) 391.48 492 S
4 F
(, its handle is returned by) 404.05 492 T
0 F
-0.44 (DPSContextFromContextID) 201.6 480 P
4 F
-0.39 (. Otherwise, a new context record is created according to the) 318.44 480 P
(following rules:) 201.6 468 T
(\245) 201.6 445 T
(If supplied, the) 213.6 445 T
6 F
0.36 (textProc) 270.01 445 S
4 F
( and) 305.86 445 T
6 F
0.36 (errorProc) 323.33 445 S
4 F
( ar) 364.02 445 T
(guments are used for the forked context.) 373.09 445 T
(\245) 201.6 422 T
(If) 213.6 422 T
6 F
0.36 (textProc) 221.83 422 S
4 F
( or) 257.68 422 T
6 F
0.36 (errorProc) 269.66 422 S
4 F
( are) 310.35 422 T
6 F
0.36 (NULL) 325.81 422 S
4 F
(, the missing values are copied from the) 350.22 422 T
6 F
0.36 (DPSContextRec) 213.6 410 S
4 F
( of) 283.71 410 T
6 F
0.36 (ctxt) 295.69 410 S
4 F
(.) 311.11 410 T
(\245) 201.6 387 T
(The chaining pointers for the forked context are set to) 213.6 387 T
6 F
0.36 (NULL) 409.28 387 S
4 F
(.) 433.69 387 T
(\245) 201.6 364 T
(All other \336elds in the new) 213.6 364 T
6 F
0.36 (DPSContextRec) 309.46 364 S
4 F
( are copied from) 379.57 364 T
6 F
0.36 (ctxt) 440.96 364 S
4 F
(.) 456.38 364 T
0 F
(DPSCreateT) 91.89 319.66 T
(extContext) 143.16 319.66 T
7 8.5 Q
-0.17 (DPSContext DPSCreateTextContext\050textProc, errorProc\051) 201.6 319.66 S
-0.17 (DPSTextProc textProc;) 213.6 308.33 S
-0.17 (DPSErrorProc errorProc;) 213.6 296.83 S
0 9 Q
(DPSCreateT) 201.6 273 T
(extContext) 252.87 273 T
4 F
( creates a text context and returns its) 299.31 273 T
6 F
0.36 (DPSContext) 432.6 273 S
4 F
( handle.) 485.64 273 T
(When this handle is passed as the ar) 201.6 261 T
(gument to a Client Library) 330.98 261 T
(procedure, all input to the) 429.09 261 T
(context is passed to) 201.6 249 T
6 F
0.36 (textProc) 273.99 249 S
4 F
(. If the input is) 309.84 249 T
(PostScript language in a binary encoding, the) 364.76 249 T
(input is converted to ASCII encoding before being passed to) 201.6 237 T
6 F
0.36 (textProc) 421.26 237 S
4 F
(.) 457.11 237 T
6 F
0.36 (errorProc) 461.6 237 S
4 F
( is used) 502.29 237 T
(to report any errors \050such as) 201.6 225 T
6 F
0.36 (dps_err_nameTooLong) 304.42 225 S
4 F
(\051 resulting from converting binary) 404.68 225 T
-0.34 (encodings to ASCII encoding.) 201.6 213 P
6 F
-0.44 0.36 (textProc) 311.3 213 B
4 F
-0.34 ( is responsible for dealing with errors resulting from) 347.15 213 P
(handling the text, such as \336le system or) 201.6 201 T
(I/O errors.) 345.64 201 T
FMENDPAGE
%%EndPage: "44" 45
%%Page: "45" 45
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(6  X-Specific Data and Procedures) 361.62 29.83 T
( 45) 522.19 29.83 T
78 72 534 708 R
7 X
V
0 9 Q
0 X
(DPSDefaultT) 82.4 702.66 T
(extBackstop) 136.16 702.66 T
7 8.5 Q
-0.17 (void DPSDefaultTextBackstop\050ctxt, buf, count\051) 201.6 702.66 S
-0.17 (DPSContext ctxt;) 213.6 691.33 S
-0.17 (char *buf;) 213.6 679.83 S
-0.17 (unsigned count;) 213.6 668.33 S
0 9 Q
(DPSDefaultT) 201.6 644.5 T
(extBackstop) 255.36 644.5 T
4 F
( is the text backstop procedure automatically installed by) 308.8 644.5 T
(DPS/X. Since it is of type) 201.6 632.5 T
6 F
0.36 (DPSTextProc) 296.72 632.5 S
4 F
(, you may use it as your context) 355.12 632.5 T
6 F
0.36 (textProc) 471.69 632.5 S
4 F
(. The) 507.54 632.5 T
(text backstop procedure writes text to) 201.6 620.5 T
6 F
0.36 (stdout) 338.88 620.5 S
4 F
( and \337ushes) 365.52 620.5 T
6 F
0.36 (stdout) 410.21 620.5 S
4 F
(.) 436.85 620.5 T
0 F
(DPSDestroyContext) 104.21 576.16 T
7 8.5 Q
-0.17 (void DPSDestroyContext\050ctxt\051) 201.6 576.16 S
-0.17 (DPSContext ctxt;) 213.6 564.83 S
0 9 Q
(DPSDestroyContext) 201.6 541 T
4 F
( is as de\336ned in the) 286.99 541 T
1 F
(Client Library Refer) 358.39 541 T
(ence Manual) 431.45 541 T
4 F
(, except as it) 478.12 541 T
(pertains to shared contexts.) 201.6 529 T
(Both the client and the server are af) 201.6 506 T
(fected by this procedure. On the client side,) 329.47 506 T
0 F
(DPSDestroyContext) 201.6 494 T
4 F
( destroys the) 286.99 494 T
6 F
0.36 (DPSContextRec) 334.67 494 S
4 F
(. On the server side, it destroys the) 404.77 494 T
(PostScript execution context and the X resource associated with it. After a call to) 201.6 482 T
0 F
(DPSDestroyContext) 201.6 470 T
4 F
(, the) 286.99 470 T
6 F
0.36 (DPSContext) 304.71 470 S
4 F
( handle for) 357.76 470 T
6 F
0.36 (ctxt) 398.94 470 S
4 F
( is no longer valid.) 414.36 470 T
-0.31 (If the context is a shared context \050that is, a) 201.6 447 P
6 F
-0.4 0.36 (DPSContextRec) 352.97 447 B
4 F
-0.31 ( allocated for a context created) 423.08 447 P
(by another client\051, only the) 201.6 435 T
6 F
0.36 (DPSContextRec) 300.95 435 S
4 F
( is destroyed; the interpreter context and) 371.05 435 T
(resource are unchanged.) 201.6 423 T
(For text contexts,) 201.6 400 T
0 F
(DPSDestroyContext) 266.51 400 T
4 F
( destroys the) 351.9 400 T
6 F
0.36 (DPSContextRec) 399.58 400 S
4 F
(.) 469.68 400 T
0 F
(DPSDestroySpace) 111.18 355.66 T
7 8.5 Q
-0.17 (void DPSDestroySpace\050spc\051) 201.6 355.66 S
-0.17 (DPSSpace spc;) 213.6 344.33 S
0 9 Q
-0.3 (DPSDestroySpace) 201.6 320.5 P
4 F
-0.27 ( is as de\336ned in the) 280.02 320.5 P
1 F
-0.27 (Client Library Refer) 349.78 320.5 P
-0.27 (ence Manual) 422.3 320.5 P
4 F
-0.27 ( except for shared) 468.7 320.5 P
(spaces.) 201.6 308.5 T
(For spaces created by the client, this procedure destroys the space and the X resource) 201.6 285.5 T
-0.15 (associated with it. PostScript execution contexts that use this space are also destroyed, along) 201.6 273.5 P
(with their X resources and) 201.6 261.5 T
6 F
0.36 (DPSContextRec) 298.69 261.5 S
4 F
( records. Finally) 368.8 261.5 T
(, the) 426.87 261.5 T
6 F
0.36 (DPSSpaceRec) 444.6 261.5 S
4 F
( is) 508.49 261.5 T
(destroyed.) 201.6 249.5 T
-0.14 (If the space is a shared space \050a) 201.6 226.5 P
6 F
-0.18 0.36 (DPSSpaceRec) 315.75 226.5 B
4 F
-0.14 ( allocated by another client\051, the space and) 379.65 226.5 P
(the X resource are not destroyed. Only the) 201.6 214.5 T
6 F
0.36 (DPSSpaceRec) 356.09 214.5 S
4 F
( is destroyed, along with any) 419.99 214.5 T
6 F
-0.38 0.36 (DPSContextRec) 201.6 202.5 B
4 F
-0.29 ( records for contexts associated with this space. See section 4.7, \322Sharing) 271.71 202.5 P
(Resources,\323 for a discussion of shared resources.) 201.6 190.5 T
(If the client that created the space destroys it and there are other clients sharing it, the space) 201.6 167.5 T
(is destroyed and the sharing clients will experience unpredictable results.) 201.6 155.5 T
FMENDPAGE
%%EndPage: "45" 46
%%Page: "46" 46
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(46) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
0 9 Q
0 X
(DPSNewUserObjectIndex) 81.22 702.66 T
7 8.5 Q
-0.17 (long int DPSNewUserObjectIndex\050) 201.6 702.66 S
-0.17 (\051;) 359.35 702.66 S
0 9 Q
-0.22 (DPSNewUserObjectIndex) 201.6 667.5 P
4 F
-0.2 ( returns a new user object index. The Client Library is the sole) 309.98 667.5 P
(allocator of new user object indices. The application should not attempt to compute them) 201.6 655.5 T
(from a previously obtained index. Because user object indices are dynamic, they should not) 201.6 643.5 T
(be used as numeric values for computation or saved in long-term storage such as a \336le. See) 201.6 631.5 T
(\322User Object Indices\323 in section 3.3, \322Execution,\323 for more information.) 201.6 619.5 T
0 F
(XDPSContextFromSharedID) 80.5 575.16 T
7 8.5 Q
-0.17 (DPSContext XDPSContextFromSharedID\050dpy, cid, textProc, errorProc\051) 201.6 575.16 S
-0.17 (Display *dpy;) 213.6 563.83 S
-0.17 (ContextPSID cid;) 213.6 552.33 S
-0.17 (DPSTextProc textProc;) 213.6 540.83 S
-0.17 (DPSErrorProc errorProc;) 213.6 529.33 S
0 9 Q
-0.37 (XDPSContextFromSharedID) 201.6 505.5 P
4 F
-0.33 ( creates a) 321.45 505.5 P
6 F
-0.42 0.36 (DPSContextRec) 356.14 505.5 B
4 F
-0.33 ( for a context that was created) 426.24 505.5 P
(by another client.) 201.6 493.5 T
6 F
-0.08 0.36 (cid) 201.6 470.5 B
4 F
-0.06 ( speci\336es the context. \050) 214.16 470.5 P
6 F
-0.08 0.36 (cid) 296.53 470.5 B
4 F
-0.06 ( is the context identi\336er assigned by the) 309.09 470.5 P
-0.06 (PostScript interpreter) 453.36 470.5 P
-0.06 (,) 529.57 470.5 P
-0.17 (not the X resource ID.\051) 201.6 458.5 P
6 F
-0.21 0.36 (dpy) 286.12 458.5 B
4 F
-0.17 ( is the) 301.69 458.5 P
6 F
-0.21 0.36 (Display) 324.9 458.5 B
4 F
-0.17 ( that both clients are connected to.) 356.88 458.5 P
6 F
-0.21 0.36 (textProc) 481.02 458.5 B
4 F
-0.17 ( and) 516.86 458.5 P
6 F
-0.2 0.36 (errorProc) 201.6 446.5 B
4 F
-0.15 ( are the context text and error handlers for the shared context. For information on) 242.29 446.5 P
(sharing resources, see section 4.7, \322Sharing Resources.\323) 201.6 434.5 T
0 F
(XDPSContextFromXID) 94.22 390.16 T
7 8.5 Q
-0.17 (DPSContext XDPSContextFromXID\050dpy, xid\051) 201.6 390.16 S
-0.17 (Display *dpy;) 213.6 378.83 S
-0.17 (XID xid;) 213.6 367.33 S
0 9 Q
(XDPSContextFromXID) 201.6 343.5 T
4 F
( gets the context record for the given X resource ID on) 296.98 343.5 T
6 F
0.36 (dpy) 495.64 343.5 S
4 F
(. It) 510.62 343.5 T
(returns) 201.6 331.5 T
6 F
0.36 (NULL) 228.8 331.5 S
4 F
( if) 253.22 331.5 T
6 F
0.36 (xid) 263.2 331.5 S
4 F
( is not valid.) 275.77 331.5 T
0 F
(XDPSCreateContext) 103.71 287.16 T
7 8.5 Q
-0.17 (DPSContext XDPSCreateContext\050dpy, drawable, gc, x, y, eventmask,) 201.6 287.16 S
-0.17 (grayramp, ccube, actual, textProc, errorProc, space\051) 225.6 275.83 S
-0.17 (Display *dpy;) 213.6 264.33 S
-0.17 (Drawable drawable;) 213.6 252.83 S
-0.17 (GC gc;) 213.6 241.33 S
-0.17 (int x;) 213.6 229.83 S
-0.17 (int y;) 213.6 218.33 S
-0.17 (unsigned int eventmask;) 213.6 206.83 S
-0.17 (XStandardColormap *grayramp;) 213.6 195.33 S
-0.17 (XStandardColormap *ccube;) 213.6 183.83 S
-0.17 (int actual;) 213.6 172.33 S
-0.17 (DPSTextProc textProc;) 213.6 160.83 S
-0.17 (DPSErrorProc errorProc;) 213.6 149.33 S
-0.17 (DPSSpace space;) 213.6 137.83 S
0 9 Q
(XDPSCreateContext) 201.6 114 T
4 F
( creates a context with a customized colormap; it returns) 287.49 114 T
6 F
0.36 (NULL) 492.67 114 S
4 F
( if) 517.08 114 T
(there is any error) 201.6 102 T
(.) 262.25 102 T
FMENDPAGE
%%EndPage: "46" 47
%%Page: "47" 47
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(6  X-Specific Data and Procedures) 361.62 29.83 T
( 47) 522.19 29.83 T
78 72 534 708 R
7 X
V
6 9 Q
0 X
0.36 (dpy) 201.6 702 S
4 F
(,) 216.58 702 T
6 F
0.36 (drawable) 221.08 702 S
4 F
(,) 260.42 702 T
6 F
0.36 (gc) 264.91 702 S
4 F
(,) 275.12 702 T
6 F
0.36 (x) 279.61 702 S
4 F
(,) 284.47 702 T
6 F
0.36 (y) 288.96 702 S
4 F
(,) 293.23 702 T
6 F
0.36 (textProc) 297.73 702 S
4 F
(,) 333.57 702 T
6 F
0.36 (errorProc) 338.06 702 S
4 F
(, and) 378.75 702 T
6 F
0.36 (space) 398.47 702 S
4 F
( are the same as for) 424.25 702 T
0 F
(XDPSCreateSimpleContext) 201.6 690 T
4 F
(.) 316.96 690 T
6 F
0.36 (eventmask) 321.46 690 S
4 F
( is reserved for future extensions and should) 368.15 690 T
(be passed as zero.) 201.6 678 T
(The colormap speci\336ed in) 201.6 655 T
6 F
0.36 (grayramp) 297.45 655 S
4 F
( and) 338.28 655 T
6 F
0.36 (ccube) 355.76 655 S
4 F
( must contain a range of uniformly) 381.53 655 T
(distributed colors.) 201.6 643 T
6 F
0.36 (grayramp) 268.75 643 S
4 F
( speci\336es the factors needed to compute a pixel value for a) 309.59 643 T
-0.12 (particular gray level.) 201.6 631 P
6 F
-0.15 0.36 (grayramp) 278.12 631 B
4 F
-0.12 ( is required.) 318.95 631 P
6 F
-0.15 0.36 (ccube) 363.53 631 B
4 F
-0.12 ( speci\336es the factors needed to compute) 389.3 631 P
(a pixel value for a particular RGB color) 201.6 619 T
(.) 344.12 619 T
6 F
0.36 (ccube) 348.62 619 S
4 F
( is optional; if it is passed as) 374.39 619 T
6 F
0.36 (NULL) 478.25 619 S
4 F
(,) 502.66 619 T
-0.25 (rendering will be done in shades of gray) 201.6 607 P
-0.25 (. The colormap speci\336ed in) 343.76 607 P
6 F
-0.32 0.36 (ccube) 442.84 607 B
4 F
-0.25 ( must be the same) 468.62 607 P
(as the one speci\336ed in) 201.6 595 T
6 F
0.36 (grayramp) 283.22 595 S
4 F
(.) 324.06 595 T
6 F
0.36 (actual) 328.55 595 S
4 F
( speci\336es the upper limit of the number of) 354.69 595 T
-0.26 (additional RGB colors the application plans to request, beyond those speci\336ed in) 201.6 583 P
6 F
-0.33 0.36 (ccube) 491.27 583 B
4 F
-0.26 ( and) 517.05 583 P
6 F
0.36 (grayramp) 201.6 571 S
4 F
(.) 242.43 571 T
(The following restrictions apply:) 201.6 548 T
(\245) 201.6 525 T
6 F
0.36 (drawable) 213.6 525 S
4 F
( and) 252.94 525 T
6 F
0.36 (gc) 270.41 525 S
4 F
( must be on the same screen.) 280.62 525 T
(\245) 201.6 502 T
6 F
0.36 (drawable) 213.6 502 S
4 F
( and) 252.94 502 T
6 F
0.36 (gc) 270.41 502 S
4 F
( must have the same depth) 280.62 502 T
6 F
0.36 (Visual) 377.97 502 S
4 F
(.) 404.61 502 T
(\245) 201.6 479 T
(If the) 213.6 479 T
6 F
0.36 (drawable) 235.06 479 S
4 F
( is a) 274.4 479 T
6 F
0.36 (Window) 291.13 479 S
4 F
(, any colormaps speci\336ed must have the same) 324.66 479 T
6 F
0.36 (Visual) 491.15 479 S
4 F
(.) 517.79 479 T
(\245) 201.6 456 T
6 F
0.36 (grayramp) 213.6 456 S
4 F
( must be speci\336ed;) 254.43 456 T
6 F
0.36 (ccube) 323.83 456 S
4 F
( is optional; both must be valid.) 349.61 456 T
(See section 3.2, \322Creating a Context,\323 for additional information.) 201.6 433 T
0 F
(XDPSCreateSimpleContext) 78 388.66 T
7 8.5 Q
-0.17 (DPSContext XDPSCreateSimpleContext\050dpy, drawable, gc, x, y,) 201.6 388.66 S
-0.17 (textProc, errorProc, space\051) 231.6 377.66 S
-0.17 (Display *dpy;) 213.6 366.33 S
-0.17 (Drawable drawable;) 213.6 354.83 S
-0.17 (GC gc;) 213.6 343.33 S
-0.17 (int x;) 213.6 331.83 S
-0.17 (int y;) 213.6 320.33 S
-0.17 (DPSTextProc textProc;) 213.6 308.83 S
-0.17 (DPSErrorProc errorProc;) 213.6 297.33 S
-0.17 (DPSSpace space;) 213.6 285.83 S
0 9 Q
(XDPSCreateSimpleContext) 201.6 262 T
4 F
( creates a context with the default colormap; it returns) 316.96 262 T
6 F
0.36 (NULL) 201.6 250 S
4 F
( if there is any error) 226.01 250 T
(.) 296.64 250 T
(The procedure creates a context associated with) 201.6 227 T
6 F
0.36 (dpy) 375.55 227 S
4 F
(,) 390.54 227 T
6 F
0.36 (drawable) 395.03 227 S
4 F
(, and) 434.37 227 T
6 F
0.36 (gc) 454.09 227 S
4 F
(.) 464.3 227 T
6 F
-0.06 0.36 (x) 201.6 204 B
4 F
-0.05 ( and) 206.45 204 P
6 F
-0.06 0.36 (y) 223.82 204 B
4 F
-0.05 ( are of) 228.68 204 P
-0.05 (fsets from the) 251.37 204 P
6 F
-0.06 0.36 (drawable) 302.89 204 B
4 F
-0.05 ( origin to the PostScript device space origin in pixels.) 342.23 204 P
6 F
0.36 (textProc) 201.6 181 S
4 F
( points to the procedure that will be called to handle text output from the context.) 237.44 181 T
6 F
0.36 (errorProc) 201.6 169 S
4 F
( points to the procedure that will be called to handle errors reported by the) 242.29 169 T
-0.21 (context.) 201.6 157 P
6 F
-0.26 0.36 (space) 232.35 157 B
4 F
-0.21 ( determines the private VM of the new context. A) 258.12 157 P
6 F
-0.26 0.36 (NULL) 437.01 157 B
4 F
-0.21 ( space causes a new) 461.42 157 P
(one to be created.) 201.6 145 T
(The following restrictions apply:) 201.6 122 T
(\245) 201.6 99 T
6 F
0.36 (drawable) 213.6 99 S
4 F
( and) 252.94 99 T
6 F
0.36 (gc) 270.41 99 S
4 F
( must be on the same screen.) 280.62 99 T
(\245) 201.6 76 T
6 F
0.36 (drawable) 213.6 76 S
4 F
( and) 252.94 76 T
6 F
0.36 (gc) 270.41 76 S
4 F
( must have the same depth) 280.62 76 T
6 F
0.36 (Visual) 377.97 76 S
4 F
(.) 404.61 76 T
FMENDPAGE
%%EndPage: "47" 48
%%Page: "48" 48
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(48) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(See section 3.2, \322Creating a Context,\323 for additional information.) 201.6 702 T
0 F
(XDPSDispatchEvent) 102.7 657.66 T
7 8.5 Q
-0.17 (Bool XDPSDispatchEvent \050event\051) 201.6 657.66 S
-0.17 (XEvent *event;) 213.6 646.33 S
0 9 Q
(XDPSDispatchEvent) 201.6 622.5 T
4 F
( checks whether an event is a Display PostScript event and, if so,) 288.5 622.5 T
(dispatches it to the appropriate status or output handler) 201.6 610.5 T
(, as follows:) 398.44 610.5 T
(\245) 201.6 587.5 T
-0.01 (If the event is not a Display PostScript event,) 213.6 587.5 P
0 F
-0.01 (XDPSDispatchEvent) 378.25 587.5 P
4 F
-0.01 ( returns) 465.15 587.5 P
6 F
-0.01 (False) 494.58 587.5 P
4 F
-0.01 ( and) 516.55 587.5 P
(does nothing else.) 213.6 575.5 T
(\245) 201.6 552.5 T
-0.28 (If the event is a Display PostScript event,) 213.6 552.5 P
0 F
-0.31 (XDPSDispatchEvent) 362.36 552.5 P
4 F
-0.28 ( determines the context) 449.26 552.5 P
(from the event, calls the context\325) 213.6 540.5 T
(s status or output handler) 331.42 540.5 T
(, and returns) 421.42 540.5 T
6 F
(T) 468.35 540.5 T
(rue) 473.17 540.5 T
4 F
(.) 486.16 540.5 T
(This procedure is not available in early versions of the Client Library) 201.6 517.5 T
(.) 449.88 517.5 T
0 F
(XDPSFindContext) 112.7 473.16 T
7 8.5 Q
-0.17 (DPSContext XDPSFindContext\050dpy, cid\051) 201.6 473.16 S
-0.17 (Display *dpy;) 213.6 461.83 S
-0.17 (long int cid;) 213.6 450.33 S
0 9 Q
(XDPSFindContext) 201.6 426.5 T
4 F
( returns the) 278.5 426.5 T
6 F
(DPSContext) 321.18 426.5 T
4 F
( handle of a context given its context) 370.63 426.5 T
(identi\336er) 201.6 414.5 T
(,) 233.69 414.5 T
6 F
(cid) 238.19 414.5 T
4 F
(. It returns) 249.67 414.5 T
6 F
(NULL) 289.11 414.5 T
4 F
( if the context identi\336er is invalid.) 312.08 414.5 T
0 F
(XDPSGetContextStatus) 89.23 370.16 T
7 8.5 Q
-0.17 (int XDPSGetContextStatus\050ctxt\051) 201.6 370.16 S
-0.17 (DPSContext ctxt;) 213.6 358.83 S
0 9 Q
-0.27 (XDPSGetContextStatus) 201.6 335 P
4 F
-0.24 ( returns the status of) 301.97 335 P
6 F
-0.27 (ctxt) 375.91 335 P
4 F
-0.24 (. This procedure does not alter the mask) 389.89 335 P
(established for) 201.6 323 T
6 F
(ctxt) 256.51 323 T
4 F
( by) 270.5 323 T
0 F
(XDPSSetStatusMask) 283.98 323 T
4 F
(. For information on status events, see) 372.38 323 T
(section 3.4 and 6.1.) 201.6 311 T
0 F
(XDPSGetDefaultColorMaps) 78 266.66 T
7 8.5 Q
-0.17 (void XDPSGetDefaultColorMaps \050dpy, screen, drawable, colorcube,) 201.6 266.66 S
-0.17 (grayramp\051) 201.6 255.66 S
-0.17 (Display *dpy;) 213.6 244.33 S
-0.17 (Screen *screen;) 213.6 232.83 S
-0.17 (Drawable drawable;) 213.6 221.33 S
-0.17 (XStandardColormap *colorcube;) 213.6 209.83 S
-0.17 (XStandardColormap *grayramp;) 213.6 198.33 S
0 9 Q
(XDPSGetDefaultColorMaps) 201.6 174.5 T
4 F
( returns the colormaps used in creating a simple context.) 317.95 174.5 T
(The display must be speci\336ed.) 201.6 162.5 T
(\245) 201.6 139.5 T
(If) 213.6 139.5 T
6 F
(screen) 221.83 139.5 T
4 F
( is) 248.8 139.5 T
6 F
(NULL) 259.29 139.5 T
4 F
( and) 282.26 139.5 T
6 F
(drawable) 299.73 139.5 T
4 F
( is) 336.2 139.5 T
6 F
(None) 346.69 139.5 T
4 F
(, the colormaps are retrieved for the default) 368.17 139.5 T
(screen of the display) 213.6 127.5 T
(.) 287.14 127.5 T
(\245) 201.6 104.5 T
(If) 213.6 104.5 T
6 F
(screen) 221.83 104.5 T
4 F
( is) 248.8 104.5 T
6 F
(NULL) 259.29 104.5 T
4 F
( and) 282.26 104.5 T
6 F
(drawable) 299.73 104.5 T
4 F
( is not) 336.2 104.5 T
6 F
(None) 360.42 104.5 T
4 F
(, the colormaps are retrieved for the) 381.9 104.5 T
(drawable\325) 213.6 92.5 T
(s screen.) 249.04 92.5 T
FMENDPAGE
%%EndPage: "48" 49
%%Page: "49" 49
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(6  X-Specific Data and Procedures) 361.62 29.83 T
( 49) 522.19 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(\245) 201.6 702 T
(If) 213.6 702 T
6 F
(screen) 221.83 702 T
4 F
( is not) 248.8 702 T
6 F
(NULL) 273.02 702 T
4 F
(, the colormaps are retrieved for that screen.) 296 702 T
(Either) 201.6 679 T
6 F
(colorcube) 225.81 679 T
4 F
( or) 264.77 679 T
6 F
(grayramp) 276.75 679 T
4 F
( may be) 314.71 679 T
6 F
(NULL) 345.41 679 T
4 F
(, indicating that the colormap is not needed.) 368.38 679 T
(This procedure is not available in early versions of the Client Library) 201.6 656 T
(.) 449.88 656 T
0 F
( XDPSIsDPSEvent) 112.18 611.66 T
7 8.5 Q
-0.17 (Bool XDPSIsDPSEvent \050event\051) 201.6 611.66 S
-0.17 (XEvent *event;) 213.6 600.33 S
0 9 Q
(XDPSIsDPSEvent) 201.6 576.5 T
4 F
( returns) 276.52 576.5 T
6 F
(T) 305.97 576.5 T
(rue) 310.8 576.5 T
4 F
( if the event is a Display PostScript event and) 323.78 576.5 T
6 F
(False) 489.54 576.5 T
4 F
(otherwise.) 201.6 564.5 T
(This procedure is not available in early versions of the Client Library) 201.6 541.5 T
(.) 449.88 541.5 T
0 F
( XDPSIsOutputEvent) 101.21 497.16 T
7 8.5 Q
-0.17 (Bool XDPSIsOutputEvent \050event\051) 201.6 497.16 S
-0.17 (XEvent *event;) 213.6 485.83 S
0 9 Q
(XDPSIsOutputEvent) 201.6 462 T
4 F
( returns) 287.49 462 T
6 F
(T) 316.95 462 T
(rue) 321.77 462 T
4 F
( if) 334.76 462 T
6 F
(event) 344.74 462 T
4 F
( is a Display PostScript output event and) 366.73 462 T
6 F
(False) 201.6 450 T
4 F
( otherwise.) 223.57 450 T
-0.03 (The contents of an output event are not de\336ned. If) 201.6 427 P
0 F
-0.04 (XDPSIsOutputEvent) 383.24 427 P
4 F
-0.03 ( returns) 469.14 427 P
6 F
-0.04 (T) 498.53 427 P
-0.04 (rue) 503.35 427 P
4 F
-0.03 (, the) 516.34 427 P
-0.31 (event must be passed to) 201.6 415 P
0 F
-0.34 (XDPSDispatchEvent) 287.68 415 P
4 F
-0.31 (. If the application does not pass the event to) 374.58 415 P
0 F
(XDPSDispatchEvent) 201.6 403 T
4 F
(, the results are unde\336ned.) 288.5 403 T
(This procedure is not available in early versions of the Client Library) 201.6 380 T
(.) 449.88 380 T
0 F
(XDPSIsStatusEvent) 105.69 335.66 T
7 8.5 Q
-0.17 (Bool XDPSIsStatusEvent \050event, ctxt, status\051) 201.6 335.66 S
-0.17 (XEvent *event;) 213.6 324.33 S
-0.17 (DPSContext *ctxt;) 213.6 312.83 S
-0.17 (int *status;) 213.6 301.33 S
0 9 Q
-0.06 (XDPSIsStatusEvent) 201.6 277.5 P
4 F
-0.06 ( returns) 285.51 277.5 P
6 F
-0.06 (T) 314.84 277.5 P
-0.06 (rue) 319.67 277.5 P
4 F
-0.06 ( if) 332.65 277.5 P
6 F
-0.06 (event) 342.52 277.5 P
4 F
-0.06 ( is a Display PostScript status event and) 364.51 277.5 P
6 F
-0.06 (False) 509.84 277.5 P
4 F
(otherwise. If the event is a status event,) 201.6 265.5 T
6 F
(ctxt) 345.37 265.5 T
4 F
( and) 359.36 265.5 T
6 F
(status) 376.83 265.5 T
4 F
( are set to that event\325) 400.81 265.5 T
(s context and) 475.44 265.5 T
(status. Either) 201.6 253.5 T
6 F
(ctxt) 250.78 253.5 T
4 F
( or) 264.76 253.5 T
6 F
(status) 276.74 253.5 T
4 F
( can be) 300.72 253.5 T
6 F
(NULL) 328.42 253.5 T
4 F
( if the information is not needed.) 351.39 253.5 T
(The contents of a status event is not de\336ned; the returned context and status values are the) 201.6 230.5 T
(only way to extract the information from the event.) 201.6 218.5 T
(This procedure is not available in early versions of the Client Library) 201.6 195.5 T
(.) 449.88 195.5 T
0 F
(XDPSRegisterStatusProc) 81.72 151.16 T
7 8.5 Q
-0.17 (XDPSStatusProc XDPSRegisterStatusProc\050ctxt, proc\051) 201.6 151.16 S
-0.17 (DPSContext ctxt;) 213.6 139.83 S
-0.17 (XDPSStatusProc proc;) 213.6 128.33 S
0 9 Q
(XDPSRegisterStatusProc) 201.6 104.5 T
4 F
( registers a status event handler) 309.48 104.5 T
(,) 421.68 104.5 T
6 F
(proc) 426.18 104.5 T
4 F
(, to be called when a) 443.66 104.5 T
(status event is received by the client for the context speci\336ed by) 201.6 92.5 T
6 F
(ctxt) 433.74 92.5 T
4 F
(. The status event) 447.72 92.5 T
(handler may be called by Xlib any time the client gets events or checks for events.) 201.6 80.5 T
FMENDPAGE
%%EndPage: "49" 50
%%Page: "50" 50
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(50) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
6 9 Q
0 X
(XDPSStatusProc) 201.6 702 T
4 F
( replaces the previously registered status event handler for the context, if) 270.03 702 T
(any) 201.6 690 T
(.) 213.99 690 T
6 F
(proc) 218.49 690 T
4 F
( handles only status events generated by) 235.97 690 T
6 F
(ctxt) 382.49 690 T
4 F
(; if the application has more than one) 396.47 690 T
(context,) 201.6 678 T
0 F
(XDPSRegisterStatusProc) 232.55 678 T
4 F
( must be called separately for each context.) 340.43 678 T
0 F
-0.13 (XDPSRegisterStatusProc) 201.6 655 P
4 F
-0.11 ( returns the old status procedure when a new one is registered.) 309.48 655 P
(In early versions of the Client Library) 201.6 632 T
(, this procedure returns) 337.3 632 T
6 F
(void) 422.41 632 T
4 F
(.) 438.89 632 T
0 F
(XDPSSetEventDelivery) 91.7 587.66 T
7 8.5 Q
-0.17 (DPSEventDelivery XDPSSetEventDelivery \050dpy, newMode\051) 201.6 587.66 S
-0.17 (Display *dpy;) 213.6 576.33 S
-0.17 (DPSEventDelivery newMode;) 213.6 564.83 S
4 9 Q
(An application can call) 201.6 541 T
0 F
(XDPSSetEventDelivery) 286.96 541 T
4 F
( to change or query how the Client) 384.86 541 T
(Library delivers events.) 201.6 529 T
0 F
-0.44 (XDPSSetEventDelivery) 201.6 506 P
4 F
-0.4 ( always returns the previous event delivery mode for the speci\336ed) 299.5 506 P
(display) 201.6 494 T
(.) 226.98 494 T
(\245) 201.6 471 T
(If) 213.6 471 T
6 F
(newMode) 221.83 471 T
4 F
( is) 260.79 471 T
6 F
(dps_event_query) 271.28 471 T
4 F
(,) 339.64 471 T
0 F
(XDPSSetEventDelivery) 344.13 471 T
4 F
( does nothing else.) 442.03 471 T
(\245) 201.6 448 T
(If) 213.6 448 T
6 F
(newMode) 221.83 448 T
4 F
( is) 260.79 448 T
6 F
(dps_event_internal_dispatch) 271.28 448 T
4 F
(, the Client Library dispatches events) 385.68 448 T
(internally without passing them to the application. This is the default value.) 213.6 436 T
(\245) 201.6 413 T
(If) 213.6 413 T
6 F
(newMode) 221.83 413 T
4 F
( is) 260.79 413 T
6 F
(dps_event_pass_through) 271.28 413 T
4 F
(, the Client Library stops dispatching events) 372.2 413 T
(internally and passes them through to the application as normal X events.) 213.6 401 T
(This procedure is not available in early versions of the Client Library) 201.6 378 T
(.) 449.88 378 T
0 F
(XDPSSetStatusMask) 101.2 333.66 T
7 8.5 Q
-0.17 (void XDPSSetStatusMask\050ctxt, enableMask, disableMask, nextMask\051) 201.6 333.66 S
-0.17 (DPSContext ctxt;) 213.6 322.33 S
-0.17 (unsigned long enableMask, disableMask, nextMask;) 213.6 310.83 S
0 9 Q
(XDPSSetStatusMask) 201.6 287 T
4 F
( sets the status mask for the context, as follows:) 290 287 T
(\245) 201.6 264 T
6 F
(enableMask) 213.6 264 T
4 F
( speci\336es status events for which continuing noti\336cation to the client is) 262.05 264 T
(requested.) 213.6 252 T
(\245) 201.6 229 T
6 F
(disableMask) 213.6 229 T
4 F
( speci\336es status events for which the client does not want to be noti\336ed.) 263.54 229 T
(\245) 201.6 206 T
6 F
(nextMask) 213.6 206 T
4 F
( speci\336es status events for which the client wants to be noti\336ed of the next) 252.06 206 T
(occurrence only) 213.6 194 T
(. Setting) 270.66 194 T
6 F
(nextMask) 302.87 194 T
4 F
( is equivalent to setting) 341.33 194 T
6 F
(enableMask) 426.96 194 T
4 F
( for a status) 475.41 194 T
-0.2 (event and, after being noti\336ed of the next) 213.6 182 P
-0.2 (occurrence, setting) 362.51 182 P
6 F
-0.22 (disableMask) 432.24 182 P
4 F
-0.2 ( for that event.) 482.18 182 P
(A given status event type may be set in only one of the three status masks. If an event is set) 201.6 159 T
(in more than one mask, a protocol error \050) 201.6 147 T
6 F
(V) 349.11 147 T
(alue) 354.77 147 T
4 F
(\051 is generated and the context is left) 371.76 147 T
(unchanged. For more information on status events, see sections 3.4 and 6.1.) 201.6 135 T
FMENDPAGE
%%EndPage: "50" 51
%%Page: "51" 51
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(7  X-Specific Custom PostScript Operators) 331.41 29.83 T
( 51) 522.19 29.83 T
78 72 534 708 R
7 X
V
0 9 Q
0 X
(XDPSSpaceFromSharedID) 78 702.66 T
7 8.5 Q
-0.17 (DPSSpace XDPSSpaceFromSharedID\050dpy, sxid\051) 201.6 702.66 S
-0.17 (Display *dpy;) 213.6 691.33 S
-0.17 (SpaceXID sxid;) 213.6 679.83 S
0 9 Q
(XDPSSpaceFromSharedID) 201.6 656 T
4 F
( creates a) 314.47 656 T
6 F
(DPSSpaceRec) 350.15 656 T
4 F
( for the space identi\336ed by an X) 410.09 656 T
-0.15 (resource ID,) 201.6 644 P
6 F
-0.17 (sxid) 247.96 644 P
4 F
-0.15 (, that was created by another client.) 263.94 644 P
6 F
-0.17 (dpy) 392.41 644 P
4 F
-0.15 ( is the) 406.9 644 P
6 F
-0.17 (Display) 430.16 644 P
4 F
-0.15 ( that both clients are) 459.62 644 P
(connected to.) 201.6 632 T
0 F
(XDPSSpaceFromSharedID) 251.77 632 T
4 F
( returns) 364.64 632 T
6 F
(NULL) 394.09 632 T
4 F
( if) 417.07 632 T
6 F
(sxid) 427.05 632 T
4 F
( is not valid.) 443.03 632 T
0 F
(XDPSSpaceFromXID) 101.2 587.66 T
7 8.5 Q
-0.17 (DPSSpace XDPSSpaceFromXID\050dpy, xid\051) 201.6 587.66 S
-0.17 (Display *dpy;) 213.6 576.33 S
-0.17 (XID xid;) 213.6 564.83 S
0 9 Q
-0.11 (XDPSSpaceFromXID) 201.6 541 P
4 F
-0.1 ( gets the space record for the given X resource ID on) 290 541 P
6 F
-0.11 (dpy) 480.96 541 P
4 F
-0.1 (. It returns) 494.86 541 P
6 F
(NULL) 201.6 529 T
4 F
( if) 224.57 529 T
6 F
(xid) 234.56 529 T
4 F
( is not valid.) 246.04 529 T
0 F
(XDPSUnfreezeContext) 93.72 484.66 T
7 8.5 Q
-0.17 (void XDPSUnfreezeContext\050ctxt\051) 201.6 484.66 S
-0.17 (DPSContext ctxt;) 213.6 473.33 S
0 9 Q
(XDPSUnfreezeContext) 201.6 449.5 T
4 F
( noti\336es a context that is in the) 297.48 449.5 T
6 F
(PSFROZEN) 409.82 449.5 T
4 F
( state to resume) 458.76 449.5 T
(execution. Attempting to unfreeze a context that is not frozen has no ef) 201.6 437.5 T
(fect.) 456.78 437.5 T
0 F
(XDPSXIDFromContext) 94.22 393.16 T
7 8.5 Q
-0.17 (XID XDPSXIDFromContext\050Pdpy, ctxt\051) 201.6 393.16 S
-0.17 (Display **Pdpy;) 213.6 381.83 S
-0.17 (DPSContext ctxt;) 213.6 370.33 S
0 9 Q
-0.28 (XDPSXIDFromContext) 201.6 346.5 P
4 F
-0.26 ( gets the X resource ID for the given context record and returns its) 296.98 346.5 P
6 F
(Display) 201.6 334.5 T
4 F
( in the location pointed to by) 231.06 334.5 T
6 F
(Pdpy) 336.66 334.5 T
4 F
(.) 356.56 334.5 T
6 F
(Pdpy) 361.05 334.5 T
4 F
( is set to) 381.54 334.5 T
6 F
(NULL) 413.5 334.5 T
4 F
( if) 436.47 334.5 T
6 F
(ctxt) 446.45 334.5 T
4 F
( is not a valid) 460.44 334.5 T
(context.) 201.6 322.5 T
0 F
(XDPSXIDFromSpace) 101.2 278.16 T
7 8.5 Q
-0.17 (XID XDPSXIDFromSpace\050Pdpy, spc\051) 201.6 278.16 S
-0.17 (Display **Pdpy;) 213.6 266.83 S
-0.17 (DPSSpace spc;) 213.6 255.33 S
0 9 Q
(XDPSXIDFromSpace) 201.6 231.5 T
4 F
( gets the X resource ID for the given space record and returns its) 290 231.5 T
6 F
(Display) 201.6 219.5 T
4 F
( in the location pointed to by) 231.06 219.5 T
6 F
(Pdpy) 336.66 219.5 T
4 F
(.) 356.56 219.5 T
6 F
(Pdpy) 361.05 219.5 T
4 F
( is set to) 381.54 219.5 T
6 F
(NULL) 413.5 219.5 T
4 F
( if) 436.47 219.5 T
6 F
(spc) 446.45 219.5 T
4 F
( is not a valid space.) 460.44 219.5 T
0 12 Q
(7) 182.93 189.5 T
(X-Speci\336c Custom PostScript Operators) 201.6 189.5 T
4 9 Q
(This section describes the custom PostScript operators for the) 201.6 164.5 T
(Display PostScript system) 425.51 164.5 T
(extension to the X W) 201.6 152.5 T
(indow System. The operators are or) 277.62 152.5 T
(ganized alphabetically by operator) 405.76 152.5 T
(name. Each operator description is presented in the following format:) 201.6 140.5 T
FMENDPAGE
%%EndPage: "51" 52
%%Page: "52" 52
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(52) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
0 9 Q
0 X
(operator) 153.15 702.66 T
6 F
(operand) 201.6 702.66 T
4 6 Q
(1) 234.57 700.66 T
6 9 Q
( operand) 237.57 702.66 T
4 6 Q
(2) 273.05 700.66 T
6 9 Q
( ... operand) 276.05 702.66 T
4 6 Q
(n) 321.51 700.66 T
0 9 Q
(operator) 327.01 702.66 T
6 F
( result) 363.46 702.66 T
4 6 Q
(1) 387.93 700.66 T
6 9 Q
( ... result) 390.93 702.66 T
4 6 Q
(m) 425.4 700.66 T
4 9 Q
(Detailed explanation of the operator) 201.6 680 T
(.) 330.89 680 T
0 F
(Errors) 201.6 656 T
(A list of the errors that this operator might execute.) 255 656 T
4 F
(At the head of an operator description,) 201.6 633 T
6 F
(operand) 342.37 633 T
2 6 Q
(1) 375.35 631 T
4 9 Q
( through) 378.68 633 T
6 F
(operand) 411.13 633 T
2 6 Q
(n) 444.11 631 T
4 9 Q
( are the operands that) 447.44 633 T
(the operator requires, with) 201.6 621 T
6 F
(operand) 298.69 621 T
2 6 Q
(n) 331.67 619 T
4 9 Q
( being the topmost element on the operand stack. The) 335 621 T
-0.11 (operator pops these objects from the operand stack and consumes them. After executing, the) 201.6 609 P
(operator leaves the objects) 201.6 597 T
6 F
(result) 299.44 597 T
2 6 Q
(1) 321.41 595 T
4 9 Q
( through) 324.75 597 T
6 F
(result) 357.2 597 T
2 6 Q
(m) 379.17 595 T
4 9 Q
( on the stack, with) 384.17 597 T
6 F
(result) 452.07 597 T
2 6 Q
(m) 474.04 595 T
4 9 Q
( being the) 479.04 597 T
(topmost element.) 201.6 585 T
(The notation \324\320\325 in the operand position indicates that the operator expects no operands; a \324\320) 201.6 561 T
(\325 in the result position indicates that the operator returns no results.) 201.6 549 T
(Error conditions include the following:) 201.6 525 T
0 F
(rangecheck) 201.6 501 T
4 F
-0.27 (Invalid match: either the) 255 501 P
6 F
-0.3 (drawable) 344.28 501 P
4 F
-0.27 ( and) 380.74 501 P
6 F
-0.3 (gc) 397.68 501 P
4 F
-0.27 ( have dif) 407.17 501 P
-0.27 (ferent depths or they don\325) 437.91 501 P
-0.27 (t) 529.52 501 P
(have a) 255 489 T
6 F
(V) 280.45 489 T
(isual) 286.29 489 T
4 F
( that matches the colormap associated with the context.) 304.76 489 T
0 F
(stackunder\337ow) 201.6 466 T
4 F
(Not enough operands on the operand stack.) 255 454 T
0 F
(typecheck) 201.6 431 T
4 F
(Invalid X resource ID.) 255 431 T
0 F
(unde\336ned) 201.6 408 T
4 F
(The device associated with the context is not a display device.) 255 408 T
0 F
( clientsync) 143.14 363 T
4 F
(\320) 201.6 363 T
0 F
(clientsync) 208.34 363 T
4 F
( \320) 252.3 363 T
-0.28 (The) 201.6 340 P
0 F
-0.31 (clientsync) 217.54 340 P
4 F
-0.28 ( operator synchronizes the application with the current context.) 261.5 340 P
0 F
-0.31 (clientsync) 488.08 340 P
4 F
-0.26 (noti\336es the current context to stop executing, sets the context status to) 201.6 328 P
6 F
-0.28 (FROZEN) 452.4 328 P
4 F
-0.26 (, and causes) 489.35 328 P
(a) 201.6 316 T
6 F
(PSFROZEN) 207.84 316 T
4 F
( status event to be generated. T) 256.77 316 T
(o resume execution, call the) 367.71 316 T
0 F
(XDPSUnfreezeContext) 201.6 304 T
4 F
( procedure.) 297.48 304 T
(For an example of the use of) 201.6 281 T
0 F
(clientsync) 306.68 281 T
4 F
(, see \322Freezing\323 in section 4.8, \322Synchronization.\323) 350.64 281 T
0 F
(currentXgcdrawable) 103.19 236 T
4 F
(\320) 201.6 236 T
0 F
(currentXgcdrawable) 208.34 236 T
4 F
( gc drawable x y) 294.75 236 T
-0.25 (The) 201.6 213 P
0 F
-0.28 (currentXgcdrawable) 217.57 213 P
4 F
-0.25 ( operator returns the X) 303.98 213 P
6 F
-0.28 (gc) 386.35 213 P
4 F
-0.25 (,) 395.84 213 P
6 F
-0.28 (drawable) 400.09 213 P
4 F
-0.25 (, and of) 436.55 213 P
-0.25 (fset from the origin) 463.1 213 P
(of the) 201.6 201 T
6 F
(drawable) 224.56 201 T
4 F
( to the device space origin for the current context. Results returned by this) 261.02 201 T
(operator can be input to) 201.6 189 T
0 F
(setXgcdrawable) 289.21 189 T
4 F
(. The returned) 357.64 189 T
6 F
(gc) 410.55 189 T
4 F
( is a) 420.04 189 T
6 F
(GContext) 436.77 189 T
4 F
( identi\336er) 474.73 189 T
(, not a) 509.07 189 T
6 F
(GC) 201.6 177 T
4 F
( pointer) 215.08 177 T
(.) 242.29 177 T
0 F
(Errors:) 201.6 154 T
(unde\336ned) 255 154 T
FMENDPAGE
%%EndPage: "52" 53
%%Page: "53" 53
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(7  X-Specific Custom PostScript Operators) 331.41 29.83 T
( 53) 522.19 29.83 T
78 72 534 708 R
7 X
V
0 9 Q
0 X
(currentXgcdrawablecolor) 81.22 702 T
4 F
(\320) 201.6 702 T
0 F
(currentXgcdrawablecolor) 208.34 702 T
4 F
( gc drawable x y colorinfo) 316.72 702 T
(The) 201.6 679 T
0 F
(currentXgcdrawablecolor) 217.82 679 T
4 F
( operator is similar to the) 326.2 679 T
0 F
(currentXgcdrawable) 418.57 679 T
4 F
(operator) 201.6 667 T
(, except that it also returns an array of 12) 231.19 667 T
(integers describing the color cube, gray) 380.69 667 T
(ramp, and other color variables used for the context. The returned) 201.6 655 T
6 F
(gc) 439.96 655 T
4 F
( is a) 449.45 655 T
6 F
(GContext) 466.17 655 T
4 F
(identi\336er) 201.6 643 T
(, not a) 233.69 643 T
6 F
(GC) 258.16 643 T
4 F
( pointer) 271.64 643 T
(. The) 298.85 643 T
6 F
(colorinfo) 319.57 643 T
4 F
( array) 353.53 643 T
(, described in T) 373.65 643 T
(able 5, has the following) 428.94 643 T
(form:) 201.6 631 T
7 8.5 Q
-0.17 ([maxgrays graymult firstgray maxred redmult maxgreen greenmult) 215.99 608.33 S
-0.17 (maxblue) 224.39 596.83 S
-0.17 (bluemult firstcolor colormap actual]) 224.39 585.33 S
78 549.49 534 559.5 C
78 549.49 534 559.5 R
7 X
0 K
V
210.12 553.16 562.39 553.16 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
0 8 Q
0 X
0 K
(T) 210 562.16 T
(able 5) 214.29 562.16 T
1 F
(The) 241.41 562.16 T
6 F
(colorinfo) 255.4 562.16 T
1 F
( array) 285.61 562.16 T
78 528.98 534 538.99 C
78 528.98 534 538.99 R
7 X
0 K
V
210.12 535.08 562.39 535.08 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
6 8 Q
0 X
0 K
(V) 210 541.66 T
(alue) 215.04 541.66 T
(Description) 291 541.66 T
(maxgrays) 210 521.65 T
4 F
(Maximum number of gray values. Equivalent to) 291 521.65 T
6 F
(red_max) 446.9 521.65 T
4 F
( \336eld of) 478 521.65 T
6 F
(XStandardColormap) 291 510.65 T
4 F
( for) 363.43 510.65 T
6 F
(GrayScale) 376.75 510.65 T
4 F
( colormaps.) 414.08 510.65 T
6 F
(graymult) 210 494.15 T
4 F
(Scale factor to compute gray pixel. Equivalent to) 291 494.15 T
6 F
(red_mult) 449.78 494.15 T
4 F
( \336eld of) 480.88 494.15 T
6 F
(XStandardColormap) 291 483.15 T
4 F
( for) 363.43 483.15 T
6 F
(GrayScale) 376.75 483.15 T
4 F
( colormaps.) 414.08 483.15 T
6 F
(\336rstgray) 210 466.65 T
4 F
(First gray pixel value. Equivalent to) 291 466.65 T
6 F
(base_pixel) 408.04 466.65 T
4 F
( \336eld of) 446.26 466.65 T
6 F
(XStandardColormap) 291 455.65 T
4 F
( for) 363.43 455.65 T
6 F
(GrayScale) 376.75 455.65 T
4 F
( colormaps.) 414.08 455.65 T
6 F
(maxred) 210 439.15 T
4 F
(Maximum number of red values. Equivalent to) 291 439.15 T
6 F
(red_max) 442.9 439.15 T
4 F
( \336eld of) 474 439.15 T
6 F
(XStandardColormap) 291 428.15 T
4 F
(.) 363.43 428.15 T
6 F
(redmult) 210 411.65 T
4 F
(Scale factor to compute color pixel. Equivalent to) 291 411.65 T
6 F
(red_mult) 452 411.65 T
4 F
( \336eld of) 483.1 411.65 T
6 F
(XStandardColormap) 291 400.65 T
4 F
(.) 363.43 400.65 T
6 F
(maxgreen) 210 384.15 T
4 F
(Maximum number of green values. Equivalent to) 291 384.15 T
6 F
(green_max) 450.45 384.15 T
4 F
( \336eld of) 490.44 384.15 T
6 F
(XStandardColormap) 291 373.15 T
4 F
(.) 363.43 373.15 T
6 F
(greenmult) 210 356.65 T
4 F
(Scale factor to compute color pixel. Equivalent to) 291 356.65 T
6 F
(green_mult) 452 356.65 T
4 F
( \336eld of) 491.99 356.65 T
6 F
(XStandardColormap) 291 345.65 T
4 F
(.) 363.43 345.65 T
6 F
(maxblue) 210 329.15 T
4 F
(Maximum number of blue values. Equivalent to) 291 329.15 T
6 F
(blue_max) 446.46 329.15 T
4 F
( \336eld of) 481.12 329.15 T
6 F
(XStandardColormap) 291 318.15 T
4 F
(.) 363.43 318.15 T
6 F
(bluemult) 210 301.65 T
4 F
(Scale factor to compute color pixel. Equivalent to) 291 301.65 T
6 F
(blue_mult) 452 301.65 T
4 F
( \336eld of) 486.66 301.65 T
6 F
(XStandardColormap) 291 290.65 T
4 F
(.) 363.43 290.65 T
6 F
(\336rstcolor) 210 274.15 T
4 F
(First color pixel value. Equivalent to) 291 274.15 T
6 F
(base_pixel) 410.26 274.15 T
4 F
( \336eld of) 448.48 274.15 T
6 F
(XStandardColormap) 291 263.15 T
4 F
(.) 363.43 263.15 T
6 F
(colormap) 210 246.65 T
4 F
(The colormap that these pixel values are allocated in.) 291 246.65 T
6 F
(actual) 210 230.15 T
4 F
1.37 (The upper limit of additional RGB colors, as in the) 291 230.15 P
6 F
1.52 (actual) 469.66 230.15 P
4 F
1.37 ( ar) 491 230.15 P
1.37 (gument to) 500.43 230.15 P
78 206.47 534 216.48 C
78 206.47 534 216.48 R
7 X
0 K
V
210.12 209.15 562.39 209.15 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
0 8 Q
0 X
0 K
(XDPSCreateContext) 291 219.15 T
4 F
(.) 367.41 219.15 T
0 9 Q
(Errors:) 201.6 185.47 T
(unde\336ned) 255 185.47 T
FMENDPAGE
%%EndPage: "53" 54
%%Page: "54" 54
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(54) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
0 9 Q
0 X
( currentXoffset) 125.68 702 T
4 F
(\320) 201.6 702 T
0 F
(currentXoffset) 208.34 702 T
4 F
( x y) 269.76 702 T
(The) 201.6 679 T
0 F
(currentXoffset) 217.82 679 T
4 F
( operator returns the) 279.24 679 T
6 F
(x) 354.12 679 T
4 F
( and) 358.61 679 T
6 F
(y) 376.08 679 T
4 F
( coordinates representing the of) 380.58 679 T
(fset from) 493.73 679 T
(the origin of the) 201.6 667 T
6 F
(drawable) 261.51 667 T
4 F
( to the device space origin for the) 297.97 667 T
(current context. This operator) 420.27 667 T
-0.13 (returns a subset of the variables returned by) 201.6 655 P
0 F
-0.15 (currentXgcdrawable) 359.78 655 P
4 F
-0.13 (. Its result values can be) 446.19 655 P
(input to) 201.6 643 T
0 F
(setXoffset) 231.56 643 T
4 F
(.) 275.01 643 T
0 F
(Errors:) 201.6 620 T
(unde\336ned) 255 620 T
(setXgcdrawable) 121.17 575 T
4 F
(gc drawable x y) 201.6 575 T
0 F
(setXgcdrawable) 261 575 T
4 F
( \320) 329.43 575 T
(The) 201.6 552 T
0 F
(setXgcdrawable) 217.82 552 T
4 F
( operator sets the X) 286.25 552 T
6 F
(gc) 358.39 552 T
4 F
(,) 367.88 552 T
6 F
(drawable) 372.37 552 T
4 F
(, and of) 408.83 552 T
(fset from the origin of the) 435.88 552 T
6 F
(drawable) 201.6 540 T
4 F
( to the device space origin for the current context. The speci\336ed values override) 238.06 540 T
(any existing values.) 201.6 528 T
(The) 201.6 505 T
6 F
(gc) 217.82 505 T
4 F
( operand is a) 227.31 505 T
6 F
(GContext) 275.23 505 T
4 F
( identi\336er) 313.2 505 T
(, not a) 347.54 505 T
6 F
(GC) 372 505 T
4 F
( pointer) 385.48 505 T
(. Use) 412.7 505 T
0 F
(XGContextFromGC) 433.41 505 T
4 F
( to) 515.8 505 T
(extract a) 201.6 493 T
6 F
(GContext) 234.54 493 T
4 F
( from a) 272.5 493 T
6 F
(GC) 300.7 493 T
4 F
(.) 314.18 493 T
(T) 201.6 470 T
(o temporarily change the values speci\336ed for) 206.46 470 T
0 F
(setXgcdrawable) 370.45 470 T
4 F
(, execute) 438.88 470 T
0 F
(gsave) 473.07 470 T
4 F
( before) 498.55 470 T
(the operator and follow it with) 201.6 458 T
0 F
(grestore) 313.43 458 T
4 F
(.) 349.39 458 T
0 F
(Errors:) 201.6 435 T
(rangecheck, stackunder\337ow) 255 435 T
(, typecheck, unde\336ned) 375.54 435 T
(setXgcdrawablecolor) 99.19 390 T
4 F
(gc drawable x y colorinfo) 201.6 390 T
0 F
(setXgcdrawablecolor) 296.19 390 T
4 F
( \320) 386.6 390 T
(The) 201.6 367 T
0 F
(setXgcdrawablecolor) 217.82 367 T
4 F
( operator changes) 308.23 367 T
6 F
(gc) 373.86 367 T
4 F
(,) 383.35 367 T
6 F
(drawable) 387.85 367 T
4 F
(,) 424.31 367 T
6 F
(offset) 428.8 367 T
4 F
(, and) 450.79 367 T
6 F
(colorinfo) 470.5 367 T
4 F
( for the) 504.47 367 T
(context. The) 201.6 355 T
6 F
(colorinfo) 248.77 355 T
4 F
( ar) 282.74 355 T
(gument is described under) 291.81 355 T
0 F
(currentXgcdrawablecolor) 388.65 355 T
4 F
(.) 496.54 355 T
(The) 201.6 332 T
6 F
(gc) 217.82 332 T
4 F
( operand is a) 227.31 332 T
6 F
(GContext) 275.23 332 T
4 F
( identi\336er) 313.2 332 T
(, not a) 347.54 332 T
6 F
(GC) 372 332 T
4 F
( pointer) 385.48 332 T
(. Use) 412.7 332 T
0 F
(XGContextFromGC) 433.41 332 T
4 F
( to) 515.8 332 T
(extract a) 201.6 320 T
6 F
(GContext) 234.54 320 T
4 F
( from a) 272.5 320 T
6 F
(GC) 300.7 320 T
4 F
(.) 314.18 320 T
(T) 201.6 297 T
(o temporarily change the values speci\336ed for) 206.46 297 T
0 F
(setXgcdrawablecolor) 370.45 297 T
4 F
(, execute) 460.49 297 T
0 F
(gsave) 494.68 297 T
4 F
(before the operator and follow it with) 201.6 285 T
0 F
(grestore) 338.63 285 T
4 F
(.) 374.59 285 T
0 F
(Errors:) 201.6 262 T
(rangecheck, stackunder\337ow) 255 262 T
(, typecheck, unde\336ned) 375.54 262 T
(setXoffset) 146.15 217 T
4 F
(x y) 201.6 217 T
0 F
(setXoffset) 215.08 217 T
4 F
( \320) 258.53 217 T
(The) 201.6 194 T
0 F
(setXoffset) 217.82 194 T
4 F
( operator sets the default origin for the user space of the) 261.27 194 T
(current context.) 463.93 194 T
(This operator is a subset of) 201.6 182 T
0 F
(setXgcdrawable) 300.95 182 T
4 F
(.) 369.38 182 T
0 F
(Errors:) 201.6 159 T
(stackunder\337ow) 255 159 T
(, unde\336ned) 320.59 159 T
FMENDPAGE
%%EndPage: "54" 55
%%Page: "55" 55
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(7  X-Specific Custom PostScript Operators) 331.41 29.83 T
( 55) 522.19 29.83 T
78 72 534 708 R
7 X
V
0 9 Q
0 X
(setXrgbactual) 130.17 702 T
4 F
(red green blue) 201.6 702 T
0 F
(setXrgbactual) 255.26 702 T
4 F
( bool) 314.69 702 T
(The) 201.6 679 T
0 F
(setXrgbactual) 217.82 679 T
4 F
( operator attempts to allocate a new entry in the context\325) 277.26 679 T
(s colormap. It) 479.44 679 T
(takes three \337oating-point numbers between 0.0 and 1.0 to specify the RGB color) 201.6 667 T
(, as with) 490.8 667 T
0 F
(setrgbcolor) 201.6 655 T
4 F
(. The operator returns) 250.55 655 T
6 F
(true) 330.66 655 T
4 F
( if the color was successfully allocated in the) 346.14 655 T
-0.27 (colormap; it returns) 201.6 643 P
6 F
-0.3 (false) 273.94 643 P
4 F
-0.27 ( if the color cannot be allocated or if an error occurs. If the operator) 292.92 643 P
(returns) 201.6 631 T
6 F
(true) 228.8 631 T
4 F
(, future requests for the speci\336ed color will be rendered using the allocated) 244.29 631 T
(colormap entry) 201.6 619 T
(.) 255.68 619 T
(Executing) 201.6 596 T
0 F
(setXrgbactual) 240.29 596 T
4 F
( is a way of ensuring that the color you request is actually) 299.73 596 T
-0.26 (allocated, not dithered. Colors speci\336ed by) 201.6 584 P
0 F
-0.29 (setXrgbactual) 356.31 584 P
4 F
-0.26 ( do not count against the number) 415.74 584 P
-0.38 (of) 201.6 572 P
6 F
-0.43 (actual) 210.95 572 P
4 F
-0.38 ( colors that are allocated automatically; see \322Using XDPSCreateContext\323 in section) 234.93 572 P
(3.2, \322Creating a Context.\323) 201.6 560 T
0 F
(setXrgbactual) 297.7 560 T
4 F
( may be called even if the context was created) 357.14 560 T
(with) 201.6 548 T
6 F
(actual) 219.83 548 T
4 F
( set to zero.) 243.8 548 T
0 F
(setXrgbactual) 201.6 525 T
4 F
( does not change the graphics state in any way; to paint with the speci\336ed) 261.03 525 T
(color) 201.6 513 T
(, execute) 219.71 513 T
0 F
(setrgbcolor) 253.9 513 T
4 F
(.) 302.84 513 T
0 F
(Errors:) 201.6 490 T
(stackunder\337ow) 255 490 T
(, typecheck, unde\336ned) 320.59 490 T
0 10 Q
(7.1) 175.71 461.33 T
(Single-Operator Procedures) 201.6 461.33 T
4 9 Q
(The) 201.6 437 T
1 F
(Client Library Refer) 217.82 437 T
(ence Manual) 290.89 437 T
4 F
( explains and lists a number of single-operator) 337.56 437 T
(procedures in section 9, \322Single-Operator Procedures.\323 The X W) 201.6 425 T
(indow System) 434.85 425 T
(implementation of the Display PostScript system provides some additional procedures for) 201.6 413 T
(the X-speci\336c PostScript operators.) 201.6 401 T
(The procedure declarations listed below can be found in) 201.6 377 T
1 F
(<DPS/dpsops.h>) 405.52 377 T
4 F
(.) 468.33 377 T
1 F
(<DPS/psops.h>) 472.82 377 T
4 F
(contains the analogous de\336nitions without the) 201.6 365 T
6 F
0.36 (ctxt) 368.86 365 S
4 F
( ar) 384.29 365 T
(gument.) 393.36 365 T
1 F
(Note:) 169.63 341 T
(Some early r) 201.6 341 T
(eleases of the Display PostScript system did not include these operators.) 247.19 341 T
7 8.5 Q
-0.17 (extern void DPSclientsync\050 /* DPSContext ctxt; */ \051;) 213.83 317.33 S
-0.17 (extern void DPScurrentXgcdrawable\050 /* DPSContext ctxt;) 213.83 305.83 S
-0.17 (int) 251.73 294.33 S
-0.17 (*gc,) 271.45 294.33 S
-0.17 (*draw, *x, *y; */ \051;) 296.1 294.33 S
-0.17 (extern void DPScurrentXgcdrawablecolor\050 /* DPSContext ctxt;) 213.83 282.83 S
-0.17 (int) 251.73 271.33 S
-0.17 (*gc,) 271.45 271.33 S
-0.17 (*draw, *x, *y, colorInfo[ ]; */ \051;) 296.1 271.33 S
-0.17 (extern void DPScurrentXoffset\050 /* DPSContext ctxt;) 213.83 259.83 S
-0.17 (int) 251.73 248.33 S
-0.17 (*x,) 271.45 248.33 S
-0.17 (*y;) 291.17 248.33 S
-0.17 (*/) 310.89 248.33 S
-0.17 (\051;) 325.67 248.33 S
-0.17 (extern void DPSsetXgcdrawable\050 /* DPSContext ctxt;) 213.83 236.83 S
-0.17 (int) 251.73 225.33 S
-0.17 (gc,) 271.45 225.33 S
-0.17 (draw,) 291.17 225.33 S
-0.17 (x, y; */ \051;) 320.75 225.33 S
-0.17 (extern void DPSsetXgcdrawablecolor\050 /* DPSContext ctxt;) 213.83 213.83 S
-0.17 (int) 251.73 202.33 S
-0.17 (gc,) 271.45 202.33 S
-0.17 (draw,) 291.17 202.33 S
-0.17 (x,) 320.75 202.33 S
-0.17 (y, colorInfo[ ]; */ \051;) 335.54 202.33 S
-0.17 (extern void DPSsetXoffset\050 /* DPSContext ctxt; int x,) 213.83 190.83 S
-0.17 (y;) 480.04 190.83 S
-0.17 (*/) 494.82 190.83 S
-0.17 (\051;) 509.61 190.83 S
-0.03 -0.17 (extern void DPSsetXrgbactual\050 /* DPSContext ctxt; float r, g, b;) 213.83 179.33 B
-0.17 (int) 251.73 167.83 S
-0.17 (*success;) 271.45 167.83 S
-0.17 (*/) 320.75 167.83 S
-0.17 (\051;) 335.54 167.83 S
FMENDPAGE
%%EndPage: "55" 56
%%Page: "56" 56
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(56) 78 29.83 T
(Client) 120 29.83 T
(Library Supplement) 144.09 29.83 T
(for) 220.14 29.83 T
(X) 232.42 29.83 T
78 72 534 708 R
7 X
V
FMENDPAGE
%%EndPage: "56" 57
%%Page: "61" 57
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(61) 524.55 29.83 T
186 768 186 625 2 L
7 X
V
6 H
0 Z
0 X
N
595.63 625 209.8 625 2 L
7 X
V
0.5 H
2 Z
0 X
N
84 603 183 714 R
7 X
V
85.8 661 172.8 751 R
V
209.63 696 290.63 705.99 R
V
0 11 Q
0 X
(APPENDIX) 209.63 698.66 T
0 18 Q
(A) 277.64 698.66 T
209.63 628.99 533.63 679 R
7 X
V
0 24 Q
0 X
(Changes Since Last) 209.63 663 T
(Publication) 209.63 637 T
78 72 534 555 R
7 X
V
4 9 Q
0 X
-0.02 (Changes to the) 201.6 549 P
1 F
-0.02 (Client Library Supplement for) 257.2 549 P
-0.02 (X) 367.95 549 P
4 F
-0.02 (from the document dated January 23, 1990,) 375.67 549 P
(are noted in the paragraphs below) 201.6 537 T
(.) 322.56 537 T
(Several new sections were added:) 201.6 513 T
(\245) 201.6 489 T
(\322Event Dispatching\323 in section 3.4, \322Status Events,\323 describes how an application can) 213.6 489 T
(control how the client library dispatches events from the Display) 213.6 477 T
(PostScript extension.) 448.74 477 T
(\245) 201.6 453 T
(\322W) 213.6 453 T
(rap Considerations\323 in section 3.4, \322Status Events,\323 contains information about) 225.71 453 T
(restrictions in event handlers.) 213.6 441 T
(\245) 201.6 417 T
(Section 5.8, \322Using Custom Operators,\323 contains information about the graphics state) 213.6 417 T
-0.01 (after the execution of the) 213.6 405 P
0 F
-0.01 (setXgcdrawable) 305.65 405 P
4 F
-0.01 (,) 374.08 405 P
0 F
-0.01 (setXgcdrawablecolor) 378.57 405 P
4 F
-0.01 (, and) 468.61 405 P
0 F
-0.01 (setXoffset) 488.32 405 P
4 F
(custom operators.) 213.6 393 T
(\245) 201.6 369 T
(Section 7.1, \322Single-Operator Procedures,\323 lists single-operator) 213.6 369 T
(procedures for the X-) 444.49 369 T
(speci\336c PostScript operators.) 213.6 357 T
(A number of new structures and procedures are documented in this manual:) 201.6 333 T
(\245) 201.6 309 T
0 F
(XDPSGetDefaultColorMaps) 213.6 309 T
4 F
( returns the colormaps used in creating a simple context.) 329.95 309 T
(\245) 201.6 285 T
0 F
-0.2 (XDPSDispatchEvent) 213.6 285 P
4 F
-0.18 ( checks whether an event is a Display PostScript event and, if so,) 300.5 285 P
(dispatches it to the appropriate status or output handler) 213.6 273 T
(.) 410.31 273 T
(\245) 201.6 249 T
0 F
(XDPSIsDPSEvent) 213.6 249 T
4 F
( checks whether a speci\336ed event is a Display) 288.52 249 T
(PostScript event.) 455.5 249 T
(\245) 201.6 225 T
0 F
(XDPSIsOutputEvent) 213.6 225 T
4 F
( checks whether a speci\336ed event is a Display) 299.49 225 T
(PostScript output) 466.47 225 T
(event.) 213.6 213 T
(\245) 201.6 189 T
0 F
(XDPSIsStatusEvent) 213.6 189 T
4 F
( checks whether a speci\336ed event is a Display) 297.51 189 T
(PostScript status) 464.48 189 T
(event.) 213.6 177 T
(\245) 201.6 153 T
0 F
-0.29 (XDPSSetEventDelivery) 213.6 153 P
4 F
-0.26 ( can be used to change or query how the client library delivers) 311.5 153 P
(events.) 213.6 141 T
6 F
(DPSEventDelivery) 241.06 141 T
4 F
( provides the possible options for) 314.97 141 T
0 F
(XDPSSetEventDelivery) 213.6 129 T
4 F
(.) 310.92 129 T
(Changes to the) 201.6 105 T
1 F
( Client Library Supplement for) 255.02 105 T
(X) 368.12 105 T
4 F
(from the document dated August 17, 1989,) 375.86 105 T
(are noted in the paragraphs below) 201.6 93 T
(.) 322.56 93 T
FMENDPAGE
%%EndPage: "61" 58
%%Page: "62" 58
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(62) 78 29.83 T
(Appendix A:  Changes Since Last) 120 29.83 T
(Publication) 248.98 29.83 T
78 72 534 708 R
7 X
V
4 9 Q
0 X
(An example error handler program for advanced error handling has been provided in) 201.6 702 T
(Appendix B.) 201.6 690 T
(The discussion of the X colormap resource has been clari\336ed, including discussions of the) 201.6 666 T
-0.18 (use of) 201.6 654 P
0 F
-0.2 (XDPSCreateSimpleContext) 225.19 654 P
4 F
-0.18 ( the) 340.56 654 P
6 F
-0.2 (actual) 355.66 654 P
4 F
-0.18 ( parameter in) 379.64 654 P
0 F
-0.2 (XDPSCreateContext) 428.76 654 P
4 F
-0.18 (, and) 514.65 654 P
(the) 201.6 642 T
0 F
(setXrgbactual) 214.83 642 T
4 F
( operator) 274.26 642 T
(.) 305.96 642 T
-0.29 (The section on scan conversion has been removed. For information on this topic, please refer) 201.6 618 P
(to the) 201.6 606 T
1 F
(PostScript Language Refer) 224.07 606 T
(ence Manual, Second Edition) 321.1 606 T
4 F
(.) 426.93 606 T
(Numerous additional ampli\336cations and corrections have been made.) 201.6 582 T
FMENDPAGE
%%EndPage: "62" 59
%%Page: "63" 59
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(63) 524.55 29.83 T
186 768 186 625 2 L
7 X
V
6 H
0 Z
0 X
N
595.63 625 209.8 625 2 L
7 X
V
0.5 H
2 Z
0 X
N
209.63 628.99 533.63 679 R
7 X
V
0 24 Q
0 X
(Index) 209.63 637 T
209.63 72 353.63 555 R
7 X
V
0 13 Q
0 X
(A) 209.63 546.33 T
4 9.5 Q
(actual) 209.63 526.67 T
4 7 Q
(15) 237.04 526.67 T
4 9.5 Q
(\320) 244.03 526.67 T
4 7 Q
(16) 248.78 526.67 T
4 9.5 Q
(advanced facilities) 209.63 514.17 T
4 7 Q
(31) 285.27 514.17 T
0 13 Q
(B) 209.63 487.33 T
4 9.5 Q
(basic facilities) 209.63 467.67 T
4 7 Q
(10) 268.94 467.67 T
4 9.5 Q
(bit gravity, offsets) 209.63 455.17 T
4 7 Q
(21) 283.71 455.17 T
4 9.5 Q
(blocked on input) 209.63 442.67 T
4 7 Q
(27) 278.18 442.67 T
4 9.5 Q
(buffers) 209.63 430.17 T
4 7 Q
(33) 241.26 430.17 T
0 13 Q
(C) 209.63 403.33 T
4 9.5 Q
(ccube) 209.63 383.67 T
4 7 Q
(15) 236.51 383.67 T
4 9.5 Q
(cid) 209.63 371.17 T
4 7 Q
(49) 225.98 371.17 T
4 9.5 Q
(clientsync) 209.63 358.67 T
4 7 Q
(28) 252.86 358.67 T
4 9.5 Q
(,) 259.85 358.67 T
4 7 Q
(38) 264.6 358.67 T
4 9.5 Q
(,) 271.59 358.67 T
4 7 Q
(56) 276.33 358.67 T
4 9.5 Q
(clipping) 209.63 346.17 T
4 7 Q
(20) 245.49 346.17 T
4 9.5 Q
(\320) 252.48 346.17 T
4 7 Q
(21) 257.22 346.17 T
4 9.5 Q
(color) 209.63 333.67 T
(DPS/X) 221.63 321.17 T
4 7 Q
(42) 253.27 321.17 T
4 9.5 Q
(programming tips) 221.63 308.67 T
4 7 Q
(41) 294.13 308.67 T
4 9.5 Q
(rendering) 221.63 296.17 T
4 7 Q
(42) 262.75 296.17 T
4 9.5 Q
(colorinfo array) 209.63 283.67 T
4 7 Q
(57) 271.04 283.67 T
4 9.5 Q
(colormap) 209.63 271.17 T
4 7 Q
(49) 250.23 271.17 T
4 9.5 Q
(,) 257.21 271.17 T
4 7 Q
(51) 261.96 271.17 T
4 9.5 Q
(connecting to the X server) 209.63 258.67 T
4 7 Q
(11) 314.54 258.67 T
4 9.5 Q
(context) 209.63 246.17 T
(creating) 221.63 233.67 T
4 7 Q
(11) 256.95 233.67 T
4 9.5 Q
(,) 263.94 233.67 T
4 7 Q
(47) 268.68 233.67 T
4 9.5 Q
(,) 275.67 233.67 T
4 7 Q
(49) 280.42 233.67 T
4 9.5 Q
(errors) 221.63 221.17 T
3 7 Q
(25) 248.51 221.17 T
4 9.5 Q
(identifier) 221.63 208.67 T
4 7 Q
(32) 261.17 208.67 T
4 9.5 Q
(monitoring status) 221.63 196.17 T
4 7 Q
(27) 292.56 196.17 T
4 9.5 Q
(waiting) 221.63 183.67 T
4 7 Q
(37) 254.85 183.67 T
4 9.5 Q
(control) 209.63 171.17 T
4 7 Q
(19) 241.26 171.17 T
4 9.5 Q
(control point) 209.63 158.67 T
4 7 Q
(19) 263.15 158.67 T
4 9.5 Q
(coordinate conversions) 209.63 146.17 T
(encoding) 221.63 133.67 T
4 7 Q
(33) 261.17 133.67 T
4 9.5 Q
(programming tips) 221.63 121.17 T
4 7 Q
(40) 294.13 121.17 T
4 9.5 Q
(user space coordinate to X) 221.63 108.67 T
(coordinate) 233.63 96.17 T
4 7 Q
(17) 278.44 96.17 T
4 9.5 Q
(,) 285.43 96.17 T
4 7 Q
(40) 290.17 96.17 T
4 9.5 Q
(X coordinate to user space) 221.63 83.67 T
365.63 72 509.63 555 R
7 X
V
0 X
(coordinate) 389.63 548.66 T
4 7 Q
(17) 434.44 548.66 T
4 9.5 Q
(,) 441.43 548.66 T
4 7 Q
(40) 446.17 548.66 T
4 9.5 Q
(coordinate systems) 365.63 536.16 T
4 7 Q
(16) 442.87 536.16 T
4 9.5 Q
(\320) 449.86 536.16 T
4 7 Q
(19) 454.6 536.16 T
4 9.5 Q
(conversions) 377.63 523.66 T
4 7 Q
(16) 427.72 523.66 T
4 9.5 Q
(\320) 434.7 523.66 T
4 7 Q
(19) 439.45 523.66 T
4 9.5 Q
(conversions not required) 377.63 511.16 T
4 7 Q
(19) 476.21 511.16 T
4 9.5 Q
(conversions required) 377.63 498.66 T
4 7 Q
(18) 461.71 498.66 T
4 9.5 Q
(coordinates) 365.63 486.16 T
4 7 Q
(16) 414.13 486.16 T
4 9.5 Q
(CTM, current transformation matrix) 365.63 473.66 T
4 7 Q
(40) 389.63 461.16 T
4 9.5 Q
(ctxt) 365.63 448.66 T
4 7 Q
(35) 384.61 448.66 T
4 9.5 Q
(currentcontext) 365.63 436.16 T
4 7 Q
(32) 425.2 436.16 T
4 9.5 Q
(currentXgcdrawable) 365.63 423.66 T
4 7 Q
(56) 447.85 423.66 T
4 9.5 Q
(currentXgcdrawablecolor) 365.63 411.16 T
4 7 Q
(57) 467.36 411.16 T
4 9.5 Q
(currentXoffset) 365.63 398.66 T
4 7 Q
(22) 425.72 398.66 T
4 9.5 Q
(,) 432.71 398.66 T
4 7 Q
(58) 437.45 398.66 T
4 9.5 Q
(customops) 365.63 386.16 T
4 7 Q
(43) 410.98 386.16 T
0 13 Q
(D) 365.63 359.33 T
4 9.5 Q
(data structures) 365.63 339.66 T
4 7 Q
(44) 425.46 339.66 T
4 9.5 Q
(DEBUG_SYNC) 365.63 327.16 T
4 7 Q
(26) 433.12 327.16 T
4 9.5 Q
(DEBUGGING) 365.63 314.66 T
4 7 Q
(26) 426.78 314.66 T
4 9.5 Q
(debugging) 365.63 302.16 T
4 7 Q
(26) 410.45 302.16 T
4 9.5 Q
(defineuserobject) 365.63 289.66 T
4 7 Q
(23) 433.1 289.66 T
4 9.5 Q
(detach) 365.63 277.16 T
4 7 Q
(35) 395.15 277.16 T
4 9.5 Q
(device space) 365.63 264.66 T
4 7 Q
(17) 418.6 264.66 T
4 9.5 Q
(disableMask) 365.63 252.16 T
4 7 Q
(29) 418.35 252.16 T
4 9.5 Q
(,) 425.34 252.16 T
4 7 Q
(53) 430.09 252.16 T
4 9.5 Q
(dps) 365.63 239.66 T
4 7 Q
(31) 383.56 239.66 T
4 9.5 Q
(DPS/X) 365.63 227.16 T
4 7 Q
(9) 397.27 227.16 T
4 9.5 Q
(,) 400.77 227.16 T
4 7 Q
(33) 405.52 227.16 T
4 9.5 Q
(dps_err_closedDisplay) 365.63 214.66 T
4 7 Q
(45) 457.36 214.66 T
4 9.5 Q
(dps_err_deadContext) 365.63 202.16 T
4 7 Q
(45) 451.56 202.16 T
4 9.5 Q
(dps_err_encodingCheck) 365.63 189.66 T
4 7 Q
(44) 462.63 189.66 T
4 9.5 Q
(dps_err_invalidAccess) 365.63 177.16 T
4 7 Q
(44) 456.83 177.16 T
4 9.5 Q
(dps_err_recursiveWait) 365.63 164.66 T
4 7 Q
(31) 456.82 164.66 T
4 9.5 Q
(,) 463.81 164.66 T
4 7 Q
(45) 468.55 164.66 T
4 9.5 Q
(dps_indexed) 365.63 152.16 T
4 7 Q
(36) 418.35 152.16 T
4 9.5 Q
(dps_strings) 365.63 139.66 T
4 7 Q
(36) 413.62 139.66 T
4 9.5 Q
(,) 420.61 139.66 T
4 7 Q
(45) 425.35 139.66 T
4 9.5 Q
(DPSChangeEncoding) 365.63 127.16 T
4 7 Q
(33) 453.16 127.16 T
4 9.5 Q
(,) 460.15 127.16 T
4 7 Q
(34) 464.89 127.16 T
4 9.5 Q
(,) 471.88 127.16 T
4 7 Q
(46) 476.63 127.16 T
4 9.5 Q
(dpsclient.h) 365.63 114.66 T
4 7 Q
(39) 411.77 114.66 T
4 9.5 Q
(DPSContext) 365.63 102.16 T
4 7 Q
(32) 417.84 102.16 T
4 9.5 Q
(DPSContextFromContextID) 365.63 89.66 T
4 7 Q
(35) 478.48 89.66 T
4 9.5 Q
(,) 485.47 89.66 T
4 7 Q
(46) 490.21 89.66 T
4 9.5 Q
(DPSContextRec) 365.63 77.16 T
4 7 Q
(11) 432.6 77.16 T
4 9.5 Q
(,) 439.59 77.16 T
4 7 Q
(46) 444.33 77.16 T
FMENDPAGE
%%EndPage: "63" 60
%%Page: "64" 60
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(64) 78 29.83 T
(Index) 120 29.83 T
78 72 222 708 R
7 X
V
4 9.5 Q
0 X
(DPSCreateTextContext) 78 701.67 T
4 7 Q
(47) 172.38 701.67 T
4 9.5 Q
(DPSDefaultTextBackstop) 78 689.17 T
4 7 Q
(47) 181.34 689.17 T
4 9.5 Q
(DPSDestroyContext) 78 676.67 T
4 7 Q
(27) 160.26 676.67 T
4 9.5 Q
(,) 167.25 676.67 T
4 7 Q
(28) 171.99 676.67 T
4 9.5 Q
(,) 178.98 676.67 T
4 7 Q
(36) 183.73 676.67 T
4 9.5 Q
(,) 190.71 676.67 T
4 7 Q
(47) 195.46 676.67 T
4 9.5 Q
(DPSDestroySpace) 78 664.17 T
4 7 Q
(27) 152.87 664.17 T
4 9.5 Q
(,) 159.85 664.17 T
4 7 Q
(36) 164.6 664.17 T
4 9.5 Q
(,) 171.59 664.17 T
4 7 Q
(48) 176.33 664.17 T
4 9.5 Q
(DPSEventDelivery) 78 651.67 T
4 7 Q
(45) 155.5 651.67 T
4 9.5 Q
(dpsexcept.h) 78 639.17 T
4 7 Q
(39) 127.82 639.17 T
4 9.5 Q
(DPSFlushContext) 78 626.67 T
4 7 Q
(33) 151.31 626.67 T
4 9.5 Q
(dpsfriends.h) 78 614.17 T
4 7 Q
(39) 129.4 614.17 T
4 9.5 Q
(DPSInterruptContext) 78 601.67 T
4 7 Q
(28) 163.42 601.67 T
4 9.5 Q
(,) 170.41 601.67 T
4 7 Q
(38) 175.15 601.67 T
4 9.5 Q
(DPSLastUserObjectIndex) 78 589.17 T
4 7 Q
(23) 181.33 589.17 T
4 9.5 Q
(,) 188.32 589.17 T
4 7 Q
(46) 193.06 589.17 T
4 9.5 Q
(DPSNameEncoding) 78 576.67 T
4 7 Q
(36) 159.2 576.67 T
4 9.5 Q
(DPSNewUserObjectIndex) 78 564.17 T
4 7 Q
(23) 182.9 564.17 T
4 9.5 Q
(,) 189.89 564.17 T
4 7 Q
(48) 194.64 564.17 T
4 9.5 Q
(dpsops.h) 78 551.67 T
4 7 Q
(39) 116.23 551.67 T
4 9.5 Q
(procedure declarations) 90 539.17 T
4 7 Q
(59) 180.92 539.17 T
4 9.5 Q
(DPSPrintf) 78 526.67 T
4 7 Q
(26) 121.77 526.67 T
4 9.5 Q
(DPSSpace) 78 514.17 T
4 7 Q
(32) 122.82 514.17 T
4 9.5 Q
(DPSWaitContext) 78 501.67 T
4 7 Q
(31) 148.66 501.67 T
4 9.5 Q
(,) 155.65 501.67 T
4 7 Q
(36) 160.39 501.67 T
4 9.5 Q
(,) 167.38 501.67 T
4 7 Q
(37) 172.13 501.67 T
4 9.5 Q
(DPSWritePostScript) 78 489.17 T
4 7 Q
(34) 160.79 489.17 T
4 9.5 Q
(,) 167.78 489.17 T
4 7 Q
(37) 172.52 489.17 T
4 9.5 Q
(dpsXclient.h) 78 476.67 T
4 7 Q
(9) 130.99 476.67 T
4 9.5 Q
(,) 134.48 476.67 T
4 7 Q
(39) 139.23 476.67 T
4 9.5 Q
(data structures) 90 464.17 T
4 7 Q
(44) 149.83 464.17 T
4 9.5 Q
(procedures) 90 451.67 T
4 7 Q
(46) 136.38 451.67 T
0 13 Q
(E) 78 424.83 T
4 9.5 Q
(enableMask) 78 405.17 T
4 7 Q
(29) 128.61 405.17 T
4 9.5 Q
(,) 135.59 405.17 T
4 7 Q
(53) 140.34 405.17 T
4 9.5 Q
(encoding conversions) 78 392.67 T
4 7 Q
(33) 165.25 392.67 T
4 9.5 Q
(encodings) 78 380.17 T
4 7 Q
(33) 121.23 380.17 T
4 9.5 Q
(error codes) 78 367.67 T
(extended) 90 355.17 T
4 7 Q
(44) 129.01 355.17 T
4 9.5 Q
(errorProc) 78 342.67 T
3 7 Q
(12) 118.58 342.67 T
4 9.5 Q
(,) 125.57 342.67 T
4 7 Q
(47) 130.32 342.67 T
4 9.5 Q
(errors) 78 330.17 T
4 7 Q
(25) 104.88 330.17 T
4 9.5 Q
(\320) 111.87 330.17 T
4 7 Q
(26) 116.61 330.17 T
4 9.5 Q
(event) 78 317.67 T
4 7 Q
(31) 103.3 317.67 T
4 9.5 Q
(event delivery, pass-through) 78 305.17 T
4 7 Q
(30) 190.55 305.17 T
4 9.5 Q
(event dispatching) 78 292.67 T
4 7 Q
(29) 149.44 292.67 T
4 9.5 Q
(event handlers) 78 280.17 T
4 7 Q
(29) 137.83 280.17 T
4 9.5 Q
(eventmask) 78 267.67 T
4 7 Q
(15) 123.34 267.67 T
4 9.5 Q
(,) 130.33 267.67 T
4 7 Q
(49) 135.07 267.67 T
4 9.5 Q
(execution status) 78 255.17 T
4 7 Q
(27) 143.64 255.17 T
4 9.5 Q
(exposure events) 78 242.67 T
4 7 Q
(20) 143.63 242.67 T
4 9.5 Q
(rectangles) 90 230.17 T
4 7 Q
(20) 133.22 230.17 T
0 13 Q
(F) 78 203.33 T
4 9.5 Q
(filenameforall) 78 183.67 T
4 7 Q
(41) 136.51 183.67 T
4 9.5 Q
(files) 78 171.17 T
(dpsclient.h) 90 158.67 T
4 7 Q
(39) 136.14 158.67 T
4 9.5 Q
(dpsexcept.h) 90 146.17 T
4 7 Q
(39) 139.82 146.17 T
4 9.5 Q
(dpsfriends.h) 90 133.67 T
4 7 Q
(39) 141.4 133.67 T
4 9.5 Q
(dpsops.h) 90 121.17 T
4 7 Q
(39) 128.23 121.17 T
4 9.5 Q
(dpsXclient.h) 90 108.67 T
4 7 Q
(9) 142.99 108.67 T
4 9.5 Q
(,) 146.48 108.67 T
4 7 Q
(39) 151.23 108.67 T
4 9.5 Q
(,) 158.22 108.67 T
4 7 Q
(44) 162.96 108.67 T
4 9.5 Q
(psops.h) 90 96.17 T
4 7 Q
(39) 123.48 96.17 T
4 9.5 Q
(Xutil.h) 90 83.67 T
4 7 Q
(15) 121.38 83.67 T
234 71.99 378 708 R
7 X
V
4 9.5 Q
0 X
(findfont) 234 701.66 T
4 7 Q
(41) 269.33 701.66 T
4 9.5 Q
(floor) 234 689.16 T
4 7 Q
(41) 257.2 689.16 T
4 9.5 Q
(flush) 234 676.66 T
4 7 Q
(33) 257.73 676.66 T
4 9.5 Q
(fonts, programming tips) 234 664.16 T
4 7 Q
(41) 330.23 664.16 T
4 9.5 Q
(,) 337.22 664.16 T
4 7 Q
(43) 341.96 664.16 T
4 9.5 Q
(fork) 234 651.66 T
4 7 Q
(32) 254.56 651.66 T
4 9.5 Q
(,) 261.55 651.66 T
4 7 Q
(34) 266.29 651.66 T
4 9.5 Q
(,) 273.28 651.66 T
4 7 Q
(35) 278.02 651.66 T
4 9.5 Q
(,) 285.01 651.66 T
4 7 Q
(46) 289.76 651.66 T
4 9.5 Q
(forked contex) 234 639.16 T
4 7 Q
(34) 291.19 639.16 T
4 9.5 Q
(freezing) 234 626.66 T
4 7 Q
(37) 269.84 626.66 T
4 9.5 Q
(,) 276.83 626.66 T
4 7 Q
(38) 281.57 626.66 T
4 9.5 Q
(FROZEN) 234 614.16 T
4 7 Q
(56) 275.66 614.16 T
0 13 Q
(G) 234 587.33 T
4 9.5 Q
(grayramp) 234 567.66 T
4 7 Q
(15) 275.11 567.66 T
4 9.5 Q
(,) 282.1 567.66 T
4 7 Q
(49) 286.85 567.66 T
4 9.5 Q
(grestore) 234 555.16 T
4 7 Q
(58) 269.32 555.16 T
4 9.5 Q
(gsave) 234 542.66 T
4 7 Q
(58) 260.36 542.66 T
0 13 Q
(I) 234 515.83 T
4 9.5 Q
(identifiers) 234 496.16 T
4 7 Q
(32) 277.23 496.16 T
4 9.5 Q
(imaging model) 234 483.66 T
3 7 Q
(10) 295.96 483.66 T
4 9.5 Q
(implementation, limits) 234 471.16 T
4 7 Q
(35) 324.7 471.16 T
4 9.5 Q
(include files, programming tips) 234 458.66 T
4 7 Q
(39) 357.9 458.66 T
4 9.5 Q
(initialization) 234 446.16 T
4 7 Q
(11) 286.73 446.16 T
4 9.5 Q
(integer space) 234 433.66 T
4 7 Q
(17) 288.55 433.66 T
4 9.5 Q
(interactive feedback) 234 421.16 T
4 7 Q
(19) 315.43 421.16 T
4 9.5 Q
(interpreter) 234 408.66 T
4 7 Q
(10) 278.27 408.66 T
4 9.5 Q
(interrupts) 234 396.16 T
4 7 Q
(38) 275.12 396.16 T
0 13 Q
(L) 234 369.33 T
4 9.5 Q
(lock) 234 349.66 T
4 7 Q
(36) 255.09 349.66 T
0 13 Q
(M) 234 322.83 T
4 9.5 Q
(mask values) 234 303.16 T
4 7 Q
(28) 285.4 303.16 T
4 9.5 Q
(masks) 234 290.66 T
4 7 Q
(28) 262.47 290.66 T
4 9.5 Q
(\320) 269.46 290.66 T
4 7 Q
(29) 274.21 290.66 T
4 9.5 Q
(,) 281.2 290.66 T
4 7 Q
(45) 285.94 290.66 T
4 9.5 Q
(mixing X and Display PostScript) 234 278.16 T
(system imaging) 258 265.66 T
4 7 Q
(19) 322.6 265.66 T
4 9.5 Q
(monitor) 234 253.16 T
4 7 Q
(36) 268.8 253.16 T
4 9.5 Q
(multiple servers) 234 240.66 T
4 7 Q
(35) 299.64 240.66 T
4 9.5 Q
(MyWrap1) 234 228.16 T
4 7 Q
(26) 277.75 228.16 T
4 9.5 Q
(MyWrap2) 234 215.66 T
4 7 Q
(26) 277.75 215.66 T
0 13 Q
(N) 234 188.83 T
4 9.5 Q
(newMode) 234 169.16 T
4 7 Q
(53) 276.7 169.16 T
4 9.5 Q
(nextMask) 234 156.66 T
4 7 Q
(29) 276.18 156.66 T
0 13 Q
(O) 234 129.83 T
4 9.5 Q
(offset) 234 110.16 T
4 7 Q
(18) 260.36 110.16 T
4 9.5 Q
(output events) 234 97.66 T
4 7 Q
(29) 289.63 97.66 T
390 72 534 708 R
7 X
V
0 13 Q
0 X
(P) 390 699.33 T
4 9.5 Q
(parameters) 390 679.67 T
4 7 Q
(43) 436.38 679.67 T
4 9.5 Q
(\320) 443.37 679.67 T
4 7 Q
(44) 448.12 679.67 T
4 9.5 Q
(graphics state) 402 667.17 T
4 7 Q
(43) 458.67 667.17 T
4 9.5 Q
(return to a known state) 402 654.67 T
4 7 Q
(43) 493.73 654.67 T
4 9.5 Q
(pass) 390 642.17 T
4 7 Q
(31) 411.09 642.17 T
4 9.5 Q
(pass-through) 390 629.67 T
4 7 Q
(30) 443.78 629.67 T
4 9.5 Q
(portability, programming tips) 390 617.17 T
4 7 Q
(41) 506.8 617.17 T
4 9.5 Q
-0.12 (PostScript operators, X-specific) 390 604.67 P
4 7 Q
-0.08 (55) 515.28 604.67 P
4 9.5 Q
-0.12 (\320) 522.27 604.67 P
4 7 Q
-0.08 (59) 527.01 604.67 P
4 9.5 Q
(programming tips) 390 592.17 T
4 7 Q
(38) 462.5 592.17 T
4 9.5 Q
(\320) 469.49 592.17 T
4 7 Q
(44) 474.24 592.17 T
4 9.5 Q
(protocol errors) 390 579.67 T
3 7 Q
(25) 450.89 579.67 T
4 9.5 Q
(PSFROZEN) 390 567.17 T
4 7 Q
(28) 442.21 567.17 T
4 9.5 Q
(,) 449.2 567.17 T
4 7 Q
(29) 453.94 567.17 T
4 9.5 Q
(,) 460.93 567.17 T
4 7 Q
(38) 465.68 567.17 T
4 9.5 Q
(,) 472.67 567.17 T
4 7 Q
(56) 477.41 567.17 T
4 9.5 Q
(PSNEEDSINPUT) 390 554.67 T
4 7 Q
(27) 463.82 554.67 T
4 9.5 Q
(psops.h) 390 542.17 T
4 7 Q
(39) 423.48 542.17 T
4 9.5 Q
(PSRUNNING) 390 529.67 T
4 7 Q
(27) 449.05 529.67 T
4 9.5 Q
(PSSTATUSERROR) 390 517.17 T
4 7 Q
(27) 472.8 517.17 T
4 9.5 Q
(PSWGetTransform) 390 504.67 T
4 7 Q
(40) 468.02 504.67 T
4 9.5 Q
(PSZOMBIE) 390 492.17 T
4 7 Q
(28) 441.68 492.17 T
4 9.5 Q
(,) 448.67 492.17 T
4 7 Q
(33) 453.41 492.17 T
0 13 Q
(R) 390 465.33 T
4 9.5 Q
(rangecheck error) 390 445.67 T
4 7 Q
(55) 458.77 445.67 T
4 9.5 Q
(rectangles) 390 433.17 T
4 7 Q
(20) 433.22 433.17 T
4 9.5 Q
(rectviewclip) 390 420.67 T
4 7 Q
(21) 441.66 420.67 T
4 9.5 Q
(repainting) 390 408.17 T
4 7 Q
(20) 433.23 408.17 T
4 9.5 Q
(\320) 440.22 408.17 T
4 7 Q
(21) 444.96 408.17 T
4 9.5 Q
(resizing the window) 390 395.67 T
4 7 Q
(21) 471.72 395.67 T
4 9.5 Q
(resolution, programming tips) 390 383.17 T
4 7 Q
(42) 505.21 383.17 T
4 9.5 Q
(resource ID) 390 370.67 T
4 7 Q
(32) 439.28 370.67 T
4 9.5 Q
(resource sharing) 390 358.17 T
4 7 Q
(35) 457.21 358.17 T
4 9.5 Q
(RGB_DEFAULT_MAP) 390 345.67 T
4 7 Q
(13) 487.55 345.67 T
4 9.5 Q
(rotate) 390 333.17 T
4 7 Q
(40) 416.36 333.17 T
0 13 Q
(S) 390 306.33 T
4 9.5 Q
(scale) 390 286.67 T
4 7 Q
(40) 413.72 286.67 T
4 9.5 Q
(scrolling) 390 274.17 T
4 7 Q
(18) 427.96 274.17 T
4 9.5 Q
(selectfont) 390 261.67 T
4 7 Q
(41) 431.65 261.67 T
4 9.5 Q
(setmatrix) 390 249.17 T
4 7 Q
(40) 430.07 249.17 T
4 9.5 Q
(setrgbcolor) 390 236.67 T
4 7 Q
(15) 437.45 236.67 T
4 9.5 Q
(,) 444.43 236.67 T
4 7 Q
(41) 449.18 236.67 T
4 9.5 Q
(setXgcdrawable) 390 224.17 T
4 7 Q
(12) 455.89 224.17 T
4 9.5 Q
(,) 462.88 224.17 T
4 7 Q
(43) 467.62 224.17 T
4 9.5 Q
(,) 474.61 224.17 T
4 7 Q
(44) 479.35 224.17 T
4 9.5 Q
(,) 486.34 224.17 T
4 7 Q
(58) 491.09 224.17 T
4 9.5 Q
(setXgcdrawablecolor) 390 211.67 T
4 7 Q
(43) 475.39 211.67 T
4 9.5 Q
(,) 482.38 211.67 T
4 7 Q
(58) 487.12 211.67 T
4 9.5 Q
(setXoffset) 390 199.17 T
4 7 Q
(18) 433.75 199.17 T
4 9.5 Q
(,) 440.74 199.17 T
4 7 Q
(21) 445.49 199.17 T
4 9.5 Q
(,) 452.48 199.17 T
4 7 Q
(43) 457.22 199.17 T
4 9.5 Q
(,) 464.21 199.17 T
4 7 Q
(44) 468.95 199.17 T
4 9.5 Q
(,) 475.94 199.17 T
4 7 Q
(58) 480.69 199.17 T
4 9.5 Q
(setXrgbactual) 390 186.67 T
4 7 Q
(59) 447.46 186.67 T
4 9.5 Q
(sharing resources) 390 174.17 T
4 7 Q
(35) 460.9 174.17 T
4 9.5 Q
(showpage) 390 161.67 T
4 7 Q
(38) 432.7 161.67 T
4 9.5 Q
(single-operator procedures) 390 149.17 T
4 7 Q
(59) 496.21 149.17 T
4 9.5 Q
(space) 390 136.67 T
3 7 Q
(12) 415.83 136.67 T
4 9.5 Q
(stackunderflow error) 390 124.17 T
4 7 Q
(55) 474.07 124.17 T
4 9.5 Q
(status events) 390 111.67 T
4 7 Q
(27) 442.99 111.67 T
4 9.5 Q
(\320) 449.98 111.67 T
4 7 Q
(30) 454.72 111.67 T
4 9.5 Q
(masks) 402 99.17 T
4 7 Q
(28) 430.47 99.17 T
4 9.5 Q
(,) 437.46 99.17 T
4 7 Q
(45) 442.21 99.17 T
4 9.5 Q
(synchronization) 390 86.67 T
4 7 Q
(26) 455.37 86.67 T
4 9.5 Q
(,) 462.36 86.67 T
4 7 Q
(36) 467.11 86.67 T
FMENDPAGE
%%EndPage: "64" 61
%%Page: "65" 61
612 792 0 FMBEGINPAGE
78 28 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(Index) 471.21 29.83 T
( 65) 522.19 29.83 T
78 72 222 708 R
7 X
V
0 13 Q
0 X
(T) 78 699.33 T
4 9.5 Q
(termination) 78 679.67 T
4 7 Q
(26) 126.51 679.67 T
4 9.5 Q
(textProc) 78 667.17 T
3 7 Q
(12) 114.38 667.17 T
4 9.5 Q
(,) 121.37 667.17 T
4 7 Q
(47) 126.11 667.17 T
4 9.5 Q
(transformation, linear) 78 654.67 T
4 7 Q
(17) 164.99 654.67 T
4 9.5 Q
(typecheck error) 78 642.17 T
4 7 Q
(55) 142.04 642.17 T
4 9.5 Q
(types and global variables) 78 629.67 T
4 7 Q
(45) 181.59 629.67 T
0 13 Q
(U) 78 602.83 T
4 9.5 Q
(undefined error) 78 583.17 T
4 7 Q
(26) 141.51 583.17 T
4 9.5 Q
(,) 148.5 583.17 T
4 7 Q
(55) 153.25 583.17 T
4 9.5 Q
(User) 78 570.67 T
4 7 Q
(23) 100.66 570.67 T
4 9.5 Q
(user object indices) 78 558.17 T
4 7 Q
(22) 153.39 558.17 T
4 9.5 Q
(\320) 160.38 558.17 T
4 7 Q
(25) 165.12 558.17 T
4 9.5 Q
(user objects) 78 545.67 T
3 7 Q
(22) 127.82 545.67 T
4 9.5 Q
(user paths) 78 533.17 T
4 7 Q
(21) 120.97 533.17 T
4 9.5 Q
(user space) 78 520.67 T
4 7 Q
(17) 122.01 520.67 T
0 13 Q
(W) 78 493.83 T
4 9.5 Q
(waiting) 78 474.17 T
4 7 Q
(37) 111.22 474.17 T
4 9.5 Q
(window, resizing) 78 461.67 T
4 7 Q
(21) 148.12 461.67 T
4 9.5 Q
(wrapped procedures.) 78 449.17 T
1 F
( See) 157.06 449.17 T
4 F
(wraps) 174.98 449.17 T
(wraps) 78 436.67 T
4 7 Q
(10) 105.41 436.67 T
4 9.5 Q
(,) 112.4 436.67 T
4 7 Q
(23) 117.14 436.67 T
4 9.5 Q
(,) 124.13 436.67 T
4 7 Q
(31) 128.88 436.67 T
0 13 Q
(X) 78 409.83 T
4 9.5 Q
(X) 78 390.17 T
4 7 Q
(19) 89.6 390.17 T
4 9.5 Q
(X coordinate system) 78 377.67 T
4 7 Q
(17) 160.77 377.67 T
4 9.5 Q
(X primitives) 78 365.17 T
4 7 Q
(19) 130.47 365.17 T
4 9.5 Q
(,) 137.46 365.17 T
4 7 Q
(20) 142.2 365.17 T
4 9.5 Q
(XCheckIfEvent) 78 352.67 T
4 7 Q
(38) 142.31 352.67 T
4 9.5 Q
(XCloseDisplay) 78 340.17 T
4 7 Q
(27) 140.74 340.17 T
4 9.5 Q
(XCopyArea) 78 327.67 T
4 7 Q
(19) 128.61 327.67 T
4 9.5 Q
(,) 135.59 327.67 T
4 7 Q
(37) 140.34 327.67 T
4 9.5 Q
(,) 147.33 327.67 T
4 7 Q
(38) 152.07 327.67 T
4 9.5 Q
(XCreateGC) 78 315.17 T
4 7 Q
(11) 127.55 315.17 T
4 9.5 Q
(XCreateSimpleWindow) 78 302.67 T
4 7 Q
(11) 173.95 302.67 T
4 9.5 Q
(XDPSContextFromSharedID) 78 290.17 T
4 7 Q
(36) 194 290.17 T
4 9.5 Q
(,) 200.99 290.17 T
4 7 Q
(49) 205.73 290.17 T
4 9.5 Q
(XDPSContextFromXID) 78 277.67 T
4 7 Q
(32) 174.49 277.67 T
4 9.5 Q
(,) 181.48 277.67 T
4 7 Q
(49) 186.23 277.67 T
4 9.5 Q
(XDPSCreateContext) 78 265.17 T
4 7 Q
(11) 161.83 265.17 T
4 9.5 Q
(,) 168.82 265.17 T
4 7 Q
(14) 173.57 265.17 T
4 9.5 Q
(\320) 180.56 265.17 T
4 7 Q
(16) 185.3 265.17 T
4 9.5 Q
(,) 192.29 265.17 T
4 7 Q
(49) 197.04 265.17 T
4 9.5 Q
(,) 204.02 265.17 T
4 7 Q
(57) 208.77 265.17 T
4 9.5 Q
-0.48 (XDPSCreateSimpleContext) 78 252.67 P
4 7 Q
-0.36 (11) 187.76 252.67 P
4 9.5 Q
-0.48 (\320) 194.75 252.67 P
4 7 Q
-0.36 (14) 199.5 252.67 P
4 9.5 Q
-0.48 (,) 206.49 252.67 P
4 7 Q
-0.36 (16) 210.75 252.67 P
4 9.5 Q
-0.48 (,) 217.74 252.67 P
4 7 Q
(49) 102 240.17 T
4 9.5 Q
(,) 108.99 240.17 T
4 7 Q
(50) 113.73 240.17 T
4 9.5 Q
(default colormap) 90 227.67 T
4 7 Q
(12) 159.32 227.67 T
4 9.5 Q
(XDPSDispatchEvent) 78 215.17 T
4 7 Q
(30) 162.89 215.17 T
4 9.5 Q
(,) 169.88 215.17 T
4 7 Q
(51) 174.62 215.17 T
4 9.5 Q
(,) 181.61 215.17 T
4 7 Q
(52) 186.35 215.17 T
4 9.5 Q
(XDPSFindContext) 78 202.67 T
4 7 Q
(32) 154.47 202.67 T
4 9.5 Q
(,) 161.46 202.67 T
4 7 Q
(51) 166.2 202.67 T
4 9.5 Q
(XDPSGetContextStatus) 78 190.17 T
4 7 Q
(27) 173.97 190.17 T
4 9.5 Q
(,) 180.96 190.17 T
4 7 Q
(51) 185.71 190.17 T
4 9.5 Q
(XDPSGetDefaultColorMaps) 78 177.67 T
4 7 Q
(51) 191.88 177.67 T
4 9.5 Q
(XDPSIsDPSEvent) 78 165.17 T
4 7 Q
(52) 153.41 165.17 T
4 9.5 Q
(XDPSIsOutputEvent) 78 152.67 T
4 7 Q
(52) 162.37 152.67 T
4 9.5 Q
(XDPSIsStatusEvent) 78 140.17 T
4 7 Q
(30) 159.21 140.17 T
4 9.5 Q
(,) 166.19 140.17 T
4 7 Q
(52) 170.94 140.17 T
4 9.5 Q
(XDPSRegisterStatusProc) 78 127.67 T
4 7 Q
(27) 179.24 127.67 T
4 9.5 Q
(,) 186.23 127.67 T
4 7 Q
(28) 190.97 127.67 T
4 9.5 Q
(,) 197.96 127.67 T
4 7 Q
(53) 202.71 127.67 T
4 9.5 Q
(XDPSSetEventDelivery) 78 115.17 T
3 7 Q
(30) 174.49 115.17 T
4 9.5 Q
(,) 181.47 115.17 T
4 7 Q
(53) 186.22 115.17 T
4 9.5 Q
(XDPSSetStatusMask) 78 102.67 T
4 7 Q
(27) 163.43 102.67 T
4 9.5 Q
(,) 170.42 102.67 T
4 7 Q
(28) 175.16 102.67 T
4 9.5 Q
(,) 182.15 102.67 T
4 7 Q
(29) 186.9 102.67 T
4 9.5 Q
(,) 193.88 102.67 T
4 7 Q
(51) 198.63 102.67 T
4 9.5 Q
(,) 205.62 102.67 T
4 7 Q
(53) 210.36 102.67 T
4 9.5 Q
(XDPSSpaceFromSharedID) 78 90.17 T
4 7 Q
(36) 186.6 90.17 T
4 9.5 Q
(,) 193.59 90.17 T
4 7 Q
(54) 198.34 90.17 T
4 9.5 Q
(XDPSSpaceFromXID) 78 77.67 T
4 7 Q
(32) 167.1 77.67 T
4 9.5 Q
(,) 174.09 77.67 T
4 7 Q
(54) 178.84 77.67 T
234 72 378 708 R
7 X
V
4 9.5 Q
0 X
(XDPSStatusProc) 234 701.67 T
4 7 Q
(28) 303.61 701.67 T
4 9.5 Q
(,) 310.6 701.67 T
4 7 Q
(46) 315.34 701.67 T
4 9.5 Q
(XDPSUnfreezeContext) 234 689.17 T
4 7 Q
(28) 327.84 689.17 T
4 9.5 Q
(,) 334.83 689.17 T
4 7 Q
(54) 339.57 689.17 T
4 9.5 Q
(,) 346.56 689.17 T
4 7 Q
(56) 351.3 689.17 T
4 9.5 Q
(XDPSXIDFromContext) 234 676.67 T
4 7 Q
(32) 330.49 676.67 T
4 9.5 Q
(,) 337.48 676.67 T
4 7 Q
(54) 342.23 676.67 T
4 9.5 Q
(XDPSXIDFromSpace) 234 664.17 T
4 7 Q
(32) 323.1 664.17 T
4 9.5 Q
(,) 330.09 664.17 T
4 7 Q
(55) 334.83 664.17 T
4 9.5 Q
(XFillRectangle) 234 651.67 T
4 7 Q
(19) 296.74 651.67 T
4 9.5 Q
(XFlush) 234 639.17 T
4 7 Q
(33) 266.7 639.17 T
4 9.5 Q
(XID) 234 626.67 T
4 7 Q
(32) 255.61 626.67 T
4 9.5 Q
(XIfEvent) 234 614.17 T
4 7 Q
(38) 274.06 614.17 T
4 9.5 Q
(XNextEvent) 234 601.67 T
4 7 Q
(29) 286.19 601.67 T
4 9.5 Q
(XOpenDisplay) 234 589.17 T
4 7 Q
(11) 295.68 589.17 T
4 9.5 Q
(XSetWindowColormap) 234 576.67 T
4 7 Q
(15) 328.38 576.67 T
4 9.5 Q
(XStandardColormap) 234 564.17 T
4 7 Q
(15) 317.3 564.17 T
4 9.5 Q
(XtAppProcessEvent) 234 551.67 T
4 7 Q
(30) 315.72 551.67 T
4 9.5 Q
(XtDispatchEvent) 234 539.17 T
4 7 Q
(30) 304.12 539.17 T
4 9.5 Q
(Xutil.h) 234 526.67 T
4 7 Q
(15) 265.38 526.67 T
0 13 Q
(Z) 234 499.83 T
4 9.5 Q
(zombie context) 234 480.17 T
4 7 Q
(33) 297 480.17 T
390 71.99 534 707.99 R
7 X
V
FMENDPAGE
%%EndPage: "65" 62
%%Page: "66" 62
612 792 0 FMBEGINPAGE
78 26.5 534 35.5 R
7 X
0 K
V
2 8.5 Q
0 X
(66) 78 29.83 T
(Index) 120 29.83 T
78 72 222 708 R
7 X
V
234 71.99 378 708 R
V
390 72 534 708 R
V
FMENDPAGE
%%EndPage: "66" 63
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 62 1
%%DocumentFonts: Helvetica-Bold
%%+ Times-Italic
%%+ Helvetica
%%+ Times-Bold
%%+ Times-Roman
%%+ Symbol
%%+ Helvetica-Oblique
%%+ Courier
%%+ Helvetica-BoldOblique
