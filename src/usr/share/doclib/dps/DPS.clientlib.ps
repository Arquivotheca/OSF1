%!PS-Adobe-1.0
%%Title: client.mss
%%DocumentFonts: (atend)
%%Creator: Amy Davidson and Scribe 5(1501)
%%CreationDate: 22 January 1990 18:49
%%Pages: (atend)
%%EndComments

%Passthrough from Scribe
/CreationDate (Mon Jan  22 18:49:00 1990) def
/DraftStyle   (5)  def
DraftStyle () eq {/DraftStyle 0 def}
        {/DraftStyle DraftStyle cvi def}ifelse

% Adobe local stuff required for pssupplement
/bd{bind def}def
/pica{12 mul}bd/inch{72 mul}bd/mtx matrix def
/pagewidth 7.375 inch def/pagelength 9.25 inch def
/shtm 9 def /shtl 12 def

/draftmsg{
 gsave
 0.2 setlinewidth
 /Helvetica-Bold findfont 36 scalefont setfont
 420 720 moveto 10 rotate (DRAFT)false charpath stroke
 grestore
 /Helvetica findfont 8 scalefont setfont
 585 720 moveto -90 rotate
 (DRAFT of )show
 CreationDate show (.  )show
 (This is a draft copy only.  The final revision will not contain this message.)
 show
}bd

/pagegridprocs[

{gsave 0 setlinecap .25 setlinewidth newpath
 0 shtm neg moveto 0 shtl neg rlineto stroke
 shtm neg 0 moveto shtl neg 0 rlineto stroke
 pagewidth shtm add 0 moveto shtl 0 rlineto stroke
 pagewidth shtm neg moveto 0 shtl neg rlineto stroke
 0 pagelength shtm add moveto 0 shtl rlineto stroke
 shtm neg pagelength moveto shtl neg 0 rlineto stroke
 pagewidth shtm add pagelength moveto shtl 0 rlineto stroke
 pagewidth pagelength shtm add moveto 0 shtl rlineto stroke 
 grestore
}bind

{gsave
 initgraphics
 draftmsg
 grestore
}bind

{0 0 moveto pagewidth 0 lineto pagewidth pagelength lineto
 0 pagelength lineto 0 0 lineto closepath 0 setlinewidth stroke
 }bind

{gsave
 initgraphics
 94 720 moveto 315 0 rlineto 0 50 rlineto -315 0 rlineto closepath
 1 setlinewidth stroke
 /Helvetica-Bold findfont 14 scalefont setfont
 120 740 moveto (This draft is for Adobe Internal Use Only)show
 draftmsg
 grestore
}bind

{gsave
 initgraphics
 94 720 moveto 315 0 rlineto 0 50 rlineto -315 0 rlineto closepath
 1 setlinewidth stroke
 /Helvetica-Bold findfont 14 scalefont setfont
 100 756 moveto (This draft is provided under a non-disclosure)show
 100 740 moveto (agreement. Not to be re-distributed without)show
 100 724 moveto (written permission from Adobe Systems Inc.)show
 draftmsg
 grestore
}bind

{}
]def

/pagegrid /pagegridprocs load DraftStyle get def

/PSLogod 20 dict def
/Helvetica findfont{1 index/FID ne{PSLogod 3 1 roll put}{pop pop}ifelse}forall
PSLogod/FontMatrix[0.001 0 0 0.000916667 0 0]put
PSLogod/FontName/PSLogo put/PSLogo PSLogod definefont pop

/BOT{pop gsave currentpoint translate 90 rotate SSZ -.7 mul 0 moveto(^)show
 grestore(^)stringwidth rmoveto}def

% chapter box/fountain
/fstr 128 13 sub string def 128 1 255 13 sub{fstr exch dup
 255 div 180 mul cos neg 2 div .5 add 255 mul cvi exch 128 sub exch put}for
/fountain{/ury exch def/urx exch def/lly exch def/llx exch def
 gsave urx ury translate 180 rotate urx llx sub ury lly sub scale
 128 13 sub 10 8[-128 13 add 0 0 10 128 13 sub 0]{fstr}image grestore}def

% John's Figure Stuff
/figdict 100 dict def figdict begin
/scl .2157 def %scale of page
/rscl 1 scl div def % inverse scale
/hfpt .5 rscl mul def
/flpt rscl def
/qtpt .25 rscl mul def
/dsh {qtpt setlinewidth [2 rscl mul dup ] 0 setdash}def
/fntsz 8 rscl mul def
/fntoff fntsz .75 mul 2 div def
/hv /Helvetica findfont fntsz scalefont def
/hvs /Helvetica findfont fntsz .75 mul scalefont def
/sym /Symbol findfont fntsz scalefont def
/syms /Symbol findfont fntsz .75 mul scalefont def
/arrow
{/ye exch def /xe exch def
 /yb exch def /xb exch def
 /xd xe xb sub def /yd ye yb sub def
 /mg xd dup mul yd dup mul add sqrt def
 /ang yd xd atan def
 gsave xb yb translate ang rotate
 2 rscl mul 0 moveto mg 2 rscl mul sub 0 lineto qtpt setlinewidth stroke
 mg 0 moveto -4 rscl mul 2 rscl mul rlineto 0 -4 rscl mul rlineto closepath 
 fill grestore
}def

/2arrow 
{/ye exch def /xe exch def
 /yb exch def /xb exch def
 /xd xe xb sub def /yd ye yb sub def
 /mg xd dup mul yd dup mul add sqrt def
 /ang yd xd atan def
 gsave
 xb yb translate ang rotate
 2 rscl mul 0 moveto mg 2 rscl mul sub 0 lineto 
 qtpt setlinewidth stroke
 0 0 moveto 4 rscl mul 2 rscl mul lineto
 0 -4 rscl mul rlineto closepath fill
 mg 0 moveto -4 rscl mul 2 rscl mul rlineto
 0 -4 rscl mul rlineto closepath fill
 grestore
}def

/inch {72 mul}def

/angshow
{gsave
 /prc exch def
 /rd exch def
 /eang exch def
 /bang exch def
 /ys exch def
 /xs exch def
 /ad 180 rd 3.14159 mul div .75 mul def
 newpath
 xs ys rd bang eang ad sub arc
 qtpt setlinewidth stroke
 gsave xs ys translate
 eang rotate rd 0 translate
 flpt neg flpt 3 mul neg moveto flpt 2 mul 0 rlineto
 0 0 lineto closepath fill
 grestore
 hv setfont
 /mang bang eang add 2 div def
 /prc load
 xs mang cos rd mul 2 rscl mul sub add
 ys mang sin rd mul 4 rscl mul sub add rtext
grestore
}def  

/dotrad 1.5 rscl mul def
/dot 
{gsave 
 translate dotrad 0 moveto 0 0 dotrad 0 359 arc closepath fill 
 grestore
}def
/shw {show}def

/subscript  
{gsave 
 hvs setfont subbck suboff rmoveto show
 currentpoint suboff neg add exch subbck neg add exch
 grestore moveto}def

/subbck -.5 rscl mul def
/suboff -4 rscl mul def

/rtext
{gsave translate /prc exch def
 $ct begin
 0 0 moveto
 prc currentpoint
 end
 /ty exch def /tx exch def
 0 0 moveto
 tx neg 0 rmoveto
 prc 
 grestore
 }def

/ctext
{gsave translate /prc exch def
 $ct begin
 0 0 moveto
 prc currentpoint
 end
 /ty exch def /tx exch def
 0 0 moveto
 tx 2 div neg 0 rmoveto
 prc 
 grestore
 }def
/wbox
{gsave
 /ury exch def /urx exch def /lly exch def /llx exch def
 llx lly moveto llx ury lineto urx ury lineto urx lly lineto
 closepath 1 setgray fill grestore}def
/cwtext
{gsave translate /prc exch def
 $ct begin
 0 0 moveto
 prc currentpoint
 end
 /ty exch def /tx exch def
 tx 2 div neg fntsz neg .25 mul tx 2 div fntsz wbox
 0 0 moveto
 tx 2 div neg 0 rmoveto
 prc 
 grestore
}def

/ltext
{gsave translate /prc exch def
 0 0 moveto
 prc 
 grestore
}def
/$ct 10 dict def
$ct /show {stringwidth rmoveto} put
end %end figdict
%               END John's Stuff
/reencsmalldict 12 dict def /ReEncodeSmall      % oldname newname vector
{reencsmalldict begin
 /newcodesandnames exch def /newfontname exch def /basefontname exch def
 FontDirectory newfontname known
  {/ReEncodeSmall errordict /fontalreadydefined get exec} if
 /basefontdict basefontname findfont def
 /newfont basefontdict maxlength dict def
 basefontdict {exch dup /FID ne {dup /Encoding eq
  {exch dup length array copy newfont 3 1 roll put}
  {exch newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall
 newfont /FontName newfontname put newcodesandnames aload pop
 newcodesandnames length 2 idiv{newfont /Encoding get 3 1 roll put}repeat
 newfontname newfont definefont pop end}def
/univers[
0/Aacute 1/aacute
2/Acircumflex 3/acircumflex
4/Adieresis 5/adieresis
6/Agrave 7/agrave
8/Aring 9/aring
10/Atilde 11/atilde
12/Ccedilla 13/ccedilla
14/Eacute 15/eacute
16/Ecircumflex 17/ecircumflex
18/Edieresis 19/edieresis
20/Egrave 21/egrave
22/Iacute 23/iacute
24/Icircumflex 25/icircumflex
26/Idieresis 27/idieresis
28/Igrave 29/igrave
30/Ntilde 31/ntilde
128/Oacute 129/oacute
130/Ocircumflex 131/ocircumflex
132/Odieresis 133/odieresis
134/Ograve 135/ograve
136/Otilde 137/otilde
138/Scaron 139/scaron
140/Uacute 141/uacute
142/Ucircumflex 143/ucircumflex
144/Udieresis 145/udieresis
146/Ugrave 147/ugrave
148/Ydieresis 149/ydieresis
150/Zcaron 151/zcaron
]def
/tspecial[
1/Aacute 2/Acircumflex 3/Adieresis 4/Agrave 5/Aring 6/Atilde
7/Ccedilla
8/Eacute 9/Ecircumflex 10/Edieresis 11/Egrave
12/Iacute 13/Icircumflex 14/Idieresis 15/Igrave
16/Ntilde
17/Oacute 18/Ocircumflex 19/Odieresis 20/Ograve 21/Otilde
22/Scaron
23/Uacute 24/Ucircumflex 25/Udieresis 26/Ugrave
27/Ydieresis
28/Zcaron
129/aacute 130/acircumflex 131/adieresis 132/agrave 133/aring 134/atilde
135/ccedilla
136/eacute 137/ecircumflex 138/edieresis 139/egrave
140/iacute 141/icircumflex 142/idieresis 143/igrave 
144/ntilde
145/oacute 146/ocircumflex 147/odieresis 148/ograve 149/otilde
150/scaron
151/uacute 152/ucircumflex 153/udieresis 154/ugrave 
155/ydieresis
156/zcaron
] def
/Times-Roman /Times-Special tspecial ReEncodeSmall

% mostly standard stuff 
/BS {/SV save def 40 40 translate pagegrid
     0.0 pagelength translate .01 -.01 scale}bd
/ES {showpage SV restore}bd
/SC {setrgbcolor}bd
/FMTX matrix def
/RDF {WFT SLT 0.0 eq
  {SSZ 0.0 0.0 SSZ neg 0.0 0.0 FMTX astore}
  {SSZ 0.0 SLT sin SLT cos div SSZ mul SSZ neg 0.0 0.0 FMTX astore}
  ifelse makefont setfont}bd
/SLT 0.0 def
/SI { /SLT exch cvr def RDF}bd
/WFT /Courier findfont def
/SF { /WFT exch findfont def RDF}bd
/SSZ 1000.0 def
/SS { /SSZ exch 100.0 mul def RDF}bd
/AF { /WFT exch findfont def /SSZ exch 100.0 mul def RDF}bd
/MT /moveto load def
/XM {currentpoint exch pop moveto}bd
/UL {gsave newpath moveto dup 2.0 div 0.0 exch rmoveto
   setlinewidth 0.0 rlineto stroke grestore}bd
/LH {gsave newpath moveto setlinewidth
   0.0 rlineto
   gsave stroke grestore}bd
/LV {gsave newpath moveto setlinewidth
   0.0 exch rlineto
   gsave stroke grestore}bd
/BX {gsave newpath moveto setlinewidth
   exch
   dup 0.0 rlineto
   exch 0.0 exch neg rlineto
   neg 0.0 rlineto
   closepath
   gsave stroke grestore}bd
/BX1 {grestore}bd
/BX2 {setlinewidth 1 setgray stroke grestore}bd
/PB {/PV save def /PICY exch def /PICX exch def
PICX 4985 le {/PICX 4500 def}{PICX 6120 le {/PICX 5400 def}if}ifelse
PICX PICY translate 100.0 -100.0 scale pop
/showpage{}def }bd
/PE {PV restore}bd
/SH /show load def
/MX {exch show 0.0 rmoveto}bd
/W {0 32 4 -1 roll widthshow}bd
/WX {0 32 5 -1 roll widthshow 0.0 rmoveto}bd
%%EndProlog


%%Page: 1 1 
BS
0 SI
11 SS 
0 5400 5400 PB %!
% display postscript system title page
gsave 
0 -5 pica translate  
0 0 36 pica 5 pica fountain
1 setlinewidth -.25 0 moveto 36 pica .5 add 0 rlineto stroke
-.25 5 pica moveto 36 pica .5 add 0 rlineto stroke
.5 setlinewidth 0 -.5 moveto 0 5 pica 1 add rlineto stroke
36 pica -.5 moveto 0 5 pica 1 add rlineto stroke grestore

/Helvetica findfont 12 scalefont setfont
/slength (ADOBE SYSTEMS) stringwidth pop def

/hbig /Helvetica-Bold findfont 30 scalefont def 
hbig setfont
newpath 0 0 moveto
(P) false charpath flattenpath pathbbox exch pop exch sub 
/ph exch def pop
/bl 5 pica ph 16 add sub 2 div ph add def
% NEW STUFF
newpath
7 pica bl neg moveto
gsave
 gsave 
 (D) false charpath gsave 1 setgray fill grestore
 .5 setlinewidth stroke
 grestore
 (D) stringwidth rmoveto
 /hsq /Helvetica-Bold findfont [30 0 0 27 0 0] makefont def 
 hsq setfont
 gsave
 (ISPLA) false charpath gsave 1 setgray fill grestore
 .5 setlinewidth stroke
 grestore
 (ISPLA) stringwidth rmoveto
 -4 0 rmoveto
 (Y) false charpath gsave 1 setgray fill grestore
 .5 setlinewidth stroke
grestore
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
newpath
18 pica bl neg moveto
gsave
gsave 
(P) false charpath gsave 1 setgray fill grestore
.5 setlinewidth stroke
grestore
(P) stringwidth rmoveto
/hsq /Helvetica-Bold findfont [30 0 0 27 0 0] makefont def 
hsq setfont
gsave
(OST) false charpath gsave 1 setgray fill grestore
.5 setlinewidth stroke
grestore
(OST) stringwidth rmoveto
hbig setfont
gsave
(S) false charpath gsave 1 setgray fill grestore
.5 setlinewidth stroke
grestore
(S) stringwidth rmoveto
currentpoint /yyy1 exch def /xxx1 exch def
hsq setfont
gsave
(CRIPT) false charpath gsave 1 setgray fill grestore
.5 setlinewidth stroke
% (R)
gsave
xxx1 yyy1 moveto
(CRIPT) stringwidth rmoveto
2 20 rmoveto 
/Symbol findfont 12 scalefont setfont
(\342) show
grestore
% (R)
grestore
grestore

0 -16 rmoveto
/Helvetica findfont 10 scalefont setfont
gsave 
slength (SYSTEM) stringwidth pop sub 5 div 0
(SYSTEM) ashow grestore

0 -25 pica rmoveto
/Helvetica findfont 12 scalefont setfont
gsave (ADOBE SYSTEMS) show grestore
0 -14 rmoveto
/Helvetica findfont 8 scalefont setfont
gsave
slength (INCORPORATED) stringwidth pop sub 11 div 0
(INCORPORATED) ashow
grestore

%% end of title page
 PE 18 /Helvetica AF
26998 22910 MT
(Client Library)SH
26998 24706 MT
(Reference Manual)SH
ES
%%Page: 2 2 
BS
0 SI
9 /Times-Bold AF
24890 19395 MT
(Client Library Reference Manual)SH
/Times-Roman SF
24890 21391 MT
(January 23, 1990)SH
24890 23387 MT
(Copyright)SH
/Symbol SF
(\323)SH
/Times-Roman SF
29476 XM
(1988-1990 Adobe Systems Incorporated.)SH
24898 24385 MT
(All rights reserved.)SH
24890 26381 MT
(PostScript and Display PostScript are registered trademarks of)SH
24898 27379 MT
(Adobe Systems Incorporated.)SH
24890 29375 MT
(Macintosh is a registered trademark of Apple Computer)SH
24898 30373 MT
(Incorporated. UNIX)
225 W( is a registered trademark of AT&T)SH
24898 31371 MT
(Information Systems.  X Window System is a trademark of the)SH
24898 32369 MT
(Massachusetts Institute of Technology.)SH
8 SS 
24890 35113 MT
(The information in this document is furnished for informational use)SH
24898 36011 MT
(only, is subject to change without notice, and should not be construed)SH
24898 36909 MT
(as a commitment by Adobe Systems Incorporated.  Adobe Systems)SH
24898 37807 MT
(Incorporated assumes no responsibility or liability for any errors or)SH
24898 38705 MT
(inaccuracies that may appear in this document.  The software)SH
24898 39603 MT
(described in this document is furnished under license and may only be)SH
24898 40501 MT
(used or copied in accordance with the terms of such license.)SH
24890 42397 MT
(No part of this publication may be reproduced, stored in a retrieval)SH
24898 43295 MT
(system, or transmitted, in any form or by any means, electronic,)SH
24898 44193 MT
(mechanical, recording, or otherwise, without the prior written)SH
24898 45091 MT
(permission of Adobe Systems Incorporated.)SH
9 SS 
24890 47087 MT
(Written by Amy Davidson.)SH
ES
%%Page: 1 3 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(1 ABOUT)
491 W( THIS MANUAL)SH
11 /Times-Roman AF
19791 8826 MT
(This manual provides the application programmer)
105 W( with descrip-)104 W
19799 10123 MT
(tions of Client Library procedures and conventions;)
163 W( these con-)164 W
9 /Symbol AF
45827 11084 MT
(\322)SH
11 /Times-Roman AF
19799 11447 MT
(stitute the programming interface to the)
13 W( Display PostScript)12 W
46825 XM
(sys-)SH
19799 12744 MT
(tem. The sections of the manual are listed below:)SH
/Symbol SF
21418 15021 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 2 introduces the Client Library and)
321 W( provides a)322 W
22199 16218 MT
(diagram of its relationship to the Display)
191 W( PostScript sys-)190 W
22199 17415 MT
(tem.)SH
/Symbol SF
21418 19211 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 3 provides a brief overview)
119 W( of the Client Library;)120 W
22199 20408 MT
(describes the phases of an application program interacting)119 W
22199 21605 MT
(with the Display PostScript system; introduces the C header)SH
22199 22802 MT
(files that represent the Client Library interface;)
238 W( and dis-)237 W
22199 23999 MT
(cusses the use of wrapped procedures.)SH
/Symbol SF
21418 25795 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 4 describes)
130 W( the basic concepts an application pro-)131 W
22199 26992 MT
(grammer needs to know before writing a simple application)16 W
22199 28189 MT
(for the Display PostScript system.)SH
/Symbol SF
21418 29985 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 5 discusses call-back procedures of various)
123 W( kinds,)124 W
22199 31182 MT
(including text and error handlers.)SH
/Symbol SF
21418 32978 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 6 contains advanced Client)
250 W( Library concepts in-)249 W
22199 34175 MT
(cluding context chaining,)
92 W( encoding and translation, buffer-)93 W
22199 35372 MT
(ing, application/context synchronization,)
240 W( and forked con-)239 W
22199 36569 MT
(texts.)SH
/Symbol SF
21418 38365 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 7 provides programming tips and)
13 W( summarizes notes)14 W
22199 39562 MT
(and warnings.)SH
/Symbol SF
21418 41358 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 8 lists and documents an application)
115 W( program that)114 W
22199 42555 MT
(illustrates how to communicate with the Display PostScript)39 W
22199 43752 MT
(system using the Client Library.)SH
/Symbol SF
21418 45548 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 9 documents the basic Client Library)
207 W( data struc-)206 W
22199 46745 MT
(tures and procedures found in)SH
/Times-Italic SF
35546 XM
(dpsclient.h)SH
/Times-Roman SF
(.)SH
/Symbol SF
21418 48541 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 10 describes)
296 W( the single-operator procedures that)297 W
9 /Symbol AF
32059 49502 MT
(\322)SH
11 /Times-Roman AF
22199 49865 MT
(implement PostScript)355 W
33400 XM
(operators and lists)
355 W( the)354 W
/Times-Italic SF
44716 XM
(dpsops.h)SH
/Times-Roman SF
22199 51062 MT
(header file in which they are declared.)SH
/Symbol SF
21418 52858 MT
(\267)SH
/Times-Roman SF
22199 XM
(Section 11 describes the)241 W
/Times-Italic SF
34099 XM
(dpsfriends.h)SH
/Times-Roman SF
40024 XM
(header file and)
241 W( its)242 W
22199 54055 MT
(support of C-callable procedures)
163 W( produced by the)162 W
/Times-Italic SF
45357 XM
(pswrap)SH
/Times-Roman SF
22199 55252 MT
(translator.)SH
/Symbol SF
21418 57048 MT
(\267)SH
/Times-Roman SF
22199 XM
(Appendix A lists changes)
71 W( to the manual since the previous)72 W
22199 58245 MT
(version.)SH
8 /Helvetica AF
36186 63450 MT
(1 ABOUT)
327 W( THIS MANUAL)SH
10 SS 
48041 XM
(1)SH
ES
%%Page: 2 4 
BS
0 SI
11 /Symbol AF
20518 6280 MT
(\267)SH
/Times-Roman SF
21299 XM
(Appendix B provides an example error)
161 W( handler for the X)160 W
9 /Symbol AF
29523 7241 MT
(\324)SH
11 /Times-Roman AF
21299 7604 MT
(Window System)921 W
31520 XM
(implementation of the)
921 W( Display)922 W
21299 8801 MT
(PostScript system.)SH
/Symbol SF
20518 10597 MT
(\267)SH
/Times-Roman SF
21299 XM
(Appendix C describes how an application can)
32 W( recover from)31 W
21299 11794 MT
(PostScript language errors)
130 W( and provides an example of an)131 W
21299 12991 MT
(exception handler.)SH
18891 15186 MT
(For more information about the PostScript language, see)
290 W( the)289 W
/Times-Italic SF
18899 16483 MT
(PostScript Language Reference Manual)349 W
/Times-Roman SF
38197 XM
(and)SH
/Times-Italic SF
40410 XM
(PostScript Lan-)350 W
18899 17780 MT
(guage Extensions)
175 W( for the Display PostScript System)174 W
/Times-Roman SF
(. For more)174 W
18899 19077 MT
(information about)
617 W( using the)618 W
/Times-Italic SF
33836 XM
(pswrap)SH
/Times-Roman SF
37969 XM
(translator to embed)618 W
18899 20374 MT
(PostScript language code in C programs, see the)111 W
/Times-Italic SF
41324 XM
(pswrap Refer-)110 W
18899 21671 MT
(ence Manual)SH
/Times-Roman SF
(.)SH
/Helvetica SF
16169 24868 MT
(1.1)SH
18899 XM
(SYSTEM-SPECIFIC DOCUMENTATION)SH
/Times-Roman SF
18891 27063 MT
(The term "system specific")
208 W( is used throughout this manual. It)209 W
18899 28360 MT
(refers to areas of the Client)
285 W( Library implementation that are)284 W
18899 29657 MT
(necessarily customized to)
262 W( fit a given machine and operating-)263 W
18899 30954 MT
(system environment.)
447 W( The)446 W
/Times-Italic SF
31664 XM
(Client Library Reference Manual)446 W
/Times-Roman SF
18899 32251 MT
(describes those aspects of the Client Library that are)
51 W( common to)52 W
18899 33548 MT
(all Display PostScript system implementations.)SH
18891 35743 MT
(You will find notes)
39 W( and comments in this manual alerting you to)38 W
18899 37040 MT
(system-specific issues.)
2 W( For more information about these system-)3 W
18899 38337 MT
(specific aspects)
145 W( of your Client Library implementation, see the)144 W
18899 39634 MT
(documentation provided by your Display)
50 W( PostScript system ven-)51 W
18899 40931 MT
(dor.)SH
/Helvetica SF
16169 44128 MT
(1.2)SH
18899 XM
(TYPOGRAPHICAL CONVENTIONS)SH
/Times-Roman SF
18891 46323 MT
(The typographical)
191 W( conventions used in this manual are as fol-)190 W
18899 47620 MT
(lows:)SH
10 /Helvetica AF
4500 63450 MT
(2)SH
8 SS 
7456 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 3 5 
BS
43197 50 5400 6217 UL
0 SI
9 /Times-Italic AF
6600 8312 MT
(Item)SH
19799 XM
(Example of Typographical Style)SH
43197 50 5400 9526 UL
/Times-Roman SF
6600 11621 MT
(file)SH
/Times-Italic SF
19799 XM
(dpsclient.h)SH
/Times-Roman SF
6600 13916 MT
(variable, typedef, code fragment)SH
19799 XM
(`)SH
8 /Helvetica AF
(ctxt)SH
9 /Times-Roman AF
(', `)SH
8 /Helvetica AF
(DPSContextRec)SH
9 /Times-Roman AF
(', `)SH
8 /Helvetica AF
(DPSrectstroke\050ctxt, 0.0, 0.0, 10.0, 20.0\051)SH
9 /Times-Roman AF
(')SH
6600 16211 MT
(procedure)SH
/Times-Italic SF
19799 XM
(DPSSetContext)SH
/Times-Roman SF
6600 18506 MT
(PostScript operator)SH
/Times-Bold SF
13799 XM
(rectfill)SH
/Times-Roman SF
6600 20801 MT
(new term)SH
19799 XM
(``A)SH
/Times-Italic SF
21274 XM
(wrapped procedure)SH
/Times-Roman SF
28574 XM
(\050)SH
/Times-Italic SF
(wrap)SH
/Times-Roman SF
30949 XM
(for short\051 consists of ....'')SH
43197 50 5400 22015 UL
8 /Helvetica AF
36186 63450 MT
(1 ABOUT)
327 W( THIS MANUAL)SH
10 SS 
48041 XM
(3)SH
ES
%%Page: 4 6 
BS
0 SI
12 /Helvetica AF
11692 6275 MT
(2 ABOUT)
491 W( THE CLIENT LIBRARY)SH
11 /Times-Roman AF
18891 8826 MT
(The Client Library is the application)
169 W( programmer's link to the)170 W
18899 10123 MT
(Display PostScript)
152 W( system, which makes the imaging power of)151 W
18899 11420 MT
(the PostScript interpreter available for online displays as well)
60 W( as)61 W
18899 12717 MT
(for printing. An application program can)
30 W( display text and images)29 W
18899 14014 MT
(on the)
70 W( user's screen by calling Client Library procedures. These)71 W
18899 15311 MT
(procedures are written with)
474 W( a C language interface. They)473 W
18899 16608 MT
(generate PostScript language code and send it to the PostScript)121 W
18899 17905 MT
(interpreter for execution, as shown in Figure 1.)SH
10 /Helvetica-Bold AF
4500 19830 MT
(Figure 1)SH
/Helvetica-Oblique SF
8752 XM
(The Client Library Link to the Display PostScript System)SH
43197 50 4500 21739 UL
1 SS 
16200 4500 37980 PB %!
% Copyright (C) 1987 Adobe Systems Incorporated.
% All Rights Reserved.
% Adobe Illustrator is a trademark of Adobe Systems Incorporated.
/Adobe_Illustrator_1.1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
% graphic state operators
/_K {3 index add neg dup 0 lt {pop 0} if 3 1 roll} bdef
/_k /setcmybcolor where 
{/setcmybcolor get} {{1 sub 4 1 roll _K _K _K setrgbcolor pop} bind} ifelse def
/g {/_b xdef /p {_b setgray} def} bdef
/G {/_B xdef /P {_B setgray} def} bdef
/k {/_b xdef /_y xdef /_m xdef /_c xdef /p {_c _m _y _b _k} def} bdef
/K {/_B xdef /_Y xdef /_M xdef /_C xdef /P {_C _M _Y _B _k} def} bdef
/d /setdash ldef
/_i currentflat def
/i {dup 0 eq {pop _i} if setflat} bdef
/j /setlinejoin ldef
/J /setlinecap ldef
/M /setmiterlimit ldef
/w /setlinewidth ldef
% path construction operators
/_R {.25 sub round .25 add} bdef
/_r {transform _R exch _R exch itransform} bdef
/c {_r curveto} bdef
/C /c ldef
/v {currentpoint 6 2 roll _r curveto} bdef
/V /v ldef
/y {_r 2 copy curveto} bdef
/Y /y ldef
/l {_r lineto} bdef
/L /l ldef
/m {_r moveto} bdef
% error operators
/_e [] def
/_E {_e length 0 ne {gsave 0 g 0 G 0 i 0 J 0 j 1 w 10 M [] 0 d
/Courier 20 0 0 1 z [0.966 0.259 -0.259 0.966
_e 0 get _e 2 get add 2 div _e 1 get _e 3 get add 2 div] e _f t T grestore} if} bdef
/_fill {{fill} stopped
{/_e [pathbbox] def /_f (ERROR: can't fill, increase flatness) def n _E} if} bdef
/_stroke {{stroke} stopped
{/_e [pathbbox] def /_f (ERROR: can't stroke, increase flatness) def n _E} if} bdef
% path painting operators
/n /newpath ldef
/N /n ldef
/F {p _fill} bdef
/f {closepath F} bdef
/S {P _stroke} bdef
/s {closepath S} bdef
/B {gsave F grestore S} bdef
/b {closepath B} bdef
% text block construction and painting operators
/_s /ashow ldef
/_S {(?) exch {2 copy 0 exch put pop dup false charpath currentpoint _g setmatrix
_stroke _G setmatrix moveto 3 copy pop rmoveto} forall pop pop pop n} bdef
/_A {_a moveto _t exch 0 exch} bdef
/_L {0 _l neg translate _G currentmatrix pop} bdef
/_w {dup stringwidth exch 3 -1 roll length 1 sub _t mul add exch} bdef
/_z [{0 0} bind {dup _w exch neg 2 div exch neg 2 div} bind {dup _w exch neg exch neg} bind] def
/z {_z exch get /_a xdef /_t xdef /_l xdef exch findfont exch scalefont setfont} bdef
/_g matrix def
/_G matrix def
/_D {_g currentmatrix pop gsave concat _G currentmatrix pop} bdef
/e {_D p /t {_A _s _L} def} bdef
/r {_D P /t {_A _S _L} def} bdef
/a {_D /t {dup p _A _s P _A _S _L} def} bdef
/o {_D /t {pop _L} def} bdef
/T {grestore} bdef
% group construction operators
/u {} bdef
/U {} bdef
% font construction operators
/Z {findfont begin currentdict dup length dict begin
{1 index /FID ne {def} {pop pop} ifelse} forall /FontName exch def dup length 0 ne
{/Encoding Encoding 256 array copy def 0 exch {dup type /nametype eq
{Encoding 2 index 2 index put pop 1 add} {exch pop} ifelse} forall} if pop
currentdict dup end end /FontName get exch definefont pop} bdef
end
Adobe_Illustrator_1.1 begin
n
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/.notdef/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/.notdef/.notdef/.notdef/yen/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/.notdef
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
]/_Times-Roman/Times-Roman Z
.8 .8 scale
u
0 g
0 G
0 i
0 J
0 j
1 w
10 M
[]0 d
216 23 m
216 114 L
102 114 L
102 23 L
216 23 L
s
159 68.5 m
S
U
u
178 114 m
178 23 l
S
U
u
433 23 m
433 114 L
319 114 L
319 23 L
433 23 L
s
376 68.5 m
S
U
u
403 49 m
403 114 L
352 114 L
352 49 L
403 49 L
s
377.5 81.5 m
S
U
u
u
u
217 72 m
228.258 65.5 l
S
217 72 m
228.258 78.5 l
S
U
u
318 72 m
306.741 65.5 l
S
318 72 m
306.741 78.5 l
S
U
217 72 m
318 72 l
S
U
U
/_Times-Roman 12 12 0 1 z
[1 0 0 1 377.5 91.5]e
(Display)t
(PostScript)t
(System)t
T
[1 0 0 1 376 32]e
(Window System)t
T
[1 0 0 1 140 69]e
(Application)t
T
[1 0 0 1 196 74]e
(Client)t
(Library)t
T
u
402.5 187.5 m
402.5 136.5 L
351.5 136.5 L
351.5 187.5 L
402.5 187.5 L
s
377 162 m
S
U
[1 0 0 1 377 157]e
(Display)t
T
u
u
u
377 114 m
378.625 116.481 l
S
377 114 m
375.375 116.481 l
S
U
u
377 136.251 m
378.625 133.77 l
S
377 136.251 m
375.375 133.77 l
S
U
377 114 m
377 136.251 l
S
U
U
_E end
 PE 43197 50 4500 40735 UL
11 /Times-Roman AF
18891 42730 MT
(Application programmers can customize and optimize their)
140 W( ap-)139 W
18899 44027 MT
(plications by writing PostScript language)
63 W( programs. The)64 W
/Times-Italic SF
44457 XM
(pswrap)SH
/Times-Roman SF
18899 45324 MT
(translator, described in the)104 W
/Times-Italic SF
31258 XM
(pswrap Reference Manual)104 W
/Times-Roman SF
(, produces)103 W
18899 46621 MT
(application-defined PostScript language programs)
633 W( with C-)634 W
18899 47918 MT
(callable interfaces.)SH
10 /Helvetica AF
4500 63450 MT
(4)SH
8 SS 
7456 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 5 7 
BS
28806 50 19791 5400 LH BX1
0 SI
10 /Helvetica-Bold AF
19799 6953 MT
(Note:)SH
11 /Times-Roman AF
23109 XM
(In this)
36 W( manual, the terms ``input'' and ``output'' apply to)35 W
19799 8250 MT
(the execution context in the PostScript interpreter, not to the)
60 W( ap-)61 W
19799 9547 MT
(plication. An)
1081 W( application ``sends input'' to a context)
403 W( and)402 W
19799 10844 MT
(``receives output'' from a context.  This usage prevents the)
79 W( am-)80 W
19799 12141 MT
(biguity that would otherwise exist, since input with respect to)
11 W( the)10 W
19799 13438 MT
(context is output with respect to the application, and vice versa.)SH
28806 50 19791 14477 LH BX1
8 /Helvetica AF
33216 63450 MT
(2 ABOUT)
327 W( THE CLIENT LIBRARY)SH
10 SS 
48041 XM
(5)SH
ES
%%Page: 6 8 
BS
0 SI
12 /Helvetica AF
11692 6275 MT
(3 OVERVIEW)
491 W( OF THE CLIENT LIBRARY)SH
11 /Times-Roman AF
18891 8826 MT
(The Client Library is a collection of procedures that provide an)101 W
18899 10123 MT
(application program with access to the)
274 W( PostScript interpreter.)273 W
18899 11420 MT
(The Client Library includes procedures for creating, communi-)152 W
18899 12717 MT
(cating with, and destroying)
313 W( PostScript execution contexts. A)312 W
18899 14014 MT
(context consists of all the)
8 W( information \050or ``state''\051 needed by the)9 W
18899 15311 MT
(PostScript interpreter to execute a PostScript)
82 W( language program.)81 W
18899 16608 MT
(In the Client Library)
103 W( interface, each context is represented by a)104 W
18899 17905 MT
(`)SH
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' data structure pointed to by a)
172 W( `)171 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(')SH
18899 19202 MT
(handle. PostScript execution contexts are described in)29 W
/Times-Italic SF
43113 XM
(PostScript)SH
18899 20499 MT
(Language Extensions for the Display PostScript System)SH
/Times-Roman SF
(.)SH
18891 22694 MT
(To the)
230 W( application programmer, it appears that Client Library)229 W
18899 23991 MT
(procedures directly produce graphical output on)
144 W( the display. In)145 W
18899 25288 MT
(fact, these)
214 W( procedures generate PostScript language statements)213 W
18899 26585 MT
(and transmit them to the PostScript interpreter)
46 W( for execution; the)47 W
18899 27882 MT
(PostScript interpreter then produces graphical)
87 W( output that is dis-)86 W
18899 29179 MT
(played by device-specific procedures)
173 W( in the Display PostScript)174 W
18899 30476 MT
(system. In this way, the Client Library makes)
105 W( the full power of)104 W
18899 31773 MT
(the PostScript interpreter and imaging model available to)
209 W( a C)210 W
18899 33070 MT
(language program.)SH
18891 35265 MT
(The recommended way of sending PostScript language)
134 W( code to)133 W
18899 36562 MT
(the interpreter is to call wrapped procedures)
210 W( generated by the)211 W
/Times-Italic SF
18899 37859 MT
(pswrap)SH
/Times-Roman SF
22471 XM
(translator; these procedures are)
57 W( described in Section 3.3.)56 W
18899 39156 MT
(For simple)
622 W( operations, an application program can send)623 W
18899 40453 MT
(PostScript language fragments to the interpreter by)
444 W( calling)443 W
18899 41750 MT
(single-operator procedures)
347 W( \320)
498 W( each)
499 W( one the equivalent of a)348 W
18899 43047 MT
(single PostScript operator)
177 W( \320)
328 W( as)
327 W( described in Section 10. It is)176 W
18899 44344 MT
(also possible for an application)
100 W( program to send PostScript lan-)101 W
18899 45641 MT
(guage programs as ASCII text, as)
219 W( if to a laser printer with a)218 W
18899 46938 MT
(PostScript interpreter. This technique)
159 W( can be used for develop-)160 W
18899 48235 MT
(ment and debugging or for displaying PostScript)
102 W( language code)101 W
18899 49532 MT
(imported by the application)
SH( \320 for)
151 W( instance, from an EPS file.)SH
/Helvetica SF
16169 52729 MT
(3.1)SH
18899 XM
(PHASES OF AN APPLICATION)SH
/Times-Roman SF
18891 54924 MT
(Here is how)
38 W( a typical application program, written in C, uses the)39 W
18899 56221 MT
(Client Library in the different phases of its operation:)SH
10 /Helvetica AF
4500 63450 MT
(6)SH
8 SS 
7456 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 7 9 
BS
0 SI
11 /Times-Bold AF
19799 6155 MT
(Initialization.)SH
/Times-Roman SF
26998 XM
(First, the application establishes communication)91 W
26998 7352 MT
(with the)
29 W( Display PostScript system. Then it calls)30 W
26998 8549 MT
(Client Library procedures to)
54 W( create a context for)53 W
26998 9746 MT
(executing PostScript language programs. It)
116 W( also)117 W
26998 10943 MT
(performs other window-system-specific)
857 W( in-)856 W
26998 12140 MT
(itialization. Some higher-level)
85 W( facilities, such as)86 W
26998 13337 MT
(toolkits, do all of this)
315 W( initialization automati-)314 W
26998 14534 MT
(cally.)SH
/Times-Bold SF
19799 16330 MT
(Execution.)SH
/Times-Roman SF
26998 XM
(Once an application is)
21 W( initialized, it displays text)22 W
26998 17527 MT
(and graphics by sending PostScript)
379 W( language)378 W
26998 18724 MT
(programs to the interpreter. These programs may)11 W
26998 19921 MT
(be of any complexity)
10 W( from a single-operator pro-)9 W
26998 21118 MT
(cedure to a)
201 W( program that previews a full-color)202 W
26998 22315 MT
(illustration. The Client Library sends the)739 W
26998 23512 MT
(programs to the)
635 W( PostScript interpreter and)636 W
26998 24709 MT
(handles the results received from the interpreter.)SH
/Times-Bold SF
19799 26505 MT
(Termination.)SH
/Times-Roman SF
26998 XM
(When the application is ready to terminate, it)249 W
26998 27702 MT
(calls Client Library procedures to destroy)
331 W( its)332 W
26998 28899 MT
(contexts, free their resources, and)
115 W( end the com-)114 W
26998 30096 MT
(munication session.)SH
/Helvetica SF
17069 33293 MT
(3.2)SH
19799 XM
(HEADER FILES)SH
/Times-Roman SF
19791 35488 MT
(The Client Library procedures that an)
197 W( application can call are)198 W
19799 36785 MT
(defined in)
20 W( C header files, also known as include files or interface)19 W
19799 38082 MT
(files. There)
84 W( are four Client Library-defined header files and one)85 W
19799 39379 MT
(or more)
176 W( system-specific header files. The Client Library inter-)175 W
19799 40676 MT
(face represented by these header files may be extended in a)
SH( given)1 W
19799 41973 MT
(implementation, but the extensions)
396 W( are compatible with the)395 W
19799 43270 MT
(definitions given in this manual.)SH
/Symbol SF
21418 45547 MT
(\267)SH
/Times-Italic SF
22199 XM
(dpsclient.h)SH
/Times-Roman SF
27602 XM
(provides support for)
331 W( managing contexts and)332 W
22199 46744 MT
(sending PostScript)
51 W( language programs to the interpreter.  It)50 W
22199 47941 MT
(supports applications as well as application toolkits.)
187 W( Al-)650 W
22199 49138 MT
(ways present.)SH
/Symbol SF
21418 50934 MT
(\267)SH
/Times-Italic SF
22199 XM
(dpsfriends.h)SH
/Times-Roman SF
28410 XM
(provides support for wrapped)
527 W( procedures)526 W
22199 52131 MT
(created by)104 W
/Times-Italic SF
27231 XM
(pswrap)SH
/Times-Roman SF
30850 XM
(as well as)
104 W( data representations, conver-)105 W
22199 53328 MT
(sions, and other)
224 W( low-level support for context structures.)223 W
22199 54525 MT
(Always present.)SH
/Symbol SF
21418 56321 MT
(\267)SH
/Times-Italic SF
22199 XM
(dpsops.h)SH
/Times-Roman SF
26585 XM
(provides the single-operator)
230 W( procedures that re-)231 W
22199 57518 MT
(quire an explicit context parameter.  Optional; at)
96 W( least one)95 W
8 /Helvetica AF
30293 63450 MT
(3 OVERVIEW)
327 W( OF THE CLIENT LIBRARY)SH
10 SS 
48041 XM
(7)SH
ES
%%Page: 8 10 
BS
0 SI
11 /Times-Roman AF
21299 6155 MT
(single-operator header file)
585 W( must be present; that is,)586 W
/Times-Italic SF
21299 7352 MT
(dpsops.h)SH
/Times-Roman SF
25455 XM
(or)SH
/Times-Italic SF
26646 XM
(psops.h)SH
/Times-Roman SF
30252 XM
(or both.)SH
/Symbol SF
20518 9148 MT
(\267)SH
/Times-Italic SF
21299 XM
(psops.h)SH
/Times-Roman SF
25176 XM
(provides the single-operator procedures that)
271 W( im-)270 W
21299 10345 MT
(plicitly derive their context parameter)
16 W( from the current con-)17 W
21299 11542 MT
(text. Optional;)
275 W( see)SH
/Times-Italic SF
29884 XM
(dpsops.h)SH
/Times-Roman SF
(.)SH
/Symbol SF
20518 13338 MT
(\267)SH
/Times-Roman SF
21299 XM
(One or more)180 W
/Times-Italic SF
27672 XM
(system-specific header files)180 W
/Times-Roman SF
40583 XM
(provide support)179 W
21299 14535 MT
(for context creation.  These header files)
123 W( may also provide)124 W
21299 15732 MT
(system-specific extensions to the)
228 W( Client Library, such as)227 W
21299 16929 MT
(additional error codes.)SH
/Helvetica SF
16169 20126 MT
(3.3)SH
18899 XM
(WRAPPED PROCEDURES)SH
/Times-Roman SF
18891 22321 MT
(The most efficient way for an application program)
353 W( to send)354 W
18899 23618 MT
(PostScript language code to the interpreter is to use)
106 W( the)105 W
/Times-Italic SF
44457 XM
(pswrap)SH
/Times-Roman SF
18899 24915 MT
(translator to)
82 W( produce)83 W
/Times-Italic SF
28524 XM
(wrapped procedures)83 W
/Times-Roman SF
38189 XM
(\320 that)
234 W( is, PostScript)83 W
18899 26212 MT
(language programs that are callable as C procedures.)
44 W( A)43 W
/Times-Italic SF
43847 XM
(wrapped)SH
18899 27509 MT
(procedure)SH
/Times-Roman SF
23842 XM
(\050)SH
/Times-Italic SF
(wrap)SH
/Times-Roman SF
26893 XM
(for short\051 consists of a C language procedure)149 W
18899 28806 MT
(declaration enclosing a PostScript language body. There are)344 W
18899 30103 MT
(several advantages to using wraps:)SH
/Symbol SF
20518 32380 MT
(\267)SH
/Times-Roman SF
21299 XM
(Complex PostScript programs can be invoked by)
145 W( a single)146 W
21299 33577 MT
(procedure call, avoiding the overhead of a series of calls)
47 W( to)46 W
21299 34774 MT
(single-operator procedures.)SH
/Symbol SF
20518 36570 MT
(\267)SH
/Times-Roman SF
21299 XM
(You can insert C arguments)
183 W( into the PostScript language)184 W
21299 37767 MT
(code at runtime instead of having to)
74 W( push the C arguments)73 W
21299 38964 MT
(onto the PostScript operand stack in separate steps.)SH
/Symbol SF
20518 40760 MT
(\267)SH
/Times-Roman SF
21299 XM
(Wrapped procedures can efficiently produce custom graph-)43 W
21299 41957 MT
(ical output by)
154 W( combining operators and other elements of)153 W
21299 43154 MT
(the PostScript language in a variety of interesting ways.)SH
/Symbol SF
20518 44950 MT
(\267)SH
/Times-Roman SF
21299 XM
(The PostScript language code sent by a wrapped procedure)47 W
21299 46147 MT
(is interpreted faster than ASCII text.)SH
18891 48342 MT
(An application developer prepares a PostScript language)647 W
18899 49639 MT
(program for inclusion in the)
136 W( application by writing a wrap and)137 W
18899 50936 MT
(passing it through the)29 W
/Times-Italic SF
28793 XM
(pswrap)SH
/Times-Roman SF
32337 XM
(translator. The output of)29 W
/Times-Italic SF
43420 XM
(pswrap)SH
/Times-Roman SF
46963 XM
(is)SH
18899 52233 MT
(a procedure written entirely)
182 W( in the C language. It contains the)183 W
18899 53530 MT
(PostScript language body as data.)
91 W( This body has been compiled)90 W
18899 54827 MT
(into a)2 W
/Times-Italic SF
21654 XM
(binary object sequence)3 W
/Times-Roman SF
32078 XM
(\050an efficient binary encoding\051, with)3 W
18899 56124 MT
(placeholders left for)
85 W( arguments to be inserted at execution time.)84 W
18899 57421 MT
(The translated wraps can then be compiled and linked into the)149 W
18899 58718 MT
(application program.)SH
10 /Helvetica AF
4500 63450 MT
(8)SH
8 SS 
7456 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 9 11 
BS
0 SI
11 /Times-Roman AF
19791 6155 MT
(When a wrapped procedure is called by)
303 W( the application, the)302 W
19799 7452 MT
(procedure's arguments are substituted for)
41 W( the placeholders in the)42 W
19799 8749 MT
(PostScript language body of the wrap.)SH
/Times-Bold SF
19791 10944 MT
(Example:)SH
/Times-Roman SF
24750 XM
(A wrap that draws)
162 W( a black box could be defined as)161 W
19799 12241 MT
(follows:)SH
9 /Helvetica AF
22103 14194 MT
(defineps PSWBlackBox\050float x, y\051)SH
24407 15292 MT
(gsave)SH
24983 16390 MT
(0 0 0 setrgbcolor)SH
24983 17488 MT
(x y 72 72 rectfill)SH
24407 18586 MT
(grestore)SH
22103 19684 MT
(endps)SH
11 /Times-Italic AF
19791 21879 MT
(pswrap)SH
/Times-Roman SF
23467 XM
(produces a procedure that can)
161 W( be called from a C lan-)162 W
19799 23176 MT
(guage program as)
531 W( follows \050the values shown are merely)530 W
19799 24473 MT
(examples\051:)SH
9 /Helvetica AF
22103 26426 MT
(PSWBlackBox\05012.32, -56.78\051;)SH
11 /Times-Roman AF
19791 28621 MT
(This procedure replaces the)89 W
/Times-Italic SF
32545 XM
(x)SH
/Times-Roman SF
33397 XM
(and)SH
/Times-Italic SF
35349 XM
(y)SH
/Times-Roman SF
36202 XM
(operands of)90 W
/Times-Bold SF
41818 XM
(rectfill)SH
/Times-Roman SF
(with the)90 W
19799 29918 MT
(corresponding procedure arguments, producing)
748 W( executable)747 W
19799 31215 MT
(PostScript language code:)SH
9 /Helvetica AF
22103 33168 MT
(gsave)SH
22679 34266 MT
(0 0 0 setrgbcolor)SH
22679 35364 MT
(12.32 -56.78 72 72 rectfill)SH
22103 36462 MT
(grestore)SH
11 /Times-Roman AF
19791 38657 MT
(Any wrapped procedure works the)
156 W( same way as the above ex-)157 W
19799 39954 MT
(ample: the arguments of the C language procedure must cor-)237 W
19799 41251 MT
(respond in number and type)
234 W( to the operands expected by the)235 W
19799 42548 MT
(PostScript operator\050s\051 in)
168 W( the body of the wrap. For instance, a)167 W
19799 43845 MT
(procedure argument declared to be of)
61 W( type `)62 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
(' corresponds to)62 W
19799 45142 MT
(a PostScript)
352 W( real object; an argument of type `)351 W
10 /Helvetica AF
(char *)351 W
11 /Times-Roman AF
(' cor-)351 W
19799 46439 MT
(responds to a PostScript string object; and so on.)SH
19791 48634 MT
(The normal outcome of calling a wrapped procedure is the trans-)28 W
19799 49931 MT
(mission of PostScript language code to the interpreter)
47 W( for execu-)46 W
19799 51228 MT
(tion, normally resulting in display output. The)
246 W( Client Library)247 W
19799 52525 MT
(may also provide means, on)
210 W( a system-specific basis, to divert)209 W
19799 53822 MT
(transmission to another destination, such as a printer)
182 W( or a text)183 W
19799 55119 MT
(file.)SH
19791 57314 MT
(For more information about how wraps are defined)
19 W( and used, see)18 W
19799 58611 MT
(the)SH
/Times-Italic SF
21418 XM
(pswrap Reference Manual)SH
/Times-Roman SF
(.)SH
8 /Helvetica AF
30293 63450 MT
(3 OVERVIEW)
327 W( OF THE CLIENT LIBRARY)SH
10 SS 
48041 XM
(9)SH
ES
%%Page: 10 12 
BS
0 SI
12 /Helvetica AF
11692 6275 MT
(4 BASIC)
491 W( CLIENT LIBRARY FACILITIES)SH
11 /Times-Roman AF
18891 8826 MT
(This section introduces the)
203 W( concepts needed to write a simple)204 W
18899 10123 MT
(application program)
178 W( for the Display PostScript system, includ-)177 W
18899 11420 MT
(ing:)SH
/Symbol SF
20518 13697 MT
(\267)SH
/Times-Roman SF
21299 XM
(Creating a context.)SH
/Symbol SF
20518 15493 MT
(\267)SH
/Times-Roman SF
21299 XM
(Sending code and data to a context.)SH
/Symbol SF
20518 17289 MT
(\267)SH
/Times-Roman SF
21299 XM
(Destroying a context.)SH
18891 19484 MT
(The basic facilities provided by the Client Library to)
54 W( application)55 W
18899 20781 MT
(programs are described in this section.)SH
18891 22976 MT
(The Client Library procedures and)
425 W( data structures that are)424 W
18899 24273 MT
(referred to in this)
107 W( introduction are documented in the following)108 W
18899 25570 MT
(places:)SH
/Times-Italic SF
18899 27722 MT
(Section 9.)SH
/Times-Roman SF
26098 XM
(Header file)26 W
/Times-Italic SF
31339 XM
(dpsclient.h)SH
/Times-Roman SF
(. Provides general support)25 W
26098 28919 MT
(for contexts;)
562 W( includes procedures that send)563 W
26098 30116 MT
(PostScript language programs for execution and)86 W
26098 31313 MT
(receive results. General)
190 W( applications and appli-)191 W
26098 32510 MT
(cation support software)
184 W( \050that is, toolkits\051 make)183 W
26098 33707 MT
(use of this header file.)SH
/Times-Italic SF
18899 35503 MT
(Section 10.)SH
/Times-Roman SF
26098 XM
(Header files)104 W
/Times-Italic SF
31924 XM
(dpsops.h)SH
/Times-Roman SF
36185 XM
(and)SH
/Times-Italic SF
38153 XM
(psops.h)SH
/Times-Roman SF
(. Declarations)105 W
26098 36700 MT
(for single-operator procedures.)SH
/Times-Italic SF
18899 38496 MT
(System-specific documentation.)SH
/Times-Roman SF
26098 39693 MT
(Support for creating context records.)
357 W( An ex-)358 W
26098 40890 MT
(ample of context creation is provided in Section)70 W
26098 42087 MT
(4.3.)SH
/Helvetica SF
16169 45284 MT
(4.1)SH
18899 XM
(CONTEXTS AND CONTEXT DATA STRUCTURES)SH
/Times-Roman SF
18891 47479 MT
(An application creates, manages, and destroys one or)
75 W( more con-)76 W
18899 48776 MT
(texts. A)
165 W( typical application creates a single context in a single)164 W
18899 50073 MT
(private VM \050space\051. It then sends PostScript language code)
179 W( to)180 W
18899 51370 MT
(the context to display text, graphics, and)
82 W( scanned images on the)81 W
18899 52667 MT
(screen.)SH
18891 54862 MT
(The context is represented by a record)
6 W( of type `)7 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(';)SH
18899 56159 MT
(see Section 9.1)
150 W( for the type definition. A handle to this record)149 W
19050 57456 MT
(\320 a)
336 W( pointer)
185 W( of type `)186 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(' \320 is)
337 W( passed explicitly or)186 W
10 /Helvetica AF
4500 63450 MT
(10)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 11 13 
BS
0 SI
11 /Times-Roman AF
19799 6155 MT
(implicitly with every Client Library)
141 W( procedure call. In essence,)140 W
19799 7452 MT
(to the application programmer, the `)151 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(' handle)152 W
/Times-Italic SF
46092 XM
(is)SH
/Times-Roman SF
47253 XM
(the)SH
19799 8749 MT
(context.)SH
19791 10944 MT
(A context can)
56 W( be thought of as a destination to which PostScript)55 W
19799 12241 MT
(language code is sent. The destination)
68 W( is set when the context is)69 W
19799 13538 MT
(created. In most cases, the code draws graphics in)
100 W( a window or)99 W
19799 14835 MT
(specifies how a page)
56 W( will be printed. Other possible destinations)57 W
19799 16132 MT
(include a file \050for execution at a later time\051 or the)
89 W( standard out-)88 W
19799 17429 MT
(put; multiple destinations are permitted. The)
212 W( execution by the)213 W
19799 18726 MT
(interpreter of PostScript language code sent to)
70 W( a context may be)69 W
19799 20023 MT
(immediate or)
14 W( deferred, depending on which context creation pro-)15 W
19799 21320 MT
(cedure was called and on the setting of certain `)19 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(')SH
19799 22617 MT
(variables.)SH
/Helvetica SF
17069 25814 MT
(4.2)SH
19799 XM
(SYSTEM-SPECIFIC CONTEXT CREATION)SH
9 /Times-Roman AF
32805 27646 MT
(1)SH
11 SS 
19791 28009 MT
(The system-specific interface)33 W
33562 XM
(contains, at minimum, procedures)32 W
19799 29306 MT
(for creating the `)376 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' record)
376 W( for the given im-)377 W
19799 30603 MT
(plementation of the Client Library. The)
30 W( system-specific interface)29 W
19799 31900 MT
(also provides support for)
39 W( certain extensions to the Client Library)40 W
19799 33197 MT
(interface, such as additional error codes.)SH
19791 35392 MT
(Every context)
35 W( is associated with a system-specific object such as)34 W
19799 36689 MT
(a window or a file. The)
40 W( context is created by calling a procedure)41 W
19799 37986 MT
(in the system-specific interface. Once the context has)
374 W( been)373 W
19799 39283 MT
(created, however, a)
270 W( set of standard Client Library operations)271 W
19799 40580 MT
(may be applied)
37 W( to it; these operations, including context destruc-)36 W
19799 41877 MT
(tion, are defined in the standard header file)SH
/Times-Italic SF
38948 XM
(dpsclient.h)SH
/Times-Roman SF
(.)SH
/Helvetica SF
17069 45074 MT
(4.3)SH
19799 XM
(EXAMPLE OF CONTEXT CREATION)SH
/Times-Roman SF
19791 47269 MT
(Context creation facilities are necessarily system)
15 W( specific. This is)16 W
19799 48566 MT
(because they often need data objects that)
355 W( represent system-)354 W
19799 49863 MT
(specific entities)
73 W( such as windows and files. However, most con-)74 W
19799 51160 MT
(text creation facilities share a number of common attributes.)
125 W( In)124 W
19799 52457 MT
(the text that)
131 W( follows, procedure parameters that are common to)132 W
19799 53754 MT
(most systems are described)
30 W( in some detail, while system-specific)29 W
19799 55051 MT
(parameters are listed without further discussion.)
82 W( The procedures)83 W
7 SS 
19799 57437 MT
(1)SH
9 SS 
20149 57764 MT
(In Adobe's sample)
149 W( X11/DPS extension implementation, the system-specific)150 W
19799 58662 MT
(header file is)SH
/Times-Italic SF
24674 XM
(dpsXclient.h)SH
/Times-Roman SF
(.)SH
8 /Helvetica AF
30347 63450 MT
(4 BASIC)
327 W( CLIENT LIBRARY FACILITIES)SH
10 SS 
47485 XM
(11)SH
ES
%%Page: 12 14 
BS
0 SI
11 /Times-Roman AF
18899 6155 MT
(described here were designed for the X Window System. They)132 W
18899 7452 MT
(provide an example of an)
46 W( actual system implementation while at)47 W
18899 8749 MT
(the same time demonstrating basic functions that all window)262 W
18899 10046 MT
(systems must provide for context creation.)SH
18891 12241 MT
(The creation of a `)40 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' data structure is usually)
40 W( part)41 W
18899 13538 MT
(of application initialization.)
457 W( Contexts persist until they are)456 W
18899 14835 MT
(destroyed; see)389 W
/Times-Italic SF
26214 XM
(DPSDestroyContext)SH
/Times-Roman SF
35799 XM
(and)SH
/Times-Italic SF
38052 XM
(DPSDestroySpace)SH
/Times-Roman SF
46841 XM
(in)SH
18899 16132 MT
(Section 9.2.)SH
43197 50 4500 17528 UL
9 /Helvetica AF
5700 19281 MT
(/* EXAMPLE CONTEXT CREATION FOR THE X WINDOW SYSTEM */)SH
5700 20379 MT
(DPSContext XDPSCreateSimpleContext\050dpy, drawable, gc, x, y, textProc, errorProc, space\051)SH
6276 21477 MT
(Display *dpy;)SH
6276 22575 MT
(Drawable drawable;)SH
6276 23673 MT
(GC gc;)SH
6276 24771 MT
(int x, y;)SH
6276 25869 MT
(DPSTextProc textProc;)SH
6276 26967 MT
(DPSErrorProc errorProc;)SH
6276 28065 MT
(DPSSpace space;)SH
5700 29819 MT
(typedef void \050*DPSTextProc\051\050 /*)SH
6276 30917 MT
(DPSContext ctxt,)SH
6276 32015 MT
(char *buf,)SH
6276 33113 MT
(long unsigned int count */ \051;)SH
5700 34867 MT
(typedef void \050*DPSErrorProc\051\050 /*)SH
6276 35965 MT
(DPSContext ctxt,)SH
6276 37063 MT
(DPSErrorCode errorCode,)SH
6276 38161 MT
(long unsigned int arg1, arg2 */ \051;)SH
43197 50 4500 39557 UL
11 /Times-Italic AF
18891 41552 MT
(XDPSCreateSimpleContext)SH
/Times-Roman SF
31509 XM
(is a system-specific)
245 W( procedure that)244 W
18899 42849 MT
(creates an execution context in the PostScript interpreter.)
213 W( The)214 W
18899 44146 MT
(arguments `)164 W
10 /Helvetica AF
(dpy)SH
11 /Times-Roman AF
(', `)164 W
10 /Helvetica AF
(gc)SH
11 /Times-Roman AF
(', `)164 W
10 /Helvetica AF
(x)SH
11 /Times-Roman AF
(', and `)164 W
10 /Helvetica AF
(y)SH
11 /Times-Roman AF
(' have specific uses in the X)163 W
18899 45443 MT
(Window System; discussion)
200 W( of these arguments is beyond the)201 W
18899 46740 MT
(scope of this manual. The `)210 W
10 /Helvetica AF
(drawable)SH
11 /Times-Roman AF
(' argument associates the)210 W
18899 48037 MT
('DPSContextRec' data structure with a)
105 W( system-specific imaging)106 W
18899 49334 MT
(object \320 in)
261 W( this case,)
110 W( an X drawable object, which could be a)109 W
18899 50631 MT
(window or a pixmap.)
223 W( `)224 W
10 /Helvetica AF
(DPSTextProc)SH
11 /Times-Roman AF
(' and `)224 W
10 /Helvetica AF
(DPSErrorProc)SH
11 /Times-Roman AF
(' are)224 W
18899 51928 MT
(standard procedures types declared in)344 W
/Times-Italic SF
37446 XM
(dpsclient.h)SH
/Times-Roman SF
(; their type)344 W
18899 53225 MT
(definitions are included here for ease of reading.)SH
18891 55420 MT
(`)SH
10 /Helvetica AF
(space)SH
11 /Times-Roman AF
(' identifies the private PostScript VM in which the)
158 W( new)159 W
18899 56717 MT
(context executes. If `)9 W
10 /Helvetica AF
(space)SH
11 /Times-Roman AF
(' is `)9 W
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(', a new space is created for)8 W
18899 58014 MT
(the context;)
29 W( otherwise, it will share the specified space with con-)30 W
10 /Helvetica AF
4500 63450 MT
(12)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 13 15 
BS
0 SI
11 /Times-Roman AF
19799 6155 MT
(texts previously created)
139 W( in the space. A simple application that)138 W
19799 7452 MT
(creates one space)
321 W( and one context can pass `)322 W
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(' for the)322 W
19799 8749 MT
(`)SH
10 /Helvetica AF
(space)SH
11 /Times-Roman AF
(' argument.)
502 W( See the)501 W
/Times-Italic SF
33665 XM
(PostScript Language Reference)501 W
19799 10046 MT
(Manual)SH
/Times-Roman SF
23589 XM
(for a definition)
93 W( of VM. See Section 4.6 for more infor-)94 W
19799 11343 MT
(mation about spaces.)SH
19791 13538 MT
(`)SH
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' and `)286 W
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' point to customizable facilities for)286 W
19799 14835 MT
(handling text and errors sent)
105 W( by the interpreter. Passing `)106 W
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(')SH
19799 16132 MT
(for these arguments is allowed but)
39 W( means that text and errors are)38 W
19799 17429 MT
(ignored. For simple applications, it is)
195 W( sufficient to specify the)196 W
19799 18726 MT
(system-specific default text procedure \050)37 W
/Times-Italic SF
(DPSDefaultTextBackstop)SH
/Times-Roman SF
19799 20023 MT
(in the X)
1377 W( Window System implementation\051 and)1378 W
/Times-Italic SF
19799 21320 MT
(DPSDefaultErrorProc)SH
/Times-Roman SF
(. Use)135 W
/Times-Italic SF
32564 XM
(DPSGetCurrentTextBackstop)SH
/Times-Roman SF
45988 XM
(to get)134 W
19799 22617 MT
(the current default text procedure. See Section 5 for more)
73 W( infor-)74 W
19799 23914 MT
(mation on text handlers and error handlers.)SH
/Times-Italic SF
19791 26109 MT
(XDPSCreateSimpleContext)SH
/Times-Roman SF
32659 XM
(creates a)
495 W( context for which the)494 W
19799 27406 MT
(PostScript interpreter is)
99 W( the destination of code and data sent to)100 W
19799 28703 MT
(the context. It is sometimes useful to)
219 W( send the code and data)218 W
9 /Symbol AF
41159 29664 MT
(\322)SH
11 /Times-Roman AF
19799 30027 MT
(elsewhere, such as to a file, to a terminal)
8 W( \050UNIX)9 W
/Times-Italic SF
42154 XM
(stdout)SH
/Times-Roman SF
(\051, or to a)9 W
19799 31324 MT
(printer; see)SH
/Times-Italic SF
24991 XM
(DPSCreateTextContext)SH
/Times-Roman SF
(.)SH
43197 50 5400 32720 UL
9 /Helvetica AF
6600 34473 MT
(DPSContext DPSCreateTextContext\050textProc, errorProc\051)SH
7176 35571 MT
(DPSTextProc textProc;)SH
7176 36669 MT
(DPSErrorProc errorProc;)SH
43197 50 5400 38065 UL
11 /Times-Italic AF
19791 40060 MT
(DPSCreateTextContext)SH
/Times-Roman SF
30681 XM
(creates a context whose input is con-)288 W
19799 41357 MT
(verted to ASCII)
256 W( encoding \050text that is easily transmitted and)257 W
19799 42654 MT
(easily read)
7 W( by humans\051; see Section 6.2. The ASCII-encoded text)6 W
19799 43951 MT
(is passed to the `)20 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' procedure rather)
20 W( than to the PostScript)21 W
19799 45248 MT
(interpreter. Since the application)
56 W( provides the implementation of)55 W
19799 46545 MT
(the `)274 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' procedure, it determines where the ASCII)
274 W( text)275 W
19799 47842 MT
(goes from there. The text can be sent to a)
96 W( file, to a terminal, or)95 W
19799 49139 MT
(perhaps to a printer's communication port.)SH
19791 51334 MT
(The `)277 W
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' associated with)
277 W( a context handles errors that)278 W
19799 52631 MT
(arise when a wrap or Client Library procedure is called with that)33 W
19799 53928 MT
(context. The `)123 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' should call the `)123 W
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' to)
123 W( handle an)124 W
19799 55225 MT
(error only when an appropriate error code is)
208 W( defined. See the)207 W
19799 56522 MT
(discussion of text and error handlers in Section 5.)SH
8 /Helvetica AF
30347 63450 MT
(4 BASIC)
327 W( CLIENT LIBRARY FACILITIES)SH
10 SS 
47485 XM
(13)SH
ES
%%Page: 14 16 
BS
0 SI
11 /Helvetica AF
16169 6202 MT
(4.4)SH
18899 XM
(THE CURRENT CONTEXT)SH
/Times-Roman SF
18891 8397 MT
(The current context is the one that was specified by the last call)74 W
18899 9694 MT
(to)SH
/Times-Italic SF
20430 XM
(DPSSetContext)SH
/Times-Roman SF
(. If the application has only)
400 W( one context,)399 W
/Times-Italic SF
18899 10991 MT
(DPSSetContext)SH
/Times-Roman SF
26310 XM
(may be called once when the)
354 W( application is)355 W
18899 12288 MT
(initialized. If the application manages more than)
108 W( one context, it)107 W
18899 13585 MT
(must explicitly set the current context when necessary.)SH
18891 15780 MT
(Many Client Library procedures do not require the)
27 W( application to)28 W
18899 17077 MT
(specify a context; they)
14 W( assume the current context. This is true of)13 W
18899 18374 MT
(all of)
365 W( the single-operator procedures defined in the)366 W
/Times-Italic SF
44366 XM
(psops.h)SH
/Times-Roman SF
18899 19671 MT
(header file as well as)
65 W( any wrapped procedures that were defined)64 W
18899 20968 MT
(to use the current context implicitly.)SH
18891 23163 MT
(An application can find out which is the current context)
61 W( by call-)62 W
18899 24460 MT
(ing)SH
/Times-Italic SF
20580 XM
(DPSGetCurrentContext)SH
/Times-Roman SF
(.)SH
/Helvetica SF
16169 27657 MT
(4.5)SH
18899 XM
(SENDING CODE AND DATA TO A CONTEXT)SH
/Times-Roman SF
18891 29852 MT
(Once the context has been created, the application can send)296 W
18899 31149 MT
(PostScript language code to it by calling procedures such as:)SH
/Symbol SF
20518 33426 MT
(\267)SH
/Times-Roman SF
21299 XM
(Wraps \050custom wrapped)
429 W( procedures developed for the)430 W
21299 34623 MT
(application\051.)SH
/Symbol SF
20518 36419 MT
(\267)SH
/Times-Roman SF
21299 XM
(Single-operator procedures defined in)747 W
/Times-Italic SF
41207 XM
(dpsops.h)SH
/Times-Roman SF
46109 XM
(and)SH
/Times-Italic SF
21299 37616 MT
(psops.h)SH
/Times-Roman SF
(.)SH
/Symbol SF
20518 39412 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSPrintf)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
26800 XM
(DPSWritePostScript)SH
/Times-Roman SF
(, and)367 W
/Times-Italic SF
38992 XM
(DPSWriteData)SH
/Times-Roman SF
46446 XM
(\320)SH
21299 40609 MT
(Client Library procedures provided for writing to a context.)SH
18891 42804 MT
(A wrapped procedure is a)
66 W( PostScript language program encoded)65 W
18899 44101 MT
(as a binary)
507 W( object sequence; binary object sequences are)508 W
18899 45398 MT
(described in Section 11.4 and in)14 W
/Times-Italic SF
33371 XM
(PostScript Language Extensions)13 W
18899 46695 MT
(for the Display PostScript System)335 W
/Times-Roman SF
(. The creation of)
335 W( wrapped)336 W
18899 47992 MT
(procedures is discussed in)
122 W( the)121 W
/Times-Italic SF
32856 XM
(pswrap Reference Manual)121 W
/Times-Roman SF
(. Once)121 W
18899 49289 MT
(the PostScript language program has been embedded in the body)33 W
18899 50586 MT
(of a wrap by using the)7 W
/Times-Italic SF
29021 XM
(pswrap)SH
/Times-Roman SF
32542 XM
(translator, it can be called like any)6 W
18899 51883 MT
(other C procedure.)SH
/Times-Bold SF
18891 54078 MT
(Example 1:)143 W
/Times-Roman SF
24799 XM
(Consider a wrap that draws a small colored circle)144 W
18899 55375 MT
(around the)
159 W( point where the mouse was clicked, given an RGB)158 W
18899 56672 MT
(color and the)217 W
/Times-Italic SF
25567 XM
(x,y)SH
/Times-Roman SF
27310 XM
(coordinate returned by a mouse-click event.)217 W
18899 57969 MT
(The exact PostScript language)
149 W( implementation is left as an ex-)148 W
10 /Helvetica AF
4500 63450 MT
(14)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 15 17 
BS
0 SI
11 /Times-Roman AF
19799 6155 MT
(ercise for)
196 W( the reader, but the C declaration of the wrap might)197 W
19799 7452 MT
(look like this:)SH
9 /Helvetica AF
20951 9405 MT
(extern void PSWDrawSmallCircle\050/*)SH
22103 10503 MT
(DPSContext ctxt; int x, y; float r, g, b */\051;)SH
11 /Times-Roman AF
19791 12698 MT
(An application might call)
73 W( this procedure as part of the code that)72 W
19799 13995 MT
(handles mouse clicks.)
32 W( Suppose the struct `)33 W
10 /Helvetica AF
(event)SH
11 /Times-Roman AF
(' contains the)33 W
/Times-Italic SF
47346 XM
(x,y)SH
/Times-Roman SF
19799 15292 MT
(coordinate. To draw a bright green circle)
162 W( around the spot, call)161 W
19799 16589 MT
(the wrapped procedure with the following arguments:)SH
9 /Helvetica AF
20951 18542 MT
(PSWDrawSmallCircle\050ctxt, event.x, event.y, 0.0, 1.0, 0.0\051;)SH
11 /Times-Bold AF
19791 20737 MT
(Example 2:)103 W
/Times-Roman SF
25619 XM
(If a wrap returns values, the procedure that calls)
103 W( it)104 W
19799 22034 MT
(must pass pointers to the variables into)
66 W( which the values will be)65 W
19799 23331 MT
(stored. Consider a wrap that, given a font name,)
13 W( tells whether the)14 W
19799 24628 MT
(font is in the)SH
/Times-Bold SF
25605 XM
(SharedFontDirectory)SH
/Times-Roman SF
(. Define the wrap like this:)SH
9 /Helvetica AF
20951 26581 MT
(defineps PSWFontLoaded\050)SH
22103 27679 MT
(DPSContext ctxt; char *fontName | boolean *found\051)SH
11 /Times-Roman AF
19791 29874 MT
(The corresponding C declaration is:)SH
9 /Helvetica AF
20951 31827 MT
(extern void PSWFontLoaded\050/*)SH
22103 32925 MT
(DPSContext ctxt; char *fontName; int *found */\051;)SH
11 /Times-Roman AF
19791 35120 MT
(Note that booleans are of C type `)124 W
10 /Helvetica AF
(int)SH
11 /Times-Roman AF
('. Call the)
124 W( wrapped proce-)123 W
19799 36417 MT
(dure by providing a pointer to a variable of type `)SH
10 /Helvetica AF
(int)SH
11 /Times-Roman AF
(':)SH
9 /Helvetica AF
20951 38370 MT
(int fontFound;)SH
20951 40124 MT
(PSWFontLoaded\050ctxt, "Courier", &fontFound\051;)SH
11 /Times-Roman AF
19791 42319 MT
(Wraps are the most efficient way to specify any PostScript lan-)101 W
19799 43616 MT
(guage program as a C-callable procedure.)SH
/Times-Bold SF
19791 45811 MT
(Example 3:)354 W
/Times-Roman SF
26120 XM
(Occasionally, a very small PostScript language)353 W
19799 47108 MT
(program \320 on)
186 W( the order of one operator)
35 W( \320)
186 W( is)
187 W( needed. This is a)36 W
19799 48405 MT
(case where)
192 W( a single-operator procedure is appropriate. For ex-)191 W
19799 49702 MT
(ample, to get the current gray level, simply provide a pointer)
17 W( to a)18 W
19799 50999 MT
(float and call the single-operator procedure equivalent)
271 W( of the)270 W
19799 52296 MT
(PostScript)SH
/Times-Bold SF
24598 XM
(currentgray)SH
/Times-Roman SF
30553 XM
(operator:)SH
8 /Helvetica AF
30347 63450 MT
(4 BASIC)
327 W( CLIENT LIBRARY FACILITIES)SH
10 SS 
47485 XM
(15)SH
ES
%%Page: 16 18 
BS
0 SI
9 /Helvetica AF
20051 6056 MT
(float gray;)SH
20051 7810 MT
(DPScurrentgray\050ctxt, &gray\051;)SH
11 /Times-Roman AF
18891 10005 MT
(See Section 10.3 for)
64 W( a complete listing of single-operator proce-)65 W
18899 11302 MT
(dure declarations.)SH
/Times-Bold SF
18891 13497 MT
(Example 4:)258 W
/Times-Italic SF
25029 XM
(DPSPrintf)SH
/Times-Roman SF
30146 XM
(is one)
258 W( of the Client Library facilities)257 W
18899 14794 MT
(provided for writing PostScript language)
80 W( code directly to a con-)81 W
18899 16091 MT
(text.)SH
/Times-Italic SF
18891 18286 MT
(DPSPrintf)SH
/Times-Roman SF
23854 XM
(is similar to the Standard C Library routine)103 W
/Times-Italic SF
43926 XM
(printf)SH
/Times-Roman SF
(. It)103 W
18899 19583 MT
(formats arguments into ASCII text)
215 W( and writes this text to the)216 W
18899 20880 MT
(context. Small PostScript language)
30 W( programs or text data may be)29 W
18899 22177 MT
(sent in this way. Here is an example that sends)
55 W( formatted text to)56 W
18899 23474 MT
(the)SH
/Times-Bold SF
20518 XM
(show)SH
/Times-Roman SF
23177 XM
(operator to represent an author's byline:)SH
9 /Helvetica AF
20051 25427 MT
(struct {)SH
21779 26525 MT
(int x, y;)
SH( /*)
3456 W( location on page for byline */)SH
21779 27623 MT
(char *titleString;)
SH( /*)
864 W( title of document */)SH
21779 28721 MT
(char *authorsName;)
SH( /*)
864 W( name of author */)SH
21779 29819 MT
(} byline;)SH
20051 31573 MT
(DPSPrintf\050ctxt, "%d %d moveto \050%s by %s\051 show\134n",)SH
23507 32671 MT
(byline.x,)SH
23507 33769 MT
(byline.y,)SH
23507 34867 MT
(byline.titleString,)SH
23507 35965 MT
(byline.authorsName\051;)SH
11 /Times-Roman AF
18891 38160 MT
(The)SH
/Times-Italic SF
21048 XM
(x,y)SH
/Times-Roman SF
22746 XM
(coordinate is formatted in place of the)
172 W( two `)171 W
10 /Helvetica AF
(%d)SH
11 /Times-Roman AF
(' field)171 W
18899 39457 MT
(specifiers, the title replaces)
22 W( the first `)23 W
10 /Helvetica AF
(%s)SH
11 /Times-Roman AF
(', followed by ``by'' fol-)23 W
18899 40754 MT
(lowed by the author's name in place of the second `)SH
10 /Helvetica AF
(%s)SH
11 /Times-Roman AF
('.)SH
10 /Helvetica AF
4500 63450 MT
(16)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 17 19 
BS
28806 50 19791 5400 LH BX1
0 SI
10 /Helvetica-Bold AF
19799 6953 MT
(Warning:)SH
11 /Times-Roman AF
24887 XM
(When using)105 W
/Times-Italic SF
30657 XM
(DPSPrintf)SH
/Times-Roman SF
(, it's important to leave)
105 W( some)104 W
19799 8250 MT
(whitespace \050newline with `)47 W
10 /Helvetica AF
(\134n)SH
11 /Times-Roman AF
(', or just a space\051)
47 W( at the very end of)48 W
19799 9547 MT
(the format string if the string ends)
91 W( with an operator.  PostScript)90 W
19799 10844 MT
(language code written to a context appears as a)
332 W( continuous)333 W
19799 12141 MT
(stream. Thus,)
297 W( consecutive)
11 W( calls to)10 W
/Times-Italic SF
35258 XM
(DPSPrintf)SH
/Times-Roman SF
40127 XM
(will appear as if all)10 W
19799 13438 MT
(the text were sent)
93 W( at once.  For example, suppose the following)94 W
19799 14735 MT
(calls were made:)SH
9 /Helvetica AF
20951 16688 MT
(DPSPrintf\050ctxt, "gsave"\051;)SH
20951 17786 MT
(DPSPrintf\050ctxt, "stroke"\051;)SH
20951 18884 MT
(DPSPrintf\050ctxt, "grestore"\051;)SH
11 /Times-Roman AF
19791 21079 MT
(The context)
195 W( will receive a single string `)194 W
10 /Helvetica AF
(gsavestrokegrestore)SH
11 /Times-Roman AF
(',)SH
19799 22376 MT
(with all the operators run)
27 W( together.  Of course, this effect may be)28 W
19799 23673 MT
(useful for constructing a long string)
383 W( that isn't a part of a)382 W
19799 24970 MT
(program. But)
377 W( when sending operators to)
51 W( be executed, don't for-)52 W
19799 26267 MT
(get to put whitespace at the end of each format string; for ex-)160 W
19799 27564 MT
(ample:)SH
9 /Helvetica AF
20951 29517 MT
(DPSPrintf\050ctxt, "gsave\134n"\051;)SH
28806 50 19791 31612 LH BX1
11 /Times-Bold AF
19791 33807 MT
(Example 5:)331 W
/Times-Roman SF
26075 XM
(The)SH
/Times-Italic SF
28391 XM
(DPSWritePostScript)SH
/Times-Roman SF
38042 XM
(procedure is a facility)332 W
19799 35104 MT
(provided for writing)
141 W( PostScript language code of any encoding)140 W
19799 36401 MT
(to a context. If)63 W
/Times-Italic SF
26740 XM
(DPSChangeEncoding)SH
/Times-Roman SF
36732 XM
(is provided)
63 W( by the system-)64 W
19799 37698 MT
(specific interface,)99 W
/Times-Italic SF
28088 XM
(DPSWritePostScript)SH
/Times-Roman SF
37506 XM
(can be used to convert)
99 W( a)98 W
19799 38995 MT
(binary-encoded PostScript language)
44 W( program into another binary)45 W
19799 40292 MT
(form \050for instance,)
223 W( binary object sequences to binary-encoded)222 W
19799 41589 MT
(tokens\051 or into ASCII)
90 W( text. Code destined for immediate execu-)91 W
19799 42886 MT
(tion by)
43 W( the interpreter should be sent as binary object sequences.)42 W
19799 44183 MT
(Code that's intended to be)
159 W( read by a human should be sent as)160 W
19799 45480 MT
(ASCII text. See Section 6.2 for a)
76 W( discussion of language encod-)75 W
19799 46777 MT
(ings.)SH
8 /Helvetica AF
30347 63450 MT
(4 BASIC)
327 W( CLIENT LIBRARY FACILITIES)SH
10 SS 
47485 XM
(17)SH
ES
%%Page: 18 20 
BS
28806 50 18891 5400 LH BX1
0 SI
10 /Helvetica-Bold AF
18899 6953 MT
(Warning:)SH
11 /Times-Roman AF
23987 XM
(Although PostScript language of any)
163 W( encoding may)164 W
18899 8250 MT
(be written to a context, unexpected)
43 W( results can occur when inter-)42 W
18899 9547 MT
(mixing code of different encodings.  This is)
104 W( particularly impor-)105 W
18899 10844 MT
(tant when)
61 W( ASCII encoding is mixed with binary encoding.  \050See)60 W
/Times-Italic SF
18899 12141 MT
(PostScript Language Extensions)
460 W( for the Display PostScript)461 W
18899 13438 MT
(System)SH
/Times-Roman SF
22228 XM
(for a discussion of encodings.\051)SH
18891 15633 MT
(The following code,)
65 W( which looks correct, may fail with a syntax)64 W
18899 16930 MT
(error in the interpreter, depending on the contents of the buffer:)SH
9 /Helvetica AF
20051 18883 MT
(while \050/* more buffers to send */\051 {)SH
21203 19981 MT
(count = GetBuffer\050file, buffer\051;)SH
21203 21079 MT
(DPSWritePostScript\050ctxt, buffer, count\051;)SH
21203 22177 MT
(MyWrap\050ctxt\051;)SH
20051 23275 MT
(})SH
11 /Times-Italic AF
18891 25470 MT
(GetBuffer)SH
/Times-Roman SF
23558 XM
(reads a PostScript language program in)
54 W( the ASCII en-)55 W
18899 26767 MT
(coding from a file.  The call to)102 W
/Times-Italic SF
33429 XM
(MyWrap)SH
/Times-Roman SF
37653 XM
(generates a binary ob-)101 W
18899 28064 MT
(ject sequence.)
567 W( If)
1411 W( the program in the buffer passed to)568 W
/Times-Italic SF
18899 29361 MT
(DPSWritePostScript)SH
/Times-Roman SF
28893 XM
(is complete, with no partial tokens,)675 W
/Times-Italic SF
18899 30658 MT
(MyWrap)SH
/Times-Roman SF
23076 XM
(works correctly.)
54 W( Imagine,)
384 W( however, that the end of the)55 W
18899 31955 MT
(buffer contains a partial token, `)95 W
10 /Helvetica AF
(mov)SH
11 /Times-Roman AF
(', and the next buffer)
95 W( starts)94 W
18899 33252 MT
(with `)4 W
10 /Helvetica AF
(eto)SH
11 /Times-Roman AF
('. In)
283 W( this instance, the binary object)
4 W( sequence represent-)5 W
18899 34549 MT
(ing)SH
/Times-Italic SF
20630 XM
(MyWrap)SH
/Times-Roman SF
24803 XM
(will be inserted immediately after the partial token,)50 W
18899 35846 MT
(resulting in a syntax error.)SH
18891 38041 MT
(This warning applies to all procedures that send code or data to a)18 W
18899 39338 MT
(context, including the Client Library)
411 W( procedures)410 W
/Times-Italic SF
42838 XM
(DPSPrintf)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
18899 40635 MT
(DPSWritePostScript)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
28493 XM
(DPSWriteData)SH
/Times-Roman SF
(, and)SH
/Times-Italic SF
37566 XM
(DPSWaitContext)SH
/Times-Roman SF
(.)SH
28806 50 18891 41674 LH BX1
/Times-Bold SF
18891 43869 MT
(Example 6:)257 W
/Times-Roman SF
25027 XM
(To send any type of data to a context)
257 W( \050such as)258 W
18899 45166 MT
(hexadecimal image data\051, or)
145 W( to avoid the automatic conversion)144 W
18899 46463 MT
(behavior built into)43 W
/Times-Italic SF
27432 XM
(DPSWritePostScript)SH
/Times-Roman SF
(, use)44 W
/Times-Italic SF
38855 XM
(DPSWriteData)SH
/Times-Roman SF
(. See)44 W
18899 47760 MT
(Section 9.2 for details on)1098 W
/Times-Italic SF
35693 XM
(DPSWritePostScript)SH
/Times-Roman SF
46109 XM
(and)SH
/Times-Italic SF
18899 49057 MT
(DPSWriteData)SH
/Times-Roman SF
(.)SH
18891 51252 MT
(The following example reads hexadecimal image data line by)218 W
18899 52549 MT
(line from a file and sends the data to a context:)SH
10 /Helvetica AF
4500 63450 MT
(18)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 19 21 
BS
0 SI
9 /Helvetica AF
20951 6056 MT
(while \050!feof\050fp\051\051 {)SH
22103 7154 MT
(fgets\050buf, BUFSIZE, fp\051;)SH
22103 8252 MT
(DPSWriteData\050ctxt, buf, strlen\050buf\051\051;)SH
20951 9350 MT
(})SH
11 SS 
17069 12547 MT
(4.6)SH
19799 XM
(SPACES)SH
/Times-Roman SF
19791 14742 MT
(A context is created in a space.)
41 W( The space is either shared with a)40 W
19799 16039 MT
(previously created context or is created when)
149 W( a new context is)150 W
19799 17336 MT
(created. Multiple contexts in the same space share)
49 W( all data; care-)48 W
19799 18633 MT
(ful coordination is required to ensure that they don't interfere)203 W
19799 19930 MT
(with each)
19 W( other. Contexts in different spaces can operate more or)18 W
19799 21227 MT
(less independently and still share data)
84 W( by using)85 W
/Times-Italic SF
41432 XM
(shared VM)85 W
/Times-Roman SF
(. See)85 W
19799 22524 MT
(the discussion of VM and)
230 W( spaces in the)229 W
/Times-Italic SF
39109 XM
(PostScript Language)229 W
19799 23821 MT
(Reference Manual)SH
/Times-Roman SF
(.)SH
19791 26016 MT
(Destroying a space automatically destroys)
263 W( all of the contexts)264 W
19799 27313 MT
(within it.)183 W
/Times-Italic SF
24413 XM
(DPSDestroySpace)SH
/Times-Roman SF
32994 XM
(calls)SH
/Times-Italic SF
35467 XM
(DPSDestroyContext)SH
/Times-Roman SF
44844 XM
(for each)182 W
19799 28610 MT
(context in the space.)SH
19791 30805 MT
(The parameters that define a space are contained in a record)
112 W( of)113 W
19799 32102 MT
(type `)SH
10 /Helvetica AF
(DPSSpaceRec)SH
11 /Times-Roman AF
('.)SH
/Helvetica SF
17069 35299 MT
(4.7)SH
19799 XM
(INTERRUPTS)SH
/Times-Roman SF
19791 37494 MT
(An application may)
348 W( need to interrupt a PostScript language)347 W
19799 38791 MT
(program running)
1097 W( in the PostScript interpreter. Call)1098 W
/Times-Italic SF
19799 40088 MT
(DPSInterruptContext)SH
/Times-Roman SF
29662 XM
(for this purpose. \050Note that although this)177 W
19799 41385 MT
(procedure returns immediately,)
55 W( an indeterminate amount of time)56 W
19799 42682 MT
(may pass before execution is actually interrupted.\051)SH
19791 44877 MT
(An interrupt request causes the context to execute an)109 W
/Times-Bold SF
44259 XM
(interrupt)SH
/Times-Roman SF
19799 46174 MT
(error. Since the implementation of the)213 W
/Times-Bold SF
38092 XM
(interrupt)SH
/Times-Roman SF
42919 XM
(error can be)214 W
19799 47471 MT
(changed by the application, the exact results of requesting an)220 W
19799 48768 MT
(interrupt cannot be defined here. The)
48 W( default behavior is that the)49 W
/Times-Bold SF
19799 50065 MT
(stop)SH
/Times-Roman SF
22097 XM
(operator will execute. For a)
67 W( discussion of the)66 W
/Times-Bold SF
42698 XM
(interrupt)SH
/Times-Roman SF
47377 XM
(er-)SH
19799 51362 MT
(ror, see the)2 W
/Times-Italic SF
24935 XM
(PostScript Language Reference Manual)3 W
/Times-Roman SF
(; for a discus-)3 W
19799 52659 MT
(sion of error handling in the Client Library, see Section 5.4.)SH
8 /Helvetica AF
30347 63450 MT
(4 BASIC)
327 W( CLIENT LIBRARY FACILITIES)SH
10 SS 
47485 XM
(19)SH
ES
%%Page: 20 22 
BS
0 SI
11 /Helvetica AF
16169 6202 MT
(4.8)SH
18899 XM
(DESTROYING CONTEXTS)SH
/Times-Roman SF
18891 8397 MT
(An application should destroy all)
83 W( the contexts it creates by call-)82 W
18899 9694 MT
(ing)SH
/Times-Italic SF
20692 XM
(DPSDestroyContext)SH
/Times-Roman SF
29999 XM
(or)SH
/Times-Italic SF
31303 XM
(DPSDestroySpace)SH
/Times-Roman SF
39815 XM
(when they are no)113 W
18899 10991 MT
(longer needed. Destroying a context does not destroy)
18 W( the space it)17 W
18899 12288 MT
(occupies, but destroying a)
84 W( space destroys all of its contexts; see)85 W
18899 13585 MT
(Section 4.6.)SH
18891 15780 MT
(If an application terminates abnormally, the PostScript)
301 W( inter-)300 W
18899 17077 MT
(preter detects that the application has terminated)
209 W( and destroys)210 W
18899 18374 MT
(any spaces and contexts that the application had created.)SH
10 /Helvetica AF
4500 63450 MT
(20)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 21 23 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(5 HANDLING)
491 W( OUTPUT FROM THE CONTEXT)SH
11 /Times-Roman AF
19791 8826 MT
(Output is information returned from)
65 W( the PostScript interpreter to)64 W
19799 10123 MT
(the application. In)
86 W( the Display PostScript system, three kinds of)87 W
19799 11420 MT
(output are possible:)SH
/Symbol SF
21418 13697 MT
(\267)SH
/Times-Roman SF
22199 XM
(Output parameters \050results\051 from wrapped procedures.)SH
/Symbol SF
21418 15493 MT
(\267)SH
/Times-Roman SF
22199 XM
(ASCII text written by the context \050for example, by)
279 W( the)278 W
/Times-Bold SF
22199 16690 MT
(print)SH
/Times-Roman SF
24858 XM
(operator\051.)SH
/Symbol SF
21418 18486 MT
(\267)SH
/Times-Roman SF
22199 XM
(Errors.)SH
19791 20681 MT
(Each kind of output is)
116 W( handled by a separate mechanism in the)117 W
19799 21978 MT
(Client Library. The handling of)
179 W( results is discussed in Section)178 W
19799 23275 MT
(11. The handling of text and)
46 W( errors is discussed in the remainder)47 W
19799 24572 MT
(of this section.)SH
28806 50 19791 26268 LH BX1
10 /Helvetica-Bold AF
19799 27821 MT
(Note:)SH
11 /Times-Roman AF
23109 XM
(You may not)
112 W( get text and error output when you expect)111 W
19799 29118 MT
(it.)SH
19791 31313 MT
(For example, a wrap that generates text to be sent back to)
158 W( the)159 W
19799 32610 MT
(application \050for instance, with the)30 W
/Times-Bold SF
35039 XM
(print)SH
/Times-Roman SF
37728 XM
(operator\051 may return be-)30 W
19799 33907 MT
(fore the)
78 W( application actually receives the text.  Unless the appli-)79 W
19799 35204 MT
(cation and)
55 W( the interpreter are synchronized \050see Section 6.4\051, the)54 W
19799 36501 MT
(text may not)
26 W( appear until some other Client Library procedure or)27 W
19799 37798 MT
(wrap is called.  This is due to)
20 W( delays in the communication chan-)19 W
19799 39095 MT
(nel or delays in scheduling execution of the context)
338 W( in the)339 W
19799 40392 MT
(PostScript interpreter.)SH
19791 42587 MT
(These kinds of delays are a particularly)
96 W( important consideration)95 W
19799 43884 MT
(for handling errors, since the notification of the)
207 W( error may be)208 W
19799 45181 MT
(received by the application long after the)
162 W( code that caused the)161 W
19799 46478 MT
(error was sent.)SH
19791 48673 MT
(Keep these issues in mind)
131 W( while reading the remainder of Sec-)132 W
19799 49970 MT
(tion 5.)SH
28806 50 19791 51009 LH BX1
/Helvetica SF
17069 54206 MT
(5.1)SH
19799 XM
(CALL-BACK PROCEDURES)SH
/Times-Roman SF
19791 56401 MT
(The application programmer must specify)
159 W( call-back procedures)158 W
19799 57698 MT
(to handle text and)
5 W( errors. A)6 W
/Times-Italic SF
32141 XM
(call-back procedure)6 W
/Times-Roman SF
41315 XM
(is code provided)6 W
19799 58995 MT
(by an application and called by a system function.)SH
8 /Helvetica AF
27828 63450 MT
(5 HANDLING)
327 W( OUTPUT FROM THE CONTEXT)SH
10 SS 
47485 XM
(21)SH
ES
%%Page: 22 24 
BS
0 SI
11 /Times-Roman AF
18891 6155 MT
(A)SH
/Times-Italic SF
20074 XM
(text handler)114 W
/Times-Roman SF
25861 XM
(is a call-back procedure that handles text output)113 W
18899 7452 MT
(from the context. It is)
229 W( specified in the `)230 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' field of the)230 W
18899 8749 MT
(`)SH
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
('. A system-specific)
3 W( default text handler may be)2 W
18899 10046 MT
(provided; in the Display PostScript system extension for the X)141 W
18899 11343 MT
(Window System, the default)
1628 W( text handler is)1627 W
/Times-Italic SF
18899 12640 MT
(DPSDefaultTextBackstop)SH
/Times-Roman SF
(.)SH
18891 14835 MT
(An)SH
/Times-Italic SF
20734 XM
(error handler)224 W
/Times-Roman SF
27476 XM
(is a)
224 W( call-back procedure that handles errors)225 W
18899 16132 MT
(arising when the context is passed)
111 W( as a parameter to any Client)110 W
18899 17429 MT
(Library procedure or wrap. It is specified)
47 W( in the `)48 W
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' field)48 W
18899 18726 MT
(of the `)2 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
('.)SH
/Times-Italic SF
30277 XM
(DPSDefaultErrorProc)SH
/Times-Roman SF
40514 XM
(is the default er-)2 W
18899 20023 MT
(ror handler provided with every Client Library implementation.)SH
18891 22218 MT
(Text and error handlers are associated with a given context when)22 W
18899 23515 MT
(the context)
912 W( is created, but the)911 W
/Times-Italic SF
37531 XM
(DPSSetTextProc)SH
/Times-Roman SF
46109 XM
(and)SH
/Times-Italic SF
18899 24812 MT
(DPSSetErrorProc)SH
/Times-Roman SF
27251 XM
(procedures, described in Section 9.2, give)
73 W( the)74 W
18899 26109 MT
(application the flexibility to change these handlers at any time.)SH
18891 28304 MT
(Using a call-back procedure reverses the normal flow of)
45 W( control,)44 W
18899 29601 MT
(which is as follows:)SH
/Symbol SF
20518 31878 MT
(\267)SH
/Times-Roman SF
21299 XM
(An application that is active)
12 W( calls the system to provide ser-)13 W
21299 33075 MT
(vices; for example, to get memory or open a file.)SH
/Symbol SF
20518 34871 MT
(\267)SH
/Times-Roman SF
21299 XM
(The application)
113 W( then gives up control until the system has)112 W
21299 36068 MT
(provided the service.)SH
/Symbol SF
20518 37864 MT
(\267)SH
/Times-Roman SF
21299 XM
(The system procedure returns control to the application,)254 W
21299 39061 MT
(passing it the result of the service that was requested.)SH
18891 41256 MT
(In the)
75 W( case of call-back procedures, the application wants a cus-)74 W
18899 42553 MT
(tom service provided at)
90 W( a time when it is not in control. It does)91 W
18899 43850 MT
(this as follows:)SH
/Symbol SF
20518 46127 MT
(\267)SH
/Times-Roman SF
21299 XM
(The application)
219 W( notifies the system, often but not neces-)218 W
21299 47324 MT
(sarily at initialization time, of the address of the call-back)116 W
21299 48521 MT
(procedure to be invoked when)
46 W( the system recognizes a cer-)45 W
21299 49718 MT
(tain condition, say, an error condition.)SH
/Symbol SF
20518 51514 MT
(\267)SH
/Times-Roman SF
21299 XM
(When the error is raised, the system gets control.)SH
/Symbol SF
20518 53310 MT
(\267)SH
/Times-Roman SF
21299 XM
(The system passes control to)
58 W( the error handler specified by)59 W
21299 54507 MT
(the application)
SH( \320 thus)
151 W( ``calling back'' the application.)SH
/Symbol SF
20518 56303 MT
(\267)SH
/Times-Roman SF
21299 XM
(The error handler does processing on behalf of the)
154 W( appli-)153 W
21299 57500 MT
(cation.)SH
10 /Helvetica AF
4500 63450 MT
(22)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 23 25 
BS
0 SI
11 /Symbol AF
21418 6280 MT
(\267)SH
/Times-Roman SF
22199 XM
(When the error handler completes, it returns not)
83 W( to the ap-)84 W
22199 7477 MT
(plication but to the system.)SH
19791 9672 MT
(In the Display PostScript system, the text and error handlers)
122 W( in)121 W
19799 10969 MT
(the Client Library interface are designed to be used this way.)SH
28806 50 19791 12665 LH BX1
10 /Helvetica-Bold AF
19799 14218 MT
(Note:)SH
11 /Times-Roman AF
23109 XM
(Client Library procedures and wraps should not)
32 W( be called)33 W
19799 15515 MT
(from within a call-back procedure.  This)
105 W( restriction protects the)104 W
19799 16812 MT
(application against unintended recursion.)SH
28806 50 19791 17851 LH BX1
/Helvetica SF
17069 21048 MT
(5.2)SH
19799 XM
(TEXT HANDLERS)SH
/Times-Roman SF
19791 23243 MT
(A context generates text output with operators)
227 W( such as)228 W
/Times-Bold SF
45938 XM
(print)SH
/Times-Roman SF
(,)SH
/Times-Bold SF
19799 24540 MT
(writestring)SH
/Times-Roman SF
(, and)251 W
/Times-Bold SF
27906 XM
(==)SH
/Times-Roman SF
(. The application)
251 W( handles this text output)250 W
19799 25837 MT
(with a text handler, which is specified)
107 W( in the `)108 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' field of)108 W
19799 27134 MT
(the `)36 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
('. The text)
36 W( handler is passed a buffer of text)35 W
19799 28431 MT
(and a count of the number of characters in the buffer;)
160 W( what is)161 W
19799 29728 MT
(done with this buffer is up to the application.)
141 W( The text handler)140 W
19799 31025 MT
(may be called several times to handle large amounts of)
2 W( text. Note)3 W
19799 32322 MT
(that the Client Library just gets buffers;)
149 W( it doesn't provide any)148 W
19799 33619 MT
(logical structure for)
191 W( the text and it doesn't indicate \050or know\051)192 W
19799 34916 MT
(where the text ends.)SH
19791 37111 MT
(The text handler may be called as a side effect of calling)
36 W( a wrap,)35 W
19799 38408 MT
(a single-operator)
167 W( procedure, or a Client Library procedure that)168 W
19799 39705 MT
(takes a context. You can't predict when the text)
175 W( handler for a)174 W
19799 41002 MT
(context will)
39 W( be called unless the application is synchronized \050see)40 W
19799 42299 MT
(Section 6.4\051.)SH
/Helvetica SF
17069 45496 MT
(5.3)SH
19799 XM
(EXAMPLE TEXT HANDLER)SH
/Times-Roman SF
19791 47691 MT
(Consider an application)
102 W( that normally displays a log window to)101 W
19799 48988 MT
(which it appends plain text or error messages received)
88 W( from the)89 W
19799 50285 MT
(interpreter. The handlers for this window were associated)
160 W( with)159 W
19799 51582 MT
(the context when)
201 W( it was created. Occasionally, the application)202 W
19799 52879 MT
(calls a wrapped procedure that)
28 W( generates a block of text intended)27 W
19799 54176 MT
(for a file. Before calling the text-generating procedure, the appli-)27 W
19799 55473 MT
(cation must install a temporary text)
146 W( handler for its output. The)145 W
19799 56770 MT
(temporary text handler stores the text it receives in a file instead)55 W
19799 58067 MT
(of in the log window. When)
78 W( the text-generating procedure com-)77 W
19799 59364 MT
(pletes, the application restores the original text handler.)SH
8 /Helvetica AF
27828 63450 MT
(5 HANDLING)
327 W( OUTPUT FROM THE CONTEXT)SH
10 SS 
47485 XM
(23)SH
ES
%%Page: 24 26 
BS
0 SI
11 /Times-Roman AF
18891 6155 MT
(An example)
152 W( of such an application, written for the X Window)153 W
18899 7452 MT
(System, is shown below.)SH
43197 50 4500 8848 UL
9 /Helvetica AF
5700 10601 MT
(/* EXAMPLE TEXT HANDLER FOR AN X WINDOW SYSTEM APPLICATION */)SH
5700 12355 MT
(/* wrapped procedure that generates text */)SH
5700 14109 MT
(defineps WrapThatGeneratesText\050DPSContext ctxt | boolean *done\051)SH
6852 15207 MT
(% send a text representation of the contents of mydict)SH
6852 16305 MT
(mydict {== ==} forall)SH
6852 17403 MT
(% returning a value flushes output as a side-effect)SH
6852 18501 MT
(true done)SH
5700 19599 MT
(endps)SH
5700 21353 MT
(/* normal text proc appends to a log window */)SH
5700 23107 MT
(void LogTextProc\050ctxt, buf, count\051)SH
6276 24205 MT
(DPSContext ctxt;)SH
6276 25303 MT
(char *buf;)SH
6276 26401 MT
(long unsigned int count;)SH
5700 27499 MT
({)SH
5700 28597 MT
(/* ... code that appends text to a log window ... */)SH
5700 29695 MT
(})SH
5700 31449 MT
(/* special text proc stores text to a file */)SH
5700 33203 MT
(void StoreTextProc\050ctxt, buf, count\051)SH
6276 34301 MT
(DPSContext ctxt;)SH
6276 35399 MT
(char *buf;)SH
6276 36497 MT
(long unsigned int count;)SH
5700 37595 MT
({)SH
6852 38693 MT
(/* ... code that appends text to a file ... */)SH
5700 39791 MT
(})SH
5700 41545 MT
(/* application initialization */)SH
6852 43299 MT
(ctxt = XDPSCreateSimpleContext\050dpy, drawable, gc, x, y,)SH
10308 44397 MT
(LogTextProc, DPSDefaultErrorProc, NULL\051;)SH
5700 46151 MT
(/* main loop for application */)SH
6852 47905 MT
(while \050XPending\050dpy\051\051 > 0 {)SH
8004 49003 MT
(/* get an input event */)SH
8004 50101 MT
(XNextEvent\050dpy, &event\051;)SH
8004 51199 MT
(/* react to event */)SH
8004 52297 MT
(switch \050event.type\051 {)SH
9156 53395 MT
(/* any text that comes from processing EVENT_A or EVENT_B is logged */)SH
9156 54493 MT
(case EVENT_A: ...)SH
9156 55591 MT
(case EVENT_B: ...)SH
9156 56689 MT
(/* but EVENT_C means store the text in a file */)SH
9156 57787 MT
(case EVENT_C: {)SH
10 SS 
4500 63450 MT
(24)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 25 27 
BS
0 SI
9 /Helvetica AF
11208 6056 MT
(int done;)SH
11208 7154 MT
(DPSTextProc tmp = ctxt -> textProc;)SH
11208 8908 MT
(/* make sure interpreter is ready */)SH
11208 10006 MT
(DPSWaitContext\050ctxt\051;)SH
11208 11104 MT
(/* temporarily install the other text proc */)SH
11208 12202 MT
(DPSSetTextProc\050ctxt, StoreTextProc\051;)SH
11208 13300 MT
(/* call the wrapped procedure */)SH
11208 14398 MT
(WrapThatGeneratesText\050ctxt, &done\051;)SH
11208 15496 MT
(/* since wrap returned a value, we know the interpreter is)SH
12072 16594 MT
(ready when we get here; restore original textProc */)SH
11208 17692 MT
(DPSSetTextProc\050ctxt, tmp\051;)SH
11208 18790 MT
(/* close file by calling textProc with count = 0 */)SH
11208 19888 MT
(StoreTextProc\050ctxt, NULL, 0\051;)SH
11208 20986 MT
(break;)SH
10056 22084 MT
(})SH
10056 23182 MT
(/* ... */)SH
10056 24280 MT
(default:;)SH
8904 25378 MT
(})SH
7752 26476 MT
(})SH
43197 50 5400 27872 UL
11 SS 
17069 30869 MT
(5.4)SH
19799 XM
(ERROR HANDLERS)SH
/Times-Roman SF
19791 33064 MT
(The `)170 W
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' field in)
170 W( the `)169 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' contains the ad-)169 W
19799 34361 MT
(dress of a call-back)
18 W( procedure for handling errors. The error call-)19 W
19799 35658 MT
(back procedure is called when there is a PostScript language er-)70 W
19799 36955 MT
(ror or when an error internal to)
25 W( the Client Library, such as use of)26 W
19799 38252 MT
(an invalid context identifier, is)
126 W( encountered. The standard error)125 W
19799 39549 MT
(codes are listed under)SH
/Times-Italic SF
29633 XM
(DPSErrorProc)SH
/Times-Roman SF
36568 XM
(in Section 9.2.)SH
19791 41744 MT
(When the interpreter detects)
166 W( a PostScript language error, it in-)167 W
19799 43041 MT
(vokes the standard)206 W
/Times-Bold SF
28878 XM
(handleerror)SH
/Times-Roman SF
35041 XM
(procedure to report the)
206 W( error,)205 W
19799 44338 MT
(then forces the context to terminate.)
132 W( The error call-back proce-)133 W
19799 45635 MT
(dure specified in)
476 W( the `)475 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' is called with the)475 W
19799 46932 MT
(`)SH
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(' error code.)SH
19791 49127 MT
(After a PostScript language)
137 W( error, the context becomes invalid;)138 W
19799 50424 MT
(further use of it will cause another error. See)
135 W( Section 5.5 for a)134 W
19799 51721 MT
(discussion of)
127 W( error recovery issues. See Appendix B for an ex-)128 W
19799 53018 MT
(ample of an error)
50 W( handler. See the Note on page 21 for a discus-)49 W
19799 54315 MT
(sion of when error output is actually received.)SH
8 /Helvetica AF
27828 63450 MT
(5 HANDLING)
327 W( OUTPUT FROM THE CONTEXT)SH
10 SS 
47485 XM
(25)SH
ES
%%Page: 26 28 
BS
0 SI
11 /Helvetica AF
16169 6202 MT
(5.5)SH
18899 XM
(ERROR RECOVERY REQUIREMENTS)SH
/Times-Roman SF
18891 8397 MT
(For many applications,)
71 W( error recovery may not be considered an)72 W
18899 9694 MT
(issue because an)
384 W( unanticipated PostScript language error or)383 W
18899 10991 MT
(Client Library error represents a bug in the program that will)
66 W( be)67 W
18899 12288 MT
(fixed during development. However,)
17 W( since applications do some-)16 W
18899 13585 MT
(times go into production with undiscovered bugs, it is prudent)
35 W( to)36 W
18899 14882 MT
(provide an error handler that allows the application to exit grace-)21 W
18899 16179 MT
(fully.)SH
18891 18374 MT
(There are a small number of applications that require)
340 W( error)341 W
18899 19671 MT
(recovery more sophisticated than simply exiting. If an)
152 W( applica-)151 W
18899 20968 MT
(tion falls into one of the following categories,)
190 W( it is likely that)191 W
18899 22265 MT
(some form of error recovery will be needed:)SH
/Symbol SF
20518 24542 MT
(\267)SH
/Times-Roman SF
21299 XM
(Applications that read)
358 W( and execute PostScript language)357 W
21299 25739 MT
(programs generated by other sources \050for)
464 W( example, a)465 W
21299 26936 MT
(previewer application for)
240 W( PostScript language documents)239 W
21299 28133 MT
(generated by)
35 W( a word-processing program\051.  Since the exter-)36 W
21299 29330 MT
(nally provided)
137 W( PostScript language program may have er-)136 W
21299 30527 MT
(rors, the application must provide some sort of)
432 W( error)433 W
21299 31724 MT
(recovery.)SH
/Symbol SF
20518 33520 MT
(\267)SH
/Times-Roman SF
21299 XM
(Applications that allow)
253 W( the user to enter PostScript lan-)252 W
21299 34717 MT
(guage programs.  This category is a subset of the)
303 W( one)304 W
21299 35914 MT
(above.)SH
/Symbol SF
20518 37710 MT
(\267)SH
/Times-Roman SF
21299 XM
(Applications that generate PostScript language)
276 W( programs)275 W
21299 38907 MT
(dynamically in response to user requests)
203 W( \050for example, a)204 W
21299 40104 MT
(graphics art program)
63 W( that generates an arbitrarily long path)62 W
21299 41301 MT
(description of a graphical object\051.  Since)
89 W( there are system-)90 W
21299 42498 MT
(specific resource limitations on)
342 W( the interpreter, such as)341 W
21299 43695 MT
(memory and disk space, the application should be)
136 W( able to)137 W
21299 44892 MT
(back away from an error caused by)
97 W( exhausting a resource,)96 W
21299 46089 MT
(and perhaps attempt to acquire new or reclaim used)467 W
21299 47286 MT
(resources.)SH
18891 49481 MT
(Error recovery is)
196 W( complicated because both the Client Library)195 W
18899 50778 MT
(and the context can)
93 W( be left in unknown states. For example, the)94 W
18899 52075 MT
(operand stack may have unused objects on it.)SH
18891 54270 MT
(In general,)
81 W( if an application needs to intercept and recover from)80 W
18899 55567 MT
(PostScript language errors, keep it simple. For some applica-)247 W
18899 56864 MT
(tions, the)
92 W( best strategy when an error occurs is either to destroy)91 W
18899 58161 MT
(the space and construct a new one with a new context or to res-)75 W
18899 59458 MT
(tart the application.)SH
10 /Helvetica AF
4500 63450 MT
(26)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 27 29 
BS
0 SI
11 /Times-Roman AF
19791 6155 MT
(A given implementation)
48 W( of the Client Library may provide more)47 W
19799 7452 MT
(sophisticated error recovery facilities; consult your system-)452 W
19799 8749 MT
(specific documentation. Your system may)
161 W( provide the general-)160 W
19799 10046 MT
(purpose exception-handling facilities described)
161 W( in Appendix C,)162 W
19799 11343 MT
(which can be used in conjunction with)SH
/Times-Italic SF
36998 XM
(DPSDefaultErrorProc)SH
/Times-Roman SF
(.)SH
/Helvetica SF
17069 14540 MT
(5.6)SH
19799 XM
(BACKSTOP HANDLERS)SH
/Times-Roman SF
19791 16735 MT
(Backstop handlers handle output when there is no)
299 W( other ap-)298 W
19799 18032 MT
(propriate handler. The Client Library automatically installs back-)12 W
19799 19329 MT
(stop handlers.)SH
19791 21524 MT
(To get)
386 W( a pointer to the current backstop text handler, call)385 W
/Times-Italic SF
19799 22821 MT
(DPSGetCurrentTextBackstop)SH
/Times-Roman SF
(. To install a)
344 W( new backstop text)345 W
19799 24118 MT
(handler, call)279 W
/Times-Italic SF
26068 XM
(DPSSetTextBackstop)SH
/Times-Roman SF
(. The)
279 W( text backstop may be)278 W
19799 25415 MT
(used as a default text handler implementation. The)
84 W( exact defini-)85 W
19799 26712 MT
(tion of what the default text)
58 W( handler does is system specific. For)57 W
19799 28009 MT
(instance, for UNIX systems, it writes the text to)SH
/Times-Italic SF
41092 XM
(stdout)SH
/Times-Roman SF
(.)SH
19791 30204 MT
(To get a pointer to the)
336 W( current backstop error handler, call)337 W
/Times-Italic SF
19799 31501 MT
(DPSGetCurrentErrorBackstop)SH
/Times-Roman SF
(. To install a)
162 W( new backstop error)161 W
19799 32798 MT
(handler, call)126 W
/Times-Italic SF
25762 XM
(DPSSetErrorBackstop)SH
/Times-Roman SF
(. The backstop error handler)127 W
19799 34095 MT
(processes errors internal to the Client Library, such)
244 W( as a lost)243 W
19799 35392 MT
(server connection. These errors have no)
152 W( specific `)153 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(')SH
19799 36689 MT
(handle associated with them and therefore have no error handler.)SH
8 /Helvetica AF
27828 63450 MT
(5 HANDLING)
327 W( OUTPUT FROM THE CONTEXT)SH
10 SS 
47485 XM
(27)SH
ES
%%Page: 28 30 
BS
0 SI
12 /Helvetica AF
11692 6275 MT
(6 ADDITIONAL)
491 W( CLIENT LIBRARY FACILITIES)SH
11 /Times-Roman AF
18891 8826 MT
(The Client Library includes a number of)
224 W( utilities and support)223 W
18899 10123 MT
(functions for applications. This section describes:)SH
/Symbol SF
20518 12400 MT
(\267)SH
/Times-Roman SF
21299 XM
(Sending the same code)
97 W( and data to a group of contexts by)98 W
21299 13597 MT
(chaining them.)SH
/Symbol SF
20518 15393 MT
(\267)SH
/Times-Roman SF
21299 XM
(Encoding and translating PostScript language code.)SH
/Symbol SF
20518 17189 MT
(\267)SH
/Times-Roman SF
21299 XM
(Buffering and flushing the buffer.)SH
/Symbol SF
20518 18985 MT
(\267)SH
/Times-Roman SF
21299 XM
(Synchronizing an application with a context.)SH
/Symbol SF
20518 20781 MT
(\267)SH
/Times-Roman SF
21299 XM
(Communicating with a forked context.)SH
/Helvetica SF
16169 23978 MT
(6.1)SH
18899 XM
(CHAINED CONTEXTS)SH
/Times-Roman SF
18891 26173 MT
(It is sometimes useful to send)
285 W( the same PostScript language)284 W
18899 27470 MT
(program to several contexts. This is accomplished most)
266 W( con-)267 W
18899 28767 MT
(veniently by chaining the contexts together)
67 W( and sending input to)66 W
18899 30064 MT
(one context in the chain; for)
9 W( example, by calling a wrap with that)10 W
18899 31361 MT
(context.)SH
18891 33556 MT
(Two Client Library procedures are provided for managing con-)119 W
18899 34853 MT
(text chaining:)SH
/Symbol SF
20518 37130 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSChainContext)SH
/Times-Roman SF
29702 XM
(links a context to a chain.)SH
/Symbol SF
20518 38926 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSUnchainContext)SH
/Times-Roman SF
31248 XM
(removes a)
448 W( child context from its)449 W
21299 40123 MT
(parent's chain.)SH
18891 42318 MT
(One context in the chain is specified as the parent)
142 W( context, the)141 W
18899 43615 MT
(other as the child context. The child)
257 W( context is added to the)258 W
18899 44912 MT
(parent's chain. Subsequently, any input sent to the parent is sent)57 W
18899 46209 MT
(to its child, and the child of the child, and)
70 W( so on. Input sent to a)71 W
18899 47506 MT
(child is not passed to its parent. A context can appear on)
147 W( only)146 W
18899 48803 MT
(one chain. If)
482 W( the context is already a child on a chain,)483 W
/Times-Italic SF
18899 50100 MT
(DPSChainContext)SH
/Times-Roman SF
27477 XM
(returns a nonzero error code. However, you)174 W
18899 51397 MT
(can chain a child to a context that already has a child.)SH
10 /Helvetica AF
4500 63450 MT
(28)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 29 31 
BS
28806 50 19791 5400 LH BX1
0 SI
10 /Helvetica-Bold AF
19799 6953 MT
(Note:)SH
11 /Times-Roman AF
23109 XM
(A parent context always passes its input to its)
74 W( child con-)75 W
19799 8250 MT
(text. However,)
407 W( for a chain of more than two contexts, the)
66 W( order)65 W
19799 9547 MT
(in which the contexts)
315 W( on the chain receive the input is not)316 W
19799 10844 MT
(defined. Therefore)
1679 W( an application should not rely)
702 W( on)701 W
/Times-Italic SF
19799 12141 MT
(DPSChainContext)SH
/Times-Roman SF
28212 XM
(to create a chain)
10 W( whose contexts process input)11 W
19799 13438 MT
(in a particular order.)SH
28806 50 19791 14477 LH BX1
19791 16672 MT
(For chained contexts, output is)
172 W( handled differently from input,)171 W
19799 17969 MT
(and text and errors are)
41 W( handled differently from results. If a con-)42 W
19799 19266 MT
(text on a chain generates text or error output, the output is)302 W
19799 20563 MT
(handled by that context only. Such output is not passed)
190 W( to its)191 W
19799 21860 MT
(child. When a wrap that returns results is called, all of)
99 W( the con-)98 W
19799 23157 MT
(texts on the chain)
192 W( get the wrap code \050the input\051, but only the)193 W
19799 24454 MT
(context with which the wrap was called receives the results.)SH
19791 26649 MT
(The best way to build a chain is to identify one context)
141 W( as the)140 W
19799 27946 MT
(parent. Call)142 W
/Times-Italic SF
25490 XM
(DPSChainContext)SH
/Times-Roman SF
34035 XM
(to make each additional context)143 W
19799 29243 MT
(the child of that parent. For example, to)
88 W( chain contexts)87 W
10 /Helvetica AF
44992 XM
(A)SH
11 /Times-Roman AF
(,)SH
10 /Helvetica AF
46296 XM
(B)SH
11 /Times-Roman AF
(,)SH
10 /Helvetica AF
47600 XM
(C)SH
11 /Times-Roman AF
(,)SH
19799 30540 MT
(and)SH
10 /Helvetica AF
21805 XM
(D)SH
11 /Times-Roman AF
(, choose)143 W
10 /Helvetica AF
26692 XM
(A)SH
11 /Times-Roman AF
27777 XM
(as the parent and make)
143 W( the following calls to)144 W
/Times-Italic SF
19799 31837 MT
(DPSChainContext)SH
/Times-Roman SF
(:)SH
9 /Helvetica AF
20951 33790 MT
(DPSChainContext\050A,B\051;)SH
20951 34888 MT
(DPSChainContext\050A,C\051;)SH
20951 35986 MT
(DPSChainContext\050A,D\051;)SH
11 /Times-Roman AF
19791 38181 MT
(Once the chain is built, send input only to)
50 W( the designated parent,)49 W
10 /Helvetica AF
19799 39478 MT
(A)SH
11 /Times-Roman AF
(.)SH
19791 41673 MT
(The most common use of chained)
158 W( contexts is in debugging. A)159 W
19799 42970 MT
(log of PostScript operators executed may be kept)
33 W( by a child con-)32 W
19799 44267 MT
(text whose purpose is to convert PostScript language programs)140 W
19799 45564 MT
(to ASCII text and write)
4 W( the text to a file; this child is chained to a)3 W
19799 46861 MT
(parent context)
5 W( that sends normal application requests to the inter-)6 W
19799 48158 MT
(preter. The parent's calls to wrapped procedures will then be)234 W
19799 49455 MT
(logged in human-readable form as a debugging audit trail.)SH
19791 51650 MT
(Chained contexts may also be used for)
193 W( duplicate displays. An)194 W
19799 52947 MT
(application may)
54 W( want several windows, or even several different)53 W
19799 54244 MT
(display screens, to show)
212 W( the same graphics without having to)213 W
19799 55541 MT
(explicitly call the wrapped procedure in a loop for)
28 W( all of the con-)27 W
19799 56838 MT
(texts.)SH
8 /Helvetica AF
27947 63450 MT
(6 ADDITIONAL)
327 W( CLIENT LIBRARY FACILITIES)SH
10 SS 
47485 XM
(29)SH
ES
%%Page: 30 32 
BS
0 SI
11 /Helvetica AF
16169 6202 MT
(6.2)SH
18899 XM
(ENCODING AND TRANSLATION)SH
/Times-Roman SF
18891 8397 MT
(PostScript language code may be sent to a context in three ways:)SH
/Symbol SF
20518 10674 MT
(\267)SH
/Times-Roman SF
21299 XM
(As a binary)
222 W( object sequence)
223 W( \320 typically)
374 W( for immediate)223 W
21299 11871 MT
(execution on behalf of a context.)SH
/Symbol SF
20518 13667 MT
(\267)SH
/Times-Roman SF
21299 XM
(As binary-encoded tokens)
59 W( \320 typically)
210 W( for deferred execu-)59 W
21299 14864 MT
(tion from a file.)SH
/Symbol SF
20518 16660 MT
(\267)SH
/Times-Roman SF
21299 XM
(As ASCII text)
329 W( \320 typically)
480 W( for debugging, display, or)329 W
21299 17857 MT
(deferred execution from a file.)SH
/Times-Italic SF
18891 20052 MT
(PostScript Language Extensions for the Display PostScript)462 W
18899 21349 MT
(System)SH
/Times-Roman SF
22383 XM
(describes the encodings available)
155 W( in the PostScript lan-)156 W
18899 22646 MT
(guage.)SH
18891 24841 MT
(Since the application)
218 W( and the PostScript interpreter can be on)217 W
18899 26138 MT
(different machines, the)
55 W( Client Library automatically ensures that)56 W
18899 27435 MT
(the binary representation of numeric values, including byte)
30 W( order)29 W
18899 28732 MT
(and floating-point format, are correctly interpreted.)SH
/Helvetica SF
18891 31430 MT
(6.2.1 Encoding)
848 W( PostScript Language Code)SH
/Times-Roman SF
18891 33625 MT
(On a system-specific basis, the Client)
64 W( Library supports a variety)65 W
18899 34922 MT
(of conversions to and from the encodings and formats defined)169 W
18899 36219 MT
(for the PostScript language:)SH
/Symbol SF
20518 38496 MT
(\267)SH
/Times-Roman SF
21299 XM
(Binary object)
68 W( sequence to binary object sequence.  For ex-)69 W
21299 39693 MT
(panding user name indices back to their printable names.)SH
/Symbol SF
20518 41489 MT
(\267)SH
/Times-Roman SF
21299 XM
(Binary object)
82 W( sequence to ASCII encoding.  For backward)81 W
21299 42686 MT
(compatibility with printers, for)
57 W( interchange, and for debug-)58 W
21299 43883 MT
(ging.)SH
/Symbol SF
20518 45679 MT
(\267)SH
/Times-Roman SF
21299 XM
(Binary object sequence to)
342 W( binary-encoded tokens.  For)341 W
21299 46876 MT
(long-term storage.)SH
/Symbol SF
20518 48672 MT
(\267)SH
/Times-Roman SF
21299 XM
(Binary-encoded tokens)
358 W( to ASCII.  For backward com-)359 W
21299 49869 MT
(patibility and interchange.)SH
18891 52064 MT
(`)SH
10 /Helvetica AF
(DPSProgramEncoding)SH
11 /Times-Roman AF
(' defines)
61 W( the three encodings available to)60 W
18899 53361 MT
(PostScript language programs. `)71 W
10 /Helvetica AF
(DPSNameEncoding)SH
11 /Times-Roman AF
(' defines)
71 W( the)72 W
18899 54658 MT
(two possible encodings for user names in PostScript language)201 W
18899 55955 MT
(programs. See Section 11.6 for the type definitions.)SH
/Helvetica SF
18891 58653 MT
(6.2.2 Translation)848 W
10 SS 
4500 63450 MT
(30)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 31 33 
BS
0 SI
11 /Times-Italic AF
19791 6155 MT
(Translation)SH
/Times-Roman SF
25266 XM
(means the)
64 W( conversion of program encoding or name)65 W
19799 7452 MT
(encoding from one form to another.)SH
19791 9647 MT
(Any code sent to the context is)
6 W( converted according to the setting)5 W
19799 10944 MT
(of the encoding fields. For a context that was created)
152 W( with the)153 W
19799 12241 MT
(system-specific routine)1083 W
/Times-Italic SF
32472 XM
(DPSCreateTextContext)SH
/Times-Roman SF
(, code is)1082 W
19799 13538 MT
(automatically converted to ASCII encoding.)SH
19791 15733 MT
(An application sometimes exchanges binary)
280 W( object sequences)281 W
19799 17030 MT
(with another application. Since binary object sequences)
283 W( have)282 W
19799 18327 MT
(user name indices by)
380 W( default, the sending application must)381 W
19799 19624 MT
(provide name-mapping information to the receiving application;)85 W
19799 20921 MT
(this information can be lengthy.)
120 W( Instead, some implementations)121 W
19799 22218 MT
(allow the application to)
217 W( translate name indices back into user)216 W
19799 23515 MT
(names by changing the `)SH
10 /Helvetica AF
(nameEncoding)SH
11 /Times-Roman AF
(' field to)
SH( `)1 W
10 /Helvetica AF
(dps_strings)SH
11 /Times-Roman AF
('. In)1 W
19799 24812 MT
(many implementations,)608 W
/Times-Italic SF
31618 XM
(DPSChangeEncoding)SH
/Times-Roman SF
42155 XM
(performs this)607 W
19799 26109 MT
(function.)SH
/Helvetica SF
17069 29306 MT
(6.3)SH
19799 XM
(BUFFERING)SH
/Times-Roman SF
19791 31501 MT
(For optimal)
186 W( performance, programs and data sent to a context)187 W
19799 32798 MT
(may be)
189 W( buffered by the Client Library. For the most part, the)188 W
19799 34095 MT
(application programmer need)
79 W( not be concerned with this buffer-)80 W
19799 35392 MT
(ing. Flushing of the buffer happens automatically as required,)209 W
19799 36689 MT
(such as just before waiting for input events.)SH
19791 38884 MT
(However, in certain unusual situations, the application may ex-)126 W
19799 40181 MT
(plicitly flush)
23 W( a buffer \050see example below\051.)22 W
/Times-Italic SF
39196 XM
(DPSFlushContext)SH
/Times-Roman SF
47437 XM
(al-)SH
19799 41478 MT
(lows the application to force)
22 W( any buffered code or data to be sent)23 W
19799 42775 MT
(to the context. Note that)
47 W( flushing does not guarantee that code is)46 W
19799 44072 MT
(executed by the context, only that any buffered code is sent)
141 W( to)142 W
19799 45369 MT
(the context. See Section 6.4)
156 W( and)155 W
/Times-Italic SF
35091 XM
(DPSWaitContext)SH
/Times-Roman SF
43037 XM
(for informa-)155 W
19799 46666 MT
(tion on how to force code to be executed.)SH
19791 48861 MT
(Unnecessary flushing is inefficient. It is unusual for the)
173 W( appli-)174 W
19799 50158 MT
(cation to)
316 W( flush the buffer explicitly. Cases where the buffer)315 W
19799 51455 MT
(might need to be flushed include the following:)SH
/Symbol SF
21418 53732 MT
(\267)SH
/Times-Roman SF
22199 XM
(Nothing to send to the interpreter)
125 W( for a long time \050for ex-)126 W
22199 54929 MT
(ample, ``going to sleep'' or doing a long computation\051.)SH
/Symbol SF
21418 56725 MT
(\267)SH
/Times-Roman SF
22199 XM
(Nothing expected)
334 W( from the interpreter for a long time.)333 W
22199 57922 MT
(\050Note that getting)
248 W( input automatically flushes the output)249 W
22199 59119 MT
(buffers.\051)SH
8 /Helvetica AF
27947 63450 MT
(6 ADDITIONAL)
327 W( CLIENT LIBRARY FACILITIES)SH
10 SS 
47485 XM
(31)SH
ES
%%Page: 32 34 
BS
0 SI
11 /Times-Roman AF
18891 6155 MT
(When the client and the)
194 W( server are separate processes and the)193 W
18899 7452 MT
(buffered code need not be executed)
45 W( immediately, the application)46 W
18899 8749 MT
(can flush the buffers with)135 W
/Times-Bold SF
31089 XM
(flush)SH
/Times-Roman SF
33823 XM
(rather than)
135 W( synchronizing with)134 W
18899 10046 MT
(the context; synchronizing is described in Section 6.4.)SH
/Helvetica SF
16169 13243 MT
(6.4)SH
18899 XM
(SYNCHRONIZING APPLICATION AND CONTEXT)SH
/Times-Roman SF
18891 15438 MT
(The PostScript interpreter can run as a)
27 W( separate operating-system)28 W
18899 16735 MT
(process \050or task\051 from the application; it can even run)
283 W( on a)282 W
18899 18032 MT
(separate machine. When the processes)
126 W( are separate, an applica-)127 W
18899 19329 MT
(tion programmer must)
95 W( take into account the communication be-)94 W
18899 20626 MT
(tween the application and the PostScript interpreter. This is im-)104 W
18899 21923 MT
(portant when time-critical actions must be performed)
156 W( based on)155 W
18899 23220 MT
(the current appearance)
128 W( of the display. Also, errors arising from)129 W
18899 24517 MT
(the execution of a wrapped procedure may)
28 W( be reported long after)27 W
18899 25814 MT
(the procedure returns.)SH
18891 28009 MT
(The application and)
88 W( the context are synchronized when all code)89 W
18899 29306 MT
(sent to the context has been executed)
33 W( and it is waiting to execute)32 W
18899 30603 MT
(more code. When the two are)216 W
/Times-Italic SF
33418 XM
(not)SH
/Times-Roman SF
35316 XM
(synchronized, the status of)217 W
18899 31900 MT
(code previously sent to the context is unknown to)
155 W( the applica-)154 W
18899 33197 MT
(tion. Synchronization can be effected in two ways: as)
91 W( a side ef-)92 W
18899 34494 MT
(fect of calling)
107 W( wraps that return values, or explicitly, by calling)106 W
18899 35791 MT
(the)SH
/Times-Italic SF
20518 XM
(DPSWaitContext)SH
/Times-Roman SF
28309 XM
(procedure.)SH
18891 37986 MT
(A wrapped procedure that)
33 W( has no result values returns as soon as)34 W
18899 39283 MT
(the wrap body is sent to the context. The)
7 W( data buffer is not neces-)6 W
18899 40580 MT
(sarily flushed in this case. Sometimes,)
6 W( however, the application's)7 W
18899 41877 MT
(next action)
265 W( depends on the completed execution of the wrap)264 W
18899 43174 MT
(body by the PostScript interpreter. The following example)448 W
18899 44471 MT
(describes the kind of problem)
107 W( that can occur when the assump-)106 W
18899 45768 MT
(tion is)
55 W( made that a wrap's code has been executed by the time it)56 W
18899 47065 MT
(returns:)SH
/Times-Bold SF
18891 49260 MT
(Example:)SH
/Times-Roman SF
23838 XM
(An application calls a wrapped procedure to draw)
150 W( a)149 W
18899 50557 MT
(large and complex)
155 W( picture into an offscreen buffer \050such as an)156 W
18899 51854 MT
(X11 pixmap\051. The)
89 W( wrapped procedure has no return value, so it)88 W
18899 53151 MT
(returns immediately, although the context may not have)
52 W( finished)53 W
18899 54448 MT
(executing the code. At this point, the application calls)
6 W( procedures)5 W
18899 55745 MT
(to copy the screen)
60 W( buffer to a window for display. If the context)61 W
18899 57042 MT
(has not finished drawing the picture into the buffer,)
69 W( only part of)68 W
18899 58339 MT
(the image will be displayed on the screen. This is)
116 W( not what the)117 W
18899 59636 MT
(application programmer had in mind.)SH
10 /Helvetica AF
4500 63450 MT
(32)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 33 35 
BS
0 SI
11 /Times-Roman AF
19791 6155 MT
(Wrapped procedures that return)
35 W( results flush any code waiting to)34 W
19799 7452 MT
(be sent to the context and then wait until)
144 W( all results have been)145 W
19799 8749 MT
(received. Therefore they automatically synchronize the)
173 W( context)172 W
19799 10046 MT
(with the)
22 W( application. The wrapped procedure will not return until)23 W
9 SS 
44803 10980 MT
(2)SH
11 SS 
19799 11343 MT
(the interpreter indicates that)
143 W( all results have been sent.)144 W
45672 XM
(In this)144 W
19799 12640 MT
(case, the application knows that the)
116 W( context is ready to execute)115 W
19799 13937 MT
(more code as soon as the wrapped procedure returns.)SH
19791 16132 MT
(The preceding discussion describes the side effect of calling a)177 W
19799 17429 MT
(wrap that returns a value, but it is not always convenient, or)227 W
19799 18726 MT
(indeed correct, to write wrapped)
156 W( procedures that return values.)157 W
19799 20023 MT
(Forcing the application)
56 W( to wait for a return result for every wrap)55 W
19799 21320 MT
(is inefficient and may degrade performance.)SH
19791 23515 MT
(If an application has a few critical)
68 W( points where synchronization)69 W
19799 24812 MT
(must occur, and)
382 W( a wrap that returns results is not needed,)381 W
/Times-Italic SF
19799 26109 MT
(DPSWaitContext)SH
/Times-Roman SF
27876 XM
(may be)
286 W( used to synchronize the application)287 W
19799 27406 MT
(with the)
253 W( context.)252 W
/Times-Italic SF
28194 XM
(DPSWaitContext)SH
/Times-Roman SF
36237 XM
(flushes any buffered code,)252 W
19799 28703 MT
(and then waits until the context finishes executing all code that)112 W
19799 30000 MT
(has been sent)
45 W( to it so far. This forces the context to finish before)44 W
19799 31297 MT
(the application continues.)SH
19791 33492 MT
(Like wraps that return)
129 W( results,)130 W
/Times-Italic SF
33878 XM
(DPSWaitContext)SH
/Times-Roman SF
41799 XM
(should be used)130 W
19799 34789 MT
(only when necessary. Performance may be degraded by)
153 W( exces-)152 W
19799 36086 MT
(sive synchronization.)SH
/Helvetica SF
17069 39283 MT
(6.5)SH
19799 XM
(FORKED CONTEXTS)SH
/Times-Roman SF
19791 41478 MT
(When the)51 W
/Times-Bold SF
24413 XM
(fork)SH
/Times-Roman SF
26755 XM
(operator is executed in the PostScript)
51 W( interpreter,)52 W
19799 42775 MT
(a new execution context is created, but the)
183 W( application has no)182 W
19799 44072 MT
(way to)
212 W( communicate with it. In order to communicate with a)213 W
19799 45369 MT
(forked context, it must create a `)69 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' for it.)
69 W( For ex-)68 W
19799 46666 MT
(ample,)SH
/Times-Italic SF
23039 XM
(DPSContextFromContextID)SH
/Times-Roman SF
35781 XM
(is an X Window System pro-)3 W
19799 47963 MT
(cedure that creates a `)SH
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' for a forked context.)SH
7 SS 
19799 57437 MT
(2)SH
9 SS 
20149 57764 MT
(But the wrapped procedure may return prematurely if an error occurs, depend-)18 W
19799 58662 MT
(ing on how the error handler works; see Section 5.4.)SH
8 /Helvetica AF
27947 63450 MT
(6 ADDITIONAL)
327 W( CLIENT LIBRARY FACILITIES)SH
10 SS 
47485 XM
(33)SH
ES
%%Page: 34 36 
BS
43197 50 4500 6355 UL
0 SI
9 /Helvetica AF
5700 8108 MT
(DPSContext DPSContextFromContextID\050ctxt, cid, textProc, errorProc\051)SH
6276 9206 MT
(DPSContext ctxt;)SH
6276 10304 MT
(long int cid,)SH
6276 11402 MT
(DPSTextProc textProc,)SH
6276 12500 MT
(DPSErrorProc errorProc;)SH
43197 50 4500 13896 UL
11 /Times-Roman AF
18891 15891 MT
(`)SH
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' is the context that executed the)SH
/Times-Bold SF
35322 XM
(fork)SH
/Times-Roman SF
37613 XM
(operator.)SH
18891 18086 MT
(`)SH
10 /Helvetica AF
(cid)SH
11 /Times-Roman AF
(' is the integer)
82 W( value of the new context's identifier. `)81 W
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(')SH
18899 19383 MT
(is returned if `)SH
10 /Helvetica AF
(cid)SH
11 /Times-Roman AF
(' is invalid.)SH
18891 21578 MT
(If `)2315 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' or `)2316 W
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' are `)2316 W
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(',)SH
/Times-Italic SF
18899 22875 MT
(DPSContextFromContextID)SH
/Times-Roman SF
31736 XM
(copies the corresponding procedure)98 W
18899 24172 MT
(pointer from `)84 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' to the new `)84 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
('; otherwise the)
84 W( new)85 W
18899 25469 MT
(context gets the specified `)SH
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' and `)SH
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
('.)SH
18891 27664 MT
(All other fields of the new context are initialized)
211 W( with values)210 W
18899 28961 MT
(from `)SH
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(', including the space field.)SH
10 /Helvetica AF
4500 63450 MT
(34)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 35 37 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(7 PROGRAMMING)
491 W( TIPS)SH
11 /Times-Roman AF
19791 8826 MT
(This section contains tips for avoiding mistakes commonly made)26 W
19799 10123 MT
(by programmers using the Client Library interface. Some of the)84 W
19799 11420 MT
(items listed here are brief summaries of)189 W
/Times-Bold SF
38807 XM
(Notes)SH
/Times-Roman SF
41898 XM
(and)SH
/Times-Bold SF
43951 XM
(Warnings)SH
/Times-Roman SF
19799 12717 MT
(emphasized elsewhere in)
270 W( this document. Section 7.1 contains)269 W
19799 14014 MT
(some pointers)
209 W( on how to make the best use of the PostScript)210 W
19799 15311 MT
(language imaging model.)SH
/Symbol SF
21418 17588 MT
(\267)SH
/Times-Roman SF
22199 XM
(Don't guess what)
40 W( the arguments to a single-operator proce-)39 W
22199 18785 MT
(dure call are)
120 W( \320 look)
271 W( them up in the listing.  See)
120 W( Section)121 W
22199 19982 MT
(10.)SH
/Symbol SF
21418 21778 MT
(\267)SH
/Times-Roman SF
22199 XM
(Make sure that variables passed to wrapped procedures and)32 W
22199 22975 MT
(single-operator procedures are of the correct C type.)
232 W( A)741 W
22199 24172 MT
(common mistake is to pass)
118 W( a pointer to a `)117 W
10 /Helvetica AF
(short int)117 W
11 /Times-Roman AF
(' \050only)117 W
22199 25369 MT
(16 bits wide\051 to a procedure that returns a boolean.)
245 W( A)766 W
22199 26566 MT
(boolean is defined as)
33 W( an `)32 W
10 /Helvetica AF
(int)SH
11 /Times-Roman AF
(', which can be 32 bits wide on)32 W
22199 27763 MT
(some systems.)SH
/Symbol SF
21418 29559 MT
(\267)SH
/Times-Roman SF
22199 XM
(Make sure)
493 W( that PostScript language code is properly)494 W
22199 30756 MT
(separated by whitespace when)
13 W( using)12 W
/Times-Italic SF
38541 XM
(DPSPrintf)SH
/Times-Roman SF
(. Make)
299 W( sure)12 W
22199 31953 MT
(that variables passed to)231 W
/Times-Italic SF
33631 XM
(DPSPrintf)SH
/Times-Roman SF
38721 XM
(are of)
231 W( the right type.)232 W
22199 33150 MT
(Passing type `)199 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
(' to)
199 W( a format string of `)198 W
10 /Helvetica AF
(%d)SH
11 /Times-Roman AF
(' will yield)198 W
22199 34347 MT
(unpredictable results.  See Section 4.5.)SH
/Symbol SF
21418 36143 MT
(\267)SH
/Times-Roman SF
22199 XM
(There are two means of synchronizing the application with)62 W
22199 37340 MT
(the context:  either call)66 W
/Times-Italic SF
32884 XM
(DPSWaitContext)SH
/Times-Roman SF
(, which causes the)65 W
22199 38537 MT
(application to wait until the interpreter has)
58 W( executed all the)59 W
22199 39734 MT
(code sent)
298 W( to the execution context, or call a wrap that)297 W
22199 40931 MT
(returns a result,)
75 W( which causes synchronization as a side ef-)76 W
22199 42128 MT
(fect. If)
693 W( synchronization is not required,)
209 W( use a wrap that)208 W
22199 43325 MT
(returns results only when results are needed.)
89 W( Unnecessary)454 W
22199 44522 MT
(synchronization by either method will degrade perfor-)429 W
22199 45719 MT
(mance. See)
275 W( Section 6.4.)SH
/Symbol SF
21418 47515 MT
(\267)SH
/Times-Roman SF
22199 XM
(Use of)271 W
/Times-Italic SF
25917 XM
(DPSFlushContext)SH
/Times-Roman SF
34407 XM
(is usually not necessary.  See)272 W
22199 48712 MT
(Section 6.3.)SH
/Symbol SF
21418 50508 MT
(\267)SH
/Times-Roman SF
22199 XM
(Do not read from the file returned by)
507 W( the operator)506 W
/Times-Bold SF
22199 51705 MT
(currentfile)SH
/Times-Roman SF
27672 XM
(from within a wrap.  In)
190 W( general, do not read)191 W
22199 52902 MT
(directly from the)
180 W( context's standard input stream)179 W
/Times-Bold SF
45173 XM
(%stdin)SH
/Times-Roman SF
22199 54099 MT
(from within a)
161 W( wrap.  Since a binary object sequence is a)162 W
22199 55296 MT
(single token, the behavior of the)
266 W( code is different from)265 W
22199 56493 MT
(what it would)
30 W( be in another encoding, such as ASCII.  This)31 W
22199 57690 MT
(will lead to unpredictable)
164 W( results.  See the)163 W
/Times-Italic SF
42171 XM
(pswrap Refer-)163 W
8 /Helvetica AF
35800 63450 MT
(7 PROGRAMMING)
327 W( TIPS)SH
10 SS 
47485 XM
(35)SH
ES
%%Page: 36 38 
BS
0 SI
11 /Times-Italic AF
21299 6155 MT
(ence Manual)153 W
/Times-Roman SF
27591 XM
(and)SH
/Times-Italic SF
29607 XM
(PostScript Language Extensions for the)153 W
21299 7352 MT
(Display PostScript System)SH
/Times-Roman SF
(.)SH
/Symbol SF
20518 9148 MT
(\267)SH
/Times-Roman SF
21299 XM
(If the context is an execution context for a display, do)
95 W( not)94 W
21299 10345 MT
(write PostScript language programs, particularly in wraps,)123 W
21299 11542 MT
(that depend on reading)
316 W( the end-of-file \050EOF\051 indicator.)315 W
21299 12739 MT
(Support for EOF on the communication channel is system)107 W
21299 13936 MT
(specific, and should not be relied)
532 W( upon.  However,)531 W
21299 15133 MT
(PostScript language programs that will be)
105 W( written to a file)106 W
21299 16330 MT
(or spooled to a printer can make use of EOF indications.)SH
/Symbol SF
20518 18126 MT
(\267)SH
/Times-Roman SF
21299 XM
(Be careful when sending intermixed encoding types to a)207 W
21299 19323 MT
(context. In)
445 W( particular, it's best to avoid mixing ASCII en-)86 W
21299 20520 MT
(coding with binary encoding.  See the warning on page)
77 W( 18)76 W
21299 21717 MT
(for an example; see also the following)
848 W( tip on)849 W
/Times-Italic SF
21299 22914 MT
(DPSWaitContext)SH
/Times-Roman SF
(.)SH
/Symbol SF
20518 24710 MT
(\267)SH
/Times-Roman SF
21299 XM
(Before calling)158 W
/Times-Italic SF
28151 XM
(DPSWaitContext)SH
/Times-Roman SF
(, make sure that code that)158 W
21299 25907 MT
(has already been sent to the)
153 W( context is syntactically com-)154 W
21299 27104 MT
(plete, such as)
151 W( a wrap or a correctly terminated PostScript)150 W
21299 28301 MT
(operator or composite object.)SH
/Symbol SF
20518 30097 MT
(\267)SH
/Times-Roman SF
21299 XM
(Use of the)72 W
/Times-Bold SF
26310 XM
(fork)SH
/Times-Roman SF
28673 XM
(operator requires understanding)
72 W( of a given)73 W
21299 31294 MT
(system's support for handling errors from the)
131 W( forked con-)130 W
21299 32491 MT
(text. A)
588 W( common error while developing multiple context)157 W
21299 33688 MT
(applications is to fail to handle errors arising from forked)133 W
21299 34885 MT
(contexts. See)
275 W( Section 5.4.)SH
/Symbol SF
20518 36681 MT
(\267)SH
/Times-Roman SF
21299 XM
(To avoid unintended recursion, do not)
149 W( call Client Library)150 W
21299 37878 MT
(procedures or wraps from within a call-back procedure.)SH
/Symbol SF
20518 39674 MT
(\267)SH
/Times-Roman SF
21299 XM
(To avoid confusion about which)
208 W( context on a chain will)207 W
21299 40871 MT
(handle output, don't send)
244 W( input to a context that's been)245 W
21299 42068 MT
(made the child of another context; send input only to the)153 W
21299 43265 MT
(parent. \050This)
785 W( doesn't apply to text contexts, since they)255 W
21299 44462 MT
(never get output.\051)SH
/Symbol SF
20518 46258 MT
(\267)SH
/Times-Roman SF
21299 XM
(Program wraps carefully.  Copying)
333 W( the entire prologue)332 W
21299 47455 MT
(from a)
37 W( PostScript printer driver into a wrap without change)38 W
21299 48652 MT
(is probably not going to result in efficient code.)SH
/Symbol SF
20518 50448 MT
(\267)SH
/Times-Roman SF
21299 XM
(Avoid the temptation)
68 W( to do all of your programming in the)67 W
21299 51645 MT
(PostScript language.)
209 W( Because)
694 W( the PostScript language is)210 W
21299 52842 MT
(interpreted, not compiled,)
102 W( the application can generally do)101 W
21299 54039 MT
(arithmetic computation and data manipulation)
48 W( such as sort-)49 W
21299 55236 MT
(ing more efficiently in C. Reserve the PostScript)
96 W( language)95 W
21299 56433 MT
(for what it does best)
SH( \320 displaying)
151 W( text and graphics.)SH
10 /Helvetica AF
4500 63450 MT
(36)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 37 39 
BS
0 SI
11 /Helvetica AF
17069 6202 MT
(7.1)SH
19799 XM
(USING THE IMAGING MODEL)SH
/Times-Roman SF
19791 8397 MT
(The device-independent and resolution-independent imaging)512 W
19799 9694 MT
(model defined by)
244 W( the PostScript language is described in the)243 W
/Times-Italic SF
19799 10991 MT
(PostScript Language Reference)
151 W( Manual)152 W
/Times-Roman SF
(. For general advice on)152 W
19799 12288 MT
(how to use the PostScript language efficiently)
142 W( and detailed ad-)141 W
19799 13585 MT
(vice on how to write page descriptions, see)36 W
/Times-Italic SF
39301 XM
(PostScript Language)37 W
19799 14882 MT
(Program Design)309 W
/Times-Roman SF
(. Although)
309 W( that book is primarily concerned)308 W
19799 16179 MT
(with printer applications, much of its information on)
22 W( the imaging)23 W
19799 17476 MT
(model can be applied to writing applications)
264 W( for the Display)263 W
19799 18773 MT
(PostScript system. A)
307 W( thorough understanding of the imaging)308 W
19799 20070 MT
(model is essential)
79 W( to writing efficient Display PostScript system)78 W
19799 21367 MT
(applications.)SH
19791 23562 MT
(The imaging model helps make your application)
309 W( device and)310 W
19799 24859 MT
(resolution independent.)
163 W( Device independence ensures that your)162 W
19799 26156 MT
(application will work and look as you intended on any)
21 W( display or)22 W
19799 27453 MT
(print media. Resolution independence lets you use)
91 W( the power of)90 W
19799 28750 MT
(the PostScript language)
292 W( to do scaling, rotation, and transfor-)293 W
19799 30047 MT
(mation of your graphical)
85 W( display without loss of quality. Use of)84 W
19799 31344 MT
(the imaging model will automatically give you the best possible)73 W
19799 32641 MT
(rendering for any device.)SH
19791 34836 MT
(Design your application with the imaging model in mind. Con-)118 W
19799 36133 MT
(sider issues like converting coordinate systems,)
365 W( representing)366 W
19799 37430 MT
(paths and graphics states with data)
160 W( structures, rendering colors)159 W
19799 38727 MT
(and patterns, setting text, and accessing fonts \050to name just a)216 W
19799 40024 MT
(few\051.)SH
19791 42219 MT
(A few specific tips are listed below:)SH
/Symbol SF
21418 44496 MT
(\267)SH
/Times-Roman SF
22199 XM
(Coordinates sent to)
123 W( the PostScript interpreter should be in)122 W
22199 45693 MT
(the user)
122 W( coordinate system \050user space\051.  Although it may)123 W
22199 46890 MT
(be more convenient)
139 W( to express coordinates in the window)138 W
22199 48087 MT
(coordinate system, this makes your)
9 W( code resolution depend-)10 W
22199 49284 MT
(ent. Your)
344 W( application will run more efficiently if you com-)34 W
22199 50481 MT
(pute the coordinate)
6 W( conversions to and from user space in C)7 W
22199 51678 MT
(code, rather than letting the interpreter do it.)SH
/Symbol SF
21418 53474 MT
(\267)SH
/Times-Roman SF
22199 XM
(Think in terms of color.  Avoid programming to the)
46 W( lowest)45 W
22199 54671 MT
(common denominator \050low-resolution monochrome\051.)
135 W( The)546 W
22199 55868 MT
(imaging model will always give the best)
31 W( rendering possible)30 W
22199 57065 MT
(for a device, so use colors even)
217 W( if you expect that your)218 W
22199 58262 MT
(application may be run on monochrome or gray-scale)407 W
8 /Helvetica AF
35800 63450 MT
(7 PROGRAMMING)
327 W( TIPS)SH
10 SS 
47485 XM
(37)SH
ES
%%Page: 38 40 
BS
0 SI
11 /Times-Roman AF
21299 6155 MT
(devices. Avoid)
295 W( using)11 W
/Times-Bold SF
31148 XM
(setgray)SH
/Times-Roman SF
34854 XM
(unless you really want black,)11 W
21299 7352 MT
(white, or a gray level.  Use)57 W
/Times-Bold SF
33822 XM
(setrgbcolor)SH
/Times-Roman SF
39467 XM
(for all other cases.)56 W
21299 8549 MT
(The imaging model will use a gray level or halftone pattern)25 W
21299 9746 MT
(if the device does not support color, so objects of)
71 W( different)70 W
21299 10943 MT
(colors will be distinguishable from one another.)SH
/Symbol SF
20518 12739 MT
(\267)SH
/Times-Roman SF
21299 XM
(Don't use)226 W
/Times-Bold SF
26333 XM
(setlinewidth)SH
/Times-Roman SF
32518 XM
(with a width of zero to)
226 W( get thin)227 W
21299 13936 MT
(lines. On)
609 W( high-resolution devices, the lines will)
167 W( be prac-)166 W
21299 15133 MT
(tically invisible.  To get)
73 W( lines narrower than one point, use)74 W
21299 16330 MT
(fractions of 1 such as 0.3 or 0.25.)SH
10 /Helvetica AF
4500 63450 MT
(38)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 39 41 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(8 EXAMPLE)
491 W( APPLICATION PROGRAM)SH
11 /Times-Roman AF
19791 8826 MT
(This section provides a simple example of)
128 W( how to use the Dis-)127 W
19799 10123 MT
(play PostScript system through the Client Library. The example:)SH
/Symbol SF
21418 12400 MT
(\267)SH
/Times-Roman SF
22199 XM
(Establishes communication with an X11 server.)SH
/Symbol SF
21418 14196 MT
(\267)SH
/Times-Roman SF
22199 XM
(Creates a window and a context.)SH
/Symbol SF
21418 15992 MT
(\267)SH
/Times-Roman SF
22199 XM
(Draws an ochre rectangle in the window.)SH
/Symbol SF
21418 17788 MT
(\267)SH
/Times-Roman SF
22199 XM
(Waits for a mouse-button click.)SH
/Symbol SF
21418 19584 MT
(\267)SH
/Times-Roman SF
22199 XM
(Terminates when the button is pressed.)SH
19791 21779 MT
(To use the PostScript imaging model, an application)
419 W( must)420 W
19799 23076 MT
(describe its graphical operations in the PostScript)
361 W( language.)360 W
19799 24373 MT
(Therefore an application using the Display PostScript)
12 W( system is a)13 W
19799 25670 MT
(combination of C code and PostScript language code.)SH
19791 27865 MT
(The)SH
/Times-Italic SF
21835 XM
(pswrap)SH
/Times-Roman SF
25409 XM
(program generates a C code file and a C header file)59 W
19799 29162 MT
(that defines the interface to the procedures)
91 W( in the code file. The)92 W
19799 30459 MT
(application source code and the)67 W
/Times-Italic SF
34275 XM
(pswrap)SH
/Times-Roman SF
37857 XM
(output file are compiled)67 W
19799 31756 MT
(and linked together with the program libraries of)
311 W( the Client)312 W
19799 33053 MT
(Library to form the)
78 W( executable application program. Figure 2 il-)77 W
19799 34350 MT
(lustrates the complete process.)SH
8 /Helvetica AF
30338 63450 MT
(8 EXAMPLE)
327 W( APPLICATION PROGRAM)SH
10 SS 
47485 XM
(39)SH
ES
%%Page: 40 42 
BS
0 SI
10 /Helvetica-Bold AF
4500 6129 MT
(Figure 2)SH
/Helvetica-Oblique SF
8752 XM
(Creating an Application)SH
43197 50 4500 8822 UL
1 SS 
25200 4500 34063 PB %!
% Copyright (C) 1987 Adobe Systems Incorporated.
% All Rights Reserved.
% Adobe Illustrator is a trademark of Adobe Systems Incorporated.
/Adobe_Illustrator_1.1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
% graphic state operators
/_K {3 index add neg dup 0 lt {pop 0} if 3 1 roll} bdef
/_k /setcmybcolor where 
{/setcmybcolor get} {{1 sub 4 1 roll _K _K _K setrgbcolor pop} bind} ifelse def
/g {/_b xdef /p {_b setgray} def} bdef
/G {/_B xdef /P {_B setgray} def} bdef
/k {/_b xdef /_y xdef /_m xdef /_c xdef /p {_c _m _y _b _k} def} bdef
/K {/_B xdef /_Y xdef /_M xdef /_C xdef /P {_C _M _Y _B _k} def} bdef
/d /setdash ldef
/_i currentflat def
/i {dup 0 eq {pop _i} if setflat} bdef
/j /setlinejoin ldef
/J /setlinecap ldef
/M /setmiterlimit ldef
/w /setlinewidth ldef
% path construction operators
/_R {.25 sub round .25 add} bdef
/_r {transform _R exch _R exch itransform} bdef
/c {_r curveto} bdef
/C /c ldef
/v {currentpoint 6 2 roll _r curveto} bdef
/V /v ldef
/y {_r 2 copy curveto} bdef
/Y /y ldef
/l {_r lineto} bdef
/L /l ldef
/m {_r moveto} bdef
% error operators
/_e [] def
/_E {_e length 0 ne {gsave 0 g 0 G 0 i 0 J 0 j 1 w 10 M [] 0 d
/Courier 20 0 0 1 z [0.966 0.259 -0.259 0.966
_e 0 get _e 2 get add 2 div _e 1 get _e 3 get add 2 div] e _f t T grestore} if} bdef
/_fill {{fill} stopped
{/_e [pathbbox] def /_f (ERROR: can't fill, increase flatness) def n _E} if} bdef
/_stroke {{stroke} stopped
{/_e [pathbbox] def /_f (ERROR: can't stroke, increase flatness) def n _E} if} bdef
% path painting operators
/n /newpath ldef
/N /n ldef
/F {p _fill} bdef
/f {closepath F} bdef
/S {P _stroke} bdef
/s {closepath S} bdef
/B {gsave F grestore S} bdef
/b {closepath B} bdef
% text block construction and painting operators
/_s /ashow ldef
/_S {(?) exch {2 copy 0 exch put pop dup false charpath currentpoint _g setmatrix
_stroke _G setmatrix moveto 3 copy pop rmoveto} forall pop pop pop n} bdef
/_A {_a moveto _t exch 0 exch} bdef
/_L {0 _l neg translate _G currentmatrix pop} bdef
/_w {dup stringwidth exch 3 -1 roll length 1 sub _t mul add exch} bdef
/_z [{0 0} bind {dup _w exch neg 2 div exch neg 2 div} bind {dup _w exch neg exch neg} bind] def
/z {_z exch get /_a xdef /_t xdef /_l xdef exch findfont exch scalefont setfont} bdef
/_g matrix def
/_G matrix def
/_D {_g currentmatrix pop gsave concat _G currentmatrix pop} bdef
/e {_D p /t {_A _s _L} def} bdef
/r {_D P /t {_A _S _L} def} bdef
/a {_D /t {dup p _A _s P _A _S _L} def} bdef
/o {_D /t {pop _L} def} bdef
/T {grestore} bdef
% group construction operators
/u {} bdef
/U {} bdef
% font construction operators
/Z {findfont begin currentdict dup length dict begin
{1 index /FID ne {def} {pop pop} ifelse} forall /FontName exch def dup length 0 ne
{/Encoding Encoding 256 array copy def 0 exch {dup type /nametype eq
{Encoding 2 index 2 index put pop 1 add} {exch pop} ifelse} forall} if pop
currentdict dup end end /FontName get exch definefont pop} bdef
end
Adobe_Illustrator_1.1 begin
n
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/.notdef/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/.notdef/.notdef/.notdef/yen/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/.notdef
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
]/_Times-Roman/Times-Roman Z
.6 .6 scale
u
0 g
0 G
0 i
0 J
0 j
1 w
10 M
[]0 d
348.497 360 m
348.497 398 L
250.497 398 L
250.497 360 L
348.497 360 L
s
299.497 379 m
S
U
u
167 230 m
167 268 L
69 268 L
69 230 L
167 230 L
s
118 249 m
S
U
u
286 230 m
286 268 L
188 268 L
188 230 L
286 230 L
s
237 249 m
S
U
u
406 230 m
406 268 L
308 268 L
308 230 L
406 230 L
s
357 249 m
S
U
u
298.497 338.628 m
325.833 338.628 347.995 328.497 347.995 316 c
347.995 303.504 325.833 293.373 298.497 293.373 c
271.161 293.373 249 303.504 249 316 c
249 328.497 271.161 338.628 298.497 338.628 c
s
298.497 316 m
S
U
237 268 m
298.497 293.373 l
357 268 l
S
u
237 208.527 m
273.708 208.527 303.468 193.964 303.468 176 c
303.468 158.037 273.708 143.474 237 143.474 c
200.291 143.474 170.532 158.037 170.532 176 c
170.532 193.964 200.291 208.527 237 208.527 c
s
237 176 m
S
U
117 230 m
211 206 l
237 230 l
S
357 230 m
266 205 l
S
298.497 359 m
298.497 338.628 l
S
u
529 230 m
529 268 L
431 268 L
431 230 L
529 230 L
s
480 249 m
S
U
u
359 137.527 m
395.708 137.527 425.468 122.964 425.468 105 c
425.468 87.037 395.708 72.474 359 72.474 c
322.291 72.474 292.532 87.037 292.532 105 c
292.532 122.964 322.291 137.527 359 137.527 c
s
359 105 m
S
U
237 143.474 m
320 130 l
S
397 131 m
479 230 l
S
357 48 m
357 72.474 l
S
u
406 9 m
406 47 L
308 47 L
308 9 L
406 9 L
s
357 28 m
S
U
/_Times-Roman 12 12 0 1 z
[1 0 0 1 357 36]e
(Example)t
(Application)t
(Program)t
T
[1 0 0 1 358 102]e
(Linker)t
T
[1 0 0 1 237 176]e
(C compiler)t
T
[1 0 0 1 479 245]e
(DPS)t
(Client Library)t
T
[1 0 0 1 356 245]e
(examplewraps.c)t
T
[1 0 0 1 237 245]e
(examplewraps.h)t
T
[1 0 0 1 118 245]e
(example.c)t
T
[1 0 0 1 298.497 316]e
(pswrap)t
(translator)t
T
[1 0 0 1 299.497 379]e
(examplewraps.psw)t
T
_E end
 PE 43197 50 4500 36818 UL
11 /Helvetica AF
16169 39815 MT
(8.1)SH
18899 XM
(EXAMPLE C CODE)SH
/Times-Roman SF
18891 42010 MT
(The following code)
110 W( is used in conjunction with the wrap in the)111 W
18899 43307 MT
(next section. See the description that follows.)SH
43197 50 4500 44703 UL
9 /Helvetica AF
5700 46456 MT
(/*)SH
6276 47554 MT
(example.c - simple X Window System application. Uses Display Postscript)SH
6276 48652 MT
(to draw an ochre box and uses X primitives to wait for a mouse click before)SH
6276 49750 MT
(terminating.)SH
5700 50848 MT
(*/)SH
5700 52602 MT
(#include <stdio.h>)
SH( /*)
3744 W( Standard C library I/O routines */)SH
5700 53700 MT
(#include <string.h>)
SH( /*)
3456 W( Standard C library string routines */)SH
5700 54798 MT
(#include <X11/X.h>)
SH( /*)
3744 W( X definitions */)SH
5700 55896 MT
(#include <X11/Xlib.h>)
SH( /*)
2880 W( Interface to X library */)SH
5700 56994 MT
(#include <X11/Intrinsic.h>)
SH( /*)
1440 W( X toolkit definitions */)SH
5700 58092 MT
(#include "psops.h")
SH( /*)
3744 W( Interface to PostScript single-op wraps */)SH
10 SS 
4500 63450 MT
(40)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 41 43 
BS
0 SI
9 /Helvetica AF
6600 6056 MT
(#include "dpsXclient.h")
SH( /*)
2304 W( Interface to the DPS Client Library */)SH
6600 7154 MT
(#include "examplewraps.h")
SH( /*)
1728 W( Interface to user-defined "wrap" procedures */)SH
6600 8908 MT
(/* Window geometry definitions */)SH
6600 10006 MT
(#define XWINDOW_X_ORIGIN)
SH( 100)1728 W
6600 11104 MT
(#define XWINDOW_Y_ORIGIN)
SH( 100)1728 W
6600 12202 MT
(#define XWINDOW_WIDTH)
SH( 500)2592 W
6600 13300 MT
(#define XWINDOW_HEIGHT)
SH( 500)2304 W
6600 15054 MT
(void main\050argc, argv\051)SH
7176 16152 MT
(int argc;)576 W
7176 17250 MT
(char *argv[];)288 W
6600 18348 MT
({)SH
7176 19446 MT
(Display *dpy;)
SH( /*)
1152 W( X display structure */)SH
7176 20544 MT
(int screen;)
SH( /*)
864 W( screen on display */)SH
7176 21642 MT
(DPSContext ctxt;)
SH( /*)
864 W( DPS drawing context */)SH
7176 22740 MT
(DPSContext txtCtxt;)
SH( /*)
864 W( DPS text context for debugging */)SH
7176 23838 MT
(Window xWindow;)
SH( /*)
864 W( window where drawing occurs */)SH
7176 24936 MT
(int blackPixel, whitePixel;)SH
7176 26034 MT
(int debug = { FALSE };)SH
7176 27132 MT
(GC gc;)SH
7176 28230 MT
(XSetWindowAttributes attributes;)SH
7176 29328 MT
(unsigned long mask;)SH
7176 30426 MT
(DPSSpace space;)SH
7176 31524 MT
(float x, y, width, height;)SH
7176 33278 MT
(/* Connect to the window server by opening the display. Most of command)SH
8040 34376 MT
(line is parsed by XtOpenDisplay, leaving any options not recognized by)SH
8040 35474 MT
(the X toolkit: look for local -debug switch */)SH
7176 37228 MT
(XtToolkitInitialize\050\051;)SH
7176 38326 MT
(dpy = XtOpenDisplay\050NULL, \050String\051 NULL, "example", "example",)SH
7752 39424 MT
(\050XrmOptionDescRec *\051 NULL, 0, &argc, argv\051;)SH
7176 40522 MT
(screen = DefaultScreen\050dpy\051;)SH
7176 41620 MT
(if \050argc == 2\051)SH
7752 42718 MT
(if \050strcmp\050argv[1], "-debug"\051 == 0\051)SH
8328 43816 MT
(debug = TRUE;)SH
7752 44914 MT
(else {)SH
8328 46012 MT
(printf\050"Usage: example [-display xx:0] [-sync] [-debug]\134n"\051;)SH
8328 47110 MT
(exit\0501\051;)SH
8328 48208 MT
(})SH
7176 49962 MT
(/* Create a window to draw in: register interest in mouse button events. */)SH
7176 51716 MT
(blackPixel = BlackPixel \050dpy, screen\051;)SH
7176 52814 MT
(whitePixel = WhitePixel \050dpy, screen\051;)SH
7176 53912 MT
(attributes.background_pixel = whitePixel;)SH
7176 55010 MT
(attributes.border_pixel = blackPixel;)SH
7176 56108 MT
(attributes.bit_gravity = SouthWestGravity;)SH
7176 57206 MT
(attributes.event_mask = ButtonPressMask | ButtonReleaseMask;)SH
7176 58304 MT
(mask = CWBackPixel | CWBorderPixel | CWBitGravity | CWEventMask;)SH
8 SS 
30338 63450 MT
(8 EXAMPLE)
327 W( APPLICATION PROGRAM)SH
10 SS 
47485 XM
(41)SH
ES
%%Page: 42 44 
BS
0 SI
9 /Helvetica AF
6276 6056 MT
(xWindow = XCreateWindow\050dpy, DefaultRootWindow\050dpy\051,)SH
6852 7154 MT
(XWINDOW_X_ORIGIN, XWINDOW_Y_ORIGIN, XWINDOW_WIDTH, XWINDOW_HEIGHT,)SH
6852 8252 MT
(1, CopyFromParent, InputOutput, CopyFromParent, mask, &attributes\051;)SH
6276 10006 MT
(XMapWindow\050dpy, xWindow\051;)SH
6276 11760 MT
(gc = XCreateGC\050dpy, RootWindow\050dpy, screen\051, 0, NULL\051;)SH
6276 12858 MT
(XSetForeground\050dpy, gc, blackPixel\051;)SH
6276 13956 MT
(XSetBackground\050dpy, gc, whitePixel\051;)SH
6276 15710 MT
(/* Create a DPS context to draw in the window we just created. If the)SH
7140 16808 MT
(user has asked for debugging, create a text context chained to the)SH
7140 17906 MT
('drawing' context. */)SH
6276 19660 MT
(ctxt = XDPSCreateSimpleContext\050dpy, xWindow, gc, 0, XWINDOW_HEIGHT,)SH
6852 20758 MT
(DPSDefaultTextBackstop, DPSDefaultErrorProc, NULL\051;)SH
6276 21856 MT
(if \050ctxt == NULL\051 {)SH
6852 22954 MT
(fprintf\050stderr, "Error attempting to create DPS context\134n"\051;)SH
6852 24052 MT
(exit\0501\051;)SH
6852 25150 MT
(})SH
6276 26904 MT
(DPSSetContext\050ctxt\051;)SH
6276 28658 MT
(if \050debug\051 {)SH
6852 29756 MT
(txtCtxt = DPSCreateTextContext\050DPSDefaultTextBackstop, DPSDefaultErrorProc\051;)SH
6852 30854 MT
(DPSChainContext\050ctxt, txtCtxt\051;)SH
6852 31952 MT
(})SH
6276 33706 MT
(/* Convert the X Window System coordinates at the lower right corner)SH
7140 34804 MT
(of the window to get  the width and height in user space. */)SH
6276 36558 MT
(PSitransform\050)SH
6852 37656 MT
(\050float\051 XWINDOW_WIDTH,)SH
6852 38754 MT
(\050float\051 -XWINDOW_HEIGHT,)SH
6852 39852 MT
(&width,)SH
6852 40950 MT
(&height\051;)SH
6276 42704 MT
(/* Locate the box in the middle of the window. */)SH
6276 44458 MT
(x = width / 4.0;)SH
6276 45556 MT
(y = height / 4.0;)SH
6276 47310 MT
(/* Paint an ochre box. */)SH
6276 49064 MT
(PSWDrawBox\0500.77, 0.58, 0.02, x, y, width / 2.0, height / 2.0\051;)SH
6276 50818 MT
(/* Wait for a mouse click on any button then terminate */)SH
6276 52572 MT
(while \050NextEvent\050\051 != ButtonPress\051;)SH
6276 53670 MT
(while \050NextEvent\050\051 != ButtonRelease\051;)SH
6276 55424 MT
(space = DPSSpaceFromContext\050ctxt\051;)SH
6276 56522 MT
(DPSDestroySpace\050space\051;)SH
6276 57620 MT
(exit\0500\051;)SH
10 SS 
4500 63450 MT
(42)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 43 45 
BS
0 SI
9 /Helvetica AF
6600 6056 MT
(} /* main */)SH
6600 7810 MT
(int NextEvent\050\051)SH
6600 8908 MT
({)SH
7176 10006 MT
(XEvent event;)3168 W
7176 11760 MT
(XtNextEvent\050&event\051;)SH
7176 12858 MT
(return\050event.type\051;)SH
6600 13956 MT
(})SH
43197 50 5400 15352 UL
11 SS 
17069 18349 MT
(8.2)SH
19799 XM
(EXAMPLE WRAP)SH
/Times-Roman SF
19791 20544 MT
(This wrap provides the)
109 W( PostScript language routine used by the)108 W
19799 21841 MT
(example application. It)
55 W( is shown as)56 W
/Times-Italic SF
35866 XM
(examplewraps.psw)SH
/Times-Roman SF
44538 XM
(in Figure)56 W
19799 23138 MT
(2 on page 40.)SH
43197 50 5400 24534 UL
9 /Helvetica AF
6600 26287 MT
(/* wrap for example application */)SH
6600 28041 MT
(defineps PSWDrawBox\050float r, g, b, x, y, width, height\051)SH
7752 29139 MT
(gsave)SH
7752 30237 MT
(r g b setrgbcolor)SH
7752 31335 MT
(x y width height rectfill)SH
7752 32433 MT
(grestore)SH
6600 33531 MT
(endps)SH
43197 50 5400 34927 UL
11 SS 
17069 37924 MT
(8.3)SH
19799 XM
(DESCRIPTION OF THE EXAMPLE APPLICATION)SH
/Times-Roman SF
19791 40119 MT
(The example application demonstrates the)
96 W( use of Client Library)95 W
19799 41416 MT
(functions and custom wraps in the X11 environment.)
70 W( The appli-)71 W
19799 42713 MT
(cation is)
51 W( simple: it draws a rectangle in the middle of a window,)50 W
19799 44010 MT
(waits for a mouse button click in the window, and terminates.)SH
19791 46205 MT
(The program starts by initializing the toolkit and)
135 W( connecting to)136 W
19799 47502 MT
(the display)
221 W( device. Command-line options can include all op-)220 W
19799 48799 MT
(tions recognized by)
69 W( the X Intrinsics resource manager plus a lo-)70 W
19799 50096 MT
(cal `)197 W
10 /Symbol AF
(-)SH
/Helvetica SF
(debug)SH
11 /Times-Roman AF
(' option, which)
197 W( demonstrates the use of a chained)196 W
19799 51393 MT
(text context for debugging.)SH
19791 53588 MT
(The program creates a window that)
251 W( will contain the drawing)252 W
19799 54885 MT
(produced by the)
187 W( PostScript operators. The window's attributes)186 W
19799 56182 MT
(are set to indicate interest in mouse button events in that)
160 W( win-)161 W
19799 57479 MT
(dow.)SH
8 /Helvetica AF
30338 63450 MT
(8 EXAMPLE)
327 W( APPLICATION PROGRAM)SH
10 SS 
47485 XM
(43)SH
ES
%%Page: 44 46 
BS
0 SI
11 /Times-Roman AF
18891 6155 MT
(The program creates)
40 W( a context with `)39 W
10 /Helvetica AF
(xWindow)SH
11 /Times-Roman AF
(' as its `)39 W
10 /Helvetica AF
(drawable)SH
11 /Times-Roman AF
('.)SH
18899 7452 MT
(The system-specific default handlers)281 W
/Times-Italic SF
36455 XM
(DPSDefaultTextBackstop)SH
/Times-Roman SF
18899 8749 MT
(and)SH
/Times-Italic SF
22435 XM
(DPSDefaultErrorProc)SH
/Times-Roman SF
34343 XM
(are specified)
1673 W( in the)1672 W
/Times-Italic SF
18899 10046 MT
(XDPSCreateSimpleContext)SH
/Times-Roman SF
31322 XM
(call. These handlers)
50 W( are adequate for)51 W
18899 11343 MT
(this application.)SH
18891 13538 MT
(If the `)102 W
10 /Symbol AF
(-)SH
/Helvetica SF
(debug)SH
11 /Times-Roman AF
(' option was selected, the)
102 W( program creates a con-)101 W
18899 14835 MT
(text that converts)
105 W( binary-encoded PostScript language programs)106 W
18899 16132 MT
(into readable text.)
50 W( The text is passed to `)49 W
10 /Helvetica AF
(PrintProc)SH
11 /Times-Roman AF
('. This context)49 W
18899 17429 MT
(is then chained to the drawing context.)
207 W( The result is that any)208 W
18899 18726 MT
(code sent to the drawing)
206 W( context will be also sent to the text)205 W
18899 20023 MT
(context and displayed on)35 W
/Times-Italic SF
30281 XM
(stdout)SH
/Times-Roman SF
(. This)
35 W( is a common technique for)36 W
18899 21320 MT
(debugging wrapped procedures.)SH
18891 23515 MT
(Now that the application is completely initialized, PostScript)
7 W( lan-)6 W
18899 24812 MT
(guage code can)
13 W( be executed to draw a rectangle into the window.)14 W
18899 26109 MT
(This is done)
217 W( by using both a single-operator procedure and a)216 W
18899 27406 MT
(customized wrapped procedure.)SH
18891 29601 MT
(The single-operator)
525 W( procedure)526 W
/Times-Italic SF
34057 XM
(PSitransform)SH
/Times-Roman SF
40726 XM
(determines the)526 W
18899 30898 MT
(bounds of the window in terms of)
216 W( PostScript user space; this)215 W
18899 32195 MT
(allows the program to scale the size)
430 W( of the rectangle ap-)431 W
18899 33492 MT
(propriately.)SH
18891 35687 MT
(The wrap procedure)227 W
/Times-Italic SF
28700 XM
(PSWDrawBox)SH
/Times-Roman SF
35555 XM
(takes red, green, and blue)226 W
18899 36984 MT
(levels to specify the color of the rectangle. It also takes)38 W
/Times-Italic SF
43813 XM
(x,y)SH
/Times-Roman SF
45377 XM
(coor-)SH
18899 38281 MT
(dinates for the bottom left corner of the rectangle,)
147 W( and it takes)146 W
18899 39578 MT
(the rectangle's width and)
72 W( height. Simple arithmetic computation)73 W
18899 40875 MT
(is most efficiently done in)
47 W( C code by the application, rather than)46 W
18899 42172 MT
(in PostScript language code by the interpreter.)SH
/Times-Italic SF
18891 44367 MT
(PSWDrawBox)SH
/Times-Roman SF
25630 XM
(is called to draw a colored square.)
110 W( If the display)111 W
18899 45664 MT
(supports color, you'll see a square painted in ochre)
25 W( \050a dark shade)24 W
18899 46961 MT
(of orange\051. The values 0.77)
68 W( for red, 0.58 for green, and 0.02 for)69 W
18899 48258 MT
(blue approximate the color ochre. If the display)
186 W( supports only)185 W
18899 49555 MT
(gray scale or monochrome, you'll see)
109 W( a square painted in some)110 W
18899 50852 MT
(shade of gray.)SH
18891 53047 MT
(The program now waits for events. Since the only events)
98 W( regis-)97 W
18899 54344 MT
(tered in)
212 W( this window are mouse-button events, events such as)213 W
18899 55641 MT
(window movement and)
224 W( resizing are not directed to the appli-)223 W
18899 56938 MT
(cation. When a button-press event is followed by a)
335 W( button-)336 W
18899 58235 MT
(release event, the program)
80 W( destroys the space used by the draw-)79 W
10 /Helvetica AF
4500 63450 MT
(44)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 45 47 
BS
0 SI
11 /Times-Roman AF
19799 6155 MT
(ing context. This destroys the context and its)
127 W( chained text con-)128 W
19799 7452 MT
(text as well. The program then terminates normally.)SH
8 /Helvetica AF
30338 63450 MT
(8 EXAMPLE)
327 W( APPLICATION PROGRAM)SH
10 SS 
47485 XM
(45)SH
ES
%%Page: 46 48 
BS
0 SI
12 /Helvetica AF
11692 6275 MT
(9 THE)491 W
/Helvetica-Oblique SF
16017 XM
(DPSCLIENT.H)SH
/Helvetica SF
24333 XM
(HEADER FILE)SH
11 /Times-Roman AF
18891 8826 MT
(This section documents the)22 W
/Times-Italic SF
31260 XM
(dpsclient.h)SH
/Times-Roman SF
36353 XM
(procedures that constitute)21 W
18899 10123 MT
(the core of the Client Library. They are system independent.)SH
/Helvetica SF
16169 13320 MT
(9.1)SH
/Helvetica-Oblique SF
18899 XM
(DPSCLIENT.H)SH
/Helvetica SF
26525 XM
(DATA STRUCTURES)SH
/Times-Roman SF
18891 15515 MT
(This section documents:)SH
/Symbol SF
20518 17792 MT
(\267)SH
/Times-Roman SF
21299 XM
(The standard context record.)SH
/Symbol SF
20518 19588 MT
(\267)SH
/Times-Roman SF
21299 XM
(The standard error codes.)SH
18891 21783 MT
(The context record, `)209 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(', is shared by)
209 W( the appli-)210 W
18899 23080 MT
(cation and the PostScript interpreter. Except for its `)146 W
10 /Helvetica AF
(priv)SH
11 /Times-Roman AF
(' field,)146 W
18899 24377 MT
(this data structure should not be altered directly. The)60 W
/Times-Italic SF
42900 XM
(dpsclient.h)SH
/Times-Roman SF
18899 25674 MT
(header file provides procedures to alter it.)SH
18891 27869 MT
(When calling Client Library)
299 W( procedures, refer to the context)298 W
18899 29166 MT
(record by its handle, `)SH
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
('.)SH
10 /Helvetica-Bold AF
9300 32489 MT
(DPSContext)SH
9 /Helvetica AF
18899 XM
(/* handle for context record */)SH
11 /Times-Roman AF
18899 34584 MT
(See `)SH
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
('.)SH
10 /Helvetica AF
4500 63450 MT
(46)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 47 49 
BS
0 SI
10 /Helvetica-Bold AF
10200 6129 MT
(DPSContextRec)SH
9 /Helvetica AF
19799 XM
(typedef struct _t_DPSContextRec {)SH
20375 7227 MT
(char *priv;)SH
20375 8325 MT
(DPSSpace space;)SH
20375 9423 MT
(DPSProgramEncoding programEncoding;)SH
20375 10521 MT
(DPSNameEncoding nameEncoding;)SH
20375 11619 MT
(DPSProcs procs;)SH
20375 12717 MT
(void \050*textProc\051\050\051;)SH
20375 13815 MT
(void \050*errorProc\051\050\051;)SH
20375 14913 MT
(DPSResults resultTable;)SH
20375 16011 MT
(unsigned int resultTableLength;)SH
20375 17109 MT
(struct _t_DPSContextRec *chainParent, *chainChild;)SH
20375 18207 MT
(} DPSContextRec, *DPSContext;)SH
11 /Times-Roman AF
19799 20302 MT
(defines the data structure pointed to by `)SH
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
('.)SH
28798 50 19799 21998 LH BX1
10 /Helvetica-Bold AF
19799 23551 MT
(Note:)SH
11 /Times-Roman AF
23109 XM
(This record is used by)144 W
/Times-Italic SF
33818 XM
(dpsclient.h)SH
/Times-Roman SF
39034 XM
(procedures but is ac-)144 W
19799 24848 MT
(tually defined in the)SH
/Times-Italic SF
28903 XM
(dpsfriends.h)SH
/Times-Roman SF
34587 XM
(header file.)SH
28798 50 19799 25887 LH BX1
19799 27982 MT
(`)SH
10 /Helvetica AF
(priv)SH
11 /Times-Roman AF
(' is provided for)
95 W( use by application code. It is initialized to)94 W
19799 29279 MT
(`)SH
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(' and is)
137 W( not touched thereafter by the Client Library im-)138 W
19799 30576 MT
(plementation.)SH
28798 50 19799 32272 LH BX1
10 /Helvetica-Bold AF
19799 33825 MT
(Warning:)SH
11 /Times-Roman AF
24887 XM
(Although it is possible to read all)
196 W( the fields of the)195 W
19799 35122 MT
(`)SH
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' record directly,)
167 W( they should not be modified)168 W
19799 36419 MT
(directly except for `)132 W
10 /Helvetica AF
(priv)SH
11 /Times-Roman AF
('. Data)
539 W( structures)
132 W( internal to the Client)131 W
19799 37716 MT
(Library depend on the values in these fields and must be notified)27 W
19799 39013 MT
(when they change.  Call the procedures provided)
177 W( for this pur-)176 W
19799 40310 MT
(pose, such as)SH
/Times-Italic SF
25847 XM
(DPSSetTextProc)SH
/Times-Roman SF
(.)SH
28798 50 19799 41349 LH BX1
19799 43444 MT
(`)SH
10 /Helvetica AF
(space)SH
11 /Times-Roman AF
(' identifies the space in which the context executes.)SH
19799 45539 MT
(`)SH
10 /Helvetica AF
(programEncoding)SH
11 /Times-Roman AF
(' and)
153 W( `)154 W
10 /Helvetica AF
(nameEncoding)SH
11 /Times-Roman AF
(' describe the encoding)154 W
19799 46836 MT
(of the PostScript language)
238 W( that is sent to the interpreter. The)237 W
19799 48133 MT
(values in these fields are established when the context is)
30 W( created.)31 W
19799 49430 MT
(Whether or not the encoding fields can)
34 W( be changed after creation)33 W
19799 50727 MT
(is system specific.)SH
19799 52822 MT
(`)SH
10 /Helvetica AF
(procs)SH
11 /Times-Roman AF
(' points to a `)48 W
10 /Helvetica AF
(struct)SH
11 /Times-Roman AF
(' containing procedures)
48 W( that implement)49 W
19799 54119 MT
(the basic context operations, including writing, flushing, inter-)186 W
19799 55416 MT
(rupting, and so on.)SH
19799 57511 MT
(The Client Library implementation calls the)
417 W( `)418 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' and)418 W
8 /Helvetica AF
31370 63450 MT
(9 THE)327 W
/Helvetica-Oblique SF
34255 XM
(DPSCLIENT.H)SH
/Helvetica SF
39803 XM
(HEADER FILE)SH
10 SS 
47485 XM
(47)SH
ES
%%Page: 48 50 
BS
0 SI
11 /Times-Roman AF
18899 6155 MT
(`)SH
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' procedures to handle interpreter-generated ASCII)364 W
18899 7452 MT
(text and errors.)SH
18899 9547 MT
(`)SH
10 /Helvetica AF
(resultTableLength)SH
11 /Times-Roman AF
(' and `)208 W
10 /Helvetica AF
(resultTable)SH
11 /Times-Roman AF
(' define the)
208 W( number, type,)209 W
18899 10844 MT
(and location)
133 W( of results expected by a wrap. They are set up by)132 W
18899 12141 MT
(the wrap procedure before any values are)
592 W( returned; see)593 W
/Times-Italic SF
18899 13438 MT
(DPSSetResultTable)SH
/Times-Roman SF
27790 XM
(in Section 11.7.)SH
18899 15533 MT
(`)SH
10 /Helvetica AF
(chainParent)SH
11 /Times-Roman AF
(' and `)207 W
10 /Helvetica AF
(chainChild)SH
11 /Times-Roman AF
(' are used for chaining)
207 W( contexts.)206 W
18899 16830 MT
(`)SH
10 /Helvetica AF
(chainChild)SH
11 /Times-Roman AF
(' is a pointer to the context that automatically)473 W
18899 18127 MT
(receives code and)
199 W( data sent to the context represented by this)198 W
18899 19424 MT
(`)SH
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
('. `)102 W
10 /Helvetica AF
(chainParent)SH
11 /Times-Roman AF
(' is a pointer to the context)
102 W( that)103 W
18899 20721 MT
(automatically sends code and data to the)
88 W( context represented by)87 W
18899 22018 MT
(this `)43 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
('. See the discussion of)
43 W( chained contexts in)44 W
18899 23315 MT
(Section 6.1 for more information.)SH
10 /Helvetica-Bold AF
9300 26638 MT
(DPSErrorCode)SH
9 /Helvetica AF
18899 XM
(typedef int DPSErrorCode;)SH
11 /Times-Roman AF
18899 28733 MT
(defines the type of error code used by the)
125 W( Client Library. Here)124 W
18899 30030 MT
(are the standard error codes:)SH
/Symbol SF
20518 32307 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(' identifies standard PostScript interpreter er-)229 W
21299 33504 MT
(rors.)SH
/Symbol SF
20518 35300 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_nameTooLong)SH
11 /Times-Roman AF
(' flags user)
408 W( names that are too)407 W
21299 36497 MT
(long. 128)
383 W( characters is the)
54 W( maximum length for PostScript)55 W
21299 37694 MT
(language names.)SH
/Symbol SF
20518 39490 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_resultTagCheck)SH
11 /Times-Roman AF
(' flags erroneous result)
48 W( tags, most)47 W
21299 40687 MT
(likely due to erroneous explicit use of the)329 W
/Times-Bold SF
42443 XM
(printobject)SH
/Times-Roman SF
21299 41884 MT
(operator.)SH
/Symbol SF
20518 43680 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_resultTypeCheck)SH
11 /Times-Roman AF
(' flags incompatible result types.)SH
/Symbol SF
20518 45476 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_invalidContext)SH
11 /Times-Roman AF
(' flags an invalid `)76 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(' ar-)75 W
21299 46673 MT
(gument. An)
403 W( attempt to send PostScript language)
64 W( code to a)65 W
21299 47870 MT
(context that has terminated is the most likely cause)
92 W( of this)91 W
21299 49067 MT
(error.)SH
18899 51162 MT
(For more information, see)SH
/Times-Italic SF
30660 XM
(DPSErrorProc)SH
/Times-Roman SF
37595 XM
(in Section 9.2.)SH
/Helvetica SF
16169 54359 MT
(9.2)SH
/Helvetica-Oblique SF
18899 XM
(DPSCLIENT.H)SH
/Helvetica SF
26525 XM
(PROCEDURES)SH
/Times-Roman SF
18891 56554 MT
(This section contains descriptions)
33 W( of the procedures in the Client)34 W
18899 57851 MT
(Library header file)SH
/Times-Italic SF
27418 XM
(dpsclient.h)SH
/Times-Roman SF
(, listed alphabetically.)SH
10 /Helvetica AF
4500 63450 MT
(48)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 49 51 
BS
0 SI
10 /Helvetica-Bold AF
10200 6129 MT
(DPSChainContext)SH
9 /Helvetica AF
19799 XM
(int DPSChainContext\050parent, child\051;)SH
19799 7227 MT
(DPSContext parent, child;)SH
11 /Times-Roman AF
19799 9322 MT
(links `)69 W
10 /Helvetica AF
(child)SH
11 /Times-Roman AF
(' onto the)
69 W( context chain of `)68 W
10 /Helvetica AF
(parent)SH
11 /Times-Roman AF
('. This is the chain)68 W
19799 10619 MT
(of contexts that automatically receive)
38 W( a copy of any code or data)39 W
19799 11916 MT
(sent to `)SH
10 /Helvetica AF
(parent)SH
11 /Times-Roman AF
('. A context appears on only one such chain.)SH
/Times-Italic SF
19799 14011 MT
(DPSChainContext)SH
/Times-Roman SF
28254 XM
(returns zero)
52 W( if it successfully chains `)51 W
10 /Helvetica AF
(child)SH
11 /Times-Roman AF
(' to)51 W
19799 15308 MT
(`)SH
10 /Helvetica AF
(parent)SH
11 /Times-Roman AF
('. It fails if `)140 W
10 /Helvetica AF
(child)SH
11 /Times-Roman AF
(' is on another context's chain; in that)141 W
19799 16605 MT
(case it returns)SH
/Symbol SF
26182 XM
(-)SH
/Times-Roman SF
(1.)SH
19799 18700 MT
(See Section 6.1 for more information.)SH
10 /Helvetica-Bold AF
10200 22023 MT
(DPSDefaultErrorProc)SH
9 /Helvetica AF
19799 23121 MT
(void DPSDefaultErrorProc\050ctxt, errorCode, arg1, arg2\051;)SH
20375 24219 MT
(DPSContext ctxt;)SH
20375 25317 MT
(DPSErrorCode errorCode;)SH
20375 26415 MT
(long unsigned int arg1, arg2;)SH
11 /Times-Roman AF
19799 28510 MT
(is a sample)553 W
/Times-Italic SF
26621 XM
(DPSErrorProc)SH
/Times-Roman SF
34109 XM
(for handling errors)
553 W( from the)552 W
19799 29807 MT
(PostScript interpreter. See Appendix B for a listing of the)
115 W( code)116 W
19799 31104 MT
(and a description of the procedure.)SH
19799 33199 MT
(The meaning of `)165 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' and `)165 W
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' depend on)
165 W( `)164 W
10 /Helvetica AF
(errorCode)SH
11 /Times-Roman AF
('. See)164 W
/Times-Italic SF
19799 34496 MT
(DPSErrorProc)SH
/Times-Roman SF
(.)SH
10 /Helvetica-Bold AF
10200 37819 MT
(DPSDestroyContext)SH
9 /Helvetica AF
19799 38917 MT
(void DPSDestroyContext\050ctxt\051)SH
19799 40015 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
19799 42110 MT
(destroys the context represented by `)210 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
('. The context is first)210 W
19799 43407 MT
(unchained if it is on a chain.)SH
19799 45502 MT
(What happens to buffered input and output when a)
198 W( context is)197 W
19799 46799 MT
(destroyed is system specific; in the)
87 W( X Window System it is dis-)88 W
19799 48096 MT
(carded.)SH
19799 50191 MT
(Destroying a context does not)
767 W( destroy its space; see)766 W
/Times-Italic SF
19799 51488 MT
(DPSDestroySpace)SH
/Times-Roman SF
(.)SH
8 /Helvetica AF
31370 63450 MT
(9 THE)327 W
/Helvetica-Oblique SF
34255 XM
(DPSCLIENT.H)SH
/Helvetica SF
39803 XM
(HEADER FILE)SH
10 SS 
47485 XM
(49)SH
ES
%%Page: 50 52 
BS
0 SI
10 /Helvetica-Bold AF
9300 6129 MT
(DPSDestroySpace)SH
9 /Helvetica AF
18899 7227 MT
(void DPSDestroySpace\050spc\051)SH
18899 8325 MT
(DPSSpace spc;)SH
11 /Times-Roman AF
18899 10420 MT
(destroys the space represented by `)210 W
10 /Helvetica AF
(spc)SH
11 /Times-Roman AF
('. This is necessary for)211 W
18899 11717 MT
(application termination)
15 W( and clean-up. It also destroys all contexts)14 W
18899 13014 MT
(within `)SH
10 /Helvetica AF
(spc)SH
11 /Times-Roman AF
('.)SH
10 /Helvetica AF
4500 63450 MT
(50)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 51 53 
BS
0 SI
10 /Helvetica-Bold AF
10200 6129 MT
(DPSErrorProc)SH
9 /Helvetica AF
19799 XM
(typedef void \050*DPSErrorProc\051\050/*)SH
20375 7227 MT
(DPSContext ctxt;)SH
20375 8325 MT
(DPSErrorCode errorCode;)SH
20375 9423 MT
(long unsigned int arg1, arg2;*/\051;)SH
11 /Times-Roman AF
19799 11518 MT
(handles errors)
192 W( caused by the context. These can be PostScript)193 W
19799 12815 MT
(language errors reported by the interpreter or errors that)
170 W( occur)169 W
19799 14112 MT
(when the Client Library is called with a context. `)105 W
10 /Helvetica AF
(errorCode)SH
11 /Times-Roman AF
(' is)105 W
19799 15409 MT
(one of the predefined codes that specify)
6 W( the type of error encoun-)5 W
19799 16706 MT
(tered; see `)79 W
10 /Helvetica AF
(DPSErrorCode)SH
11 /Times-Roman AF
(' in Section 9.1)
79 W( for its type definition.)80 W
19799 18003 MT
(`)SH
10 /Helvetica AF
(errorCode)SH
11 /Times-Roman AF
(' determines the interpretation of `)SH
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' and `)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
('.)SH
19799 20098 MT
(The following list shows how `)91 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' and `)91 W
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' are handled for)91 W
19799 21395 MT
(each `)SH
10 /Helvetica AF
(errorCode)SH
11 /Times-Roman AF
(':)SH
19799 23547 MT
(`)SH
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(')SH
26998 XM
(PostScript language)
155 W( error. `)156 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is the address)156 W
26998 24744 MT
(of the binary)
525 W( object sequence sent by the)524 W
/Times-Bold SF
26998 25941 MT
(handleerror)SH
/Times-Roman SF
32969 XM
(operator to report the error. The)
14 W( se-)15 W
26998 27138 MT
(quence has one object, which is)
59 W( an array of four)58 W
26998 28335 MT
(objects. `)80 W
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is the number of bytes in the en-)80 W
26998 29532 MT
(tire binary object sequence.)SH
19799 31328 MT
(`)SH
10 /Helvetica AF
(dps_err_nameTooLong)SH
11 /Times-Roman AF
(')SH
26998 32525 MT
(Error in wrap)
346 W( argument. The PostScript user)347 W
26998 33722 MT
(name and its length are passed as `)266 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' and)266 W
26998 34919 MT
(`)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
('. A name of)
330 W( more than 128 characters)331 W
26998 36116 MT
(causes an error.)SH
19799 37912 MT
(`)SH
10 /Helvetica AF
(dps_err_resultTagCheck)SH
11 /Times-Roman AF
(')SH
26998 39109 MT
(Error in formulation)
76 W( of wrap. The pointer to the)77 W
26998 40306 MT
(binary object sequence and its)
71 W( length are passed)70 W
26998 41503 MT
(as `)122 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' and)
122 W( `)123 W
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
('. There is one object in the)123 W
26998 42700 MT
(sequence.)SH
19799 44496 MT
(`)SH
10 /Helvetica AF
(dps_err_resultTypeCheck)SH
11 /Times-Roman AF
(')SH
26998 45693 MT
(Incompatible result)
213 W( types. A pointer to the bi-)214 W
26998 46890 MT
(nary object is passed as `)SH
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
('; `)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is unused.)SH
19799 48686 MT
(`)SH
10 /Helvetica AF
(dps_err_invalidContext)SH
11 /Times-Roman AF
(')SH
26998 49883 MT
(Stale context handle \050probably terminated\051.)627 W
26998 51080 MT
(`)SH
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is a context identifier; `)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is unused.)SH
8 /Helvetica AF
31370 63450 MT
(9 THE)327 W
/Helvetica-Oblique SF
34255 XM
(DPSCLIENT.H)SH
/Helvetica SF
39803 XM
(HEADER FILE)SH
10 SS 
47485 XM
(51)SH
ES
%%Page: 52 54 
BS
0 SI
10 /Helvetica-Bold AF
9300 6129 MT
(DPSFlushContext)SH
9 /Helvetica AF
18899 XM
(void DPSFlushContext\050ctxt\051)SH
18899 7227 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
18899 9322 MT
(forces any buffered code or data to be sent to `)33 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
('. Some)
33 W( Client)32 W
18899 10619 MT
(Library implementations use buffering to optimize performance.)SH
10 /Helvetica-Bold AF
9300 13942 MT
(DPSGetCurrentContext)SH
9 /Helvetica AF
18899 15040 MT
(DPSContext DPSGetCurrentContext\050\051;)SH
11 /Times-Roman AF
18899 17135 MT
(returns the current context.)SH
10 /Helvetica-Bold AF
9300 20458 MT
(DPSGetCurrentErrorBackstop)SH
9 /Helvetica AF
18899 21556 MT
(DPSErrorProc DPSGetCurrentErrorBackstop\050\051;)SH
11 /Times-Roman AF
18899 23651 MT
(returns the)
1396 W( `)1397 W
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' passed most recently to)1397 W
/Times-Italic SF
18899 24948 MT
(DPSSetErrorBackstop)SH
/Times-Roman SF
(, or `)SH
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(' if none was set.)SH
10 /Helvetica-Bold AF
9300 28271 MT
(DPSGetCurrentTextBackstop)SH
9 /Helvetica AF
18899 29369 MT
(DPSTextProc DPSGetCurrentTextBackstop\050\051;)SH
11 /Times-Roman AF
18899 31464 MT
(returns the `)1480 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' passed most recently to)1480 W
/Times-Italic SF
18899 32761 MT
(DPSSetTextBackstop)SH
/Times-Roman SF
(, or `)SH
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(' if none was set.)SH
10 /Helvetica-Bold AF
9300 36084 MT
(DPSInterruptContext)SH
9 /Helvetica AF
18899 37182 MT
(void DPSInterruptContext\050ctxt\051)SH
18899 38280 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
18899 40375 MT
(notifies the interpreter to interrupt the execution of the context,)118 W
18899 41672 MT
(resulting in the PostScript)
99 W( language)98 W
/Times-Bold SF
35311 XM
(interrupt)SH
/Times-Roman SF
40022 XM
(error. The proce-)98 W
18899 42969 MT
(dure returns immediately after sending the notification.)SH
10 /Helvetica-Bold AF
9300 46292 MT
(DPSPrintf)SH
9 /Helvetica AF
18899 XM
(void DPSPrintf\050ctxt, fmt, [, arg ...]\051;)SH
18899 47390 MT
(DPSContext ctxt;)SH
18899 48488 MT
(char *fmt;)SH
11 /Times-Roman AF
18899 50583 MT
(sends string `)1 W
10 /Helvetica AF
(fmt)SH
11 /Times-Roman AF
(' to `)1 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' with the optional arguments converted,)1 W
18899 51880 MT
(formatted, and logically inserted)
12 W( into the string in a manner iden-)11 W
18899 53177 MT
(tical to the Standard C Library routine)229 W
/Times-Italic SF
37580 XM
(printf)SH
/Times-Roman SF
(. It is useful for)230 W
18899 54474 MT
(sending formatted data or a short)
13 W( PostScript language program to)12 W
18899 55771 MT
(a context.)SH
10 /Helvetica AF
4500 63450 MT
(52)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 53 55 
BS
0 SI
10 /Helvetica-Bold AF
10200 6129 MT
(DPSResetContext)SH
9 /Helvetica AF
19799 XM
(void DPSResetContext\050ctxt\051)SH
19799 7227 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
19799 9322 MT
(resets the context after an error occurs.)
119 W( It ensures that any buf-)120 W
19799 10619 MT
(fered I/O is discarded and that the)
125 W( context is ready to read and)124 W
19799 11916 MT
(execute more input.)29 W
/Times-Italic SF
28866 XM
(DPSResetContext)SH
/Times-Roman SF
36990 XM
(works in conjunction)
29 W( with)30 W
/Times-Bold SF
19799 13213 MT
(resynchandleerror)SH
/Times-Roman SF
(.)SH
10 /Helvetica-Bold AF
10200 16536 MT
(DPSSetContext)SH
9 /Helvetica AF
19799 XM
(void DPSSetContext\050ctxt\051)SH
19799 17634 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
19799 19729 MT
(sets the current context.)
122 W( Call)121 W
/Times-Italic SF
33237 XM
(DPSSetContext)SH
/Times-Roman SF
40415 XM
(before calling any)121 W
19799 21026 MT
(procedures defined in)SH
/Times-Italic SF
29602 XM
(psops.h)SH
/Times-Roman SF
(.)SH
10 /Helvetica-Bold AF
10200 24349 MT
(DPSSetErrorBackstop)SH
9 /Helvetica AF
19799 25447 MT
(void DPSSetErrorBackstop\050errorProc\051)SH
19799 26545 MT
(DPSErrorProc errorProc;)SH
11 /Times-Roman AF
19799 28640 MT
(establishes `)35 W
10 /Helvetica AF
(errorProc)SH
11 /Times-Roman AF
(' as a pointer to)
35 W( the backstop error handler.)36 W
19799 29937 MT
(This error handler handles errors that are)
217 W( not handled by any)216 W
19799 31234 MT
(other error handler. `)40 W
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(' will be passed as the `)41 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' argument)41 W
19799 32531 MT
(to the backstop error handler.)SH
10 /Helvetica-Bold AF
10200 35854 MT
(DPSSetErrorProc)SH
9 /Helvetica AF
19799 XM
(void DPSSetErrorProc\050ctxt, errorProc\051)SH
19799 36952 MT
(DPSContext ctxt;)SH
19799 38050 MT
(DPSErrorProc errorProc;)SH
11 /Times-Roman AF
19799 40145 MT
(changes the context's error handler.)SH
10 /Helvetica-Bold AF
10200 43468 MT
(DPSSetTextBackstop)SH
9 /Helvetica AF
19799 44566 MT
(void DPSSetTextBackstop\050textProc\051)SH
19799 45664 MT
(DPSTextProc textProc;)SH
11 /Times-Roman AF
19799 47759 MT
(establishes the procedure pointed to by `)67 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' as the handler)67 W
19799 49056 MT
(for text output for which there)
4 W( is no other handler. The text hand-)5 W
19799 50353 MT
(ler acts as a backstop for text output.)SH
10 /Helvetica-Bold AF
10200 53676 MT
(DPSSetTextProc)SH
9 /Helvetica AF
19799 XM
(void DPSSetTextProc\050ctxt, textProc\051)SH
19799 54774 MT
(DPSContext ctxt;)SH
19799 55872 MT
(DPSTextProc textProc;)SH
11 /Times-Roman AF
19799 57967 MT
(changes the context's text handler.)SH
8 /Helvetica AF
31370 63450 MT
(9 THE)327 W
/Helvetica-Oblique SF
34255 XM
(DPSCLIENT.H)SH
/Helvetica SF
39803 XM
(HEADER FILE)SH
10 SS 
47485 XM
(53)SH
ES
%%Page: 54 56 
BS
0 SI
10 /Helvetica-Bold AF
9300 6129 MT
(DPSSpaceFromContext)SH
9 /Helvetica AF
18899 7227 MT
(DPSSpace DPSSpaceFromContext\050ctxt\051)SH
18899 8325 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
18899 10420 MT
(returns the space handle for the specified context.)
302 W( It returns)301 W
18899 11717 MT
(`)SH
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(' if `)SH
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' does not represent a valid execution context.)SH
10 /Helvetica-Bold AF
9300 15040 MT
(DPSTextProc)SH
9 /Helvetica AF
18899 XM
(typedef void \050*DPSTextProc\051\050/*)SH
19475 16138 MT
(DPSContext ctxt;)SH
19475 17236 MT
(char *buf;)SH
19475 18334 MT
(long unsigned int count; */\051;)SH
11 /Times-Roman AF
18899 20429 MT
(handles text emitted from)
54 W( the interpreter)
55 W( \320 for)
206 W( example, by the)55 W
/Times-Bold SF
18899 21726 MT
(==)SH
/Times-Roman SF
20428 XM
(operator. `)SH
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(' is a pointer to `)SH
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' characters.)SH
10 /Helvetica-Bold AF
9300 25049 MT
(DPSUnchainContext)SH
9 /Helvetica AF
18899 26147 MT
(void DPSUnchainContext\050ctxt\051)SH
18899 27245 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
18899 29340 MT
(removes `)31 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' from the)
31 W( chain that it is on, if any. The parent and)30 W
18899 30637 MT
(child pointers of the unchained context are set to `)SH
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
('.)SH
10 /Helvetica-Bold AF
9300 33960 MT
(DPSWaitContext)SH
9 /Helvetica AF
18899 XM
(void DPSWaitContext\050ctxt\051)SH
18899 35058 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
18899 37153 MT
(flushes output buffers belonging to)
29 W( `)30 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' and then waits until the)30 W
18899 38450 MT
(interpreter is)
49 W( ready for more input to `)48 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
('. It is not necessary to)48 W
18899 39747 MT
(call)SH
/Times-Italic SF
21110 XM
(DPSWaitContext)SH
/Times-Roman SF
29249 XM
(after calling a wrapped procedure that)349 W
18899 41044 MT
(returns a value.)SH
18899 43139 MT
(Before calling)205 W
/Times-Italic SF
25845 XM
(DPSWaitContext)SH
/Times-Roman SF
(, you must ensure that the)
205 W( last)204 W
18899 44436 MT
(code sent to the context is syntactically complete,)
24 W( such as a wrap)25 W
18899 45733 MT
(or a correctly)
187 W( terminated PostScript operator or composite ob-)186 W
18899 47030 MT
(ject.)SH
10 /Helvetica AF
4500 63450 MT
(54)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 55 57 
BS
0 SI
10 /Helvetica-Bold AF
10200 6129 MT
(DPSWriteData)SH
9 /Helvetica AF
19799 XM
(void DPSWriteData\050ctxt, buf, count\051)SH
19799 7227 MT
(DPSContext ctxt;)SH
19799 8325 MT
(char *buf;)SH
19799 9423 MT
(unsigned int count;)SH
11 /Times-Roman AF
19799 11518 MT
(sends `)154 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' bytes of data from `)154 W
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(' to `)154 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
('. `)154 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' specifies)155 W
19799 12815 MT
(the destination context. `)276 W
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(' points to)
276 W( a buffer that contains)275 W
19799 14112 MT
(`)SH
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' bytes of data. The contents of the buffer will)45 W
/Times-Italic SF
43557 XM
(not)SH
/Times-Roman SF
45284 XM
(be con-)46 W
19799 15409 MT
(verted according to the context's encoding parameters.)SH
10 /Helvetica-Bold AF
10200 18732 MT
(DPSWritePostScript)SH
9 /Helvetica AF
19799 19830 MT
(void DPSWritePostScript\050ctxt, buf, count\051;)SH
19799 20928 MT
(DPSContext ctxt;)SH
19799 22026 MT
(char *buf;)SH
19799 23124 MT
(unsigned int count;)SH
11 /Times-Roman AF
19799 25219 MT
(sends PostScript language)
150 W( to a context in any of the three lan-)149 W
19799 26516 MT
(guage encodings. `)224 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' specifies the destination context.)
224 W( `)225 W
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(')SH
19799 27813 MT
(points to a)
137 W( buffer that contains `)136 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' bytes of PostScript lan-)136 W
19799 29110 MT
(guage code. The code)
97 W( in the buffer will be converted according)98 W
19799 30407 MT
(to the context's encoding parameters as needed;)
292 W( refer to the)291 W
19799 31704 MT
(system-specific documentation for a list of supported)
252 W( conver-)253 W
19799 33001 MT
(sions.)SH
8 /Helvetica AF
31370 63450 MT
(9 THE)327 W
/Helvetica-Oblique SF
34255 XM
(DPSCLIENT.H)SH
/Helvetica SF
39803 XM
(HEADER FILE)SH
10 SS 
47485 XM
(55)SH
ES
%%Page: 56 58 
BS
0 SI
12 /Helvetica AF
11692 6275 MT
(10 SINGLE-OPERATOR)
491 W( PROCEDURES)SH
11 /Times-Roman AF
18891 8826 MT
(For each operator defined in the)
92 W( PostScript language, the Client)91 W
18899 10123 MT
(Library provides)
73 W( a procedure to invoke the most common usage)74 W
18899 11420 MT
(of the operator. These are called the single-operator procedures.)88 W
18899 12717 MT
(\050See the)85 W
/Times-Italic SF
22918 XM
(PostScript Language Reference Manual)86 W
/Times-Roman SF
41164 XM
(and)SH
/Times-Italic SF
43113 XM
(PostScript)SH
18899 14014 MT
(Language Extensions for)
26 W( the Display PostScript System)25 W
/Times-Roman SF
43855 XM
(for com-)25 W
18899 15311 MT
(plete information about how these PostScript)
52 W( operators work.\051 If)53 W
18899 16608 MT
(the predefined usage is not the one you)
117 W( need, it's easy to write)116 W
18899 17905 MT
(wraps for variant forms of the operators.)SH
18891 20100 MT
(There are two Client Library header files)
287 W( for single-operator)288 W
18899 21397 MT
(procedures:)SH
/Times-Italic SF
24723 XM
(dpsops.h)SH
/Times-Roman SF
29298 XM
(and)SH
/Times-Italic SF
31580 XM
(psops.h)SH
/Times-Roman SF
(. The name of the)
419 W( Client)418 W
18899 22694 MT
(Library single-operator procedure is the name of)
125 W( the PostScript)126 W
9 SS 
35943 23628 MT
(3)SH
11 SS 
18899 23991 MT
(operator preceded by either DPS or PS)SH
36393 XM
(:)SH
18899 26143 MT
(DPS prefix)SH
26098 XM
(Used when the)
1 W( context is explicitly specified; for)SH
26098 27340 MT
(example,)SH
/Times-Italic SF
30430 XM
(DPSgsave)SH
/Times-Roman SF
(. The first)
56 W( argument must be)57 W
26098 28537 MT
(of type `)474 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
('. These single-operator)474 W
26098 29734 MT
(procedures are defined in)SH
/Times-Italic SF
37518 XM
(dpsops.h)SH
/Times-Roman SF
(.)SH
18899 31530 MT
(PS prefix)SH
26098 XM
(Used when the context is assumed to be the)
41 W( cur-)42 W
26098 32727 MT
(rent context; for example,)612 W
/Times-Italic SF
40183 XM
(PSgsave)SH
/Times-Roman SF
(. These)612 W
26098 33924 MT
(single-operator procedures are defined)
880 W( in)881 W
/Times-Italic SF
26098 35121 MT
(psops.h)SH
/Times-Roman SF
(. The procedure)108 W
/Times-Italic SF
36959 XM
(DPSSetContext)SH
/Times-Roman SF
(, defined)108 W
26098 36318 MT
(in)SH
/Times-Italic SF
27229 XM
(dpsclient.h)SH
/Times-Roman SF
(, sets the current context.)SH
18891 38513 MT
(For example, to)
194 W( execute the PostScript operator)195 W
/Times-Bold SF
41454 XM
(translate)SH
/Times-Roman SF
(, the)195 W
18899 39810 MT
(application can call)SH
9 /Helvetica AF
20051 41763 MT
(DPStranslate\050ctxt, 1.23, 43.56\051)SH
11 /Times-Roman AF
18891 43958 MT
(where `)108 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' is a)
108 W( variable of type `)107 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(', the handle that)107 W
18899 45255 MT
(represents a PostScript execution context.)SH
18891 47450 MT
(The)SH
/Times-Italic SF
20876 XM
(DPStranslate)SH
/Times-Roman SF
27079 XM
(procedure sends the binary encoding of)SH
9 /Helvetica AF
20051 49403 MT
(1.23 43.56 translate)SH
11 /Times-Roman AF
18899 51455 MT
(to execute in `)SH
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
('.)SH
7 SS 
18899 56539 MT
(3)SH
9 SS 
19249 56866 MT
(Most PostScript operator names are lowercase, but some)
150 W( contain uppercase)149 W
18899 57764 MT
(letters; for example)24 W
/Times-Bold SF
26197 XM
(FontDirectory)SH
/Times-Roman SF
(. In either case, the name of the correspond-)25 W
18899 58662 MT
(ing single-operator procedure is formed simply by prefixing PS or DPS.)SH
10 /Helvetica AF
4500 63450 MT
(56)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 57 59 
BS
0 SI
11 /Helvetica AF
16457 6202 MT
(10.1)SH
19799 XM
(SETTING THE CURRENT CONTEXT)SH
/Times-Roman SF
19791 8397 MT
(The single-operator procedures in)258 W
/Times-Italic SF
35971 XM
(psops.h)SH
/Times-Roman SF
39835 XM
(assume the current)258 W
19799 9694 MT
(context. The)208 W
/Times-Italic SF
25988 XM
(DPSSetContext)SH
/Times-Roman SF
33253 XM
(procedure, defined)
208 W( in)207 W
/Times-Italic SF
43525 XM
(dpsclient.h)SH
/Times-Roman SF
(,)SH
19799 10991 MT
(sets the current)
185 W( context. When the application deals with only)186 W
19799 12288 MT
(one context it is)
238 W( convenient to use the procedures in)237 W
/Times-Italic SF
45266 XM
(psops.h)SH
/Times-Roman SF
19799 13585 MT
(rather than those in)60 W
/Times-Italic SF
28775 XM
(dpsops.h)SH
/Times-Roman SF
(. In this case, the application)
60 W( would)61 W
19799 14882 MT
(set the current context during its initialization phase:)SH
9 /Helvetica AF
20951 16835 MT
(DPSSetContext\050ctxt\051;)SH
11 /Times-Roman AF
19791 19030 MT
(In subsequent calls on the procedures in)147 W
/Times-Italic SF
38689 XM
(psops.h)SH
/Times-Roman SF
(, `)147 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' is used)146 W
19799 20327 MT
(implicitly. For example:)SH
9 /Helvetica AF
20951 22280 MT
(PStranslate\0501.23, 43.56\051;)SH
11 /Times-Roman AF
19791 24475 MT
(has the same effect as)SH
9 /Helvetica AF
20951 26428 MT
(DPStranslate\050ctxt, 1.23, 43.56\051;)SH
11 /Times-Roman AF
19791 28623 MT
(The explicit method is preferable)
20 W( for situations that require inter-)21 W
19799 29920 MT
(mingling of calls to multiple contexts.)SH
28806 50 19791 31616 LH BX1
10 /Helvetica-Bold AF
19799 33169 MT
(Note:)SH
11 /Times-Roman AF
23109 XM
(It is important to pass the correct C types)
126 W( to the single-)125 W
19799 34466 MT
(operator procedures.  \050See Section 10.3 for)
454 W( the procedure)455 W
19799 35763 MT
(declarations.\051 In)
357 W( general,)
41 W( if a PostScript operator takes operands)40 W
19799 37060 MT
(of arbitrary)
38 W( numeric type, the corresponding single-operator pro-)39 W
19799 38357 MT
(cedure takes parameters of type `)99 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
('. Coordinates)
473 W( are)
99 W( always)98 W
19799 39654 MT
(type `)24 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
('. Passing)
325 W( an integer literal to a procedure that expects)25 W
19799 40951 MT
(a floating-point literal is a common error:)SH
/Times-Italic SF
19799 43100 MT
(incorrect:)SH
10 /Helvetica AF
26998 XM
(PSlineto\05072, 72\051;)SH
11 /Times-Italic AF
19799 44896 MT
(correct:)SH
10 /Helvetica AF
26998 XM
(PSlineto\05072.0, 72.0\051;)SH
28806 50 19791 46592 LH BX1
11 /Times-Roman AF
19791 48787 MT
(Procedures that)
69 W( appear to have no input arguments may actually)68 W
19799 50084 MT
(take their operands)
281 W( from the operand stack)
282 W( \320 for)
433 W( example,)282 W
/Times-Italic SF
19799 51381 MT
(PSdef)SH
/Times-Roman SF
22640 XM
(and)SH
/Times-Italic SF
24503 XM
(DPSdef)SH
/Times-Roman SF
(.)SH
/Helvetica SF
16457 54578 MT
(10.2)SH
19799 XM
(TYPES IN SINGLE-OPERATOR PROCEDURES)SH
/Times-Roman SF
19791 56773 MT
(When using single-operator procedures, be sure)
207 W( to inspect the)206 W
19799 58070 MT
(calling protocol \050that is, order and types of)
152 W( formal parameters\051)153 W
19799 59367 MT
(for every procedure to be called; these are listed in Section 10.3.)SH
8 /Helvetica AF
30016 63450 MT
(10 SINGLE-OPERATOR)
327 W( PROCEDURES)SH
10 SS 
47485 XM
(57)SH
ES
%%Page: 58 60 
BS
28806 50 18891 5400 LH BX1
0 SI
10 /Helvetica-Bold AF
18899 6953 MT
(Note:)SH
11 /Times-Roman AF
22209 XM
(Throughout Section 10.2, references to)
278 W( single-operator)277 W
18899 8250 MT
(procedures with a DPS prefix)
2 W( are equally applicable to the equiv-)3 W
18899 9547 MT
(alent procedures with a PS prefix.)SH
28806 50 18891 10586 LH BX1
/Helvetica SF
18891 13284 MT
(10.2.1 Rules)
848 W( of Thumb)SH
/Times-Roman SF
18891 15479 MT
(There is no completely consistent system for)
233 W( associating data)232 W
18899 16776 MT
(types with particular single-operator procedures. In general, it's)113 W
18899 18073 MT
(safest to)122 W
/Times-Italic SF
23053 XM
(look up)
122 W( the definition)121 W
/Times-Roman SF
33194 XM
(in Section 10.3 or in the header)121 W
18899 19370 MT
(file. However, there are a few rules of thumb that)
15 W( can be applied.)16 W
18899 20667 MT
(Note that all of these rules have exceptions.)SH
/Symbol SF
20518 22944 MT
(\267)SH
/Times-Roman SF
21299 XM
(Coordinates are specified as type `)107 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
('. For)
487 W( example, all)106 W
21299 24141 MT
(of the standard path construction operators \050)14 W
/Times-Bold SF
(moveto)SH
/Times-Roman SF
(,)SH
/Times-Bold SF
44794 XM
(lineto)SH
/Times-Roman SF
(,)SH
/Times-Bold SF
21299 25338 MT
(curveto)SH
/Times-Roman SF
(, and so on\051, take type `)SH
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
('.)SH
/Symbol SF
20518 27134 MT
(\267)SH
/Times-Roman SF
21299 XM
(Booleans are always type `)84 W
10 /Helvetica AF
(int)SH
11 /Times-Roman AF
('. The)
443 W( comment)
84 W( `)83 W
10 /Helvetica AF
(/* int *b */)83 W
11 /Times-Roman AF
(')SH
21299 28331 MT
(or `)103 W
10 /Helvetica AF
(/* int *it */)103 W
11 /Times-Roman AF
(' in the header file)
103 W( means that the procedure)104 W
21299 29528 MT
(returns a boolean.)SH
/Symbol SF
20518 31324 MT
(\267)SH
/Times-Roman SF
21299 XM
(If the operator takes either integer or floating-point num-)169 W
21299 32521 MT
(bers, the corresponding procedure takes type `)73 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
('. If)
421 W( the)73 W
21299 33718 MT
(operator specifies a number type)
475 W( \050such as)474 W
/Times-Bold SF
43098 XM
(rand)SH
/Times-Roman SF
46109 XM
(and)SH
/Times-Bold SF
21299 34915 MT
(vmreclaim)SH
/Times-Roman SF
(\051, then the procedure)
254 W( takes arguments of that)255 W
21299 36112 MT
(type \050typically type `)SH
10 /Helvetica AF
(int)SH
11 /Times-Roman AF
('\051.)SH
/Symbol SF
20518 37908 MT
(\267)SH
/Times-Roman SF
21299 XM
(Operators that return)
78 W( values must always be specified with)77 W
21299 39105 MT
(a pointer)
397 W( to the appropriate data type.  For example,)398 W
/Times-Bold SF
21299 40302 MT
(currentgray)SH
/Times-Roman SF
27340 XM
(returns the current gray)
86 W( value of the graphics)85 W
21299 41499 MT
(state. You)
501 W( must pass)113 W
/Times-Italic SF
31458 XM
(DPScurrentgray)SH
/Times-Roman SF
39117 XM
(a pointer to a vari-)114 W
21299 42696 MT
(able of type `)SH
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
('.)SH
/Symbol SF
20518 44492 MT
(\267)SH
/Times-Roman SF
21299 XM
(If an operator)
17 W( takes a data type that does not have a directly)16 W
21299 45689 MT
(analogous C type, such as dictionaries,)
111 W( graphic states, and)112 W
21299 46886 MT
(executable arrays,)
222 W( the single-operator procedure takes no)221 W
21299 48083 MT
(arguments. It)
371 W( is assumed that the programmer)
48 W( will arrange)49 W
21299 49280 MT
(for the appropriate data to)
124 W( be on the operand stack before)123 W
21299 50477 MT
(calling the)
899 W( procedure; see)900 W
/Times-Italic SF
36442 XM
(DPSsendchararray)SH
/Times-Roman SF
46109 XM
(and)SH
/Times-Italic SF
21299 51674 MT
(DPSsendfloat)SH
/Times-Roman SF
(, among others.)SH
/Symbol SF
20518 53470 MT
(\267)SH
/Times-Roman SF
21299 XM
(If a single-operator procedure takes or returns a matrix,)
49 W( the)48 W
21299 54667 MT
(matrix is specified as `)148 W
10 /Helvetica AF
(float m[])148 W
11 /Times-Roman AF
(', which is)
148 W( an array of six)149 W
21299 55864 MT
(floating-point numbers.)SH
/Symbol SF
20518 57660 MT
(\267)SH
/Times-Roman SF
21299 XM
(In general, the integer parameter `)157 W
10 /Helvetica AF
(size)SH
11 /Times-Roman AF
(' is)
157 W( used to specify)156 W
10 /Helvetica AF
4500 63450 MT
(58)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 59 61 
BS
0 SI
11 /Times-Roman AF
22199 6155 MT
(the length of a variable-length)
314 W( array; see, for example,)315 W
/Times-Italic SF
22199 7352 MT
(DPSxshow)SH
/Times-Roman SF
(. For)
661 W( single-operator procedures that take)193 W
/Times-Italic SF
47007 XM
(two)SH
/Times-Roman SF
22199 8549 MT
(variable-length arrays as parameters, the length of the)
89 W( first)90 W
22199 9746 MT
(array is specified by the integer `)324 W
10 /Helvetica AF
(n)SH
11 /Times-Roman AF
('; the length of the)324 W
22199 10943 MT
(second array)
250 W( is specified by the integer `)251 W
10 /Helvetica AF
(l)SH
11 /Times-Roman AF
('; see, for ex-)251 W
22199 12140 MT
(ample,)SH
/Times-Italic SF
25437 XM
(DPSustroke)SH
/Times-Roman SF
(.)SH
19791 14335 MT
(The following)
103 W( operators are worth noting for unusual order and)102 W
19799 15632 MT
(types of arguments, or for)
316 W( other irregularities. After reading)317 W
19799 16929 MT
(these descriptions, inspect the declarations)
145 W( in the listing in this)144 W
19799 18226 MT
(document or in the header file:)SH
/Symbol SF
21418 20503 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSdefineuserobject)SH
/Times-Roman SF
31900 XM
(takes no arguments.)
140 W( One)
557 W( would ex-)141 W
22199 21700 MT
(pect it to take at)
129 W( least the index argument, but because of)128 W
22199 22897 MT
(the requirement to have the arbitrary object)
147 W( on the top of)148 W
22199 24094 MT
(the stack, it is probably better)
291 W( to send the index down)290 W
22199 25291 MT
(separately, perhaps via)SH
/Times-Italic SF
32521 XM
(DPSsendint)SH
/Times-Roman SF
(.)SH
/Symbol SF
21418 27087 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSgetchararray)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
31364 XM
(DPSgetfloatarray)SH
/Times-Roman SF
(, and)
795 W( other ``get)796 W
22199 28284 MT
(array'' operators specify the length of)
158 W( the array first, fol-)157 W
22199 29481 MT
(lowed by the array.  \050Mnemonic: Get the array last.\051)SH
/Symbol SF
21418 31277 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSsendchararray)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
31532 XM
(DPSsendfloatarray)SH
/Times-Roman SF
(, and)
291 W( other ``send)292 W
22199 32474 MT
(array'' operators)
243 W( specify the array first, followed by the)242 W
22199 33671 MT
(length of the array.  \050Mnemonic: Send the array first.\051)SH
/Symbol SF
21418 35467 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSinfill)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
27129 XM
(DPSinstroke)SH
/Times-Roman SF
(, and)284 W
/Times-Italic SF
35671 XM
(DPSinufill)SH
/Times-Roman SF
40877 XM
(support only the)285 W
/Times-Italic SF
22199 36664 MT
(x,y)SH
/Times-Roman SF
(-coordinate version of the operator.)
17 W( The)
307 W( optional second)16 W
22199 37861 MT
(userpath argument is not supported.)SH
/Symbol SF
21418 39657 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSinueofill)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
29176 XM
(DPSinufill)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
35115 XM
(DPSinustroke)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
42518 XM
(DPSuappend)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
22199 40854 MT
(DPSueofill)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
28028 XM
(DPSufill)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
32819 XM
(DPSustroke)SH
/Times-Roman SF
(, and)451 W
/Times-Italic SF
41387 XM
(DPSustrokepath)SH
/Times-Roman SF
22199 42051 MT
(take a userpath in the form of an encoded number string)178 W
22199 43248 MT
(and operator)
212 W( string.  Note that the lengths of the strings)211 W
22199 44445 MT
(follow the strings themselves,)
685 W( as arguments.  See)686 W
/Times-Italic SF
22199 45642 MT
(PostScript Language Extensions for the)
61 W( Display PostScript)60 W
22199 46839 MT
(System)SH
/Times-Roman SF
25528 XM
(for details.)SH
/Symbol SF
21418 48635 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSsetdash)SH
/Times-Roman SF
27791 XM
(takes an array of numbers of)
1 W( type `)2 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
(' for the)2 W
22199 49832 MT
(dash pattern.)SH
/Symbol SF
21418 51628 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSselectfont)SH
/Times-Roman SF
29402 XM
(takes type `)696 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
(' for)
696 W( the font scale)695 W
22199 52825 MT
(parameter.)SH
/Symbol SF
21418 54621 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSsetgray)SH
/Times-Roman SF
27728 XM
(takes type `)SH
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
('. \050`)275 W
10 /Helvetica AF
(DPSsetgray\0501\051)SH
11 /Times-Roman AF
(' is wrong.\051)SH
/Symbol SF
21418 56417 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSxshow)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
27625 XM
(DPSxyshow)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
33539 XM
(DPSyshow)SH
/Times-Roman SF
38690 XM
(take an array of)
110 W( num-)111 W
22199 57614 MT
(bers of type)
162 W( `)161 W
10 /Helvetica AF
(float)SH
11 /Times-Roman AF
(' for specifying the coordinates of each)161 W
22199 58811 MT
(character.)SH
8 /Helvetica AF
30016 63450 MT
(10 SINGLE-OPERATOR)
327 W( PROCEDURES)SH
10 SS 
47485 XM
(59)SH
ES
%%Page: 60 62 
BS
0 SI
11 /Symbol AF
20518 6280 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSequals)SH
/Times-Roman SF
26462 XM
(is the procedure equivalent to the)SH
/Times-Bold SF
41368 XM
(=)SH
/Times-Roman SF
42270 XM
(operator.)SH
/Symbol SF
20518 8076 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSequalsequals)SH
/Times-Roman SF
29648 XM
(is the)
314 W( procedure equivalent to the)315 W
/Times-Bold SF
46443 XM
(==)SH
/Times-Roman SF
21299 9273 MT
(operator.)SH
/Symbol SF
20518 11069 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSversion)SH
/Times-Roman SF
26868 XM
(returns the version number in a)
40 W( character array)39 W
21299 12266 MT
(`)SH
10 /Helvetica AF
(buf[])SH
11 /Times-Roman AF
(' whose length is specified by `)SH
10 /Helvetica AF
(bufsize)SH
11 /Times-Roman AF
('.)SH
/Helvetica SF
18891 14964 MT
(10.2.2 Special)
848 W( Cases)SH
/Times-Roman SF
18891 17159 MT
(A few of the single-operator procedures have been optimized)
82 W( to)83 W
18899 18456 MT
(take user objects for arguments, since they are most commonly)118 W
18899 19753 MT
(used in this way. In the listing in Section 10.3, these user)
65 W( object)66 W
18899 21050 MT
(arguments are specified as type)
35 W( `)34 W
10 /Helvetica AF
(int)SH
11 /Times-Roman AF
(', which is the correct type of)34 W
18899 22347 MT
(a user object.)SH
/Symbol SF
20518 24624 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPScurrentgstate)SH
/Times-Roman SF
29723 XM
(takes a user object that)
267 W( represents the)268 W
/Times-Italic SF
21299 25821 MT
(gstate)SH
/Times-Roman SF
24206 XM
(object into which the current graphics state should)
4 W( be)3 W
21299 27018 MT
(stored. The)275 W
/Times-Italic SF
26797 XM
(gstate)SH
/Times-Roman SF
29700 XM
(object is left on the stack.)SH
/Symbol SF
20518 28814 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSsetfont)SH
/Times-Roman SF
26609 XM
(takes a user)
85 W( object that represents the font dic-)86 W
21299 30011 MT
(tionary.)SH
/Symbol SF
20518 31807 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSsetgstate)SH
/Times-Roman SF
27563 XM
(takes a user object that represents the)123 W
/Times-Italic SF
45069 XM
(gstate)SH
/Times-Roman SF
21299 33004 MT
(object that the current graphics state should be set to.)SH
10 /Helvetica AF
4500 63450 MT
(60)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 61 63 
BS
0 SI
11 /Helvetica AF
16457 6202 MT
(10.3)SH
/Helvetica-Oblique SF
19799 XM
(DPSOPS.H)SH
/Helvetica SF
25837 XM
(PROCEDURE DECLARATIONS)SH
/Times-Roman SF
19791 8397 MT
(The procedures in)95 W
/Times-Italic SF
28291 XM
(dpsops.h)SH
/Times-Roman SF
32542 XM
(and)SH
/Times-Italic SF
34500 XM
(psops.h)SH
/Times-Roman SF
38202 XM
(are identical except for)96 W
19799 9694 MT
(the first argument.)161 W
/Times-Italic SF
28651 XM
(dpsops.h)SH
/Times-Roman SF
32967 XM
(procedures require the `)160 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(' argu-)160 W
19799 10991 MT
(ment;)SH
/Times-Italic SF
22837 XM
(psops.h)SH
/Times-Roman SF
26700 XM
(procedures do not. The procedure name)
257 W( is the)258 W
19799 12288 MT
(lowercase PostScript operator name preceded by)
349 W( ``DPS'' or)348 W
19799 13585 MT
(``PS'' as appropriate. For)
84 W( the sake of brevity, only the)85 W
/Times-Italic SF
44716 XM
(dpsops.h)SH
/Times-Roman SF
19799 14882 MT
(procedures are listed here.)SH
28806 50 19791 16578 LH BX1
10 /Helvetica-Bold AF
19799 18131 MT
(Note:)SH
11 /Times-Italic AF
23109 XM
(DPSSetContext)SH
/Times-Roman SF
30234 XM
(must have been called)
68 W( before calling any)67 W
19799 19428 MT
(procedure in)SH
/Times-Italic SF
25601 XM
(psops.h)SH
/Times-Roman SF
(.)SH
28806 50 19791 20467 LH BX1
9 /Helvetica AF
6600 22420 MT
(extern void DPSFontDirectory\050 /* DPSContext ctxt; */ \051;)SH
6600 24174 MT
(extern void DPSISOLatin1Encoding\050 /* DPSContext ctxt; */ \051;)SH
6600 25928 MT
(extern void DPSSharedFontDirectory\050 /* DPSContext ctxt; */ \051;)SH
6600 27682 MT
(extern void DPSStandardEncoding\050 /* DPSContext ctxt; */ \051;)SH
6600 29436 MT
(extern void DPSUserObjects\050 /* DPSContext ctxt; */ \051;)SH
6600 31190 MT
(extern void DPSabs\050 /* DPSContext ctxt; */ \051;)SH
6600 32944 MT
(extern void DPSadd\050 /* DPSContext ctxt; */ \051;)SH
6600 34698 MT
(extern void DPSaload\050 /* DPSContext ctxt; */ \051;)SH
6600 36452 MT
(extern void DPSanchorsearch\050 /* DPSContext ctxt; int *truth; */ \051;)SH
6600 38206 MT
(extern void DPSand\050 /* DPSContext ctxt; */ \051;)SH
6600 39960 MT
(extern void DPSarc\050 /* DPSContext ctxt; float x, y, r, angle1, angle2; */ \051;)SH
6600 41714 MT
(extern void DPSarcn\050 /* DPSContext ctxt; float x, y, r, angle1, angle2; */ \051;)SH
6600 43468 MT
(extern void DPSarct\050 /* DPSContext ctxt; float x1, y1, x2, y2, r; */ \051;)SH
6600 45222 MT
(extern void DPSarcto\050 /* DPSContext ctxt; float x1, y1, x2, y2, r; float *xt1, *yt1, *xt2, *yt2; */ \051;)SH
6600 46976 MT
(extern void DPSarray\050 /* DPSContext ctxt; int len; */ \051;)SH
6600 48730 MT
(extern void DPSashow\050 /* DPSContext ctxt; float x, y; char *s; */ \051;)SH
6600 50484 MT
(extern void DPSastore\050 /* DPSContext ctxt; */ \051;)SH
6600 52238 MT
(extern void DPSatan\050 /* DPSContext ctxt; */ \051;)SH
6600 53992 MT
(extern void DPSawidthshow\050 /* DPSContext ctxt; float cx, cy; int c; float ax, ay; char *s; */ \051;)SH
6600 55746 MT
(extern void DPSbanddevice\050 /* DPSContext ctxt; */ \051;)SH
6600 57500 MT
(extern void DPSbegin\050 /* DPSContext ctxt; */ \051;)SH
8 SS 
30016 63450 MT
(10 SINGLE-OPERATOR)
327 W( PROCEDURES)SH
10 SS 
47485 XM
(61)SH
ES
%%Page: 62 64 
BS
0 SI
9 /Helvetica AF
5700 6056 MT
(extern void DPSbind\050 /* DPSContext ctxt; */ \051;)SH
5700 7810 MT
(extern void DPSbitshift\050 /* DPSContext ctxt; int shift; */ \051;)SH
5700 9564 MT
(extern void DPSbytesavailable\050 /* DPSContext ctxt; int *n; */ \051;)SH
5700 11318 MT
(extern void DPScachestatus\050 /* DPSContext ctxt; */ \051;)SH
5700 13072 MT
(extern void DPSceiling\050 /* DPSContext ctxt; */ \051;)SH
5700 14826 MT
(extern void DPScharpath\050 /* DPSContext ctxt; char *s; int b; */ \051;)SH
5700 16580 MT
(extern void DPSclear\050 /* DPSContext ctxt; */ \051;)SH
5700 18334 MT
(extern void DPScleardictstack\050 /* DPSContext ctxt; */ \051;)SH
5700 20088 MT
(extern void DPScleartomark\050 /* DPSContext ctxt; */ \051;)SH
5700 21842 MT
(extern void DPSclip\050 /* DPSContext ctxt; */ \051;)SH
5700 23596 MT
(extern void DPSclippath\050 /* DPSContext ctxt; */ \051;)SH
5700 25350 MT
(extern void DPSclosefile\050 /* DPSContext ctxt; */ \051;)SH
5700 27104 MT
(extern void DPSclosepath\050 /* DPSContext ctxt; */ \051;)SH
5700 28858 MT
(extern void DPScolorimage\050 /* DPSContext ctxt; */ \051;)SH
5700 30612 MT
(extern void DPSconcat\050 /* DPSContext ctxt; float m[]; */ \051;)SH
5700 32366 MT
(extern void DPSconcatmatrix\050 /* DPSContext ctxt; */ \051;)SH
5700 34120 MT
(extern void DPScondition\050 /* DPSContext ctxt; */ \051;)SH
5700 35874 MT
(extern void DPScopy\050 /* DPSContext ctxt; int n; */ \051;)SH
5700 37628 MT
(extern void DPScopypage\050 /* DPSContext ctxt; */ \051;)SH
5700 39382 MT
(extern void DPScos\050 /* DPSContext ctxt; */ \051;)SH
5700 41136 MT
(extern void DPScount\050 /* DPSContext ctxt; int *n; */ \051;)SH
5700 42890 MT
(extern void DPScountdictstack\050 /* DPSContext ctxt; int *n; */ \051;)SH
5700 44644 MT
(extern void DPScountexecstack\050 /* DPSContext ctxt; int *n; */ \051;)SH
5700 46398 MT
(extern void DPScounttomark\050 /* DPSContext ctxt; int *n; */ \051;)SH
5700 48152 MT
(extern void DPScurrentblackgeneration\050 /* DPSContext ctxt; */ \051;)SH
5700 49906 MT
(extern void DPScurrentcacheparams\050 /* DPSContext ctxt; */ \051;)SH
5700 51660 MT
(extern void DPScurrentcmykcolor\050 /* DPSContext ctxt; float *c, *m, *y, *k; */ \051;)SH
5700 53414 MT
(extern void DPScurrentcolorscreen\050 /* DPSContext ctxt; */ \051;)SH
5700 55168 MT
(extern void DPScurrentcolortransfer\050 /* DPSContext ctxt; */ \051;)SH
5700 56922 MT
(extern void DPScurrentcontext\050 /* DPSContext ctxt; int *cid; */ \051;)SH
10 SS 
4500 63450 MT
(62)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 63 65 
BS
0 SI
9 /Helvetica AF
6600 6056 MT
(extern void DPScurrentdash\050 /* DPSContext ctxt; */ \051;)SH
6600 7810 MT
(extern void DPScurrentdict\050 /* DPSContext ctxt; */ \051;)SH
6600 9564 MT
(extern void DPScurrentfile\050 /* DPSContext ctxt; */ \051;)SH
6600 11318 MT
(extern void DPScurrentflat\050 /* DPSContext ctxt; float *flatness; */ \051;)SH
6600 13072 MT
(extern void DPScurrentfont\050 /* DPSContext ctxt; */ \051;)SH
6600 14826 MT
(extern void DPScurrentgray\050 /* DPSContext ctxt; float *gray; */ \051;)SH
6600 16580 MT
(extern void DPScurrentgstate\050 /* DPSContext ctxt; int gst; */ \051;)SH
6600 18334 MT
(extern void DPScurrenthalftone\050 /* DPSContext ctxt; */ \051;)SH
6600 20088 MT
(extern void DPScurrenthalftonephase\050 /* DPSContext ctxt; float *x, *y; */ \051;)SH
6600 21842 MT
(extern void DPScurrenthsbcolor\050 /* DPSContext ctxt; float *h, *s, *b; */ \051;)SH
6600 23596 MT
(extern void DPScurrentlinecap\050 /* DPSContext ctxt; int *linecap; */ \051;)SH
6600 25350 MT
(extern void DPScurrentlinejoin\050 /* DPSContext ctxt; int *linejoin; */ \051;)SH
6600 27104 MT
(extern void DPScurrentlinewidth\050 /* DPSContext ctxt; float *width; */ \051;)SH
6600 28858 MT
(extern void DPScurrentmatrix\050 /* DPSContext ctxt; */ \051;)SH
6600 30612 MT
(extern void DPScurrentmiterlimit\050 /* DPSContext ctxt; float *limit; */ \051;)SH
6600 32366 MT
(extern void DPScurrentobjectformat\050 /* DPSContext ctxt; int *code; */ \051;)SH
6600 34120 MT
(extern void DPScurrentpacking\050 /* DPSContext ctxt; int *b; */ \051;)SH
6600 35874 MT
(extern void DPScurrentpoint\050 /* DPSContext ctxt; float *x, *y; */ \051;)SH
6600 37628 MT
(extern void DPScurrentrgbcolor\050 /* DPSContext ctxt; float *r, *g, *b; */ \051;)SH
6600 39382 MT
(extern void DPScurrentscreen\050 /* DPSContext ctxt; */ \051;)SH
6600 41136 MT
(extern void DPScurrentshared\050 /* DPSContext ctxt; int *b; */ \051;)SH
6600 42890 MT
(extern void DPScurrentstrokeadjust\050 /* DPSContext ctxt; int *b; */ \051;)SH
6600 44644 MT
(extern void DPScurrenttransfer\050 /* DPSContext ctxt; */ \051;)SH
6600 46398 MT
(extern void DPScurrentundercolorremoval\050 /* DPSContext ctxt; */ \051;)SH
6600 48152 MT
(extern void DPScurveto\050 /* DPSContext ctxt; float x1, y1, x2, y2, x3, y3; */ \051;)SH
6600 49906 MT
(extern void DPScvi\050 /* DPSContext ctxt; */ \051;)SH
6600 51660 MT
(extern void DPScvlit\050 /* DPSContext ctxt; */ \051;)SH
6600 53414 MT
(extern void DPScvn\050 /* DPSContext ctxt; */ \051;)SH
6600 55168 MT
(extern void DPScvr\050 /* DPSContext ctxt; */ \051;)SH
6600 56922 MT
(extern void DPScvrs\050 /* DPSContext ctxt; */ \051;)SH
8 SS 
30016 63450 MT
(10 SINGLE-OPERATOR)
327 W( PROCEDURES)SH
10 SS 
47485 XM
(63)SH
ES
%%Page: 64 66 
BS
0 SI
9 /Helvetica AF
5700 6056 MT
(extern void DPScvs\050 /* DPSContext ctxt; */ \051;)SH
5700 7810 MT
(extern void DPScvx\050 /* DPSContext ctxt; */ \051;)SH
5700 9564 MT
(extern void DPSdef\050 /* DPSContext ctxt; */ \051;)SH
5700 11318 MT
(extern void DPSdefaultmatrix\050 /* DPSContext ctxt; */ \051;)SH
5700 13072 MT
(extern void DPSdefinefont\050 /* DPSContext ctxt; */ \051;)SH
5700 14826 MT
(extern void DPSdefineusername\050 /* DPSContext ctxt; int i; char *username; */ \051;)SH
5700 16580 MT
(extern void DPSdefineuserobject\050 /* DPSContext ctxt; */ \051;)SH
5700 18334 MT
(extern void DPSdeletefile\050 /* DPSContext ctxt; char *filename; */ \051;)SH
5700 20088 MT
(extern void DPSdetach\050 /* DPSContext ctxt; */ \051;)SH
5700 21842 MT
(extern void DPSdeviceinfo\050 /* DPSContext ctxt; */ \051;)SH
5700 23596 MT
(extern void DPSdict\050 /* DPSContext ctxt; int len; */ \051;)SH
5700 25350 MT
(extern void DPSdictstack\050 /* DPSContext ctxt; */ \051;)SH
5700 27104 MT
(extern void DPSdiv\050 /* DPSContext ctxt; */ \051;)SH
5700 28858 MT
(extern void DPSdtransform\050 /* DPSContext ctxt; float x1, y1; float *x2, *y2; */ \051;)SH
5700 30612 MT
(extern void DPSdup\050 /* DPSContext ctxt; */ \051;)SH
5700 32366 MT
(extern void DPSecho\050 /* DPSContext ctxt; int b; */ \051;)SH
5700 34120 MT
(extern void DPSend\050 /* DPSContext ctxt; */ \051;)SH
5700 35874 MT
(extern void DPSeoclip\050 /* DPSContext ctxt; */ \051;)SH
5700 37628 MT
(extern void DPSeofill\050 /* DPSContext ctxt; */ \051;)SH
5700 39382 MT
(extern void DPSeoviewclip\050 /* DPSContext ctxt; */ \051;)SH
5700 41136 MT
(extern void DPSeq\050 /* DPSContext ctxt; */ \051;)SH
5700 42890 MT
(extern void DPSequals\050 /* DPSContext ctxt; */ \051;)SH
5700 44644 MT
(extern void DPSequalsequals\050 /* DPSContext ctxt; */ \051;)SH
5700 46398 MT
(extern void DPSerasepage\050 /* DPSContext ctxt; */ \051;)SH
5700 48152 MT
(extern void DPSerrordict\050 /* DPSContext ctxt; */ \051;)SH
5700 49906 MT
(extern void DPSexch\050 /* DPSContext ctxt; */ \051;)SH
5700 51660 MT
(extern void DPSexec\050 /* DPSContext ctxt; */ \051;)SH
5700 53414 MT
(extern void DPSexecstack\050 /* DPSContext ctxt; */ \051;)SH
5700 55168 MT
(extern void DPSexecuserobject\050 /* DPSContext ctxt; int userObjIndex; */ \051;)SH
5700 56922 MT
(extern void DPSexecuteonly\050 /* DPSContext ctxt; */ \051;)SH
10 SS 
4500 63450 MT
(64)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 65 67 
BS
0 SI
9 /Helvetica AF
6600 6056 MT
(extern void DPSexit\050 /* DPSContext ctxt; */ \051;)SH
6600 7810 MT
(extern void DPSexp\050 /* DPSContext ctxt; */ \051;)SH
6600 9564 MT
(extern void DPSfalse\050 /* DPSContext ctxt; */ \051;)SH
6600 11318 MT
(extern void DPSfile\050 /* DPSContext ctxt; char *name, *access; */ \051;)SH
6600 13072 MT
(extern void DPSfilenameforall\050 /* DPSContext ctxt; */ \051;)SH
6600 14826 MT
(extern void DPSfileposition\050 /* DPSContext ctxt; int *pos; */ \051;)SH
6600 16580 MT
(extern void DPSfill\050 /* DPSContext ctxt; */ \051;)SH
6600 18334 MT
(extern void DPSfindfont\050 /* DPSContext ctxt; char *name; */ \051;)SH
6600 20088 MT
(extern void DPSflattenpath\050 /* DPSContext ctxt; */ \051;)SH
6600 21842 MT
(extern void DPSfloor\050 /* DPSContext ctxt; */ \051;)SH
6600 23596 MT
(extern void DPSflush\050 /* DPSContext ctxt; */ \051;)SH
6600 25350 MT
(extern void DPSflushfile\050 /* DPSContext ctxt; */ \051;)SH
6600 27104 MT
(extern void DPSfor\050 /* DPSContext ctxt; */ \051;)SH
6600 28858 MT
(extern void DPSforall\050 /* DPSContext ctxt; */ \051;)SH
6600 30612 MT
(extern void DPSfork\050 /* DPSContext ctxt; */ \051;)SH
6600 32366 MT
(extern void DPSframedevice\050 /* DPSContext ctxt; */ \051;)SH
6600 34120 MT
(extern void DPSge\050 /* DPSContext ctxt; */ \051;)SH
6600 35874 MT
(extern void DPSget\050 /* DPSContext ctxt; */ \051;)SH
6600 37628 MT
(extern void DPSgetboolean\050 /* DPSContext ctxt; int *it; */ \051;)SH
6600 39382 MT
(extern void DPSgetchararray\050 /* DPSContext ctxt; int size; char s[]; */ \051;)SH
6600 41136 MT
(extern void DPSgetfloat\050 /* DPSContext ctxt; float *it; */ \051;)SH
6600 42890 MT
(extern void DPSgetfloatarray\050 /* DPSContext ctxt; int size; float a[]; */ \051;)SH
6600 44644 MT
(extern void DPSgetint\050 /* DPSContext ctxt; int *it; */ \051;)SH
6600 46398 MT
(extern void DPSgetintarray\050 /* DPSContext ctxt; int size; int a[]; */ \051;)SH
6600 48152 MT
(extern void DPSgetinterval\050 /* DPSContext ctxt; */ \051;)SH
6600 49906 MT
(extern void DPSgetstring\050 /* DPSContext ctxt; char *s; */ \051;)SH
6600 51660 MT
(extern void DPSgrestore\050 /* DPSContext ctxt; */ \051;)SH
6600 53414 MT
(extern void DPSgrestoreall\050 /* DPSContext ctxt; */ \051;)SH
6600 55168 MT
(extern void DPSgsave\050 /* DPSContext ctxt; */ \051;)SH
6600 56922 MT
(extern void DPSgstate\050 /* DPSContext ctxt; */ \051;)SH
8 SS 
30016 63450 MT
(10 SINGLE-OPERATOR)
327 W( PROCEDURES)SH
10 SS 
47485 XM
(65)SH
ES
%%Page: 66 68 
BS
0 SI
9 /Helvetica AF
5700 6056 MT
(extern void DPSgt\050 /* DPSContext ctxt; */ \051;)SH
5700 7810 MT
(extern void DPSidentmatrix\050 /* DPSContext ctxt; */ \051;)SH
5700 9564 MT
(extern void DPSidiv\050 /* DPSContext ctxt; */ \051;)SH
5700 11318 MT
(extern void DPSidtransform\050 /* DPSContext ctxt; float x1, y1; float *x2, *y2; */ \051;)SH
5700 13072 MT
(extern void DPSif\050 /* DPSContext ctxt; */ \051;)SH
5700 14826 MT
(extern void DPSifelse\050 /* DPSContext ctxt; */ \051;)SH
5700 16580 MT
(extern void DPSimage\050 /* DPSContext ctxt; */ \051;)SH
5700 18334 MT
(extern void DPSimagemask\050 /* DPSContext ctxt; */ \051;)SH
5700 20088 MT
(extern void DPSindex\050 /* DPSContext ctxt; int i; */ \051;)SH
5700 21842 MT
(extern void DPSineofill\050 /* DPSContext ctxt; float x, y; int *b; */ \051;)SH
5700 23596 MT
(extern void DPSinfill\050 /* DPSContext ctxt; float x, y; int *b; */ \051;)SH
5700 25350 MT
(extern void DPSinitclip\050 /* DPSContext ctxt; */ \051;)SH
5700 27104 MT
(extern void DPSinitgraphics\050 /* DPSContext ctxt; */ \051;)SH
5700 28858 MT
(extern void DPSinitmatrix\050 /* DPSContext ctxt; */ \051;)SH
5700 30612 MT
(extern void DPSinitviewclip\050 /* DPSContext ctxt; */ \051;)SH
5700 32366 MT
(extern void DPSinstroke\050 /* DPSContext ctxt; float x, y; int *b; */ \051;)SH
5700 34120 MT
(extern void DPSinueofill\050 /* DPSContext ctxt; float x, y; char nums[]; int n; char ops[]; int l; int *b; */ \051;)SH
5700 35874 MT
(extern void DPSinufill\050 /* DPSContext ctxt; float x, y; char nums[]; int n; char ops[]; int l; int *b; */ \051;)SH
5700 37628 MT
(extern void DPSinustroke\050 /* DPSContext ctxt; float x, y; char nums[]; int n; char ops[]; int l; int *b; */ \051;)SH
5700 39382 MT
(extern void DPSinvertmatrix\050 /* DPSContext ctxt; */ \051;)SH
5700 41136 MT
(extern void DPSitransform\050 /* DPSContext ctxt; float x1, y1; float *x2, *y2; */ \051;)SH
5700 42890 MT
(extern void DPSjoin\050 /* DPSContext ctxt; */ \051;)SH
5700 44644 MT
(extern void DPSknown\050 /* DPSContext ctxt; int *b; */ \051;)SH
5700 46398 MT
(extern void DPSkshow\050 /* DPSContext ctxt; char *s; */ \051;)SH
5700 48152 MT
(extern void DPSle\050 /* DPSContext ctxt; */ \051;)SH
5700 49906 MT
(extern void DPSlength\050 /* DPSContext ctxt; int *len; */ \051;)SH
5700 51660 MT
(extern void DPSlineto\050 /* DPSContext ctxt; float x, y; */ \051;)SH
5700 53414 MT
(extern void DPSln\050 /* DPSContext ctxt; */ \051;)SH
5700 55168 MT
(extern void DPSload\050 /* DPSContext ctxt; */ \051;)SH
5700 56922 MT
(extern void DPSlock\050 /* DPSContext ctxt; */ \051;)SH
10 SS 
4500 63450 MT
(66)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 67 69 
BS
0 SI
9 /Helvetica AF
6600 6056 MT
(extern void DPSlog\050 /* DPSContext ctxt; */ \051;)SH
6600 7810 MT
(extern void DPSloop\050 /* DPSContext ctxt; */ \051;)SH
6600 9564 MT
(extern void DPSlt\050 /* DPSContext ctxt; */ \051;)SH
6600 11318 MT
(extern void DPSmakefont\050 /* DPSContext ctxt; */ \051;)SH
6600 13072 MT
(extern void DPSmark\050 /* DPSContext ctxt; */ \051;)SH
6600 14826 MT
(extern void DPSmatrix\050 /* DPSContext ctxt; */ \051;)SH
6600 16580 MT
(extern void DPSmaxlength\050 /* DPSContext ctxt; int *len; */ \051;)SH
6600 18334 MT
(extern void DPSmod\050 /* DPSContext ctxt; */ \051;)SH
6600 20088 MT
(extern void DPSmonitor\050 /* DPSContext ctxt; */ \051;)SH
6600 21842 MT
(extern void DPSmoveto\050 /* DPSContext ctxt; float x, y; */ \051;)SH
6600 23596 MT
(extern void DPSmul\050 /* DPSContext ctxt; */ \051;)SH
6600 25350 MT
(extern void DPSne\050 /* DPSContext ctxt; */ \051;)SH
6600 27104 MT
(extern void DPSneg\050 /* DPSContext ctxt; */ \051;)SH
6600 28858 MT
(extern void DPSnewpath\050 /* DPSContext ctxt; */ \051;)SH
6600 30612 MT
(extern void DPSnoaccess\050 /* DPSContext ctxt; */ \051;)SH
6600 32366 MT
(extern void DPSnot\050 /* DPSContext ctxt; */ \051;)SH
6600 34120 MT
(extern void DPSnotify\050 /* DPSContext ctxt; */ \051;)SH
6600 35874 MT
(extern void DPSnull\050 /* DPSContext ctxt; */ \051;)SH
6600 37628 MT
(extern void DPSnulldevice\050 /* DPSContext ctxt; */ \051;)SH
6600 39382 MT
(extern void DPSor\050 /* DPSContext ctxt; */ \051;)SH
6600 41136 MT
(extern void DPSpackedarray\050 /* DPSContext ctxt; */ \051;)SH
6600 42890 MT
(extern void DPSpathbbox\050 /* DPSContext ctxt; float *llx, *lly, *urx, *ury; */ \051;)SH
6600 44644 MT
(extern void DPSpathforall\050 /* DPSContext ctxt; */ \051;)SH
6600 46398 MT
(extern void DPSpop\050 /* DPSContext ctxt; */ \051;)SH
6600 48152 MT
(extern void DPSprint\050 /* DPSContext ctxt; */ \051;)SH
6600 49906 MT
(extern void DPSprintobject\050 /* DPSContext ctxt; int tag; */ \051;)SH
6600 51660 MT
(extern void DPSprompt\050 /* DPSContext ctxt; */ \051;)SH
6600 53414 MT
(extern void DPSpstack\050 /* DPSContext ctxt; */ \051;)SH
6600 55168 MT
(extern void DPSput\050 /* DPSContext ctxt; */ \051;)SH
6600 56922 MT
(extern void DPSputinterval\050 /* DPSContext ctxt; */ \051;)SH
8 SS 
30016 63450 MT
(10 SINGLE-OPERATOR)
327 W( PROCEDURES)SH
10 SS 
47485 XM
(67)SH
ES
%%Page: 68 70 
BS
0 SI
9 /Helvetica AF
5700 6056 MT
(extern void DPSquit\050 /* DPSContext ctxt; */ \051;)SH
5700 7810 MT
(extern void DPSrand\050 /* DPSContext ctxt; */ \051;)SH
5700 9564 MT
(extern void DPSrcheck\050 /* DPSContext ctxt; int *b; */ \051;)SH
5700 11318 MT
(extern void DPSrcurveto\050 /* DPSContext ctxt; float x1, y1, x2, y2, x3, y3; */ \051;)SH
5700 13072 MT
(extern void DPSread\050 /* DPSContext ctxt; int *b; */ \051;)SH
5700 14826 MT
(extern void DPSreadhexstring\050 /* DPSContext ctxt; int *b; */ \051;)SH
5700 16580 MT
(extern void DPSreadline\050 /* DPSContext ctxt; int *b; */ \051;)SH
5700 18334 MT
(extern void DPSreadonly\050 /* DPSContext ctxt; */ \051;)SH
5700 20088 MT
(extern void DPSreadstring\050 /* DPSContext ctxt; int *b; */ \051;)SH
5700 21842 MT
(extern void DPSrealtime\050 /* DPSContext ctxt; int *i; */ \051;)SH
5700 23596 MT
(extern void DPSrectclip\050 /* DPSContext ctxt; float x, y, w, h; */ \051;)SH
5700 25350 MT
(extern void DPSrectfill\050 /* DPSContext ctxt; float x, y, w, h; */ \051;)SH
5700 27104 MT
(extern void DPSrectstroke\050 /* DPSContext ctxt; float x, y, w, h; */ \051;)SH
5700 28858 MT
(extern void DPSrectviewclip\050 /* DPSContext ctxt; float x, y, w, h; */ \051;)SH
5700 30612 MT
(extern void DPSrenamefile\050 /* DPSContext ctxt; char *old, *new; */ \051;)SH
5700 32366 MT
(extern void DPSrenderbands\050 /* DPSContext ctxt; */ \051;)SH
5700 34120 MT
(extern void DPSrepeat\050 /* DPSContext ctxt; */ \051;)SH
5700 35874 MT
(extern void DPSresetfile\050 /* DPSContext ctxt; */ \051;)SH
5700 37628 MT
(extern void DPSrestore\050 /* DPSContext ctxt; */ \051;)SH
5700 39382 MT
(extern void DPSreversepath\050 /* DPSContext ctxt; */ \051;)SH
5700 41136 MT
(extern void DPSrlineto\050 /* DPSContext ctxt; float x, y; */ \051;)SH
5700 42890 MT
(extern void DPSrmoveto\050 /* DPSContext ctxt; float x, y; */ \051;)SH
5700 44644 MT
(extern void DPSroll\050 /* DPSContext ctxt; int n, j; */ \051;)SH
5700 46398 MT
(extern void DPSrotate\050 /* DPSContext ctxt; float angle; */ \051;)SH
5700 48152 MT
(extern void DPSround\050 /* DPSContext ctxt; */ \051;)SH
5700 49906 MT
(extern void DPSrrand\050 /* DPSContext ctxt; */ \051;)SH
5700 51660 MT
(extern void DPSrun\050 /* DPSContext ctxt; char *filename; */ \051;)SH
5700 53414 MT
(extern void DPSsave\050 /* DPSContext ctxt; */ \051;)SH
5700 55168 MT
(extern void DPSscale\050 /* DPSContext ctxt; float x, y; */ \051;)SH
5700 56922 MT
(extern void DPSscalefont\050 /* DPSContext ctxt; float size; */ \051;)SH
10 SS 
4500 63450 MT
(68)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 69 71 
BS
0 SI
9 /Helvetica AF
6600 6056 MT
(extern void DPSscheck\050 /* DPSContext ctxt; int *b; */ \051;)SH
6600 7810 MT
(extern void DPSsearch\050 /* DPSContext ctxt; int *b; */ \051;)SH
6600 9564 MT
(extern void DPSselectfont\050 /* DPSContext ctxt; char *name; float scale; */ \051;)SH
6600 11318 MT
(extern void DPSsendboolean\050 /* DPSContext ctxt; int it; */ \051;)SH
6600 13072 MT
(extern void DPSsendchararray\050 /* DPSContext ctxt; char s[]; int size; */ \051;)SH
6600 14826 MT
(extern void DPSsendfloat\050 /* DPSContext ctxt; float it; */ \051;)SH
6600 16580 MT
(extern void DPSsendfloatarray\050 /* DPSContext ctxt; float a[]; int size; */ \051;)SH
6600 18334 MT
(extern void DPSsendint\050 /* DPSContext ctxt; int it; */ \051;)SH
6600 20088 MT
(extern void DPSsendintarray\050 /* DPSContext ctxt; int a[]; int size; */ \051;)SH
6600 21842 MT
(extern void DPSsendstring\050 /* DPSContext ctxt; char *s; */ \051;)SH
6600 23596 MT
(extern void DPSsetbbox\050 /* DPSContext ctxt; float llx, lly, urx, ury; */ \051;)SH
6600 25350 MT
(extern void DPSsetblackgeneration\050 /* DPSContext ctxt; */ \051;)SH
6600 27104 MT
(extern void DPSsetcachedevice\050 /* DPSContext ctxt; float wx, wy, llx, lly, urx, ury; */ \051;)SH
6600 28858 MT
(extern void DPSsetcachelimit\050 /* DPSContext ctxt; float n; */ \051;)SH
6600 30612 MT
(extern void DPSsetcacheparams\050 /* DPSContext ctxt; */ \051;)SH
6600 32366 MT
(extern void DPSsetcharwidth\050 /* DPSContext ctxt; float wx, wy; */ \051;)SH
6600 34120 MT
(extern void DPSsetcmykcolor\050 /* DPSContext ctxt; float c, m, y, k; */ \051;)SH
6600 35874 MT
(extern void DPSsetcolorscreen\050 /* DPSContext ctxt; */ \051;)SH
6600 37628 MT
(extern void DPSsetcolortransfer\050 /* DPSContext ctxt; */ \051;)SH
6600 39382 MT
(extern void DPSsetdash\050 /* DPSContext ctxt; float pat[]; int size; float offset; */ \051;)SH
6600 41136 MT
(extern void DPSsetfileposition\050 /* DPSContext ctxt; int pos; */ \051;)SH
6600 42890 MT
(extern void DPSsetflat\050 /* DPSContext ctxt; float flatness; */ \051;)SH
6600 44644 MT
(extern void DPSsetfont\050 /* DPSContext ctxt; int f; */ \051;)SH
6600 46398 MT
(extern void DPSsetgray\050 /* DPSContext ctxt; float gray; */ \051;)SH
6600 48152 MT
(extern void DPSsetgstate\050 /* DPSContext ctxt; int gst; */ \051;)SH
6600 49906 MT
(extern void DPSsethalftone\050 /* DPSContext ctxt; */ \051;)SH
6600 51660 MT
(extern void DPSsethalftonephase\050 /* DPSContext ctxt; float x, y; */ \051;)SH
6600 53414 MT
(extern void DPSsethsbcolor\050 /* DPSContext ctxt; float h, s, b; */ \051;)SH
6600 55168 MT
(extern void DPSsetlinecap\050 /* DPSContext ctxt; int linecap; */ \051;)SH
6600 56922 MT
(extern void DPSsetlinejoin\050 /* DPSContext ctxt; int linejoin; */ \051;)SH
8 SS 
30016 63450 MT
(10 SINGLE-OPERATOR)
327 W( PROCEDURES)SH
10 SS 
47485 XM
(69)SH
ES
%%Page: 70 72 
BS
0 SI
9 /Helvetica AF
5700 6056 MT
(extern void DPSsetlinewidth\050 /* DPSContext ctxt; float width; */ \051;)SH
5700 7810 MT
(extern void DPSsetmatrix\050 /* DPSContext ctxt; */ \051;)SH
5700 9564 MT
(extern void DPSsetmiterlimit\050 /* DPSContext ctxt; float limit; */ \051;)SH
5700 11318 MT
(extern void DPSsetobjectformat\050 /* DPSContext ctxt; int code; */ \051;)SH
5700 13072 MT
(extern void DPSsetpacking\050 /* DPSContext ctxt; int b; */ \051;)SH
5700 14826 MT
(extern void DPSsetrgbcolor\050 /* DPSContext ctxt; float r, g, b; */ \051;)SH
5700 16580 MT
(extern void DPSsetscreen\050 /* DPSContext ctxt; */ \051;)SH
5700 18334 MT
(extern void DPSsetshared\050 /* DPSContext ctxt; int b; */ \051;)SH
5700 20088 MT
(extern void DPSsetstrokeadjust\050 /* DPSContext ctxt; int b; */ \051;)SH
5700 21842 MT
(extern void DPSsettransfer\050 /* DPSContext ctxt; */ \051;)SH
5700 23596 MT
(extern void DPSsetucacheparams\050 /* DPSContext ctxt; */ \051;)SH
5700 25350 MT
(extern void DPSsetundercolorremoval\050 /* DPSContext ctxt; */ \051;)SH
5700 27104 MT
(extern void DPSsetvmthreshold\050 /* DPSContext ctxt; int i; */ \051;)SH
5700 28858 MT
(extern void DPSshareddict\050 /* DPSContext ctxt; */ \051;)SH
5700 30612 MT
(extern void DPSshow\050 /* DPSContext ctxt; char *s; */ \051;)SH
5700 32366 MT
(extern void DPSshowpage\050 /* DPSContext ctxt; */ \051;)SH
5700 34120 MT
(extern void DPSsin\050 /* DPSContext ctxt; */ \051;)SH
5700 35874 MT
(extern void DPSsqrt\050 /* DPSContext ctxt; */ \051;)SH
5700 37628 MT
(extern void DPSsrand\050 /* DPSContext ctxt; */ \051;)SH
5700 39382 MT
(extern void DPSstack\050 /* DPSContext ctxt; */ \051;)SH
5700 41136 MT
(extern void DPSstart\050 /* DPSContext ctxt; */ \051;)SH
5700 42890 MT
(extern void DPSstatus\050 /* DPSContext ctxt; int *b; */ \051;)SH
5700 44644 MT
(extern void DPSstatusdict\050 /* DPSContext ctxt; */ \051;)SH
5700 46398 MT
(extern void DPSstop\050 /* DPSContext ctxt; */ \051;)SH
5700 48152 MT
(extern void DPSstopped\050 /* DPSContext ctxt; */ \051;)SH
5700 49906 MT
(extern void DPSstore\050 /* DPSContext ctxt; */ \051;)SH
5700 51660 MT
(extern void DPSstring\050 /* DPSContext ctxt; int len; */ \051;)SH
5700 53414 MT
(extern void DPSstringwidth\050 /* DPSContext ctxt; char *s; float *xp, *yp; */ \051;)SH
5700 55168 MT
(extern void DPSstroke\050 /* DPSContext ctxt; */ \051;)SH
5700 56922 MT
(extern void DPSstrokepath\050 /* DPSContext ctxt; */ \051;)SH
10 SS 
4500 63450 MT
(70)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 71 73 
BS
0 SI
9 /Helvetica AF
6600 6056 MT
(extern void DPSsub\050 /* DPSContext ctxt; */ \051;)SH
6600 7810 MT
(extern void DPSsystemdict\050 /* DPSContext ctxt; */ \051;)SH
6600 9564 MT
(extern void DPStoken\050 /* DPSContext ctxt; int *b; */ \051;)SH
6600 11318 MT
(extern void DPStransform\050 /* DPSContext ctxt; float x1, y1; float *x2, *y2; */ \051;)SH
6600 13072 MT
(extern void DPStranslate\050 /* DPSContext ctxt; float x, y; */ \051;)SH
6600 14826 MT
(extern void DPStrue\050 /* DPSContext ctxt; */ \051;)SH
6600 16580 MT
(extern void DPStruncate\050 /* DPSContext ctxt; */ \051;)SH
6600 18334 MT
(extern void DPStype\050 /* DPSContext ctxt; */ \051;)SH
6600 20088 MT
(extern void DPSuappend\050 /* DPSContext ctxt; char nums[]; int n; char ops[]; int l; */ \051;)SH
6600 21842 MT
(extern void DPSucache\050 /* DPSContext ctxt; */ \051;)SH
6600 23596 MT
(extern void DPSucachestatus\050 /* DPSContext ctxt; */ \051;)SH
6600 25350 MT
(extern void DPSueofill\050 /* DPSContext ctxt; char nums[]; int n; char ops[]; int l; */ \051;)SH
6600 27104 MT
(extern void DPSufill\050 /* DPSContext ctxt; char nums[]; int n; char ops[]; int l; */ \051;)SH
6600 28858 MT
(extern void DPSundef\050 /* DPSContext ctxt; char *name; */ \051;)SH
6600 30612 MT
(extern void DPSundefinefont\050 /* DPSContext ctxt; char *name; */ \051;)SH
6600 32366 MT
(extern void DPSundefineuserobject\050 /* DPSContext ctxt; int userObjIndex; */ \051;)SH
6600 34120 MT
(extern void DPSupath\050 /* DPSContext ctxt; int b; */ \051;)SH
6600 35874 MT
(extern void DPSuserdict\050 /* DPSContext ctxt; */ \051;)SH
6600 37628 MT
(extern void DPSusertime\050 /* DPSContext ctxt; int *milliseconds; */ \051;)SH
6600 39382 MT
(extern void DPSustroke\050 /* DPSContext ctxt; char nums[]; int n; char ops[]; int l; */ \051;)SH
6600 41136 MT
(extern void DPSustrokepath\050 /* DPSContext ctxt; char nums[]; int n; char ops[]; int l; */ \051;)SH
6600 42890 MT
(extern void DPSversion\050 /* DPSContext ctxt; int bufsize; char buf[]; */ \051;)SH
6600 44644 MT
(extern void DPSviewclip\050 /* DPSContext ctxt; */ \051;)SH
6600 46398 MT
(extern void DPSviewclippath\050 /* DPSContext ctxt; */ \051;)SH
6600 48152 MT
(extern void DPSvmreclaim\050 /* DPSContext ctxt; int code; */ \051;)SH
6600 49906 MT
(extern void DPSvmstatus\050 /* DPSContext ctxt; int *level, *used, *maximum; */ \051;)SH
6600 51660 MT
(extern void DPSwait\050 /* DPSContext ctxt; */ \051;)SH
6600 53414 MT
(extern void DPSwcheck\050 /* DPSContext ctxt; int *b; */ \051;)SH
6600 55168 MT
(extern void DPSwhere\050 /* DPSContext ctxt; int *b; */ \051;)SH
6600 56922 MT
(extern void DPSwidthshow\050 /* DPSContext ctxt; float x, y; int c; char *s; */ \051;)SH
8 SS 
30016 63450 MT
(10 SINGLE-OPERATOR)
327 W( PROCEDURES)SH
10 SS 
47485 XM
(71)SH
ES
%%Page: 72 74 
BS
0 SI
9 /Helvetica AF
5700 6056 MT
(extern void DPSwrite\050 /* DPSContext ctxt; */ \051;)SH
5700 7810 MT
(extern void DPSwritehexstring\050 /* DPSContext ctxt; */ \051;)SH
5700 9564 MT
(extern void DPSwriteobject\050 /* DPSContext ctxt; int tag; */ \051;)SH
5700 11318 MT
(extern void DPSwritestring\050 /* DPSContext ctxt; */ \051;)SH
5700 13072 MT
(extern void DPSwtranslation\050 /* DPSContext ctxt; float *x, *y; */ \051;)SH
5700 14826 MT
(extern void DPSxcheck\050 /* DPSContext ctxt; int *b; */ \051;)SH
5700 16580 MT
(extern void DPSxor\050 /* DPSContext ctxt; */ \051;)SH
5700 18334 MT
(extern void DPSxshow\050 /* DPSContext ctxt; char *s; float numarray[]; int size; */ \051;)SH
5700 20088 MT
(extern void DPSxyshow\050 /* DPSContext ctxt; char *s; float numarray[]; int size; */ \051;)SH
5700 21842 MT
(extern void DPSyield\050 /* DPSContext ctxt; */ \051;)SH
5700 23596 MT
(extern void DPSyshow\050 /* DPSContext ctxt; char *s; float numarray[]; int size; */ \051;)SH
10 SS 
4500 63450 MT
(72)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 73 75 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(11 RUNTIME)
491 W( SUPPORT FOR WRAPPED PROCEDURES)SH
11 /Times-Roman AF
19791 8826 MT
(This section)
91 W( describes the procedures in the)92 W
/Times-Italic SF
39891 XM
(dpsfriends.h)SH
/Times-Roman SF
45667 XM
(header)SH
19799 10123 MT
(file that are called by)
252 W( wrapped procedures)
251 W( \320 the)
402 W( C-callable)251 W
19799 11420 MT
(procedures that are output)
124 W( by the)125 W
/Times-Italic SF
35268 XM
(pswrap)SH
/Times-Roman SF
38908 XM
(translator. This infor-)125 W
19799 12717 MT
(mation is not normally required by the application programmer.)SH
19791 14912 MT
(A description of the)98 W
/Times-Italic SF
29225 XM
(dpsfriends.h)SH
/Times-Roman SF
35007 XM
(header file is provided for)
98 W( ap-)97 W
19799 16209 MT
(plication or toolkit programmers who need finer)
247 W( control over)248 W
19799 17506 MT
(these areas:)SH
/Symbol SF
21418 19783 MT
(\267)SH
/Times-Roman SF
22199 XM
(Transmission of code for execution.)SH
/Symbol SF
21418 21579 MT
(\267)SH
/Times-Roman SF
22199 XM
(Handling of result values.)SH
/Symbol SF
21418 23375 MT
(\267)SH
/Times-Roman SF
22199 XM
(Mapping of user names to user name indices.)SH
19791 25570 MT
(This section also contains a discussion of the structure of binary)64 W
19799 26867 MT
(object sequences.)SH
/Helvetica SF
16457 30064 MT
(11.1)SH
19799 XM
(MORE ABOUT SENDING CODE FOR EXECUTION)SH
/Times-Roman SF
19791 32259 MT
(One of)
99 W( the primary purposes of the Client Library is to provide)100 W
19799 33556 MT
(runtime support for the code generated by)3 W
/Times-Italic SF
38543 XM
(pswrap)SH
/Times-Roman SF
(. Each)
3 W( wrapped)2 W
19799 34853 MT
(procedure builds a binary object)
255 W( sequence that represents the)256 W
19799 36150 MT
(PostScript language code to be)
139 W( executed. Since a binary object)138 W
19799 37447 MT
(sequence is structured, the procedures for sending a binary)
3 W( object)4 W
19799 38744 MT
(sequence are designed to take advantage of this structure.)SH
19791 40939 MT
(The following)
211 W( procedures efficiently process binary object se-)210 W
19799 42236 MT
(quences generated by wrapped procedures:)SH
/Symbol SF
21418 44513 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSBinObjSeqWrite)SH
/Times-Roman SF
31844 XM
(sends the)
144 W( beginning of a new binary)145 W
22199 45710 MT
(object sequence generated by a wrapped)
151 W( procedure.  This)150 W
22199 46907 MT
(initial part includes, at)
71 W( minimum, the header and the entire)72 W
22199 48104 MT
(top-level sequence of objects.  It can also include sub-)286 W
22199 49301 MT
(sidiary array elements and/or string characters if)
131 W( those ar-)132 W
22199 50498 MT
(rays and strings are static)
190 W( \320 that)
341 W( is,)
190 W( if their lengths are)189 W
22199 51695 MT
(known at compile time and there are no intervening arrays)79 W
22199 52892 MT
(or strings of varying length.)315 W
/Times-Italic SF
36888 XM
(DPSBinObjSeqWrite)SH
/Times-Roman SF
46703 XM
(may)SH
22199 54089 MT
(convert the binary object sequence to another)
263 W( encoding,)264 W
22199 55286 MT
(depending upon the `)122 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' encoding variables.)121 W
22199 56483 MT
(For a)
16 W( particular wrapped procedure,)17 W
/Times-Italic SF
38345 XM
(DPSBinObjSeqWrite)SH
/Times-Roman SF
47863 XM
(is)SH
22199 57680 MT
(called exactly once.)SH
8 /Helvetica AF
23690 63450 MT
(11 RUNTIME)
327 W( SUPPORT FOR WRAPPED PROCEDURES)SH
10 SS 
47485 XM
(73)SH
ES
%%Page: 74 76 
BS
0 SI
11 /Symbol AF
20518 6280 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSWriteTypedObjectArray)SH
/Times-Roman SF
35251 XM
(sends arrays \050excluding)1031 W
21299 7477 MT
(strings\051 that were)
504 W( specified as input arguments to a)505 W
21299 8674 MT
(wrapped procedure.  It writes PostScript language code)298 W
21299 9871 MT
(specified by the)
175 W( context's format and encoding variables,)176 W
21299 11068 MT
(doing appropriate conversions as needed.  For a)
112 W( particular)111 W
21299 12265 MT
(wrapped procedure,)208 W
/Times-Italic SF
30723 XM
(DPSWriteTypedObjectArray)SH
/Times-Roman SF
43853 XM
(is called)209 W
21299 13462 MT
(zero or more times)
SH( \320 once)
151 W( for each input array specified.)SH
/Symbol SF
20518 15258 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSWriteStringChars)SH
/Times-Roman SF
31428 XM
(sends the text of strings)
14 W( or names.  It)13 W
21299 16455 MT
(appends characters to the current binary object)
185 W( sequence.)186 W
21299 17652 MT
(For a)
100 W( particular wrapped procedure,)99 W
/Times-Italic SF
37857 XM
(DPSWriteStringChars)SH
/Times-Roman SF
21299 18849 MT
(is called zero or more times to send the text of)
92 W( names and)93 W
21299 20046 MT
(strings.)SH
18891 22241 MT
(The overall length of arrays and strings sent by)1012 W
/Times-Italic SF
18899 23538 MT
(DPSWriteTypedObjectArray)SH
/Times-Roman SF
31931 XM
(and)SH
/Times-Italic SF
33905 XM
(DPSWriteStringChars)SH
/Times-Roman SF
44132 XM
(must be)112 W
18899 24835 MT
(consistent with the length information specified in the binary)
26 W( ob-)25 W
18899 26132 MT
(ject sequence header sent by)78 W
/Times-Italic SF
32084 XM
(DPSBinObjSeqWrite)SH
/Times-Roman SF
(. In)
78 W( particular,)79 W
18899 27429 MT
(don't rely on `)219 W
10 /Helvetica AF
(sizeof\050\051)SH
11 /Times-Roman AF
(' to return the correct size value of the)218 W
18899 28726 MT
(binary object sequence.)SH
/Helvetica SF
15557 31923 MT
(11.2)SH
18899 XM
(RECEIVING RESULTS)SH
/Times-Roman SF
18891 34118 MT
(Each wrapped procedure with output arguments constructs)
236 W( an)237 W
18899 35415 MT
(array containing)
124 W( elements of type `)123 W
10 /Helvetica AF
(DPSResultsRec)SH
11 /Times-Roman AF
('. This array)123 W
18899 36712 MT
(is called the)18 W
/Times-Italic SF
24482 XM
(result table)19 W
/Times-Roman SF
(. The index position of each element cor-)19 W
18899 38009 MT
(responds to the ordinal)
305 W( position of each output argument as)304 W
18899 39306 MT
(defined in the wrapped procedure: the first table entry)
82 W( \050index 0\051)83 W
18899 40603 MT
(corresponds to)
112 W( the first output argument, the second table entry)111 W
18899 41900 MT
(\050index 1\051 corresponds to the)
118 W( second argument, and so on. Each)119 W
18899 43197 MT
(entry defines one)
138 W( of the output arguments of a wrapped proce-)137 W
18899 44494 MT
(dure by specifying a data type, a count, and a pointer)
231 W( to the)232 W
18899 45791 MT
(storage for the)
327 W( value.)326 W
/Times-Italic SF
29764 XM
(DPSSetResultTable)SH
/Times-Roman SF
38981 XM
(registers the result)326 W
18899 47088 MT
(table with the context.)SH
18891 49283 MT
(The interpreter sends return)
149 W( values to the application as binary)150 W
18899 50580 MT
(object sequences. Wrapped procedures that)
249 W( have output argu-)248 W
18899 51877 MT
(ments use the)124 W
/Times-Bold SF
25535 XM
(printobject)SH
/Times-Roman SF
31189 XM
(operator to tag and send each return)125 W
18899 53174 MT
(value. \050See)
504 W( the discussion of the)503 W
/Times-Bold SF
36367 XM
(printobject)SH
/Times-Roman SF
42399 XM
(operator in)503 W
/Times-Italic SF
18899 54471 MT
(PostScript Language Extensions)
460 W( for the Display PostScript)461 W
18899 55768 MT
(System)SH
/Times-Roman SF
(.\051 The tag corresponds to the)
12 W( index of the output argument)11 W
18899 57065 MT
(in the result table. After the wrapped procedure finishes sending)64 W
18899 58362 MT
(the PostScript)
19 W( language program, it calls)18 W
/Times-Italic SF
37125 XM
(DPSAwaitReturnValues)SH
/Times-Roman SF
18899 59659 MT
(to wait for all of the results to come back.)SH
10 /Helvetica AF
4500 63450 MT
(74)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 75 77 
BS
0 SI
11 /Times-Roman AF
19791 6155 MT
(As the Client Library receives)
261 W( results from the interpreter, it)262 W
19799 7452 MT
(places each result into the output argument specified by)
298 W( the)297 W
19799 8749 MT
(result table. The tag of each result object)
45 W( in the sequence is used)46 W
19799 10046 MT
(as an index into the result table. When the Client)
378 W( Library)377 W
19799 11343 MT
(receives a tag that is greater than the last defined tag)
169 W( number,)170 W
/Times-Italic SF
19799 12640 MT
(DPSAwaitReturnValues)SH
/Times-Roman SF
30790 XM
(returns. This final tag is called the)
144 W( ter-)143 W
19799 13937 MT
(mination tag.)SH
19791 16132 MT
(Certain conventions must be followed to handle)
20 W( return values for)21 W
19799 17429 MT
(wrapped procedures properly:)SH
/Symbol SF
21418 19706 MT
(\267)SH
/Times-Roman SF
22199 XM
(The tag associated with the)
4 W( return value is the ordinal of the)3 W
22199 20903 MT
(output parameter as listed in the definition of the wrapped)99 W
22199 22100 MT
(procedure, starting)
144 W( from 0 and counting from left to right)143 W
22199 23297 MT
(\050see example below\051.)SH
/Symbol SF
21418 25093 MT
(\267)SH
/Times-Roman SF
22199 XM
(If the `)130 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' field)
130 W( of the `)131 W
10 /Helvetica AF
(DPSResultsRec)SH
11 /Times-Roman AF
(' is)131 W
/Symbol SF
43608 XM
(-)SH
/Times-Roman SF
(1, the ex-)131 W
22199 26290 MT
(pected result is a)
175 W( single element, or ``scalar,'' and return)174 W
22199 27487 MT
(values with the same tag overwrite previous values.  Other-)28 W
22199 28684 MT
(wise, the `)211 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' indicates the number of array)
211 W( elements)210 W
22199 29881 MT
(that remain to)
107 W( be received.  In this case, a series of return)108 W
22199 31078 MT
(values with the same tag are stored)
86 W( in successive elements)85 W
22199 32275 MT
(of the array.  If the value)
133 W( of `)134 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' is zero, further array)134 W
22199 33472 MT
(elements of the same tag value are ignored.)SH
/Symbol SF
21418 35268 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSAwaitReturnValues)SH
/Times-Roman SF
33383 XM
(returns when)
337 W( it notices that the)336 W
22199 36465 MT
(`)SH
10 /Helvetica AF
(resultTable)SH
11 /Times-Roman AF
(' pointer in the `)30 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' data object is)31 W
22199 37662 MT
(`)SH
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
('. The)
565 W( code that)
145 W( handles return values should note)144 W
22199 38859 MT
(the reception of the termination)
588 W( tag by setting the)589 W
22199 40056 MT
(`)SH
10 /Helvetica AF
(resultTable)SH
11 /Times-Roman AF
(' to `)135 W
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(' to indicate that there are)
135 W( no more)134 W
22199 41253 MT
(return values to receive for this wrapped procedure.)SH
19791 43448 MT
(Here is an example of a wrap with return values:)SH
9 /Helvetica AF
20951 45401 MT
(defineps Example\050| int *x, *y, *z\051)SH
22103 46499 MT
(10 20 30 x y z)SH
20951 47597 MT
(endps)SH
11 /Times-Roman AF
19791 49792 MT
(The code generated for this wrapped procedure is actually:)SH
8 /Helvetica AF
23690 63450 MT
(11 RUNTIME)
327 W( SUPPORT FOR WRAPPED PROCEDURES)SH
10 SS 
47485 XM
(75)SH
ES
%%Page: 76 78 
BS
0 SI
9 /Helvetica AF
20051 6056 MT
(10 20 30)SH
20051 7154 MT
(0 printobject)SH
21203 8252 MT
(% pop integer 30 off the operand stack,)SH
21203 9350 MT
(% use tag = 0 \050result table index = 0, first parameter 'x'\051)SH
21203 10448 MT
(% write binary object sequence)SH
20051 11546 MT
(1 printobject)SH
21203 12644 MT
(% pop integer 20 off the operand stack,)SH
21203 13742 MT
(% use tag = 1 \050result table index = 1, second parameter 'y'\051)SH
21203 14840 MT
(% write binary object sequence)SH
20051 15938 MT
(2 printobject)SH
21203 17036 MT
(% pop integer 10 off the operand stack,)SH
21203 18134 MT
(% use tag = 2 \050result table index = 2, third parameter 'z'\051)SH
21203 19232 MT
(% write binary object sequence)SH
20051 20330 MT
(0 3 printobject)SH
21203 21428 MT
(% push dummy value 0 on operand stack)SH
21203 22526 MT
(% pop integer 0 off operand stack,)SH
21203 23624 MT
(% use tag = 3 \050termination tag\051)SH
21203 24722 MT
(% write binary object sequence)SH
20051 25820 MT
(flush)SH
21203 26918 MT
(% make sure all data is sent back to the application)SH
11 SS 
15557 30115 MT
(11.3)SH
18899 XM
(MANAGING USER NAMES)SH
/Times-Roman SF
18891 32310 MT
(Name indices are the most efficient way to specify names)
139 W( in a)140 W
18899 33607 MT
(binary object sequence;)
52 W( refer to)51 W
/Times-Italic SF
33295 XM
(PostScript Language Extensions)51 W
18899 34904 MT
(for the Display)
273 W( PostScript System)274 W
/Times-Roman SF
35330 XM
(for a full description. The)274 W
18899 36201 MT
(Client Library manages the)
166 W( mapping of user names to indices.)165 W
18899 37498 MT
(Wrapped procedures map user names automatically.)
248 W( The first)249 W
18899 38795 MT
(time a wrapped procedure is)
173 W( called, it calls)172 W
/Times-Italic SF
39368 XM
(DPSMapNames)SH
/Times-Roman SF
46841 XM
(to)SH
18899 40092 MT
(map all user names specified)
112 W( in the wrapped procedure into in-)113 W
18899 41389 MT
(dices. The)
122 W( application may also call)121 W
/Times-Italic SF
35663 XM
(DPSMapNames)SH
/Times-Roman SF
43085 XM
(directly to)121 W
18899 42686 MT
(obtain name mappings.)SH
18891 44881 MT
(A name map is)
152 W( stored in a space. All contexts associated with)153 W
18899 46178 MT
(that space have)
81 W( the same name map. The name mapping for the)80 W
18899 47475 MT
(context is automatically kept up)
76 W( to date by the Client Library in)77 W
18899 48772 MT
(the following way:)SH
/Symbol SF
20518 51049 MT
(\267)SH
/Times-Roman SF
21299 XM
(Every wrapped)
744 W( procedure calls)743 W
/Times-Italic SF
38196 XM
(DPSBinObjSeqWrite)SH
/Times-Roman SF
(,)SH
21299 52246 MT
(which, in addition to sending)
168 W( the binary object sequence,)169 W
21299 53443 MT
(checks to see if the user name map is up to date.)SH
/Symbol SF
20518 55239 MT
(\267)SH
/Times-Italic SF
21299 XM
(DPSBinObjSeqWrite)SH
/Times-Roman SF
31351 XM
(calls)SH
/Times-Italic SF
34193 XM
(DPSUpdateNameMap)SH
/Times-Roman SF
44855 XM
(if the)551 W
21299 56436 MT
(name map of)
287 W( the space does not agree with the Client)288 W
21299 57633 MT
(Library's name map.)228 W
/Times-Italic SF
31954 XM
(DPSUpdateNameMap)SH
/Times-Roman SF
42293 XM
(may send a)228 W
10 /Helvetica AF
4500 63450 MT
(76)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 77 79 
BS
0 SI
11 /Times-Roman AF
22199 6155 MT
(series of)57 W
/Times-Bold SF
26283 XM
(defineusername)SH
/Times-Roman SF
34069 XM
(operators to the)
57 W( PostScript inter-)58 W
22199 7352 MT
(preter.)SH
/Times-Italic SF
19791 9547 MT
(DPSNameFromIndex)SH
/Times-Roman SF
29609 XM
(returns the text for the user name with the)75 W
19799 10844 MT
(given index. The string returned is owned by the Client)
60 W( Library;)61 W
19799 12141 MT
(treat it as read-only.)SH
/Helvetica SF
16457 15338 MT
(11.4)SH
19799 XM
(BINARY OBJECT SEQUENCES)SH
/Times-Roman SF
19791 17533 MT
(Syntactically, a)
225 W( binary object sequence is a single token. The)224 W
19799 18830 MT
(structure is described in detail in)224 W
/Times-Italic SF
35745 XM
(PostScript Language Exten-)224 W
19799 20127 MT
(sions for the Display)
138 W( PostScript System)137 W
/Times-Roman SF
(. The definitions in this)137 W
19799 21424 MT
(section correspond to the components of a binary)
291 W( object se-)292 W
19799 22721 MT
(quence.)SH
9 /Helvetica AF
22103 24674 MT
(#define DPS_HEADER_SIZE)SH
35999 XM
(4)SH
22103 26428 MT
(#define DPS_HI_IEEE)SH
35999 XM
(128)SH
22103 27526 MT
(#define DPS_LO_IEEE)SH
35999 XM
(129)SH
22103 28624 MT
(#define DPS_HI_NATIVE)SH
35999 XM
(130)SH
22103 29722 MT
(#define DPS_LO_NATIVE)SH
35999 XM
(131)SH
22103 31476 MT
(#ifndef DPS_DEF_TOKENTYPE)SH
22103 32574 MT
(#define DPS_DEF_TOKENTYPE)SH
35999 XM
(DPS_HI_IEEE)SH
22103 33672 MT
(#endif DPS_DEF_TOKENTYPE)288 W
22103 35426 MT
(typedef struct {)SH
23255 36524 MT
(unsigned char tokenType;)SH
23255 37622 MT
(unsigned char nTopElements;)SH
23255 38720 MT
(unsigned short length;)SH
23255 39818 MT
(DPSBinObjRec objects[1];)SH
22103 40916 MT
(} DPSBinObjSeqRec, *DPSBinObjSeq;)SH
11 /Times-Roman AF
19791 43111 MT
(A binary object sequence)
188 W( begins with a four-byte header. The)187 W
19799 44408 MT
(first byte indicates the token type. A binary object is)
74 W( defined by)75 W
19799 45705 MT
(one of the four token type codes listed)
1099 W( above.)1098 W
19799 47002 MT
(`)SH
10 /Helvetica AF
(DPS_DEF_TOKENTYPE)SH
11 /Times-Roman AF
(' defines the default token)
71 W( type for bi-)72 W
19799 48299 MT
(nary object sequences generated by a particular implementation)113 W
19799 49596 MT
(of the Client Library. `)14 W
10 /Helvetica AF
(DPS_DEF_TOKENTYPE)SH
11 /Times-Roman AF
(' must be)
14 W( consis-)15 W
19799 50893 MT
(tent with the machine)
27 W( architecture upon which the Client Library)26 W
19799 52190 MT
(is implemented.)SH
19791 54385 MT
(The `)114 W
10 /Helvetica AF
(nTopElements)SH
11 /Times-Roman AF
(' byte indicates)
114 W( the number of top-level ob-)115 W
19799 55682 MT
(jects in the)
59 W( sequence. A binary object sequence can have from 1)58 W
19799 56979 MT
(to 255 top-level objects. If more top-level objects)
135 W( are required,)136 W
19799 58276 MT
(use an)241 W
/Times-Italic SF
23335 XM
(extended)SH
/Times-Roman SF
27758 XM
(binary object sequence \050described in Section)240 W
19799 59573 MT
(11.5\051.)SH
8 /Helvetica AF
23690 63450 MT
(11 RUNTIME)
327 W( SUPPORT FOR WRAPPED PROCEDURES)SH
10 SS 
47485 XM
(77)SH
ES
%%Page: 78 80 
BS
0 SI
11 /Times-Roman AF
18891 6155 MT
(The next two bytes form a nonzero 16-bit integer that is the total)33 W
18899 7452 MT
(byte length of the binary object sequence.)SH
18891 9647 MT
(The header is followed by a sequence of objects.)SH
9 /Helvetica AF
20051 11600 MT
(#define DPS_NULL)SH
35099 XM
(0)SH
20051 12698 MT
(#define DPS_INT)SH
35099 XM
(1)SH
20051 13796 MT
(#define DPS_REAL)SH
35099 XM
(2)SH
20051 14894 MT
(#define DPS_NAME)SH
35099 XM
(3)SH
20051 15992 MT
(#define DPS_BOOL)SH
35099 XM
(4)SH
20051 17090 MT
(#define DPS_STRING)SH
35099 XM
(5)SH
20051 18188 MT
(#define DPS_IMMEDIATE)SH
35099 XM
(6)SH
20051 19286 MT
(#define DPS_ARRAY)SH
35099 XM
(9)SH
20051 20384 MT
(#define DPS_MARK)SH
35099 XM
(10)SH
11 /Times-Roman AF
18891 22579 MT
(The first byte of)
98 W( an object describes its attributes and type. The)97 W
18899 23876 MT
(types are listed above and correspond)
53 W( to the PostScript language)54 W
18899 25173 MT
(objects that)SH
/Times-Italic SF
24215 XM
(pswrap)SH
/Times-Roman SF
27730 XM
(generates.)SH
9 /Helvetica AF
20051 27126 MT
(#define DPS_LITERAL)SH
29699 XM
(0)SH
20051 28224 MT
(#define DPS_EXEC)SH
29699 XM
(0x080)SH
11 /Times-Roman AF
18891 30419 MT
(The high-order bit indicates whether the object has the literal \0500\051)40 W
18899 31716 MT
(or executable \0501\051 attribute.)SH
18891 33911 MT
(The next byte is the tag byte, which)
16 W( must be zero for objects sent)17 W
18899 35208 MT
(to the interpreter. Result values sent back from the)
193 W( interpreter)192 W
18899 36505 MT
(will use the tag field, as described in Section 11.2.)SH
18891 38700 MT
(The next two)
46 W( bytes form a 16-bit integer that is the length of the)47 W
18899 39997 MT
(object. The unit value)
86 W( of the length field depends upon the type)85 W
18899 41294 MT
(of the object. For)
71 W( arrays, the length indicates the number of ele-)72 W
18899 42591 MT
(ments in the array. For strings, the length)
5 W( indicates the number of)4 W
18899 43888 MT
(characters.)SH
18891 46083 MT
(The last four bytes of the)
76 W( object form the value field. The inter-)77 W
18899 47380 MT
(pretation of this field depends upon the type of the object.)SH
10 /Helvetica AF
4500 63450 MT
(78)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 79 81 
BS
0 SI
9 /Helvetica AF
20951 6056 MT
(typedef struct {)SH
22103 7154 MT
(unsigned char attributedType;)SH
22103 8252 MT
(unsigned char tag;)SH
22103 9350 MT
(short length;)SH
22103 10448 MT
(long int val;)SH
20951 11546 MT
(} DPSBinObjGeneric;)
SH( /*)
1152 W( boolean, int, string, name and array */)SH
20951 13300 MT
(typedef struct {)SH
22103 14398 MT
(unsigned char attributedType;)SH
22103 15496 MT
(unsigned char tag;)SH
22103 16594 MT
(short length;)SH
22103 17692 MT
(float realVal;)SH
20951 18790 MT
(} DPSBinObjReal;)
SH( /*)
2016 W( float */)SH
11 /Times-Roman AF
19791 20985 MT
(`)SH
10 /Helvetica AF
(DPSBinObjGeneric)SH
11 /Times-Roman AF
(' and `)195 W
10 /Helvetica AF
(DPSBinObjReal)SH
11 /Times-Roman AF
(' are)
195 W( defined for the)194 W
19799 22282 MT
(use of wraps. They make it easier to initialize the static)
63 W( portions)64 W
19799 23579 MT
(of the binary object sequence.)SH
9 /Helvetica AF
20951 25532 MT
(typedef struct {)SH
22103 26630 MT
(unsigned char attributedType;)SH
22103 27728 MT
(unsigned char tag;)SH
22103 28826 MT
(short length;)SH
22103 29924 MT
(union {)SH
23255 31022 MT
(long int integerVal;)SH
23255 32120 MT
(float realVal;)SH
23255 33218 MT
(long int nameVal;)
SH( /*)
864 W( offset or index */)SH
23255 34316 MT
(long int booleanVal;)SH
23255 35414 MT
(long int stringVal;  /* offset */)SH
23255 36512 MT
(long int arrayVal;  /* offset */)SH
22103 37610 MT
(} val;)SH
20951 38708 MT
(} DPSBinObjRec;)SH
11 /Times-Roman AF
19791 40903 MT
(`)SH
10 /Helvetica AF
(DPSBinObjRec)SH
11 /Times-Roman AF
(' is a general-purpose variant record)
212 W( for inter-)211 W
19799 42200 MT
(preting an object in a binary object sequence.)SH
/Helvetica SF
16457 45397 MT
(11.5)SH
19799 XM
(EXTENDED BINARY OBJECT SEQUENCES)SH
/Times-Roman SF
19791 47592 MT
(An)SH
/Times-Italic SF
21444 XM
(extended binary object sequence)34 W
/Times-Roman SF
36178 XM
(is required)
34 W( if there are more)35 W
19799 48889 MT
(than 255 top-level)
85 W( objects in the sequence. The extended binary)84 W
19799 50186 MT
(object sequence is)
3519 W( represented by)3520 W
19799 51483 MT
(`)SH
10 /Helvetica AF
(DPSExtendedBinObjSeqRec)SH
11 /Times-Roman AF
(', as follows:)SH
19799 53635 MT
(Byte 0)SH
26998 XM
(Same as for a)
89 W( normal binary object sequence; it)88 W
26998 54832 MT
(represents the token type.)SH
19799 56628 MT
(Byte 1)SH
26998 XM
(Set to zero; indicates that this is an extended)
61 W( bi-)62 W
26998 57825 MT
(nary object sequence. \050In a normal binary object)49 W
8 /Helvetica AF
23690 63450 MT
(11 RUNTIME)
327 W( SUPPORT FOR WRAPPED PROCEDURES)SH
10 SS 
47485 XM
(79)SH
ES
%%Page: 80 82 
BS
0 SI
11 /Times-Roman AF
26098 6155 MT
(sequence, this byte represents the number of top-)5 W
26098 7352 MT
(level objects.\051)SH
18899 9148 MT
(Bytes 2-3)SH
26098 XM
(A 16-bit value representing the number of)
149 W( top-)148 W
26098 10345 MT
(level elements.)SH
18899 12141 MT
(Bytes 4-7)SH
26098 XM
(A 32-bit)
52 W( value representing the overall length of)53 W
26098 13338 MT
(the extended binary object sequence.)SH
18891 15533 MT
(The byte order in)
51 W( numeric fields is according to the number rep-)50 W
18899 16830 MT
(resentation specified by the token type.)SH
18891 19025 MT
(The layout of)
186 W( the remainder of the extended binary object se-)187 W
18899 20322 MT
(quence is identical to that of a normal binary object sequence.)SH
/Helvetica SF
15557 23519 MT
(11.6)SH
/Helvetica-Oblique SF
18899 XM
(DPSFRIENDS.H)SH
/Helvetica SF
27441 XM
(DATA STRUCTURES)SH
/Times-Roman SF
18891 25714 MT
(This section describes the data structures used by the)224 W
/Times-Italic SF
44457 XM
(pswrap)SH
/Times-Roman SF
18899 27011 MT
(program as part of its support for wrapped procedures.)SH
28806 50 18891 28707 LH BX1
10 /Helvetica-Bold AF
18899 30260 MT
(Note:)SH
11 /Times-Roman AF
22209 XM
(The `)433 W
10 /Helvetica AF
(DPSContextRec)SH
11 /Times-Roman AF
(' data structure)
433 W( and its handle,)434 W
18899 31557 MT
(`)SH
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(', are part of the)55 W
/Times-Italic SF
32370 XM
(dpsfriends.h)SH
/Times-Roman SF
38108 XM
(header file.  They are)54 W
18899 32854 MT
(documented in Section 9.1 because)
423 W( they are also used by)424 W
/Times-Italic SF
18899 34151 MT
(dpsclient.h)SH
/Times-Roman SF
23971 XM
(procedures.)SH
28806 50 18891 35190 LH BX1
10 /Helvetica-Bold AF
9300 38513 MT
(DPSBinObjGeneric)SH
9 /Helvetica AF
18899 39611 MT
(typedef struct {)SH
20051 40709 MT
(unsigned char attributedType;)SH
20051 41807 MT
(unsigned char tag;)SH
20051 42905 MT
(unsigned short length;)SH
20051 44003 MT
(long int val;)SH
18899 45101 MT
(} DPSBinObjGeneric;)
SH( /*)
1152 W( boolean, int, string, name and array */)SH
11 /Times-Roman AF
18899 47196 MT
(is defined for the use of wraps.)
115 W( It is used to initialize the static)114 W
18899 48493 MT
(portions of the)
26 W( binary object sequence. See `)27 W
10 /Helvetica AF
(DPSBinObjReal)SH
11 /Times-Roman AF
(' for)27 W
18899 49790 MT
(type `)SH
10 /Helvetica AF
(real)SH
11 /Times-Roman AF
('.)SH
10 /Helvetica AF
4500 63450 MT
(80)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 81 83 
BS
0 SI
10 /Helvetica-Bold AF
10200 6129 MT
(DPSBinObjReal)SH
9 /Helvetica AF
19799 XM
(typedef struct {)SH
20951 7227 MT
(unsigned char attributedType;)SH
20951 8325 MT
(unsigned char tag;)SH
20951 9423 MT
(unsigned short length;)SH
20951 10521 MT
(float realVal;)SH
19799 11619 MT
(} DPSBinObjReal;)
SH( /*)
2016 W( float */)SH
11 /Times-Roman AF
19799 13714 MT
(is similar to `)SH
10 /Helvetica AF
(DPSBinObjGeneric)SH
11 /Times-Roman AF
(', but represents a real number.)SH
10 /Helvetica-Bold AF
10200 17037 MT
(DPSBinObjRec)SH
9 /Helvetica AF
19799 XM
(typedef struct {)SH
20951 18135 MT
(unsigned char attributedType;)SH
20951 19233 MT
(unsigned char tag;)SH
20951 20331 MT
(unsigned short length;)SH
20951 21429 MT
(union {)SH
22103 22527 MT
(long int integerVal;)SH
22103 23625 MT
(float realVal;)SH
22103 24723 MT
(long int nameVal;)
SH( /*)
864 W( offset or index */)SH
22103 25821 MT
(long int booleanVal;)SH
22103 26919 MT
(long int stringVal;  /* offset */)SH
22103 28017 MT
(long int arrayVal;  /* offset */)SH
20951 29115 MT
(} val;)SH
19799 30213 MT
(} DPSBinObjRec;)SH
11 /Times-Roman AF
19799 32308 MT
(is a general-purpose variant record for interpreting)
40 W( an object in a)39 W
19799 33605 MT
(binary object sequence.)SH
10 /Helvetica-Bold AF
10200 36928 MT
(DPSBinObjSeqRec)SH
9 /Helvetica AF
19799 38026 MT
(typedef struct {)SH
20951 39124 MT
(unsigned char tokenType;)SH
20951 40222 MT
(unsigned char nTopElements;)SH
20951 41320 MT
(unsigned short length;)SH
20951 42418 MT
(DPSBinObjRec objects[1];)SH
19799 43516 MT
(} DPSBinObjSeqRec, *DPSBinObjSeq;)SH
11 /Times-Roman AF
19799 45611 MT
(This data)
121 W( type is provided as a convenience for accessing a bi-)122 W
19799 46908 MT
(nary object sequence copied from an I/O buffer.)SH
8 /Helvetica AF
23690 63450 MT
(11 RUNTIME)
327 W( SUPPORT FOR WRAPPED PROCEDURES)SH
10 SS 
47485 XM
(81)SH
ES
%%Page: 82 84 
BS
0 SI
10 /Helvetica-Bold AF
9300 6129 MT
(DPSDefinedType)SH
9 /Helvetica AF
18899 XM
(typedef enum {)SH
19475 7227 MT
(dps_tBoolean,)SH
19475 8325 MT
(dps_tChar, dps_tUChar,)864 W
19475 9423 MT
(dps_tFloat, dps_tDouble,)576 W
19475 10521 MT
(dps_tShort, dps_tUShort,)576 W
19475 11619 MT
(dps_tInt, dps_tUInt,)1152 W
19475 12717 MT
(dps_tLong, dps_tULong)
864 W( } DPSDefinedType;)SH
11 /Times-Roman AF
18899 14812 MT
(enumerates the C data types used to describe wrap arguments.)SH
10 /Helvetica-Bold AF
9300 18135 MT
(DPSExtendedBinObjSeqRec)SH
9 /Helvetica AF
18899 19233 MT
(typedef struct {)SH
20051 20331 MT
(unsigned char tokenType;)SH
20051 21429 MT
(unsigned char escape;  /* zero if this is an extended sequence */)SH
20051 22527 MT
(unsigned short nTopElements;)SH
20051 23625 MT
(unsigned long length;)SH
20051 24723 MT
(DPSBinObjRec objects[1];)SH
18899 25821 MT
(} DPSExtendedBinObjSeqRec, *DPSExtendedBinObjSeq;)SH
11 /Times-Roman AF
18899 27916 MT
(This data type has a purpose)
30 W( similar to `)29 W
10 /Helvetica AF
(DPSBinObjSeqRec)SH
11 /Times-Roman AF
(', but)29 W
18899 29213 MT
(is used for extended binary object sequences.)SH
10 /Helvetica-Bold AF
9300 32536 MT
(DPSNameEncoding)SH
9 /Helvetica AF
18899 33634 MT
(typedef enum {)SH
19475 34732 MT
(dps_indexed, dps_strings)SH
19475 35830 MT
(} DPSNameEncoding;)SH
11 /Times-Roman AF
18899 37925 MT
(defines the two possible encodings for user)
440 W( names in the)441 W
18899 39222 MT
(`)SH
10 /Helvetica AF
(dps_binObjSeq)SH
11 /Times-Roman AF
(' and `)49 W
10 /Helvetica AF
(dps_encodedTokens)SH
11 /Times-Roman AF
(' forms of PostScript)49 W
18899 40519 MT
(language programs.)SH
10 /Helvetica-Bold AF
9300 43842 MT
(DPSProcs)SH
9 /Helvetica AF
18899 XM
(/* pointer to procedures record */)SH
11 /Times-Roman AF
18899 45937 MT
(See `)SH
10 /Helvetica AF
(DPSProcsRec)SH
11 /Times-Roman AF
('.)SH
10 /Helvetica AF
4500 63450 MT
(82)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 83 85 
BS
0 SI
10 /Helvetica-Bold AF
10200 6129 MT
(DPSProcsRec)SH
9 /Helvetica AF
19799 XM
(typedef struct {)SH
20375 7227 MT
(void \050*BinObjSeqWrite\051\050 /* DPSContext ctxt, char *buf, unsigned int count */ \051;)SH
20375 8325 MT
(void \050*WriteTypedObjectArray\051\050 /*)SH
23255 9423 MT
(DPSContext ctxt,)SH
23255 10521 MT
(DPSDefinedType type;)SH
23255 11619 MT
(char *array,)SH
23255 12717 MT
(unsigned int length */ \051;)SH
20375 13815 MT
(void \050*WriteStringChars\051\050 /* DPSContext ctxt; char *buf; unsigned int count; */ \051;)SH
20375 14913 MT
(void \050*WriteData\051\050 /* DPSContext ctxt, char *buf, unsigned int count */ \051;)SH
20375 16011 MT
(void \050*WritePostScript\051\050 /* DPSContext ctxt, char *buf, unsigned int count */ \051;)SH
20375 17109 MT
(void \050*FlushContext\051\050 /* DPSContext ctxt */ \051;)SH
20375 18207 MT
(void \050*ResetContext\051\050 /* DPSContext ctxt */ \051;)SH
20375 19305 MT
(void \050*UpdateNameMap\051\050 /* DPSContext ctxt */ \051;)SH
20375 20403 MT
(void \050*AwaitReturnValues\051\050 /* DPSContext ctxt */ \051;)SH
20375 21501 MT
(void \050*Interrupt\051\050 /* DPSContext ctxt */ \051;)SH
20375 22599 MT
(void \050*DestroyContext\051\050 /* DPSContext ctxt */ \051;)SH
20375 23697 MT
(void \050*WaitContext\051\050 /* DPSContext ctxt */ \051;)SH
20375 24795 MT
(} DPSProcsRec, *DPSProcs;)SH
11 /Times-Roman AF
19799 26890 MT
(defines the data structure pointed to by `)SH
10 /Helvetica AF
(DPSProcs)SH
11 /Times-Roman AF
('.)SH
19799 28985 MT
(This record contains pointers to procedures that implement all of)33 W
19799 30282 MT
(the operations that can be performed on)
431 W( a context. These)430 W
19799 31579 MT
(procedures are analogous to the instance methods of an)
39 W( object in)40 W
19799 32876 MT
(an object-oriented language.)SH
28798 50 19799 34572 LH BX1
10 /Helvetica-Bold AF
19799 36125 MT
(Note:)SH
11 /Times-Roman AF
23109 XM
(Application developers need not be concerned with the)181 W
19799 37422 MT
(contents of)
136 W( this data structure.  Do not change the `)137 W
10 /Helvetica AF
(DPSProcs)SH
11 /Times-Roman AF
(')SH
19799 38719 MT
(pointer. Do)
275 W( not change the contents of `)SH
10 /Helvetica AF
(DPSProcsRec)SH
11 /Times-Roman AF
('.)SH
28798 50 19799 39758 LH BX1
10 /Helvetica-Bold AF
10200 43081 MT
(DPSProgramEncoding)SH
9 /Helvetica AF
19799 44179 MT
(typedef enum {)SH
20375 45277 MT
(dps_ascii, dps_binObjSeq, dps_encodedTokens)SH
20375 46375 MT
(} DPSProgramEncoding;)SH
11 /Times-Roman AF
19799 48470 MT
(defines the three possible encodings of)
383 W( PostScript language)382 W
19799 49767 MT
(programs: ASCII encoding, binary object sequence encoding,)279 W
19799 51064 MT
(and binary token encoding.)SH
8 /Helvetica AF
23690 63450 MT
(11 RUNTIME)
327 W( SUPPORT FOR WRAPPED PROCEDURES)SH
10 SS 
47485 XM
(83)SH
ES
%%Page: 84 86 
BS
0 SI
10 /Helvetica-Bold AF
9300 6129 MT
(DPSResultsRec)SH
9 /Helvetica AF
18899 XM
(typedef struct {)SH
19475 7227 MT
(DPSDefinedType type;)SH
19475 8325 MT
(int count;)SH
19475 9423 MT
(char *value;)SH
19475 10521 MT
(} DPSResultsRec, *DPSResults;)SH
11 /Times-Roman AF
18899 12616 MT
(Each wrapped procedure)
249 W( constructs an array called the)248 W
/Times-Italic SF
45191 XM
(result)SH
18899 13913 MT
(table)SH
/Times-Roman SF
(, which consists)
53 W( of elements of type `)54 W
10 /Helvetica AF
(DPSResultsRec)SH
11 /Times-Roman AF
('. The)54 W
18899 15210 MT
(index position of)
122 W( each element corresponds to the ordinal posi-)121 W
18899 16507 MT
(tion of each output parameter as defined in the wrapped proce-)119 W
18899 17804 MT
(dure; for example, index 0 \050the)
110 W( first table entry\051 corresponds to)109 W
18899 19101 MT
(the first output parameter, index 1)
11 W( corresponds to the second out-)12 W
18899 20398 MT
(put parameter, and so on.)SH
18899 22493 MT
(`)SH
10 /Helvetica AF
(type)SH
11 /Times-Roman AF
(' specifies)
330 W( the formal type of the return value. `)329 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(')SH
18899 23790 MT
(specifies the number of values expected;)
67 W( this supports array for-)68 W
18899 25087 MT
(mals. `)57 W
10 /Helvetica AF
(value)SH
11 /Times-Roman AF
(' points to the location of the first)
57 W( value; the storage)56 W
18899 26384 MT
(beginning there must have room for `)345 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' values)
345 W( of type)346 W
18899 27681 MT
(`)SH
10 /Helvetica AF
(type)SH
11 /Times-Roman AF
('. If `)117 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' is)117 W
/Symbol SF
28007 XM
(-)SH
/Times-Roman SF
(1, `)116 W
10 /Helvetica AF
(value)SH
11 /Times-Roman AF
(' points to a scalar \050single\051 result)116 W
18899 28978 MT
(argument. If `)203 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' is zero, any subsequent return)
203 W( values are)204 W
18899 30275 MT
(ignored.)SH
10 /Helvetica-Bold AF
9300 33598 MT
(DPSSpace)SH
9 /Helvetica AF
18899 XM
(/* handle for space record */)SH
11 /Times-Roman AF
18899 35693 MT
(See `)SH
10 /Helvetica AF
(DPSSpaceRec)SH
11 /Times-Roman AF
('.)SH
10 /Helvetica-Bold AF
9300 39016 MT
(DPSSpaceRec)SH
9 /Helvetica AF
18899 XM
(typedef struct {)SH
19475 40114 MT
(DPSSpaceProcs procs;)SH
19475 41212 MT
(} DPSSpaceRec, *DPSSpace;)SH
18899 43408 MT
(typedef struct {)SH
19475 44506 MT
(void \050*DestroySpace\051\050/* DPSSpace space */\051;)SH
19475 45604 MT
(} DPSSpaceProcsRec, *DPSSpaceProcs;)SH
11 /Times-Roman AF
18899 47699 MT
(provides a representation of a space. See also)61 W
/Times-Italic SF
39573 XM
(DPSDestroySpace)SH
/Times-Roman SF
18899 48996 MT
(in Section 9.2.)SH
/Helvetica SF
15557 52193 MT
(11.7)SH
/Helvetica-Oblique SF
18899 XM
(DPSFRIENDS.H)SH
/Helvetica SF
27441 XM
(PROCEDURES)SH
/Times-Roman SF
18891 54388 MT
(The following is an alphabetical)
94 W( listing of the procedures in the)95 W
18899 55685 MT
(Client Library header file)57 W
/Times-Italic SF
30611 XM
(dpsfriends.h)SH
/Times-Roman SF
(. These procedures are for)57 W
18899 56982 MT
(experts only; most application)
238 W( programmers don't need them.)239 W
18899 58279 MT
(The)SH
/Times-Italic SF
21040 XM
(pswrap)SH
/Times-Roman SF
24711 XM
(translator inserts calls to these procedures when it)155 W
10 /Helvetica AF
4500 63450 MT
(84)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 85 87 
BS
0 SI
11 /Times-Roman AF
19799 6155 MT
(creates C-callable wrapped procedures specified by the applica-)105 W
19799 7452 MT
(tion programmer.)SH
10 /Helvetica-Bold AF
10200 10775 MT
(DPSAwaitReturnValues)SH
9 /Helvetica AF
19799 11873 MT
(void DPSAwaitReturnValues\050ctxt\051)SH
19799 12971 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
19799 15066 MT
(waits for)
645 W( all results described by the result table; see)644 W
19799 16363 MT
(`)SH
10 /Helvetica AF
(DPSResultRec)SH
11 /Times-Roman AF
('. It uses the)
12 W( tag of each object in the sequence to)13 W
19799 17660 MT
(find the corresponding entry in the result table.)
656 W( When)655 W
/Times-Italic SF
19799 18957 MT
(DPSAwaitReturnValues)SH
/Times-Roman SF
30658 XM
(receives a)
12 W( tag that is greater than the last)13 W
19799 20254 MT
(defined tag)
355 W( number, there are no more return values to be)354 W
19799 21551 MT
(received and the procedure)
164 W( returns. This final tag is called the)165 W
19799 22848 MT
(termination tag.)259 W
/Times-Italic SF
27557 XM
(DPSSetResultTable)SH
/Times-Roman SF
36706 XM
(must be called to set the)258 W
19799 24145 MT
(result table before any calls to)SH
/Times-Italic SF
33299 XM
(DPSBinObjSeqWrite)SH
/Times-Roman SF
(.)SH
/Times-Italic SF
19799 26240 MT
(DPSAwaitReturnValues)SH
/Times-Roman SF
30905 XM
(can call the context's error procedure)259 W
19799 27537 MT
(with `)5 W
10 /Helvetica AF
(dps_err_resultTagCheck)SH
11 /Times-Roman AF
(' or `)5 W
10 /Helvetica AF
(dps_err_resultTypeCheck)SH
11 /Times-Roman AF
('. It)4 W
19799 28834 MT
(will return prematurely if it encounters a `)SH
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(' error.)SH
10 /Helvetica-Bold AF
10200 32157 MT
(DPSBinObjSeqWrite)SH
9 /Helvetica AF
19799 33255 MT
(void DPSBinObjSeqWrite\050ctxt, buf, count\051)SH
19799 34353 MT
(DPSContext ctxt;)SH
19799 35451 MT
(char *buf;)SH
19799 36549 MT
(unsigned int count;)SH
11 /Times-Roman AF
19799 38644 MT
(sends the beginning of a)
106 W( binary object sequence generated by a)107 W
19799 39941 MT
(wrap. `)10 W
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(' points to a buffer containing `)9 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' bytes of a binary)9 W
19799 41238 MT
(object sequence. `)22 W
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(' must point to the beginning of)
22 W( a sequence,)23 W
19799 42535 MT
(which includes at)
199 W( least the header and the entire top-level se-)198 W
19799 43832 MT
(quence of objects.)SH
/Times-Italic SF
19799 45927 MT
(DPSBinObjSeqWrite)SH
/Times-Roman SF
29354 XM
(may also)
54 W( include subsidiary array elements)55 W
19799 47224 MT
(and/or strings. It writes PostScript)
125 W( language as specified by the)124 W
19799 48521 MT
(format and encoding variables of `)141 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(', doing appropriate)
141 W( con-)142 W
19799 49818 MT
(versions as)
120 W( needed. If the buffer does not contain the entire bi-)119 W
19799 51115 MT
(nary object sequence, one or more calls to)1470 W
/Times-Italic SF
19799 52412 MT
(DPSWriteTypedObjectArray)SH
/Times-Roman SF
32899 XM
(and/or)SH
/Times-Italic SF
36163 XM
(DPSWriteStringChars)SH
/Times-Roman SF
46457 XM
(must)SH
19799 53709 MT
(follow immediately; `)41 W
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(' and its contents must remain valid un-)41 W
19799 55006 MT
(til the entire binary)
672 W( object sequence has been written.)671 W
/Times-Italic SF
19799 56303 MT
(DPSBinObjSeqWrite)SH
/Times-Roman SF
29523 XM
(ensures that the user name map is up to)223 W
19799 57600 MT
(date.)SH
8 /Helvetica AF
23690 63450 MT
(11 RUNTIME)
327 W( SUPPORT FOR WRAPPED PROCEDURES)SH
10 SS 
47485 XM
(85)SH
ES
%%Page: 86 88 
BS
0 SI
10 /Helvetica-Bold AF
9300 6129 MT
(DPSMapNames)SH
9 /Helvetica AF
18899 XM
(void DPSMapNames\050ctxt, nNames, names, indices\051)SH
18899 7227 MT
(DPSContext ctxt;)SH
18899 8325 MT
(unsigned int nNames;)SH
18899 9423 MT
(char **names;)SH
18899 10521 MT
(long int **indices;)SH
11 /Times-Roman AF
18899 12616 MT
(maps all specified)
173 W( names into user name indices, sending new)172 W
/Times-Bold SF
18899 13913 MT
(defineusername)SH
/Times-Roman SF
26809 XM
(definitions as)
181 W( needed. `)182 W
10 /Helvetica AF
(names)SH
11 /Times-Roman AF
(' is an array of)182 W
18899 15210 MT
(strings whose elements are the)
282 W( user names. `)281 W
10 /Helvetica AF
(nNames)SH
11 /Times-Roman AF
(' is the)281 W
18899 16507 MT
(number of elements in the array. `)47 W
10 /Helvetica AF
(indices)SH
11 /Times-Roman AF
(' is an)
47 W( array of pointers)48 W
18899 17804 MT
(to `)15 W
10 /Helvetica AF
(\050long int *\051)15 W
11 /Times-Roman AF
(' integers, which are the locations in which)
15 W( to store)14 W
18899 19101 MT
(the indices.)344 W
/Times-Italic SF
24872 XM
(DPSMapNames)SH
/Times-Roman SF
32517 XM
(is normally called automatically)345 W
18899 20398 MT
(from within wraps. The)
112 W( application can also call this procedure)111 W
18899 21695 MT
(directly to obtain name mappings.)SH
/Times-Italic SF
18899 23790 MT
(DPSMapNames)SH
/Times-Roman SF
26907 XM
(calls the context's error procedure with)707 W
18899 25087 MT
(`)SH
10 /Helvetica AF
(dps_err_nameTooLong)SH
11 /Times-Roman AF
('.)SH
28798 50 18899 26783 LH BX1
10 /Helvetica-Bold AF
18899 28336 MT
(Note:)SH
11 /Times-Roman AF
22209 XM
(The caller must ensure that)
254 W( the string pointers remain)253 W
18899 29633 MT
(valid after the procedure returns.  The Client Library becomes)166 W
18899 30930 MT
(the owner of all strings passed to it with)SH
/Times-Italic SF
36772 XM
(DPSMapNames)SH
/Times-Roman SF
(.)SH
28798 50 18899 31969 LH BX1
18899 34064 MT
(The same name may be used several times in a wrap. To)
61 W( reduce)60 W
18899 35361 MT
(string storage,)
212 W( these duplicates can be eliminated by using an)213 W
18899 36658 MT
(optimization recognized by)53 W
/Times-Italic SF
31369 XM
(DPSMapNames)SH
/Times-Roman SF
(. If the pointer to the)52 W
18899 37955 MT
(string in the array `)213 W
10 /Helvetica AF
(names)SH
11 /Times-Roman AF
(' is null)
213 W( \320 that)
364 W( is,)
213 W( `)214 W
10 /Helvetica AF
(\050char *\0510)214 W
11 /Times-Roman AF
(' \320)365 W
/Times-Italic SF
18899 39252 MT
(DPSMapNames)SH
/Times-Roman SF
26234 XM
(uses the nearest non-null name that)
34 W( precedes the)33 W
18899 40549 MT
(`)SH
10 /Helvetica AF
(\050char *\0510)63 W
11 /Times-Roman AF
(' entry in the array. The first element of `)63 W
10 /Helvetica AF
(names)SH
11 /Times-Roman AF
(' must)64 W
18899 41846 MT
(be non-null. This optimization)
91 W( works best if you sort the names)90 W
18899 43143 MT
(so that duplicate occurrences are adjacent.)SH
/Times-Bold SF
18899 45238 MT
(Example:)SH
/Times-Italic SF
23825 XM
(DPSMapNames)SH
/Times-Roman SF
31256 XM
(treats the following arrays as equiv-)130 W
18899 46535 MT
(alent, but the one on the right saves storage.)SH
9 /Helvetica AF
18899 48488 MT
({)SH
33299 XM
({)SH
18899 49586 MT
("boxes",)SH
33299 XM
("boxes",)SH
18899 50684 MT
("drawMe",)SH
33299 XM
("drawMe",)SH
18899 51782 MT
("drawMe",)SH
33299 XM
(\050char *\0510,)SH
18899 52880 MT
("init",)SH
33299 XM
("init",)SH
18899 53978 MT
("makeAPath",)SH
33299 XM
("makeAPath",)SH
18899 55076 MT
("returnAClip",)SH
33299 XM
("returnAClip",)SH
18899 56174 MT
("returnAClip",)SH
33299 XM
(\050char *\0510,)SH
18899 57272 MT
("returnAClip")SH
33299 XM
(\050char *\0510)SH
18899 58370 MT
(})SH
33299 XM
(})SH
10 SS 
4500 63450 MT
(86)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 87 89 
BS
0 SI
10 /Helvetica-Bold AF
10200 6129 MT
(DPSNameFromIndex)SH
9 /Helvetica AF
19799 7227 MT
(char *DPSNameFromIndex\050index\051)SH
19799 8325 MT
(long int index;)SH
11 /Times-Roman AF
19799 10420 MT
(returns the text for the user name)
247 W( with the given index. The)246 W
19799 11717 MT
(string returned must be treated as read-only. `)282 W
10 /Helvetica AF
(NULL)SH
11 /Times-Roman AF
(' will be)283 W
19799 13014 MT
(returned if `)SH
10 /Helvetica AF
(index)SH
11 /Times-Roman AF
(' is invalid.)SH
10 /Helvetica-Bold AF
10200 16337 MT
(DPSSetResultTable)SH
9 /Helvetica AF
19799 17435 MT
(void DPSSetResultTable\050ctxt, tbl, len\051)SH
19799 18533 MT
(DPSContext ctxt;)SH
19799 19631 MT
(DPSResults tbl;)SH
19799 20729 MT
(unsigned int len;)SH
11 /Times-Roman AF
19799 22824 MT
(sets the result table and its length)
105 W( in `)104 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
('. This operation must)104 W
19799 24121 MT
(be performed before a wrap body that can return a value is sent)84 W
19799 25418 MT
(to the interpreter.)SH
10 /Helvetica-Bold AF
10200 28741 MT
(DPSUpdateNameMap)SH
9 /Helvetica AF
19799 29839 MT
(void DPSUpdateNameMap\050ctxt\051)SH
19799 30937 MT
(DPSContext ctxt;)SH
11 /Times-Roman AF
19799 33032 MT
(sends a series of)122 W
/Times-Bold SF
27738 XM
(defineusername)SH
/Times-Roman SF
35588 XM
(commands to the interpreter.)121 W
19799 34329 MT
(This procedure is called if the name map of the context's)
2 W( space is)3 W
19799 35626 MT
(not synchronized with the Client Library name map.)SH
10 /Helvetica-Bold AF
10200 38949 MT
(DPSWriteStringChars)SH
9 /Helvetica AF
19799 40047 MT
(void DPSWriteStringChars\050ctxt, buf, count\051;)SH
19799 41145 MT
(DPSContext ctxt;)SH
19799 42243 MT
(char *buf;)SH
19799 43341 MT
(unsigned int count;)SH
11 /Times-Roman AF
19799 45436 MT
(appends strings to the current binary object sequence.)
66 W( `)65 W
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(' con-)65 W
19799 46733 MT
(tains `)10 W
10 /Helvetica AF
(count)SH
11 /Times-Roman AF
(' characters that form the body)
10 W( of one or more strings)11 W
19799 48030 MT
(in a)
130 W( binary object sequence. `)129 W
10 /Helvetica AF
(buf)SH
11 /Times-Roman AF
(' and its contents must remain)129 W
19799 49327 MT
(valid until the entire binary object sequence has been sent.)SH
8 /Helvetica AF
23690 63450 MT
(11 RUNTIME)
327 W( SUPPORT FOR WRAPPED PROCEDURES)SH
10 SS 
47485 XM
(87)SH
ES
%%Page: 88 90 
BS
0 SI
10 /Helvetica-Bold AF
9300 6129 MT
(DPSWriteTypedObjectArray)SH
9 /Helvetica AF
18899 7227 MT
(void DPSWriteTypedObjectArray\050ctxt, type, array, length\051)SH
18899 8325 MT
(DPSContext ctxt;)SH
18899 9423 MT
(DPSDefinedType type;)SH
18899 10521 MT
(char *array;)SH
18899 11619 MT
(unsigned int length;)SH
11 /Times-Roman AF
18899 13714 MT
(writes PostScript language code as specified by the format and)135 W
18899 15011 MT
(encoding variables of `)244 W
10 /Helvetica AF
(ctxt)SH
11 /Times-Roman AF
(', doing appropriate conversions as)244 W
18899 16308 MT
(needed. `)171 W
10 /Helvetica AF
(array)SH
11 /Times-Roman AF
(' points to an array)
171 W( of `)172 W
10 /Helvetica AF
(length)SH
11 /Times-Roman AF
(' elements of type)172 W
18899 17605 MT
(`)SH
10 /Helvetica AF
(type)SH
11 /Times-Roman AF
('. `)40 W
10 /Helvetica AF
(array)SH
11 /Times-Roman AF
(' contains the element values for the body of a sub-)40 W
18899 18902 MT
(sidiary array that was passed as an input)
176 W( argument to)177 W
/Times-Italic SF
44182 XM
(pswrap)SH
/Times-Roman SF
(.)SH
18899 20199 MT
(`)SH
10 /Helvetica AF
(array)SH
11 /Times-Roman AF
(' and its contents must)
68 W( remain valid until the entire binary)67 W
18899 21496 MT
(object sequence has been sent.)SH
10 /Helvetica AF
4500 63450 MT
(88)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 89 91 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(A CHANGES)
491 W( SINCE LAST PUBLICATION OF THIS DOCUMENT)SH
11 /Times-Roman AF
19791 8826 MT
(Changes to the)54 W
/Times-Italic SF
26766 XM
(Client Library Reference Manual)54 W
/Times-Roman SF
41952 XM
(from the)
54 W( docu-)55 W
19799 10123 MT
(ment dated October 25, 1989, are noted in the paragraphs below.)SH
19791 12318 MT
(Input sent to a child context is not passed to its parent.)SH
19791 14513 MT
(In calls to)86 W
/Times-Italic SF
24662 XM
(DPSWriteData)SH
/Times-Roman SF
(, the contents of the buffer will)86 W
/Times-Italic SF
45792 XM
(not)SH
/Times-Roman SF
47559 XM
(be)SH
19799 15810 MT
(converted according to the context's encoding parameters.)SH
19791 18005 MT
(A few additional minor amplifications and corrections have been)27 W
19799 19302 MT
(made.)SH
19791 21497 MT
(Changes to)
55 W( the)54 W
/Times-Italic SF
26767 XM
(Client Library Reference Manual)54 W
/Times-Roman SF
41953 XM
(from the docu-)54 W
19799 22794 MT
(ment dated October 7, 1988, are noted in the paragraphs below.)SH
19791 24989 MT
(The manual has been completely reorganized and rewritten.)SH
19791 27184 MT
(An example error handler program,)158 W
/Times-Italic SF
36462 XM
(DPSDefaultErrorProc)SH
/Times-Roman SF
(, has)159 W
19799 28481 MT
(been provided in Appendix B. This is the default)
19 W( error handler in)18 W
19799 29778 MT
(the Display PostScript extension for the X Window System.)SH
19791 31973 MT
(The synchronization example in Section 6.4)
168 W( has been replaced)169 W
19799 33270 MT
(by an X-specific example.)SH
19791 35465 MT
(The specifications for)250 W
/Times-Italic SF
30406 XM
(dpsclient.h)SH
/Times-Roman SF
35728 XM
(and)SH
/Times-Italic SF
37840 XM
(dpsfriends.h)SH
/Times-Roman SF
43773 XM
(procedures)SH
19799 36762 MT
(are now in separate chapters.)SH
19791 38957 MT
(Listings of the)
363 W( header files have been removed, except for)364 W
/Times-Italic SF
19799 40254 MT
(dpsops.h)SH
/Times-Roman SF
24372 XM
(\050representing itself and)417 W
/Times-Italic SF
36037 XM
(psops.h)SH
/Times-Roman SF
(\051, whose procedure)416 W
19799 41551 MT
(declarations are not listed elsewhere in this manual.)SH
19791 43746 MT
(Numerous inconsistencies in the arguments to some of the)393 W
19799 45043 MT
(single-operator procedures have been cleaned up.)SH
19791 47238 MT
(The document has been updated to be consistent with)
107 W( the latest)106 W
19799 48535 MT
(versions of)67 W
/Times-Italic SF
25066 XM
(dpsfriends.h)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
31093 XM
(dpsclient.h)SH
/Times-Roman SF
(,)SH
/Times-Italic SF
36508 XM
(dpsops.h)SH
/Times-Roman SF
(, and)68 W
/Times-Italic SF
42938 XM
(psops.h)SH
/Times-Roman SF
(. The)68 W
19799 49832 MT
(following are no longer defined by Adobe:)SH
/Symbol SF
21418 52109 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSGetLastNameIndex)SH
/Symbol SF
21418 53905 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSLastNameIndex)SH
/Symbol SF
21418 55701 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSLastObjectIndex)SH
/Symbol SF
21418 57497 MT
(\267)SH
/Times-Italic SF
22199 XM
(DPSNewUserObject)SH
8 /Helvetica AF
21133 63450 MT
(A CHANGES)
327 W( SINCE LAST PUBLICATION OF THIS DOCUMENT)SH
10 SS 
47485 XM
(89)SH
ES
%%Page: 90 92 
BS
0 SI
11 /Times-Roman AF
18891 6155 MT
(References to system-specific)
10 W( issues have been added throughout)9 W
18899 7452 MT
(the manual, including the following:)SH
/Symbol SF
20518 9729 MT
(\267)SH
/Times-Roman SF
21299 XM
(Context creation routines.)SH
/Symbol SF
20518 11525 MT
(\267)SH
/Times-Roman SF
21299 XM
(Behavior of default and backstop error and text handlers.)SH
/Symbol SF
20518 13321 MT
(\267)SH
/Times-Roman SF
21299 XM
(Automatic encoding)
46 W( translation \050for example, binary object)47 W
21299 14518 MT
(sequence to tokens\051.)SH
/Symbol SF
20518 16314 MT
(\267)SH
/Times-Roman SF
21299 XM
(Additional error codes.)SH
/Symbol SF
20518 18110 MT
(\267)SH
/Times-Roman SF
21299 XM
(Exception handling and error recovery.)SH
/Symbol SF
20518 19906 MT
(\267)SH
/Times-Roman SF
21299 XM
(Programming examples and code fragments.)SH
18891 22101 MT
(A section on programming tips has been added.)SH
18891 24296 MT
(The index has been enhanced.)SH
10 /Helvetica AF
4500 63450 MT
(90)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 91 93 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(B EXAMPLE)
491 W( ERROR HANDLER)SH
11 /Times-Roman AF
19791 8826 MT
(An error handler must deal with)
74 W( all errors defined in)73 W
/Times-Italic SF
43800 XM
(dpsclient.h)SH
/Times-Roman SF
19799 10123 MT
(as well as any additional errors defined in)
13 W( system-specific header)14 W
19799 11420 MT
(files.)SH
19791 13615 MT
(This appendix contains an example of)
51 W( an error handler for the X)50 W
19799 14912 MT
(Window System extension of the Display PostScript system.)SH
12 /Helvetica AF
12592 18780 MT
(B.1 ERROR)
491 W( HANDLER IMPLEMENTATION)SH
11 /Times-Roman AF
19791 21331 MT
(An example)
1252 W( implementation of an error handler,)1253 W
/Times-Italic SF
19799 22628 MT
(DPSDefaultErrorProc)SH
/Times-Roman SF
(, follows.)
305 W( The code is followed by ex-)304 W
19799 23925 MT
(planatory text.)SH
43197 50 5400 25321 UL
9 /Helvetica AF
6600 27074 MT
(#include "dpsclient.h")SH
6600 28828 MT
(void)SH
6600 29926 MT
(DPSDefaultErrorProc\050ctxt, errorCode, arg1, arg2\051)SH
7176 31024 MT
(DPSContext ctxt;)SH
7176 32122 MT
(DPSErrorCode errorCode;)SH
7176 33220 MT
(long unsigned int arg1, arg2; {)SH
7176 34974 MT
(DPSTextProc textProc = DPSGetCurrentTextBackstop\050\051;)SH
7176 36728 MT
(char *prefix = "%%[ Error: ";)SH
7176 37826 MT
(char *suffix = " ]%%\134n";)SH
7176 39580 MT
(char *infix = "; OffendingCommand: ";)SH
7176 40678 MT
(char *nameinfix = "User name too long; Name: ";)SH
7176 41776 MT
(char *contextinfix = "Invalid context: ";)SH
7176 42874 MT
(char *taginfix = "Unexpected wrap result tag: ";)SH
7176 43972 MT
(char *typeinfix = "Unexpected wrap result type; tag: ";)SH
7176 45726 MT
(switch \050errorCode\051 {)SH
7752 46824 MT
(case dps_err_ps: {)SH
8328 47922 MT
(char *buf = \050char *\051arg1;)SH
8328 49020 MT
(DPSBinObj ary = \050DPSBinObj\051 \050buf+DPS_HEADER_SIZE\051;)SH
8328 50118 MT
(DPSBinObj elements;)SH
8328 51216 MT
(char *error, *errorName;)SH
8328 52314 MT
(integer errorCount, errorNameCount;)SH
8328 53412 MT
(boolean resyncFlg;)SH
8328 55166 MT
(Assert\050\050ary->attributedType & 0x7f\051 == DPS_ARRAY\051;)SH
8328 56264 MT
(Assert\050ary->length == 4\051;)SH
8328 58018 MT
(elements = \050DPSBinObj\051\050\050\050char *\051 ary\051 + ary->val.arrayVal\051;)SH
8 SS 
28961 63450 MT
(B.1 ERROR)
327 W( HANDLER IMPLEMENTATION)SH
10 SS 
47485 XM
(91)SH
ES
%%Page: 92 94 
BS
0 SI
9 /Helvetica AF
7428 6056 MT
(errorName = \050char *\051\050\050\050char *\051 ary\051 + elements[1].val.nameVal\051;)SH
7428 7154 MT
(errorNameCount = elements[1].length;)SH
7428 8908 MT
(error = \050char *\051\050\050\050char *\051 ary\051 + elements[2].val.nameVal\051;)SH
7428 10006 MT
(errorCount = elements[2].length;)SH
7428 11760 MT
(resyncFlg = elements[3].val.booleanVal;)SH
7428 13514 MT
(if \050textProc != NIL\051 {)SH
8004 14612 MT
(\050*textProc\051\050ctxt, prefix, strlen\050prefix\051\051;)SH
8004 15710 MT
(\050*textProc\051\050ctxt, errorName, errorNameCount\051;)SH
8004 16808 MT
(\050*textProc\051\050ctxt, infix, strlen\050infix\051\051;)SH
8004 17906 MT
(\050*textProc\051\050ctxt, error, errorCount\051;)SH
8004 19004 MT
(\050*textProc\051\050ctxt, suffix, strlen\050suffix\051\051;)SH
8004 20102 MT
(})SH
7428 21200 MT
(if \050resyncFlg && \050ctxt != dummyCtx\051\051 {)SH
8004 22298 MT
(RAISE\050dps_err_ps, ctxt\051;)SH
8004 23396 MT
(CantHappen\050\051;)SH
8004 24494 MT
(})SH
7428 25592 MT
(break;)SH
7428 26690 MT
(})SH
6852 27788 MT
(case dps_err_nameTooLong:)SH
7428 28886 MT
(if \050textProc != NIL\051 {)SH
8004 29984 MT
(char *buf = \050char *\051arg1;)SH
8004 31082 MT
(\050*textProc\051\050ctxt, prefix, strlen\050prefix\051\051;)SH
8004 32180 MT
(\050*textProc\051\050ctxt, nameinfix, strlen\050nameinfix\051\051;)SH
8004 33278 MT
(\050*textProc\051\050ctxt, buf, arg2\051;)SH
8004 34376 MT
(\050*textProc\051\050ctxt, suffix, strlen\050suffix\051\051;)SH
8004 35474 MT
(})SH
7428 36572 MT
(break;)SH
6852 37670 MT
(case dps_err_invalidContext:)SH
7428 38768 MT
(if \050textProc != NIL\051 {)SH
8004 39866 MT
(char m[100];)SH
8004 40964 MT
(\050void\051 sprintf\050m, "%s%s%d%s", prefix, contextinfix, arg1, suffix\051;)SH
8004 42062 MT
(\050*textProc\051\050ctxt, m, strlen\050m\051\051;)SH
8004 43160 MT
(})SH
7428 44258 MT
(break;)SH
6852 45356 MT
(case dps_err_resultTagCheck:)SH
6852 46454 MT
(case dps_err_resultTypeCheck:)SH
7428 47552 MT
(if \050textProc != NIL\051 {)SH
8004 48650 MT
(char m[100];)SH
8004 49748 MT
(unsigned char tag = *\050\050unsigned char *\051 arg1+1\051;)SH
8004 50846 MT
(\050void\051 sprintf\050m, "%s%s%d%s", prefix, typeinfix, tag, suffix\051;)SH
8004 51944 MT
(\050*textProc\051\050ctxt, m, strlen\050m\051\051;)SH
8004 53042 MT
(})SH
7428 54140 MT
(break;)SH
6852 55238 MT
(case dps_err_invalidAccess:)SH
7428 56336 MT
(if \050textProc != NIL\051)SH
8004 57434 MT
({)SH
8004 58532 MT
(char m[100];)SH
10 SS 
4500 63450 MT
(92)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 93 95 
BS
0 SI
9 /Helvetica AF
8904 6056 MT
(\050void\051 sprintf \050m, "%sInvalid context access.%s", prefix, suffix\051;)SH
8904 7154 MT
(\050*textProc\051 \050ctxt, m, strlen \050m\051\051;)SH
8904 8252 MT
(})SH
8904 9350 MT
(break;)SH
7752 10448 MT
(case dps_err_encodingCheck:)SH
8328 11546 MT
(if \050textProc != NIL\051)SH
8904 12644 MT
({)SH
8904 13742 MT
(char m[100];)SH
8904 14840 MT
(\050void\051 sprintf \050m, "%sInvalid name/program encoding: %d/%d.%s",)SH
13512 15938 MT
(prefix, \050int\051 arg1, \050int\051 arg2, suffix\051;)SH
8904 17036 MT
(\050*textProc\051 \050ctxt, m, strlen \050m\051\051;)SH
8904 18134 MT
(})SH
8904 19232 MT
(break;)SH
7752 20330 MT
(case dps_err_closedDisplay:)SH
8328 21428 MT
(if \050textProc != NIL\051)SH
8904 22526 MT
({)SH
8904 23624 MT
(char m[100];)SH
8904 24722 MT
(\050void\051 sprintf \050m, "%sBroken display connection %d.%s",)SH
13512 25820 MT
(prefix, \050int\051 arg1, suffix\051;)SH
8904 26918 MT
(\050*textProc\051 \050ctxt, m, strlen \050m\051\051;)SH
8904 28016 MT
(})SH
8904 29114 MT
(break;)SH
7752 30212 MT
(case dps_err_deadContext:)SH
8328 31310 MT
(if \050textProc != NIL\051)SH
8904 32408 MT
({)SH
8904 33506 MT
(char m[100];)SH
8904 34604 MT
(\050void\051 sprintf \050m, "%sDead context 0x0%x.%s", prefix,)SH
13512 35702 MT
(\050int\051 arg1, suffix\051;)SH
8904 36800 MT
(\050*textProc\051 \050ctxt, m, strlen \050m\051\051;)SH
8904 37898 MT
(})SH
8904 38996 MT
(break;)SH
7752 40094 MT
(default:;)SH
7752 41192 MT
(})SH
7176 42290 MT
(} /* DPSDefaultErrorProc */)SH
43197 50 5400 43686 UL
12 SS 
12592 47354 MT
(B.2 DESCRIPTION)
491 W( OF THE ERROR HANDLER)SH
11 /Times-Italic AF
19791 49905 MT
(DPSDefaultErrorProc)SH
/Times-Roman SF
30152 XM
(handles errors that arise)
126 W( when a wrap or)127 W
19799 51202 MT
(Client Library procedure is)
25 W( called for the context. The error code)24 W
19799 52499 MT
(indicates what error)
215 W( occurred. Interpretation of the `)216 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' and)216 W
19799 53796 MT
(`)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' values is based on the error code.)SH
19791 55991 MT
(The error handler initializes itself by)
21 W( getting the current backstop)20 W
19799 57288 MT
(text handler and assigning string constants that)
148 W( will be used to)149 W
19799 58585 MT
(formulate and report a text message. The section)
61 W( of the program)60 W
8 /Helvetica AF
27381 63450 MT
(B.2 DESCRIPTION)
327 W( OF THE ERROR HANDLER)SH
10 SS 
47485 XM
(93)SH
ES
%%Page: 94 96 
BS
0 SI
11 /Times-Roman AF
18899 6155 MT
(that deals with)
127 W( the various error codes begins with the `)128 W
10 /Helvetica AF
(switch)SH
11 /Times-Roman AF
(')SH
18899 7452 MT
(statement. Each error code can be handled differently.)SH
18891 9647 MT
(If a `)270 W
10 /Helvetica AF
(textProc)SH
11 /Times-Roman AF
(' was)
270 W( specified, the error handler calls the text)269 W
18899 10944 MT
(handler to formulate an error message,)
24 W( passing it the name of the)25 W
18899 12241 MT
(error, the object that caused the error,)
168 W( and the string constants)167 W
18899 13538 MT
(used to format a standard error message. For)
461 W( example, a)462 W
/Times-Bold SF
18899 14835 MT
(typecheck)SH
/Times-Roman SF
23946 XM
(error reported by the)68 W
/Times-Bold SF
33562 XM
(cvn)SH
/Times-Roman SF
35555 XM
(operator would be reported)67 W
18899 16132 MT
(as a `)SH
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(' error code and printed as follows:)SH
9 /Helvetica AF
20051 18085 MT
(%%[ Error: typecheck; OffendingCommand: cvn ]%%)SH
11 /Times-Roman AF
18891 20280 MT
(The following error codes are common to)
76 W( all Client Library im-)77 W
18899 21577 MT
(plementations:)SH
/Symbol SF
20518 23854 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(' represents all PostScript)
535 W( language errors)534 W
21299 25051 MT
(reported by the)
163 W( interpreter; that is, the errors listed under)164 W
21299 26248 MT
(each operator in the)582 W
/Times-Italic SF
32605 XM
(PostScript Language Reference)581 W
21299 27445 MT
(Manual)SH
/Times-Roman SF
25166 XM
(and)SH
/Times-Italic SF
27199 XM
(PostScript Language Extensions for the)
170 W( Dis-)171 W
21299 28642 MT
(play PostScript System)181 W
/Times-Roman SF
(. See)
636 W( Section B.3 for more infor-)180 W
21299 29839 MT
(mation about this error code.)SH
/Symbol SF
20518 31635 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_nameTooLong)SH
11 /Times-Roman AF
(' arises if)
71 W( a binary object sequence)72 W
21299 32832 MT
(or encoded)
209 W( token has a name whose length exceeds 128)208 W
21299 34029 MT
(characters. `)385 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is the PostScript)
55 W( user name; `)56 W
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is its)56 W
21299 35226 MT
(length.)SH
/Symbol SF
20518 37022 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_invalidContext)SH
11 /Times-Roman AF
(' arises if)
171 W( a Client Library routine)170 W
21299 38219 MT
(was called with an)
72 W( invalid context.  This can happen if the)73 W
21299 39416 MT
(client is unaware that the execution)
215 W( context in the inter-)214 W
21299 40613 MT
(preter has terminated.  `)72 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is a context)
72 W( identifier; `)73 W
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(')SH
21299 41810 MT
(is unused.)SH
/Symbol SF
20518 43606 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_resultTagCheck)SH
11 /Times-Roman AF
(' occurs when an invalid tag is)274 W
21299 44803 MT
(received for a result value.)
120 W( There)
516 W( is one object in the se-)121 W
21299 46000 MT
(quence. `)507 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is a)
116 W( pointer to the binary object sequence;)115 W
21299 47197 MT
(`)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is the length of the binary object sequence.)SH
/Symbol SF
20518 48993 MT
(\267)SH
/Times-Roman SF
21299 XM
(`)SH
10 /Helvetica AF
(dps_err_resultTypeCheck)SH
11 /Times-Roman AF
(' occurs when the value)
40 W( returned)41 W
21299 50190 MT
(is of a)
222 W( type incompatible with the output parameter \050for)221 W
21299 51387 MT
(example, a string)
92 W( returned to an integer output parameter\051.)93 W
21299 52584 MT
(`)SH
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is a pointer to the binary)
105 W( object \050the result with the)104 W
21299 53781 MT
(wrong type\051; `)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is unused.)SH
18891 55976 MT
(The remainder of the error codes are specific to)
106 W( the X Window)107 W
18899 57273 MT
(System:)SH
10 /Helvetica AF
4500 63450 MT
(94)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 95 97 
BS
0 SI
11 /Symbol AF
21418 6280 MT
(\267)SH
/Times-Roman SF
22199 XM
(`)SH
10 /Helvetica AF
(dps_err_invalidAccess)SH
11 /Times-Roman AF
(' indicates)
188 W( that a shared context is)187 W
22199 7477 MT
(being used improperly.  For example, result values were)207 W
22199 8674 MT
(erroneously sent to)
20 W( a sharing client other than the creator of)19 W
22199 9871 MT
(the context.  `)SH
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' and `)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' are unused.)SH
/Symbol SF
21418 11667 MT
(\267)SH
/Times-Roman SF
22199 XM
(`)SH
10 /Helvetica AF
(dps_err_encodingCheck)SH
11 /Times-Roman AF
(' indicates that)
210 W( an undefined en-)211 W
22199 12864 MT
(coding value has been passed to)171 W
/Times-Italic SF
37581 XM
(DPSChangeEncoding)SH
/Times-Roman SF
47681 XM
(or)SH
22199 14061 MT
(that the application is)
105 W( trying to change the name encoding)106 W
22199 15258 MT
(of a shared context.  `)250 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is the new)
250 W( name encoding;)249 W
22199 16455 MT
(`)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is the new program encoding.)SH
/Symbol SF
21418 18251 MT
(\267)SH
/Times-Roman SF
22199 XM
(`)SH
10 /Helvetica AF
(dps_err_closedDisplay)SH
11 /Times-Roman AF
(' indicates that the connection)
318 W( to)319 W
22199 19448 MT
(the server has been lost.  `)66 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is the index number of the)65 W
22199 20645 MT
(display; `)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is unused.)SH
/Symbol SF
21418 22441 MT
(\267)SH
/Times-Roman SF
22199 XM
(`)SH
10 /Helvetica AF
(dps_err_deadContext)SH
11 /Times-Roman AF
(' indicates that)
353 W( a context has ter-)354 W
22199 23638 MT
(minated in the)
49 W( interpreter, but the resources assigned to the)48 W
22199 24835 MT
(context have not been freed.  `)172 W
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' is the)
172 W( `)173 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(')SH
22199 26032 MT
(handle; `)SH
10 /Helvetica AF
(arg2)SH
11 /Times-Roman AF
(' is unused.)SH
12 /Helvetica AF
12592 29900 MT
(B.3 HANDLING)
491 W( POSTSCRIPT LANGUAGE ERRORS)SH
11 /Times-Roman AF
19791 32451 MT
(The following discussion applies only)
112 W( to the `)111 W
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(' error)111 W
19799 33748 MT
(code. This)
90 W( error code represents all possible PostScript operator)91 W
19799 35045 MT
(errors. Because the interpreter provides a binary object)
46 W( sequence)45 W
19799 36342 MT
(containing detailed information about)
29 W( the error, more options are)30 W
19799 37639 MT
(available to the error handler than for other client errors.)SH
19791 39834 MT
(`)SH
10 /Helvetica AF
(arg1)SH
11 /Times-Roman AF
(' points to a binary)
27 W( object sequence that describes the error.)26 W
19799 41131 MT
(The binary object)
60 W( sequence is a four-element array consisting of)61 W
19799 42428 MT
(the name `)111 W
10 /Helvetica AF
(Error)SH
11 /Times-Roman AF
(', the name)
111 W( that identifies the specific error, the)110 W
19799 43725 MT
(object that was executed when the error occurred, and a)
55 W( boolean)56 W
19799 45022 MT
(indicating whether)
46 W( the context expects to be resynchronized. For)45 W
19799 46319 MT
(further details of the format of)
152 W( the binary object sequence, see)153 W
/Times-Italic SF
19799 47616 MT
(PostScript Language Extensions for the)
461 W( Display PostScript)460 W
19799 48913 MT
(System)SH
/Times-Roman SF
(.)SH
19791 51108 MT
(The type)
8 W( and length of the array are checked with assertions. The)9 W
19799 52405 MT
(body of the array is)
84 W( pointed to by the `)83 W
10 /Helvetica AF
(elements)SH
11 /Times-Roman AF
(' variable. Each)83 W
19799 53702 MT
(element of the array is derived and placed in a variable.)SH
/Times-Italic SF
19791 55897 MT
(DPSDefaultErrorProc)SH
/Times-Roman SF
30052 XM
(raises an)
26 W( exception only if the context ex-)27 W
19799 57194 MT
(ecuted)SH
/Times-Bold SF
23951 XM
(resyncstart)SH
/Times-Roman SF
30485 XM
(to install)1007 W
/Times-Bold SF
36595 XM
(resynchandleerror)SH
/Times-Roman SF
(. The)1006 W
19799 58491 MT
(`)SH
10 /Helvetica AF
(resyncFlag)SH
11 /Times-Roman AF
(' variable contains)
46 W( the value of the fourth element of)47 W
8 /Helvetica AF
25413 63450 MT
(B.3 HANDLING)
327 W( POSTSCRIPT LANGUAGE ERRORS)SH
10 SS 
47485 XM
(95)SH
ES
%%Page: 96 98 
BS
0 SI
11 /Times-Roman AF
18899 6155 MT
(the binary object sequence array, the boolean that)
351 W( indicates)350 W
18899 7452 MT
(whether resynchronization is needed. `)125 W
10 /Helvetica AF
(resyncFlag)SH
11 /Times-Roman AF
(' will be)126 W
/Times-Italic SF
45619 XM
(false)SH
/Times-Roman SF
18899 8749 MT
(if the)122 W
/Times-Bold SF
21709 XM
(handleerror)SH
/Times-Roman SF
27788 XM
(operator handled the error;)
122 W( it will be)121 W
/Times-Italic SF
44857 XM
(true)SH
/Times-Roman SF
47025 XM
(if)SH
/Times-Bold SF
18899 10046 MT
(resynchandleerror)SH
/Times-Roman SF
27910 XM
(handled the error.)SH
18891 12241 MT
(If `)199 W
10 /Helvetica AF
(resyncFlag)SH
11 /Times-Roman AF
(' is)200 W
/Times-Italic SF
27403 XM
(true)SH
/Times-Roman SF
29650 XM
(and the context handling the error is a)200 W
18899 13538 MT
(context created by the application,)
187 W( the error handler raises the)186 W
18899 14835 MT
(exception by calling)60 W
/Times-Italic SF
28274 XM
(RAISE)SH
/Times-Roman SF
(. This)
60 W( call never returns. See Appen-)61 W
18899 16132 MT
(dix C for a discussion of how)SH
/Times-Italic SF
32128 XM
(RAISE)SH
/Times-Roman SF
35335 XM
(works.)SH
10 /Helvetica AF
4500 63450 MT
(96)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 97 99 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(C EXCEPTION)
491 W( HANDLING)SH
11 /Times-Roman AF
19791 8826 MT
(This appendix describes)
258 W( a general-purpose exception-handling)257 W
19799 10123 MT
(facility. It provides help)
36 W( for a narrowly defined problem area)
37 W( \320)188 W
19799 11420 MT
(handling PostScript language errors that arise from the con-)316 W
19799 12717 MT
(ditions listed)
173 W( on page 26.)174 W
/Times-Italic SF
31974 XM
(Most application programmers need)174 W
19799 14014 MT
(not be concerned with exception handling.)3 W
/Times-Roman SF
38788 XM
(These facilities can be)2 W
19799 15311 MT
(used in conjunction with PostScript language code and a sophis-)53 W
19799 16608 MT
(ticated error handler such as)80 W
/Times-Italic SF
32871 XM
(DPSDefaultErrorProc)SH
/Times-Roman SF
43185 XM
(to provide a)79 W
19799 17905 MT
(certain amount of error)
75 W( recovery capability. Consult the system-)76 W
19799 19202 MT
(specific documentation for alternative means of error recovery.)SH
28806 50 19791 20898 LH BX1
10 /Helvetica-Bold AF
19799 22451 MT
(Note:)SH
11 /Times-Roman AF
23109 XM
(Avoid using exception handling with the X)
24 W( Window Sys-)23 W
19799 23748 MT
(tem because lower levels of software, such as Xlib, are not)296 W
19799 25045 MT
(prepared to handle exceptions or to have)
258 W( control taken away)257 W
19799 26342 MT
(from them.)SH
28806 50 19791 27381 LH BX1
19791 29576 MT
(An)SH
/Times-Italic SF
21620 XM
(exception)SH
/Times-Roman SF
26319 XM
(is an unexpected condition such)
210 W( as a PostScript)211 W
19799 30873 MT
(language error that)
48 W( prevents a procedure from running to normal)47 W
19799 32170 MT
(completion. The procedure could simply return, but data struc-)148 W
19799 33467 MT
(tures might be left in an inconsistent state and returned values)161 W
19799 34764 MT
(might be incorrect. Instead of returning, the procedure can)
88 W( raise)89 W
19799 36061 MT
(the exception, passing)
102 W( a code that indicates what has happened.)101 W
19799 37358 MT
(The exception is intercepted by some caller of the)
27 W( procedure that)28 W
19799 38655 MT
(raised the exception \050any number of)
143 W( procedure calls deep\051; ex-)142 W
19799 39952 MT
(ecution then resumes at the point of interception. As a result,)
38 W( the)39 W
19799 41249 MT
(procedure that raised the exception is)
98 W( terminated, as are any in-)97 W
19799 42546 MT
(tervening procedures between it and the procedure that inter-)248 W
19799 43843 MT
(cepted the exception, an)
112 W( action which is called ``unwinding the)111 W
19799 45140 MT
(call stack.'')SH
19791 47335 MT
(The Client Library provides a general-purpose exception-)576 W
19799 48632 MT
(handling mechanism in)226 W
/Times-Italic SF
31018 XM
(dpsexcept.h)SH
/Times-Roman SF
(. This header file)
226 W( provides)225 W
19799 49929 MT
(facilities for)
417 W( placing exception handlers in application sub-)418 W
19799 51226 MT
(routines to respond cleanly to exceptional conditions.)SH
8 /Helvetica AF
34908 63450 MT
(C EXCEPTION)
327 W( HANDLING)SH
10 SS 
47485 XM
(97)SH
ES
%%Page: 98 100 
BS
28806 50 18891 5400 LH BX1
0 SI
10 /Helvetica-Bold AF
18899 6953 MT
(Note:)SH
11 /Times-Roman AF
22209 XM
(Application programs may need to)
76 W( contain the following)75 W
18899 8250 MT
(statement:)SH
9 /Helvetica AF
20051 10203 MT
(#include "dpsexcept.h")SH
28806 50 18891 12298 LH BX1
11 /Times-Roman AF
18891 14493 MT
(As an exception propagates up the)
37 W( call stack, each procedure en-)38 W
18899 15790 MT
(countered can deal with the exception in one of three ways:)SH
/Symbol SF
20518 18067 MT
(\267)SH
/Times-Roman SF
21299 XM
(It ignores)
124 W( the exception, in which case the exception con-)123 W
21299 19264 MT
(tinues on to the caller of the procedure.)SH
/Symbol SF
20518 21060 MT
(\267)SH
/Times-Roman SF
21299 XM
(It intercepts)
70 W( the exception and handles it, in which case all)71 W
21299 22257 MT
(procedure calls below the handler are unwound)
223 W( and dis-)222 W
21299 23454 MT
(carded.)SH
/Symbol SF
20518 25250 MT
(\267)SH
/Times-Roman SF
21299 XM
(It intercepts, handles, and)
180 W( then reraises the exception, al-)181 W
21299 26447 MT
(lowing handlers higher)
148 W( in the stack to notice and react to)147 W
21299 27644 MT
(the exception.)SH
18891 29839 MT
(The body of a procedure that intercepts exceptions is written as)95 W
18899 31136 MT
(follows:)SH
9 /Helvetica AF
20051 33089 MT
(DURING)SH
20627 34187 MT
(statement1;)SH
20627 35285 MT
(statement2;)SH
20627 36383 MT
(...)SH
20051 37481 MT
(HANDLER)SH
20627 38579 MT
(statement3)SH
20627 39677 MT
(statement4;)SH
20627 40775 MT
(...)SH
20051 41873 MT
(END_HANDLER)SH
11 /Times-Roman AF
18891 44068 MT
(The statements between `)428 W
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' and `)427 W
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
(')SH
18899 45365 MT
(comprise the exception handler for)
8 W( exceptions occurring between)9 W
18899 46662 MT
(`)SH
10 /Helvetica AF
(DURING)SH
11 /Times-Roman AF
(' and `)132 W
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
('. The)
132 W( procedure body works as fol-)131 W
18899 47959 MT
(lows:)SH
/Symbol SF
20518 50236 MT
(\267)SH
/Times-Roman SF
21299 XM
(Normally, the statements between `)923 W
10 /Helvetica AF
(DURING)SH
11 /Times-Roman AF
(' and)924 W
21299 51433 MT
(`)SH
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' are executed.)SH
/Symbol SF
20518 53229 MT
(\267)SH
/Times-Roman SF
21299 XM
(If no exception)
9 W( occurs, the statements between `)8 W
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(')SH
21299 54426 MT
(and `)104 W
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
(' are bypassed; execution resumes at)105 W
21299 55623 MT
(the statement after `)SH
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
('.)SH
/Symbol SF
20518 57419 MT
(\267)SH
/Times-Roman SF
21299 XM
(If an exception is raised while executing the statements be-)45 W
21299 58616 MT
(tween `)238 W
10 /Helvetica AF
(DURING)SH
11 /Times-Roman AF
(' and `)238 W
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' \050including)
238 W( any proce-)239 W
10 /Helvetica AF
4500 63450 MT
(98)SH
8 SS 
8012 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 99 101 
BS
0 SI
11 /Times-Roman AF
22199 6155 MT
(dure called from)
377 W( those statements\051, execution of those)376 W
22199 7352 MT
(statements is aborted and control)
145 W( passes to the statements)146 W
22199 8549 MT
(between `)SH
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' and `)SH
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
('.)SH
19791 10744 MT
(In terms of C)
22 W( syntax, you must treat these macros as if they were)21 W
19799 12041 MT
(C code brackets, as follows:)SH
28798 50 19799 13438 LH BX1
/Times-Italic SF
19799 16032 MT
(Macro)SH
31318 XM
(C Equivalent)SH
28798 50 19799 16631 LH BX1
/Times-Roman SF
19799 19225 MT
(`)SH
10 /Helvetica AF
(DURING)SH
11 /Times-Roman AF
(')SH
10 /Helvetica AF
31318 XM
({{)SH
11 /Times-Roman AF
19799 21021 MT
(`)SH
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(')SH
10 /Helvetica AF
31318 XM
(}{)SH
11 /Times-Roman AF
19799 22817 MT
(`)SH
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
(')SH
10 /Helvetica AF
31318 XM
(}})SH
28798 50 19799 23416 LH BX1
11 /Times-Roman AF
19791 26409 MT
(In general, exception-handling macros should either)
377 W( entirely)378 W
19799 27706 MT
(enclose a code block \050the preferred method)
144 W( \320 see)
295 W( Example 1)143 W
19799 29003 MT
(below\051 or should be entirely within the block \050see Example 2\051.)SH
9 /Helvetica AF
20951 30956 MT
(DURING)SH
22103 32054 MT
(while \050/* Example 1 */\051 {)SH
23831 33152 MT
(...)SH
22103 34250 MT
(})SH
20951 35348 MT
(HANDLER)SH
21527 36446 MT
(...)SH
20951 37544 MT
(END_HANDLER)SH
20951 39298 MT
(while \050/* Example 2 */\051 {)SH
22103 40396 MT
(DURING)SH
22391 41494 MT
(...)SH
22103 42592 MT
(HANDLER)SH
22391 43690 MT
(...)SH
22103 44788 MT
(END_HANDLER)SH
20951 45886 MT
(})SH
11 /Times-Roman AF
19791 48081 MT
(When a procedure detects)
112 W( an exceptional condition, it can raise)113 W
19799 49378 MT
(an exception by)
34 W( calling)33 W
/Times-Italic SF
30441 XM
(RAISE)SH
/Times-Roman SF
(.)SH
/Times-Italic SF
33956 XM
(RAISE)SH
/Times-Roman SF
37196 XM
(takes two arguments. The)33 W
19799 50675 MT
(first is an)
435 W( error code \050for example, one of the values of)436 W
19799 51972 MT
(`)SH
10 /Helvetica AF
(DPSErrorCode)SH
11 /Times-Roman AF
('\051. The)
105 W( second is a pointer, `)104 W
10 /Helvetica AF
(char *)104 W
11 /Times-Roman AF
(', which may)104 W
19799 53269 MT
(point to any kind of data structure, such as a string of ASCII)
25 W( text)26 W
19799 54566 MT
(or a binary object sequence.)SH
19791 56761 MT
(The exception handler has two local variables,)
44 W( `)43 W
10 /Helvetica AF
(Exception.Code)SH
11 /Times-Roman AF
(')SH
19799 58058 MT
(and `)81 W
10 /Helvetica AF
(Exception.Message)SH
11 /Times-Roman AF
('. When the handler is entered, the first)81 W
8 /Helvetica AF
34908 63450 MT
(C EXCEPTION)
327 W( HANDLING)SH
10 SS 
47485 XM
(99)SH
ES
%%Page: 100 102 
BS
0 SI
11 /Times-Roman AF
18899 6155 MT
(argument that was passed to)797 W
/Times-Italic SF
35561 XM
(RAISE)SH
/Times-Roman SF
39565 XM
(get assigned to)797 W
18899 7452 MT
(`)SH
10 /Helvetica AF
(Exception.Code)SH
11 /Times-Roman AF
(' and)
360 W( the second argument gets assigned to)361 W
18899 8749 MT
(`)SH
10 /Helvetica AF
(Exception.Message)SH
11 /Times-Roman AF
('. These variables have)
154 W( valid contents only)153 W
18899 10046 MT
(between `)SH
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' and `)SH
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
('.)SH
18891 12241 MT
(If the exception handler executes `)146 W
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
(' or)
146 W( returns,)147 W
18899 13538 MT
(propagation of the exception ceases. However, if the exception)141 W
18899 14835 MT
(handler calls)798 W
/Times-Italic SF
26359 XM
(RERAISE)SH
/Times-Roman SF
(, the exception)
798 W( \320 along)
949 W( with)798 W
18899 16132 MT
(`)SH
10 /Helvetica AF
(Exception.Code)SH
11 /Times-Roman AF
(' and)
73 W( `)72 W
10 /Helvetica AF
(Exception.Message)SH
11 /Times-Roman AF
(' \320 is)
223 W( propagated to)72 W
18899 17429 MT
(the next)
64 W( outer dynamically enclosing occurrence of `)65 W
10 /Helvetica AF
(DURING ...)65 W
18899 18726 MT
(HANDLER)SH
11 /Times-Roman AF
('.)SH
18891 20921 MT
(A procedure)
160 W( may choose not to handle an exception, in which)159 W
18899 22218 MT
(case one of its callers must handle it. There are two)
191 W( common)192 W
18899 23515 MT
(reasons for wanting to handle exceptions:)SH
/Symbol SF
20518 25792 MT
(\267)SH
/Times-Roman SF
21299 XM
(To deallocate dynamically allocated storage)
172 W( and clean up)171 W
21299 26989 MT
(any other local state, then allow the exception to)
55 W( propagate)56 W
21299 28186 MT
(further. In this case, the)
15 W( handler should perform its cleanup,)14 W
21299 29383 MT
(then call)SH
/Times-Italic SF
25331 XM
(RERAISE)SH
/Times-Roman SF
(.)SH
/Symbol SF
20518 31179 MT
(\267)SH
/Times-Roman SF
21299 XM
(To recover from certain exceptions that might occur,)
127 W( then)128 W
21299 32376 MT
(continue normal execution. In this case, the)
62 W( handler should)61 W
21299 33573 MT
(compare `)140 W
10 /Helvetica AF
(Exception.Code)SH
11 /Times-Roman AF
(' against the set of)
140 W( exceptions it)141 W
21299 34770 MT
(can handle.  If it can handle the exception, it should)
148 W( per-)147 W
21299 35967 MT
(form the recovery)
176 W( and execute the statement that follows)177 W
21299 37164 MT
(`)SH
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
('; if not, it should)
482 W( call)481 W
/Times-Italic SF
41809 XM
(RERAISE)SH
/Times-Roman SF
46841 XM
(to)SH
21299 38361 MT
(propagate the exception to a higher-level handler.)SH
28806 50 18891 40057 LH BX1
10 /Helvetica-Bold AF
18899 41610 MT
(Warning:)SH
11 /Times-Roman AF
23987 XM
(It is illegal to execute a statement between `)12 W
10 /Helvetica AF
(DURING)SH
11 /Times-Roman AF
(')SH
18899 42907 MT
(and `)277 W
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' that)
277 W( would transfer control outside of those)276 W
18899 44204 MT
(statements. In)
413 W( particular, `)69 W
10 /Helvetica AF
(return)SH
11 /Times-Roman AF
(' is illegal: an unspecified error)69 W
18899 45501 MT
(will occur.  This restriction does not apply to the statements be-)74 W
18899 46798 MT
(tween `)136 W
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' and `)136 W
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
('. To)
548 W( return from the)137 W
18899 48095 MT
(exception handler, call `)699 W
10 /Helvetica AF
(E_RETURN_VOID\050\051)SH
11 /Times-Roman AF
('; to)
699 W( perform)698 W
18899 49392 MT
(`)SH
10 /Helvetica AF
(return\050x\051)SH
11 /Times-Roman AF
(', call `)SH
10 /Helvetica AF
(E_RETURN\050x\051)SH
11 /Times-Roman AF
('.)SH
28806 50 18891 50431 LH BX1
10 /Helvetica AF
4500 63450 MT
(100)SH
8 SS 
8568 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 101 103 
BS
0 SI
12 /Helvetica AF
12592 6275 MT
(C.1 RECOVERING)
491 W( FROM POSTSCRIPT LANGUAGE ERRORS)SH
11 /Times-Roman AF
19791 8826 MT
(The example)79 W
/Times-Italic SF
25935 XM
(DPSDefaultErrorProc)SH
/Times-Roman SF
36249 XM
(procedure can be used with)79 W
19799 10123 MT
(the PostScript)
183 W( operator)182 W
/Times-Bold SF
30703 XM
(resyncstart)SH
/Times-Roman SF
36412 XM
(to recover from PostScript)182 W
19799 11420 MT
(language errors. If you use)
216 W( this strategy, an exception can be)217 W
19799 12717 MT
(raised by)
45 W( any of the Client Library procedures that write code or)44 W
19799 14014 MT
(data to the context: any)
255 W( wrap, any single-operator procedure,)256 W
/Times-Italic SF
19799 15311 MT
(DPSWritePostScript)SH
/Times-Roman SF
(, and so on. The strategy is as follows:)SH
/Symbol SF
21418 17588 MT
(\267)SH
/Times-Roman SF
22199 XM
(Send the operator)154 W
/Times-Bold SF
30694 XM
(resyncstart)SH
/Times-Roman SF
36375 XM
(to the context immediately)153 W
22199 18785 MT
(after it is created.)157 W
/Times-Bold SF
31169 XM
(resyncstart)SH
/Times-Roman SF
36854 XM
(is a simple read-evaluate-)158 W
22199 19982 MT
(print loop enclosed in a)201 W
/Times-Bold SF
33805 XM
(stopped)SH
/Times-Roman SF
37949 XM
(clause which,)
201 W( on error,)200 W
22199 21179 MT
(executes)SH
/Times-Bold SF
26437 XM
(resynchandleerror)SH
/Times-Roman SF
(.)SH
/Times-Bold SF
36354 XM
(resynchandleerror)SH
/Times-Roman SF
45543 XM
(reports)SH
22199 22376 MT
(PostScript errors)
93 W( back to the client in the form of a binary)92 W
22199 23573 MT
(object sequence of a single object: an array of)
221 W( four ele-)222 W
22199 24770 MT
(ments as described in)118 W
/Times-Italic SF
32385 XM
(PostScript Language Extensions)
118 W( for)117 W
22199 25967 MT
(the Display PostScript System)122 W
/Times-Roman SF
(. The)
521 W( fourth element of the)123 W
22199 27164 MT
(binary object sequence, a boolean, is set to)68 W
/Times-Italic SF
41803 XM
(true)SH
/Times-Roman SF
43917 XM
(to indicate)67 W
22199 28361 MT
(that)SH
/Times-Bold SF
24220 XM
(resynchandleerror)SH
/Times-Roman SF
33327 XM
(is executing.)
96 W( The)469 W
/Times-Bold SF
41809 XM
(stopped)SH
/Times-Roman SF
45849 XM
(clause)SH
22199 29558 MT
(itself executes within an outer loop.)SH
/Symbol SF
21418 31354 MT
(\267)SH
/Times-Roman SF
22199 XM
(When a)
1056 W( PostScript language error is detected,)1055 W
/Times-Bold SF
22199 32551 MT
(resynchandleerror)SH
/Times-Roman SF
31755 XM
(writes the binary)
545 W( object sequence)546 W
22199 33748 MT
(describing the error, flushes the output stream)232 W
/Times-Bold SF
44288 XM
(%stdout)SH
/Times-Roman SF
(,)SH
22199 34945 MT
(then reads and discards any data on)
384 W( the input stream)385 W
/Times-Bold SF
22199 36142 MT
(%stdin)SH
/Times-Roman SF
25913 XM
(until EOF)
15 W( \050an end-of-file marker\051 is received.  This)14 W
22199 37339 MT
(effectively clears out any pending code)
379 W( and data, and)380 W
22199 38536 MT
(makes the context)
174 W( do nothing until the client handles the)173 W
22199 39733 MT
(error.)SH
/Symbol SF
21418 41529 MT
(\267)SH
/Times-Roman SF
22199 XM
(The binary object sequence)
127 W( sent by)128 W
/Times-Bold SF
38724 XM
(resynchandleerror)SH
/Times-Roman SF
47863 XM
(is)SH
22199 42726 MT
(eventually received by the client)
536 W( and passed to the)535 W
22199 43923 MT
(context's error handler.)
21 W( The)
319 W( error handler formulates a text)22 W
22199 45120 MT
(message from the binary object sequence)
173 W( and displays it,)172 W
22199 46317 MT
(perhaps by)
186 W( calling the backstop text handler.  It then in-)187 W
22199 47514 MT
(spects the binary object sequence)
368 W( and notices that the)367 W
22199 48711 MT
(fourth element of the array, a boolean, is)56 W
/Times-Italic SF
40789 XM
(true)SH
/Times-Roman SF
(. This)
388 W( means)57 W
22199 49908 MT
(that)SH
/Times-Bold SF
24194 XM
(resynchandleerror)SH
/Times-Roman SF
33275 XM
(is executing and is waiting for the)69 W
22199 51105 MT
(client to)
197 W( recover from the error.  At this point, the error)198 W
22199 52302 MT
(handler may raise)
330 W( an exception by calling)329 W
/Times-Italic SF
43105 XM
(RAISE)SH
/Times-Roman SF
46641 XM
(with)SH
22199 53499 MT
(`)SH
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(' and the `)89 W
10 /Helvetica AF
(DPSContext)SH
11 /Times-Roman AF
(' pointer, in)
89 W( order to al-)90 W
22199 54696 MT
(low some exception handler to do specific error recovery.)SH
/Symbol SF
21418 56492 MT
(\267)SH
/Times-Roman SF
22199 XM
(The `)121 W
10 /Helvetica AF
(dps_err_ps)SH
11 /Times-Roman AF
(' exception is caught by)
121 W( one of the hand-)120 W
22199 57689 MT
(lers in the application program. This causes the C stack)
95 W( to)96 W
8 /Helvetica AF
20957 63450 MT
(C.1 RECOVERING)
327 W( FROM POSTSCRIPT LANGUAGE ERRORS)SH
10 SS 
46929 XM
(101)SH
ES
%%Page: 102 104 
BS
0 SI
11 /Times-Roman AF
21299 6155 MT
(be unwound, and)
252 W( the handler body to be executed.  To)251 W
21299 7352 MT
(handle the exception, the application can)
119 W( reset the context)120 W
21299 8549 MT
(that reported the error, discarding any waiting code.)SH
/Symbol SF
20518 10345 MT
(\267)SH
/Times-Roman SF
21299 XM
(The handler body)
89 W( calls)88 W
/Times-Italic SF
31977 XM
(DPSResetContext)SH
/Times-Roman SF
(, which resets the)88 W
21299 11542 MT
(context after an error)
196 W( occurs.  This procedure guarantees)197 W
21299 12739 MT
(that any buffered I/O is discarded and that the)
172 W( context is)171 W
21299 13936 MT
(ready to read and execute more input.  Specifically,)467 W
/Times-Italic SF
21299 15133 MT
(DPSResetContext)SH
/Times-Roman SF
29601 XM
(causes EOF to be put on)
207 W( the context's)206 W
21299 16330 MT
(input stream.)SH
/Symbol SF
20518 18126 MT
(\267)SH
/Times-Roman SF
21299 XM
(We have)
388 W( come full circle now.  EOF is received by)389 W
/Times-Bold SF
21299 19323 MT
(resynchandleerror)SH
/Times-Roman SF
(, which)
329 W( causes it to terminate.  The)328 W
21299 20520 MT
(outer loop of)107 W
/Times-Bold SF
27578 XM
(resyncstart)SH
/Times-Roman SF
33213 XM
(then reopens the context's input)108 W
21299 21717 MT
(stream)SH
/Times-Bold SF
24586 XM
(%stdin)SH
/Times-Roman SF
(, which clears)
80 W( the end-of-file indication and)79 W
21299 22914 MT
(resumes execution at the top of the)
161 W( loop.  The context is)162 W
21299 24111 MT
(now ready to read new code.)SH
18891 26306 MT
(Although the above strategy works)
82 W( well enough for some appli-)81 W
18899 27603 MT
(cations, it leaves the context and the contents)
96 W( of its private VM)97 W
18899 28900 MT
(in an unknown state. For example, the)
176 W( dictionary and operand)175 W
18899 30197 MT
(stacks may be cluttered,)
251 W( or free-running forked contexts may)252 W
18899 31494 MT
(have been)
178 W( created, or the contents of)177 W
/Times-Bold SF
36507 XM
(userdict)SH
/Times-Roman SF
40747 XM
(may have been)177 W
18899 32791 MT
(changed. Clearing the state of such a context may be)
80 W( very com-)81 W
18899 34088 MT
(plicated.)SH
28806 50 18891 35784 LH BX1
10 /Helvetica-Bold AF
18899 37337 MT
(Note:)SH
11 /Times-Roman AF
22209 XM
(You may not get PostScript)
242 W( language error exceptions)241 W
18899 38634 MT
(when you expect them.  Because)
219 W( of various delays related to)220 W
18899 39931 MT
(buffering and scheduling, a)
229 W( PostScript language error may be)228 W
18899 41228 MT
(reported long after the C procedure responsible for the)
70 W( error has)71 W
18899 42525 MT
(returned. This)
567 W( makes it difficult to write an exception)
146 W( handler)145 W
18899 43822 MT
(for a given section of code.  If this code can cause a PostScript)96 W
18899 45119 MT
(language error and will)
35 W( therefore cause)34 W
/Times-Italic SF
36572 XM
(DPSDefaultErrorProc)SH
/Times-Roman SF
46841 XM
(to)SH
18899 46416 MT
(raise an)
14 W( exception, you can ensure that you get the exception in a)15 W
18899 47713 MT
(timely manner)
152 W( by using synchronization, which is discussed in)151 W
18899 49010 MT
(Section 6.4.)SH
28806 50 18891 50049 LH BX1
10 /Helvetica AF
4500 63450 MT
(102)SH
8 SS 
8568 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 103 105 
BS
28806 50 19791 5400 LH BX1
0 SI
10 /Helvetica-Bold AF
19799 6953 MT
(Warning:)SH
11 /Times-Roman AF
24887 XM
(In multi-context applications that require error)655 W
19799 8250 MT
(recovery, the code to recover from PostScript errors can get)
6 W( quite)5 W
19799 9547 MT
(complicated. An)
6 W( exception reporting a PostScript error caused by)7 W
19799 10844 MT
(one context can be)
36 W( raised by any call on the Client Library, even)35 W
19799 12141 MT
(one on)
90 W( behalf of some other context, including calls made from)91 W
19799 13438 MT
(wraps. Although)274 W
/Times-Italic SF
27953 XM
(DPSDefaultErrorProc)SH
/Times-Roman SF
38461 XM
(does pass the context)273 W
19799 14735 MT
(that caused the error as an argument to RAISE, it is difficult)
101 W( in)102 W
19799 16032 MT
(general to deal properly with)
52 W( an exception from one context that)51 W
19799 17329 MT
(arises while the application is working with another.)SH
28806 50 19791 18368 LH BX1
19791 20563 MT
(When the standard)75 W
/Times-Bold SF
28537 XM
(handleerror)SH
/Times-Roman SF
34569 XM
(procedure is called to)
75 W( report an)76 W
19799 21860 MT
(error, no recovery is possible except to display)
55 W( an error message)54 W
19799 23157 MT
(and destroy the context.)SH
12 /Helvetica AF
12592 27025 MT
(C.2 EXAMPLE)
491 W( EXCEPTION HANDLER)SH
11 /Times-Roman AF
19791 29576 MT
(A typical application might have the following main)
152 W( loop. As-)153 W
19799 30873 MT
(sume that a context has already been created with)874 W
/Times-Italic SF
19799 32170 MT
(DPSDefaultErrorProc)SH
/Times-Roman SF
30898 XM
(as its error)
864 W( procedure, and that)865 W
/Times-Bold SF
19799 33467 MT
(resyncstart)SH
/Times-Roman SF
25326 XM
(has been executed by the context.)SH
8 /Helvetica AF
29958 63450 MT
(C.2 EXAMPLE)
327 W( EXCEPTION HANDLER)SH
10 SS 
46929 XM
(103)SH
ES
%%Page: 104 106 
BS
43197 50 4500 6355 UL
0 SI
9 /Helvetica AF
5700 8108 MT
(#include <dpsexcept.h>)SH
8004 9862 MT
(while \050/* the user hasn't quit */\051 {)SH
9156 10960 MT
(/* get an input event */)SH
9156 12058 MT
(event = GetEventFromQueue\050\051;)SH
9156 13156 MT
(/* react to event */)SH
9156 14254 MT
(DURING)SH
10308 15352 MT
(switch \050event\051 {)SH
11460 16450 MT
(case EVENT_A:)SH
12612 17548 MT
(UserWrapA\050context, ...\051;)SH
12612 18646 MT
(break;)SH
11460 19744 MT
(case EVENT_B:)SH
12612 20842 MT
(UserWrapB\050context, ...\051;)SH
12612 21940 MT
(break;)SH
11460 23038 MT
(case EVENT_C:)SH
12612 24136 MT
(ProcThatCallsSeveralWraps\050context\051;)SH
12612 25234 MT
(break;)SH
11460 26332 MT
(/* ... */)SH
11460 27430 MT
(default:;)SH
10308 28528 MT
(})SH
9156 29626 MT
(HANDLER)SH
10308 30724 MT
(/* the context's error proc has already posted an)SH
11172 31822 MT
(error for this exception, so just reset.)SH
11172 32920 MT
(Make sure the context we're using is the)SH
11172 34018 MT
(one that caused the error! */)SH
10308 35116 MT
(if \050Exception.Code == dps_err_ps\051)SH
11460 36214 MT
(DPSResetContext\050\050DPSContext\051Exception.Message\051;)SH
9156 37312 MT
(END_HANDLER)SH
8004 38410 MT
(})SH
43197 50 4500 39806 UL
11 /Times-Roman AF
18891 41801 MT
(Most of the calls in the)
87 W( `)86 W
10 /Helvetica AF
(switch)SH
11 /Times-Roman AF
(' statement are either direct calls)86 W
18899 43098 MT
(to wrapped procedures or)
518 W( indirect calls \050that is, calls to)519 W
18899 44395 MT
(procedures that make direct calls to wrapped procedures or to the)9 W
18899 45692 MT
(Client Library\051.)
193 W( All of the procedure calls between `)194 W
10 /Helvetica AF
(DURING)SH
11 /Times-Roman AF
(')SH
18899 46989 MT
(and `)16 W
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' can potentially)
16 W( raise an exception. The code be-)15 W
18899 48286 MT
(tween `)56 W
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
(' and `)56 W
10 /Helvetica AF
(END_HANDLER)SH
11 /Times-Roman AF
(' is executed)56 W
/Times-Italic SF
43429 XM
(only)SH
/Times-Roman SF
45655 XM
(if an)57 W
18899 49583 MT
(exception is raised)
565 W( by the code between `)564 W
10 /Helvetica AF
(DURING)SH
11 /Times-Roman AF
(' and)564 W
18899 50880 MT
(`)SH
10 /Helvetica AF
(HANDLER)SH
11 /Times-Roman AF
('. Otherwise, the handler code is skipped.)SH
18891 53075 MT
(Suppose)SH
/Times-Italic SF
22894 XM
(ProcThatCallsSeveralWraps)SH
/Times-Roman SF
35819 XM
(is defined as follows:)SH
10 /Helvetica AF
4500 63450 MT
(104)SH
8 SS 
8568 XM
(Client Library Reference Manual / Version of January 23, 1990)SH
ES
%%Page: 105 107 
BS
43197 50 5400 6355 UL
0 SI
9 /Helvetica AF
8904 8108 MT
(void ProcThatCallsSeveralWraps\050context\051)SH
8904 9206 MT
(DPSContext context;)SH
8904 10304 MT
({)SH
10056 11402 MT
(char *s = ProcThatAllocsAString\050...\051;)SH
10056 12500 MT
(int n;)SH
10056 14254 MT
(DURING)SH
11208 15352 MT
(UserWrapC1\050context, ...\051;)SH
11208 16450 MT
(UserWrapC2\050context, &n\051;  /* user wrap returns a value */)SH
11208 17548 MT
(DPSPrintf\050context, "/%s %d def\134n", s, n\051; /* client lib proc */)SH
10056 18646 MT
(HANDLER)SH
11208 19744 MT
(if \050\050DPSContext\051Exception.Message == context\051)SH
12360 20842 MT
({)SH
12360 21940 MT
(/* clean up the allocated string */)SH
12360 23038 MT
(free\050s\051;)SH
12360 24136 MT
(s = NULL;)SH
12360 25234 MT
(})SH
11208 26332 MT
(/* let the caller handle resetting the context */)SH
11208 27430 MT
(RERAISE;)SH
10056 28528 MT
(END_HANDLER)SH
10056 30282 MT
(/* clean up, if we haven't already */)SH
10056 31380 MT
(if \050s != NULL\051 free\050s\051;)SH
8904 32478 MT
(})SH
43197 50 5400 33874 UL
11 /Times-Roman AF
19791 35869 MT
(This procedure unconditionally allocates storage, then)
448 W( calls)449 W
19799 37166 MT
(procedures that)
56 W( may raise an exception. If there were no handler)55 W
19799 38463 MT
(here and the exception simply propagated to the main loop,)
109 W( the)110 W
19799 39760 MT
(storage allocated for the string would never be reclaimed. The)166 W
19799 41057 MT
(solution is to define a handler that frees the storage and then calls)2 W
/Times-Italic SF
19799 42354 MT
(RERAISE)SH
/Times-Roman SF
24444 XM
(to allow another handler to do the final processing of)94 W
19799 43651 MT
(the exception.)SH
8 /Helvetica AF
29958 63450 MT
(C.2 EXAMPLE)
327 W( EXCEPTION HANDLER)SH
10 SS 
46929 XM
(105)SH
ES
%%Page: 106 108 
BS
ES
%%Page: 107 109 
BS
0 SI
36 SS 
0 5400 5405 PB %!
% contents box/fountain
gsave 0 -3 pica translate  0 0 36 pica 3 pica fountain
1 setlinewidth -.25 0 moveto 36 pica .5 add 0 rlineto stroke
-.25 3 pica moveto 36 pica .5 add 0 rlineto stroke
.5 setlinewidth 0 -.5 moveto 0 3 pica 1 add rlineto stroke
36 pica -.5 moveto 0 3 pica 1 add rlineto stroke grestore

 PE 24 /Helvetica AF
41528 8229 MT
(Index)SH
9 /Times-Bold AF
6600 14985 MT
(%stdin)SH
/Times-Roman SF
10075 XM
(35, 102)SH
28198 XM
(contexts)SH
29432 16132 MT
(chaining 28,)
450 W( 43, 47, 48)SH
/Times-Bold SF
6600 17279 MT
(=)SH
/Times-Roman SF
7788 XM
(60)SH
29432 XM
(child 28,)
450 W( 47)SH
/Times-Bold SF
6600 18426 MT
(==)SH
/Times-Roman SF
8301 XM
(23, 60)SH
29432 XM
(communicating with)
SH( 14)450 W
29432 19573 MT
(current 14,)
450 W( 52, 53, 57)SH
6600 20720 MT
(abnormal termination)
SH( 20)450 W
29432 XM
(destination for code)
SH( 11)450 W
6600 21867 MT
(advanced facilities)
SH( 28)450 W
29432 XM
(destroying 20,)
450 W( 49)SH
6600 23014 MT
(ASCII conversion)
SH( 29)450 W
29432 XM
(forked 33)450 W
6600 24161 MT
(ASCII encoding)
SH( 13,)
450 W( 30, 31)SH
29432 XM
(invalid 25)450 W
6600 25308 MT
(ASCII text)
SH( 16)450 W
29432 XM
(multiple 57)450 W
29432 26455 MT
(output from)
SH( 21)450 W
6600 27602 MT
(backstop error handler)
SH( 52,)
450 W( 53)SH
29432 XM
(parent 28,)
450 W( 47)SH
6600 28749 MT
(backstop handler)
SH( 27)450 W
29432 XM
(resetting 52)450 W
6600 29896 MT
(backstop text handler)
SH( 53)450 W
29432 XM
(sending to)
SH( 14)450 W
6600 31043 MT
(basic facilities)
SH( 10)450 W
29432 XM
(setting 14,)
450 W( 53)SH
6600 32190 MT
(binary object sequence)
SH( 30,)
450 W( 73, 77, 80)SH
29432 XM
(synchronizing 21,)
450 W( 32, 54, 102)SH
6600 33337 MT
(binary object sequence, extended)
SH( 79,)
450 W( 82)SH
29432 XM
(unchaining 54)450 W
6600 34484 MT
(binary object sequence, writing)
SH( 85)450 W
29432 XM
(writing to)
SH( 14,)
450 W( 54)SH
6600 35631 MT
(binary-encoded tokens)
SH( 30)450 W
28198 XM
(conversion 18,)
450 W( 30)SH
6600 36778 MT
(boolean 35)450 W
28198 XM
(coordinate systems)
SH( 37)450 W
6600 37925 MT
(buffer 32)450 W
28198 XM
(coordinates 58)450 W
6600 39072 MT
(buffer, flushing)
SH( 51)450 W
28198 XM
(current context)
SH( 14,)
450 W( 52, 53, 57)SH
6600 40219 MT
(buffering code and data)
SH( 31)450 W
/Times-Bold SF
28198 XM
(currentfile)SH
/Times-Roman SF
32973 XM
(35)SH
6600 41366 MT
(byte order)
SH( 30)450 W
/Times-Bold SF
28198 XM
(currentgray)SH
/Times-Roman SF
33523 XM
(58)SH
/Times-Bold SF
28198 42513 MT
(curveto)SH
/Times-Roman SF
31773 XM
(58)SH
6600 43660 MT
(C types)
SH( 57)450 W
/Times-Bold SF
28198 XM
(cvn)SH
/Times-Roman SF
30223 XM
(94)SH
6600 44807 MT
(call stack, unwinding)
SH( 97)450 W
6600 45954 MT
(call-back procedures)
SH( 21)450 W
28198 XM
(data, sending)
SH( 14)450 W
6600 47101 MT
(chaining contexts)
SH( 28,)
450 W( 43, 47, 48)SH
28198 XM
(debugging 6,)
450 W( 29, 35, 43, 58)SH
6600 48248 MT
(changing the text handler)
SH( 53)450 W
28198 XM
(default error procedure)
SH( 49)450 W
6600 49395 MT
(child context)
SH( 28,)
450 W( 47)SH
28198 XM
(default text procedure)
SH( 13)450 W
6600 50542 MT
(Client Library, introduction to)
SH( 4)450 W
/Times-Bold SF
28198 XM
(defineusername)SH
/Times-Roman SF
34973 XM
(76, 87)SH
6600 51689 MT
(code, sending)
SH( 14)450 W
28198 XM
(destination for PostScript language code)
SH( 11)450 W
6600 52836 MT
(code, writing)
SH( 87)450 W
28198 XM
(destroying a context)
SH( 49)450 W
6600 53983 MT
(communicating with a context)
SH( 14)450 W
28198 XM
(destroying a space)
SH( 49)450 W
6600 55130 MT
(communication channel)
SH( 36)450 W
28198 XM
(destroying contexts)
SH( 20)450 W
6600 56277 MT
(context 6)450 W
28198 XM
(device independence)
SH( 37)450 W
6600 57424 MT
(context creation)
SH( 11)450 W
28198 XM
(Display PostScript system)
SH( 4)450 W
6600 58571 MT
(context data structures)
SH( 10)450 W
28198 XM
(displays, multiple)
SH( 29)450 W
6600 59718 MT
(context handle)
SH( 10)450 W
28198 XM
(DPS_DEF_TOKENTYPE 77)450 W
6600 60865 MT
(context record)
SH( 46)450 W
28198 XM
(dps_err_ps error)
SH( 25,)
450 W( 49, 50, 85, 101)SH
10 /Helvetica AF
46929 63450 MT
(107)SH
ES
%%Page: 108 110 
BS
0 SI
9 /Times-Roman AF
5700 6017 MT
(dps_strings 31)450 W
27298 XM
(dpsops.h 7,)
450 W( 56, 61)SH
5700 7164 MT
(DPSAwaitReturnValues 74,)
450 W( 75, 85)SH
27298 XM
(DPSPrintf 16,)
450 W( 17, 35, 52)SH
5700 8311 MT
(DPSBinObjGeneric 80)450 W
27298 XM
(DPSProcs 82)450 W
5700 9458 MT
(DPSBinObjReal 81)450 W
27298 XM
(DPSProcsRec 83)450 W
5700 10605 MT
(DPSBinObjRec 81)450 W
27298 XM
(DPSProgramEncoding 30,)
450 W( 83)SH
5700 11752 MT
(DPSBinObjSeqRec 81)450 W
27298 XM
(DPSResetContext 53,)
450 W( 102)SH
5700 12899 MT
(DPSBinObjSeqWrite 73,)
450 W( 74, 76, 85)SH
27298 XM
(DPSResultsRec 74,)
450 W( 84)SH
5700 14046 MT
(DPSChainContext 28,)
450 W( 49)SH
27298 XM
(DPSselectfont 59)450 W
5700 15193 MT
(DPSChangeEncoding 17,)
450 W( 95)SH
27298 XM
(DPSsendchararray 58,)
450 W( 59)SH
5700 16340 MT
(dpsclient.h 7,)
450 W( 46, 48, 80, 91)SH
27298 XM
(DPSsendfloat 58)450 W
5700 17487 MT
(DPSContext 46)450 W
27298 XM
(DPSsendfloatarray 59)450 W
5700 18634 MT
(DPSContextFromContextID 33,)
450 W( 34)SH
27298 XM
(DPSsendint 59)450 W
5700 19781 MT
(DPSContextRec 33,)
450 W( 48)SH
27298 XM
(DPSSetContext 14,)
450 W( 53, 56, 57, 61)SH
5700 20928 MT
(DPSCreateTextContext 13,)
450 W( 31)SH
27298 XM
(DPSsetdash 59)450 W
5700 22075 MT
(DPScurrentgray 58)450 W
27298 XM
(DPSSetErrorBackstop 27,)
450 W( 53)SH
5700 23222 MT
(DPScurrentgstate 60)450 W
27298 XM
(DPSSetErrorProc 22,)
450 W( 53)SH
5700 24369 MT
(DPSDefaultErrorProc 13,)
450 W( 22, 44, 49, 91, 95, 102)SH
27298 XM
(DPSsetfont 60)450 W
5700 25516 MT
(DPSDefaultTextBackstop 13,)
450 W( 22, 44)SH
27298 XM
(DPSsetgray 59)450 W
5700 26663 MT
(DPSDefinedType 82)450 W
27298 XM
(DPSsetgstate 60)450 W
5700 27810 MT
(DPSdefineuserobject 59)450 W
27298 XM
(DPSSetResultTable 74,)
450 W( 85, 87)SH
5700 28957 MT
(DPSDestroyContext 20,)
450 W( 49)SH
27298 XM
(DPSSetTextBackstop 27,)
450 W( 53)SH
5700 30104 MT
(DPSDestroySpace 20,)
450 W( 49, 50)SH
27298 XM
(DPSSetTextProc 22,)
450 W( 53)SH
5700 31251 MT
(DPSequals 60)450 W
27298 XM
(DPSSpace 84)450 W
5700 32398 MT
(DPSequalsequals 60)450 W
27298 XM
(DPSSpaceFromContext 54)450 W
5700 33545 MT
(DPSErrorCode 48)450 W
27298 XM
(DPSSpaceRec 19,)
450 W( 84)SH
5700 34692 MT
(DPSErrorProc 12,)
450 W( 49, 51)SH
27298 XM
(DPSTextProc 12,)
450 W( 54)SH
5700 35839 MT
(dpsexcept.h 97)450 W
27298 XM
(DPSuappend 59)450 W
5700 36986 MT
(DPSExtendedBinObjSeqRec 82)450 W
27298 XM
(DPSueofill 59)450 W
5700 38133 MT
(DPSFlushContext 31,)
450 W( 35, 52)SH
27298 XM
(DPSufill 59)450 W
5700 39280 MT
(dpsfriends.h 7,)
450 W( 46, 84)SH
27298 XM
(DPSUnchainContext 28,)
450 W( 54)SH
5700 40427 MT
(DPSgetchararray 59)450 W
27298 XM
(DPSUpdateNameMap 76,)
450 W( 87)SH
5700 41574 MT
(DPSGetCurrentContext 52)450 W
27298 XM
(DPSustroke 59)450 W
5700 42721 MT
(DPSGetCurrentErrorBackstop 27,)
450 W( 52)SH
27298 XM
(DPSustrokepath 59)450 W
5700 43868 MT
(DPSGetCurrentTextBackstop 13,)
450 W( 27, 52)SH
27298 XM
(DPSversion 60)450 W
5700 45015 MT
(DPSgetfloatarray 59)450 W
27298 XM
(DPSWaitContext 17,)
450 W( 31, 32, 33, 35, 54)SH
5700 46162 MT
(DPSGetLastNameIndex 89)450 W
27298 XM
(DPSWriteData 17,)
450 W( 18, 55)SH
5700 47309 MT
(DPSinfill 59)450 W
27298 XM
(DPSWritePostScript 17,)
450 W( 18, 55)SH
5700 48456 MT
(DPSinstroke 59)450 W
27298 XM
(DPSWriteStringChars 74,)
450 W( 85, 87)SH
5700 49603 MT
(DPSInterruptContext 19,)
450 W( 52)SH
27298 XM
(DPSWriteTypedObjectArray 73,)
450 W( 74, 85, 88)SH
5700 50750 MT
(DPSinueofill 59)450 W
27298 XM
(DPSxshow 58,)
450 W( 59)SH
5700 51897 MT
(DPSinufill 59)450 W
27298 XM
(DPSxyshow 59)450 W
5700 53044 MT
(DPSinustroke 59)450 W
27298 XM
(DPSyshow 59)450 W
5700 54191 MT
(DPSLastNameIndex 89)450 W
27298 XM
(drawable object)
SH( 12)450 W
5700 55338 MT
(DPSLastObjectIndex 89)450 W
27298 XM
(DURING 98)450 W
5700 56485 MT
(DPSMapNames 76,)
450 W( 86)SH
5700 57632 MT
(DPSNameEncoding 30,)
450 W( 82)SH
27298 XM
(E_RETURN\050x\051 100)450 W
5700 58779 MT
(DPSNameFromIndex 77,)
450 W( 87)SH
27298 XM
(E_RETURN_VOID 100)450 W
5700 59926 MT
(DPSNewUserObject 89)450 W
27298 XM
(encoding 17,)
450 W( 30)SH
10 /Helvetica AF
4500 63450 MT
(108)SH
8 SS 
8568 XM
(INDEX January 23, 1990)SH
ES
%%Page: 109 111 
BS
0 SI
9 /Times-Roman AF
6600 6017 MT
(encoding PostScript language)
SH( 30)450 W
29432 XM
(dpsfriends.h 7,)
450 W( 46, 84)SH
6600 7164 MT
(encoding, name)
SH( 82)450 W
29432 XM
(dpsops.h 7,)
450 W( 56, 61)SH
6600 8311 MT
(encoding, program)
SH( 83)450 W
29432 XM
(psops.h 8,)
450 W( 53, 56, 61)SH
6600 9458 MT
(END_HANDLER 98)450 W
29432 XM
(stdout 44)450 W
6600 10605 MT
(EOF \050end of file\051)
SH( 36)450 W
29432 XM
(system-specific 11)450 W
6600 11752 MT
(error codes)
SH( 25,)
450 W( 48, 50)SH
28198 XM
(floating-point format)
SH( 30)450 W
6600 12899 MT
(error handler)
SH( 13,)
450 W( 21, 22, 25, 49, 50, 53)SH
28198 XM
(flow of control)
SH( 22)450 W
6600 14046 MT
(error handler, backstop)
SH( 27,)
450 W( 52, 53)SH
/Times-Bold SF
28198 XM
(flush)SH
/Times-Roman SF
30773 XM
(32)SH
6600 15193 MT
(error handler, X example)
SH( 91)450 W
28198 XM
(flushing a buffer)
SH( 31,)
450 W( 33, 51)SH
6600 16340 MT
(error messages)
SH( 23,)
450 W( 49)SH
28198 XM
(font dictionary)
SH( 60)450 W
6600 17487 MT
(error procedure)
SH( 85)450 W
/Times-Bold SF
28198 XM
(fork)SH
/Times-Roman SF
30523 XM
(33, 34, 36)SH
6600 18634 MT
(error recovery)
SH( 26,)
450 W( 101)SH
28198 XM
(forked context)
SH( 33)450 W
6600 19781 MT
(errors commonly made by programmers)
SH( 35)450 W
28198 XM
(format string)
SH( 16)450 W
6600 20928 MT
(example code)SH
7834 22075 MT
(context creation)
SH( 11)450 W
28198 XM
(GetBuffer 17)450 W
7834 23222 MT
(error handler)
SH( 91)450 W
28198 XM
(graphics state)
SH( 60)450 W
7834 24369 MT
(exception handler)
SH( 103)450 W
7834 25516 MT
(generated by wrap)
SH( 75)450 W
/Times-Bold SF
28198 XM
(handleerror)SH
/Times-Roman SF
33523 XM
(25, 96, 103)SH
7834 26663 MT
(HANDLER...END_HANDLER 98)450 W
28198 XM
(HANDLER 98)450 W
7834 27810 MT
(sample application)
SH( 39)450 W
28198 XM
(handler, backstop)
SH( 27)450 W
7834 28957 MT
(text handler)
SH( 23)450 W
28198 XM
(handler, error)
SH( 50)450 W
7834 30104 MT
(wrap 43)450 W
28198 XM
(handler, text)
SH( 23,)
450 W( 53)SH
7834 31251 MT
(wrap with return values)
SH( 75)450 W
28198 XM
(handlers 21)450 W
6600 32398 MT
(examples)SH
28198 XM
(handling errors)
SH( 21,)
450 W( 25)SH
7834 33545 MT
(buffer with partial token)
SH( 17)450 W
28198 XM
(handling exceptions)
SH( 97)450 W
7834 34692 MT
(calling a wrap)
SH( 9)450 W
28198 XM
(header files)
SH( 7)450 W
7834 35839 MT
(converting the encoding)
SH( 17)450 W
28198 XM
(help 35,)
450 W( 58)SH
7834 36986 MT
(DPSPrintf 16)450 W
7834 38133 MT
(DPSWriteData and DPSWritePostScript)
SH( 18)450 W
28198 XM
(imaging model)
SH( 37)450 W
7834 39280 MT
(draw into buffer)
SH( 32)450 W
28198 XM
(initialization 7,)
450 W( 12, 14, 22)SH
7834 40427 MT
(drawing a black box)
SH( 9)450 W
28198 XM
(interface 7)450 W
7834 41574 MT
(mouse-click event)
SH( 14)450 W
/Times-Bold SF
28198 XM
(interrupt)SH
/Times-Roman SF
32423 XM
(19, 52)SH
7834 42721 MT
(returning font info)
SH( 15)450 W
28198 XM
(interrupts 19,)
450 W( 52)SH
7834 43868 MT
(sending formatted text)
SH( 16)450 W
28198 XM
(invalid context)
SH( 25)450 W
7834 45015 MT
(single-operator procedure)
SH( 15)450 W
28198 XM
(invalid context error)
SH( 50)450 W
7834 46162 MT
(synchronizing 32)450 W
6600 47309 MT
(exception handler)
SH( 97)450 W
/Times-Bold SF
28198 XM
(lineto)SH
/Times-Roman SF
31023 XM
(58)SH
6600 48456 MT
(exception, raising)
SH( 97,)
450 W( 102)SH
28198 XM
(linking the application)
SH( 39)450 W
6600 49603 MT
(Exception.Code 99,)
450 W( 100)SH
6600 50750 MT
(Exception.Message 99)450 W
/Times-Bold SF
28198 XM
(moveto)SH
/Times-Roman SF
31673 XM
(58)SH
6600 51897 MT
(execution context)
SH( 6,)
450 W( 10)SH
28198 XM
(multiple calls to DPSPrintf)
SH( 16)450 W
6600 53044 MT
(extended binary object sequence)
SH( 79,)
450 W( 82)SH
28198 XM
(multiple contexts)
SH( 57)450 W
28198 54191 MT
(multiple displays)
SH( 29)450 W
6600 55338 MT
(facilities, basic)
SH( 10)450 W
28198 XM
(multiple windows)
SH( 29)450 W
6600 56485 MT
(file, as system-specific object)
SH( 11)450 W
28198 XM
(MyWrap 17)450 W
6600 57632 MT
(files 7)450 W
7834 58779 MT
(dpsclient.h 7,)
450 W( 46, 48, 80, 91)SH
28198 XM
(name encoding)
SH( 30,)
450 W( 31, 82)SH
7834 59926 MT
(dpsexcept.h 97)450 W
28198 XM
(name mapping)
SH( 31,)
450 W( 76, 85, 87)SH
10 /Helvetica AF
46929 63450 MT
(109)SH
ES
%%Page: 110 112 
BS
0 SI
9 /Times-Roman AF
5700 6017 MT
(name too long error)
SH( 50,)
450 W( 85)SH
27298 XM
(resolution independence)
SH( 37)450 W
5700 7164 MT
(Notes 4,)
450 W( 21, 23, 28, 46, 57, 58, 61, 80, 82, 85, 97, 102)SH
27298 XM
(resource limitations)
SH( 26)450 W
7384 8311 MT
(See also)
SH( Warnings)450 W
27298 XM
(result table)
SH( 74,)
450 W( 83, 85)SH
5700 9458 MT
(Notes and Warnings)
SH( 97)450 W
27298 XM
(result table, setting)
SH( 87)450 W
5700 10605 MT
(numeric literals)
SH( 57)450 W
27298 XM
(result values)
SH( 32)450 W
5700 11752 MT
(numeric representation)
SH( 30)450 W
27298 XM
(results 15,)
450 W( 33, 74)SH
/Times-Bold SF
27298 12899 MT
(resynchandleerror)SH
/Times-Roman SF
35123 XM
(52, 95, 96, 101)SH
5700 14046 MT
(operand stack)
SH( 57)450 W
/Times-Bold SF
27298 XM
(resyncstart)SH
/Times-Roman SF
32273 XM
(101)SH
5700 15193 MT
(operator arguments)
SH( 57)450 W
27298 XM
(return values)
SH( 15,)
450 W( 74)SH
5700 16340 MT
(operators 56)450 W
27298 XM
(returning from exception handler)
SH( 100)450 W
5700 17487 MT
(output from a wrapped procedure)
SH( 74)450 W
27298 XM
(rules of thumb)
SH( 58)450 W
5700 18634 MT
(output from context)
SH( 21)450 W
27298 XM
(runtime support for wrapped procedures)
SH( 73)450 W
5700 20928 MT
(parent context)
SH( 28,)
450 W( 47)SH
27298 XM
(sample application)
SH( 39)450 W
5700 22075 MT
(pixmap 12,)
450 W( 32)SH
27298 XM
(sample wrap)
SH( 43)450 W
5700 23222 MT
(pointer to context record)
SH( 10)450 W
27298 XM
(sending code)
SH( 73)450 W
5700 24369 MT
(PostScript)SH
27298 XM
(sending data to a context)
SH( 18,)
450 W( 54)SH
6934 25516 MT
(destination for code)
SH( 11)450 W
27298 XM
(sending to a context)
SH( 14,)
450 W( 52)SH
6934 26663 MT
(encoding and translating)
SH( 30)450 W
27298 XM
(server connection, lost)
SH( 27)450 W
6934 27810 MT
(execution context)
SH( 6)450 W
/Times-Bold SF
27298 XM
(setgray)SH
/Times-Roman SF
30773 XM
(37)SH
6934 28957 MT
(interpreter errors)
SH( 48)450 W
/Times-Bold SF
27298 XM
(setlinewidth)SH
/Times-Roman SF
32623 XM
(38)SH
6934 30104 MT
(language errors)
SH( 25,)
450 W( 50, 85, 97)SH
/Times-Bold SF
27298 XM
(setrgbcolor)SH
/Times-Roman SF
32323 XM
(38)SH
6934 31251 MT
(operand stack)
SH( 57)450 W
27298 XM
(setting the current context)
SH( 14,)
450 W( 53, 57)SH
6934 32398 MT
(operator arguments)
SH( 57)450 W
27298 XM
(setting the result table)
SH( 87)450 W
6934 33545 MT
(operators 56)450 W
27298 XM
(shared VM)
SH( 19)450 W
5700 34692 MT
(previewer application)
SH( 26)450 W
27298 XM
(Single-operator procedures prefixed by)SH
/Times-Italic SF
41648 XM
(PS)SH
/Times-Roman SF
42873 XM
(are indexed)SH
/Times-Bold SF
5700 35839 MT
(print)SH
/Times-Roman SF
8325 XM
(23)SH
28498 XM
(under)SH
/Times-Italic SF
30773 XM
(DPS)SH
/Times-Roman SF
(.)SH
5700 36986 MT
(printers 30)450 W
27298 XM
(single-operator procedure, example of)
SH( 15)450 W
5700 38133 MT
(printf 16,)
450 W( 52)SH
27298 XM
(single-operator procedures)
SH( 56)450 W
/Times-Bold SF
5700 39280 MT
(printobject)SH
/Times-Roman SF
10675 XM
(48, 74)SH
27298 XM
(sizeof 74)450 W
5700 40427 MT
(private VM)
SH( 12)450 W
27298 XM
(space 12,)
450 W( 19)SH
5700 41574 MT
(ProcThatCallsSeveralWraps 104)450 W
27298 XM
(space record)
SH( 19,)
450 W( 84)SH
5700 42721 MT
(program encoding)
SH( 30,)
450 W( 83)SH
27298 XM
(space, destroying)
SH( 49)450 W
5700 43868 MT
(programming tips)
SH( 35,)
450 W( 58)SH
27298 XM
(standard error codes)
SH( 25,)
450 W( 48)SH
/Times-Italic SF
5700 45015 MT
(PSoperator)SH
/Times-Roman SF
10075 XM
(single-operator procedures are indexed un-)SH
27298 XM
(stdout 44)450 W
6900 46162 MT
(der)SH
/Times-Italic SF
8275 XM
(DPSoperator)SH
/Times-Roman SF
(.)SH
/Times-Bold SF
27298 XM
(stop)SH
/Times-Roman SF
29573 XM
(19)SH
5700 47309 MT
(PSitransform 44)450 W
/Times-Bold SF
27298 XM
(stopped)SH
/Times-Roman SF
30973 XM
(101)SH
5700 48456 MT
(psops.h 8,)
450 W( 53, 56, 61)SH
27298 XM
(string, writing)
SH( 87)450 W
5700 49603 MT
(PSWDrawBox 44)450 W
27298 XM
(synchronization 21,)
450 W( 32, 54, 102)SH
5700 50750 MT
(pswrap translator)
SH( 8)450 W
27298 XM
(synchronization of name maps)
SH( 87)450 W
27298 51897 MT
(system-specific context creation)
SH( 11)450 W
5700 53044 MT
(RAISE 96,)
450 W( 99, 101)SH
27298 XM
(system-specific documentation)
SH( 2)450 W
5700 54191 MT
(raising an exception)
SH( 97)450 W
27298 XM
(system-specific interface)
SH( 11)450 W
/Times-Bold SF
5700 55338 MT
(rand)SH
/Times-Roman SF
8225 XM
(58)SH
/Times-Bold SF
5700 56485 MT
(rectfill)SH
/Times-Roman SF
8925 XM
(9)SH
27298 XM
(tag 74)450 W
5700 57632 MT
(removing context from a chain)
SH( 54)450 W
27298 XM
(tag check error)
SH( 50,)
450 W( 85)SH
5700 58779 MT
(RERAISE 100)450 W
27298 XM
(temporary text handler)
SH( 23)450 W
5700 59926 MT
(resetting a context)
SH( 52)450 W
27298 XM
(termination 7,)
450 W( 20)SH
10 /Helvetica AF
4500 63450 MT
(110)SH
8 SS 
8568 XM
(INDEX January 23, 1990)SH
ES
%%Page: 111 113 
BS
0 SI
9 /Times-Roman AF
6600 6017 MT
(termination tag)
SH( 75,)
450 W( 85)SH
28198 XM
(X Window System)
SH( 97)450 W
6600 7164 MT
(text 13,)
450 W( 16, 29)SH
29432 XM
(context creation)
SH( 11,)
450 W( 12, 13)SH
6600 8311 MT
(text handler)
SH( 13,)
450 W( 22, 23, 53)SH
29432 XM
(DPSCreateTextContext 13)450 W
6600 9458 MT
(text handler, backstop)
SH( 27)450 W
29432 XM
(drawable object)
SH( 12)450 W
6600 10605 MT
(tips 58)450 W
29432 XM
(error handler)
SH( 91)450 W
6600 11752 MT
(tips for appplication programmers)
SH( 35)450 W
29432 XM
(example code)
SH( 11,)
450 W( 12, 23)SH
6600 12899 MT
(token 77)450 W
29432 XM
(pixmap 12)450 W
6600 14046 MT
(tokens, binary-encoded)
SH( 30)450 W
29432 XM
(XDPSCreateSimpleContext 12,)
450 W( 44)SH
6600 15193 MT
(translation 30)450 W
28198 XM
(X11 example application)
SH( 39)450 W
6600 16340 MT
(troubleshooting 35)450 W
28198 XM
(XDPSCreateSimpleContext 12,)
450 W( 13, 44)SH
6600 17487 MT
(type check error)
SH( 50,)
450 W( 85)SH
/Times-Bold SF
6600 18634 MT
(typecheck)SH
/Times-Roman SF
11125 XM
(94)SH
6600 19781 MT
(types 57)450 W
6600 22075 MT
(unchaining a context)
SH( 54)450 W
6600 23222 MT
(unwinding the call stack)
SH( 97)450 W
6600 24369 MT
(user name indices)
SH( 30,)
450 W( 31, 84)SH
6600 25516 MT
(user names)
SH( 76,)
450 W( 82, 84, 86)SH
6600 26663 MT
(user objects)
SH( 60)450 W
6600 27810 MT
(user space)
SH( 37)450 W
/Times-Bold SF
6600 28957 MT
(userdict)SH
/Times-Roman SF
10375 XM
(102)SH
6600 31251 MT
(VM, private)
SH( 12)450 W
6600 32398 MT
(VM, shared)
SH( 19)450 W
/Times-Bold SF
6600 33545 MT
(vmreclaim)SH
/Times-Roman SF
11375 XM
(58)SH
6600 35839 MT
(waiting 33)450 W
6600 36986 MT
(Warnings 16,)
450 W( 17, 46, 100, 102)SH
8284 38133 MT
(See also)
SH( Notes)450 W
6600 39280 MT
(whitespace 16)450 W
6600 40427 MT
(window, as system-specific object)
SH( 11)450 W
6600 41574 MT
(windows, multiple)
SH( 29)450 W
6600 42721 MT
(word-processing program)
SH( 26)450 W
6600 43868 MT
(wrap 8)450 W
8284 45015 MT
(See also)
SH( wrapped)
450 W( procedure)SH
6600 46162 MT
(wrapped procedure)SH
7834 47309 MT
(advantages of)
SH( 8)450 W
7834 48456 MT
(defined 14)450 W
7834 49603 MT
(example code)
SH( 43)450 W
7834 50750 MT
(output from)
SH( 74)450 W
7834 51897 MT
(runtime support for)
SH( 73)450 W
7834 53044 MT
(with return values)
SH( 75)450 W
/Times-Bold SF
6600 54191 MT
(writestring)SH
/Times-Roman SF
11525 XM
(23)SH
6600 55338 MT
(writing a binary object sequence)
SH( 85)450 W
6600 56485 MT
(writing a string)
SH( 87)450 W
6600 57632 MT
(writing code)
SH( 87)450 W
6600 58779 MT
(writing data to a context)
SH( 54)450 W
6600 59926 MT
(writing to a context)
SH( 14,)
450 W( 52)SH
10 /Helvetica AF
46929 63450 MT
(111)SH
ES
%%Page: iii 114 
BS
0 SI
36 SS 
0 5400 5405 PB %!
% contents box/fountain
gsave 0 -3 pica translate  0 0 36 pica 3 pica fountain
1 setlinewidth -.25 0 moveto 36 pica .5 add 0 rlineto stroke
-.25 3 pica moveto 36 pica .5 add 0 rlineto stroke
.5 setlinewidth 0 -.5 moveto 0 3 pica 1 add rlineto stroke
36 pica -.5 moveto 0 3 pica 1 add rlineto stroke grestore

 PE 24 /Helvetica AF
37794 8229 MT
(Contents)SH
9 SS 
19799 15024 MT
(1)SH
21894 XM
(About This Manual)SH
8 SS 
30126 XM
(1)SH
9 SS 
21894 16221 MT
(1.1)SH
25187 XM
(System-Specific Documentation)SH
8 SS 
38631 XM
(2)SH
9 SS 
21894 17418 MT
(1.2)SH
25187 XM
(Typographical Conventions)SH
8 SS 
36781 XM
(2)SH
9 SS 
19799 18615 MT
(2)SH
21894 XM
(About The Client Library)SH
8 SS 
32364 XM
(4)SH
9 SS 
19799 19812 MT
(3)SH
21894 XM
(Overview of the Client Library)SH
8 SS 
34502 XM
(6)SH
9 SS 
21894 21009 MT
(3.1)SH
25187 XM
(Phases of an Application)SH
8 SS 
35857 XM
(6)SH
9 SS 
21894 22206 MT
(3.2)SH
25187 XM
(Header Files)SH
8 SS 
30981 XM
(7)SH
9 SS 
21894 23403 MT
(3.3)SH
25187 XM
(Wrapped Procedures)SH
8 SS 
34381 XM
(8)SH
9 SS 
19799 24600 MT
(4)SH
21894 XM
(Basic Client Library Facilities)SH
8 SS 
34164 XM
(10)SH
9 SS 
21894 25797 MT
(4.1)SH
25187 XM
(Contexts and Context Data Structures)SH
8 SS 
41145 XM
(10)SH
9 SS 
21894 26994 MT
(4.2)SH
25187 XM
(System-Specific Context Creation)SH
8 SS 
39369 XM
(11)SH
9 SS 
21894 28191 MT
(4.3)SH
25187 XM
(Example of Context Creation)SH
8 SS 
37457 XM
(11)SH
9 SS 
21894 29388 MT
(4.4)SH
25187 XM
(The Current Context)SH
8 SS 
34069 XM
(14)SH
9 SS 
21894 30585 MT
(4.5)SH
25187 XM
(Sending Code and Data to a Context)SH
8 SS 
40771 XM
(14)SH
9 SS 
21894 31782 MT
(4.6)SH
25187 XM
(Spaces)SH
8 SS 
28843 XM
(19)SH
9 SS 
21894 32979 MT
(4.7)SH
25187 XM
(Interrupts)SH
8 SS 
29643 XM
(19)SH
9 SS 
21894 34176 MT
(4.8)SH
25187 XM
(Destroying Contexts)SH
8 SS 
33981 XM
(20)SH
9 SS 
19799 35373 MT
(5)SH
21894 XM
(Handling Output From the Context)SH
8 SS 
36402 XM
(21)SH
9 SS 
21894 36570 MT
(5.1)SH
25187 XM
(Call-Back Procedures)SH
8 SS 
34581 XM
(21)SH
9 SS 
21894 37767 MT
(5.2)SH
25187 XM
(Text Handlers)SH
8 SS 
31481 XM
(23)SH
9 SS 
21894 38964 MT
(5.3)SH
25187 XM
(Example Text Handler)SH
8 SS 
34819 XM
(23)SH
9 SS 
21894 40161 MT
(5.4)SH
25187 XM
(Error Handlers)SH
8 SS 
31731 XM
(25)SH
9 SS 
21894 41358 MT
(5.5)SH
25187 XM
(Error Recovery Requirements)SH
8 SS 
37819 XM
(26)SH
9 SS 
21894 42555 MT
(5.6)SH
25187 XM
(Backstop Handlers)SH
8 SS 
33431 XM
(27)SH
9 SS 
19799 43752 MT
(6)SH
21894 XM
(Additional Client Library Facilities)SH
8 SS 
35914 XM
(28)SH
9 SS 
21894 44949 MT
(6.1)SH
25187 XM
(Chained Contexts)SH
8 SS 
33031 XM
(28)SH
9 SS 
21894 46146 MT
(6.2)SH
25187 XM
(Encoding and Translation)SH
8 SS 
36119 XM
(30)SH
9 SS 
21894 47343 MT
(6.2.1)SH
25187 XM
(Encoding PostScript Language Code)SH
8 SS 
40707 XM
(30)SH
9 SS 
21894 48540 MT
(6.2.2)SH
25187 XM
(Translation)SH
8 SS 
30293 XM
(30)SH
9 SS 
21894 49737 MT
(6.3)SH
25187 XM
(Buffering)SH
8 SS 
29443 XM
(31)SH
9 SS 
21894 50934 MT
(6.4)SH
25187 XM
(Synchronizing Application and Context)SH
8 SS 
41357 XM
(32)SH
9 SS 
21894 52131 MT
(6.5)SH
25187 XM
(Forked Contexts)SH
8 SS 
32481 XM
(33)SH
9 SS 
19799 53328 MT
(7)SH
21894 XM
(Programming Tips)SH
8 SS 
29938 XM
(35)SH
9 SS 
21894 54525 MT
(7.1)SH
25187 XM
(Using the Imaging Model)SH
8 SS 
35907 XM
(37)SH
9 SS 
19799 55722 MT
(8)SH
21894 XM
(Example Application Program)SH
8 SS 
34476 XM
(39)SH
9 SS 
21894 56919 MT
(8.1)SH
25187 XM
(Example C Code)SH
8 SS 
32719 XM
(40)SH
9 SS 
21894 58116 MT
(8.2)SH
25187 XM
(Example Wrap)SH
8 SS 
31781 XM
(43)SH
9 SS 
21894 59313 MT
(8.3)SH
25187 XM
(Description of the Example Application)SH
8 SS 
41395 XM
(43)SH
10 SS 
47931 63450 MT
(iii)SH
ES
%%Page: iv 115 
BS
0 SI
9 /Helvetica AF
18899 6056 MT
(9)SH
20994 XM
(The)SH
/Helvetica-Oblique SF
22832 XM
(dpsclient.h)SH
/Helvetica SF
27420 XM
(Header File)SH
8 SS 
32764 XM
(46)SH
9 SS 
20994 7253 MT
(9.1)SH
/Helvetica-Oblique SF
24287 XM
(dpsclient.h)SH
/Helvetica SF
28875 XM
(Data Structures)SH
8 SS 
35819 XM
(46)SH
9 SS 
20994 8450 MT
(9.2)SH
/Helvetica-Oblique SF
24287 XM
(dpsclient.h)SH
/Helvetica SF
28875 XM
(Procedures)SH
8 SS 
34131 XM
(48)SH
9 SS 
18899 9647 MT
(10)SH
20994 XM
(Single-Operator Procedures)SH
8 SS 
32888 XM
(56)SH
9 SS 
20994 10844 MT
(10.1)SH
24287 XM
(Setting the Current Context)SH
8 SS 
35957 XM
(57)SH
9 SS 
20994 12041 MT
(10.2)SH
24287 XM
(Types in Single-Operator Procedures)SH
8 SS 
39907 XM
(57)SH
9 SS 
20994 13238 MT
(10.2.1)SH
24287 XM
(Rules of Thumb)SH
8 SS 
31369 XM
(58)SH
9 SS 
20994 14435 MT
(10.2.2)SH
24287 XM
(Special Cases)SH
8 SS 
30731 XM
(60)SH
9 SS 
20994 15632 MT
(10.3)SH
/Helvetica-Oblique SF
24287 XM
(dpsops.h)SH
/Helvetica SF
28225 XM
(Procedure Declarations)SH
8 SS 
38319 XM
(61)SH
9 SS 
18899 16829 MT
(11)SH
20994 XM
(Runtime Support for Wrapped Procedures)SH
8 SS 
38602 XM
(73)SH
9 SS 
20994 18026 MT
(11.1)SH
24287 XM
(More About Sending Code For Execution)SH
8 SS 
41533 XM
(73)SH
9 SS 
20994 19223 MT
(11.2)SH
24287 XM
(Receiving Results)SH
8 SS 
32181 XM
(74)SH
9 SS 
20994 20420 MT
(11.3)SH
24287 XM
(Managing User Names)SH
8 SS 
34219 XM
(76)SH
9 SS 
20994 21617 MT
(11.4)SH
24287 XM
(Binary Object Sequences)SH
8 SS 
35169 XM
(77)SH
9 SS 
20994 22814 MT
(11.5)SH
24287 XM
(Extended Binary Object Sequences)SH
8 SS 
39257 XM
(79)SH
9 SS 
20994 24011 MT
(11.6)SH
/Helvetica-Oblique SF
24287 XM
(dpsfriends.h)SH
/Helvetica SF
29475 XM
(Data Structures)SH
8 SS 
36419 XM
(80)SH
9 SS 
20994 25208 MT
(11.7)SH
/Helvetica-Oblique SF
24287 XM
(dpsfriends.h)SH
/Helvetica SF
29475 XM
(Procedures)SH
8 SS 
34731 XM
(84)SH
9 SS 
18899 26405 MT
(A)SH
20994 XM
(Changes Since Last Publication Of This Document)SH
8 SS 
42078 XM
(89)SH
9 SS 
18899 27602 MT
(B)SH
20994 XM
(Example Error Handler)SH
8 SS 
30876 XM
(91)SH
9 SS 
18899 28799 MT
(B.1)SH
20994 XM
(Error Handler Implementation)SH
8 SS 
33526 XM
(91)SH
9 SS 
18899 29996 MT
(B.2)SH
20994 XM
(Description of the Error Handler)SH
8 SS 
34452 XM
(93)SH
9 SS 
18899 31193 MT
(B.3)SH
20994 XM
(Handling PostScript Language Errors)SH
8 SS 
36614 XM
(95)SH
9 SS 
18899 32390 MT
(C)SH
20994 XM
(Exception Handling)SH
8 SS 
29438 XM
(97)SH
9 SS 
18899 33587 MT
(C.1)SH
20994 XM
(Recovering From PostScript Language Errors)SH
8 SS 
40002 XM
(101)SH
9 SS 
18899 34784 MT
(C.2)SH
20994 XM
(Example Exception Handler)SH
8 SS 
32826 XM
(103)SH
9 SS 
18899 38433 MT
(Index)SH
8 SS 
21755 XM
(107)SH
10 SS 
4500 63450 MT
(iv)SH
ES
%%Page: v 116 
BS
0 SI
36 SS 
0 5400 5405 PB %!
% contents box/fountain
gsave 0 -3 pica translate  0 0 36 pica 3 pica fountain
1 setlinewidth -.25 0 moveto 36 pica .5 add 0 rlineto stroke
-.25 3 pica moveto 36 pica .5 add 0 rlineto stroke
.5 setlinewidth 0 -.5 moveto 0 3 pica 1 add rlineto stroke
36 pica -.5 moveto 0 3 pica 1 add rlineto stroke grestore

 PE 24 /Helvetica AF
32126 8229 MT
(List of Figures)SH
10 /Times-Bold AF
5400 15054 MT
(Figure 1)SH
/Times-Roman SF
(:)SH
/Times-Italic SF
10461 XM
(The Client Library Link to the Display PostScript System)SH
/Times-Roman SF
33981 XM
(4)SH
/Times-Bold SF
5400 17149 MT
(Figure 2)SH
/Times-Roman SF
(:)SH
/Times-Italic SF
10461 XM
(Creating an Application)SH
/Times-Roman SF
20870 XM
(40)SH
/Helvetica SF
48097 63450 MT
(v)SH
ES
%%Trailer
%%Pages: 116 
%%DocumentFonts: Times-Roman Helvetica Times-Bold Symbol Times-Italic Helvetica-Bold Helvetica-Oblique
