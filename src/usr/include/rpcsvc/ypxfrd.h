/*
 * *****************************************************************
 * *                                                               *
 * *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
 * *                                                               *
 * *   All Rights Reserved.  Unpublished rights  reserved  under   *
 * *   the copyright laws of the United States.                    *
 * *                                                               *
 * *   The software contained on this media  is  proprietary  to   *
 * *   and  embodies  the  confidential  technology  of  Digital   *
 * *   Equipment Corporation.  Possession, use,  duplication  or   *
 * *   dissemination of the software and media is authorized only  *
 * *   pursuant to a valid written license from Digital Equipment  *
 * *   Corporation.                                                *
 * *                                                               *
 * *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
 * *   by the U.S. Government is subject to restrictions  as  set  *
 * *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
 * *   or  in  FAR 52.227-19, as applicable.                       *
 * *                                                               *
 * *****************************************************************
 */
/*
 * HISTORY
 */
/*
 *	@(#)$RCSfile: ypxfrd.h,v $ $Revision: 4.2.2.3 $ (DEC) $Date: 1992/10/14 13:02:01 $
 */
/*
 */

/* 
 * @(#)ypxfrd.x	1.1 90/07/23 4.1NFSSRC Copyr 1990 Sun Micro 
 * This is NOT source code!
 * DO NOT EDIT THIS FILE!
 */
#define PBLEN 1024
#define DBLEN 4096

enum answer {
	OK = 0,
	GETDBM_EOF = 1,
	GETDBM_ERROR = 2
};
typedef enum answer answer;
bool_t xdr_answer();


typedef char pagblock[PBLEN];
bool_t xdr_pagblock();


typedef char dirblock[DBLEN];
bool_t xdr_dirblock();


typedef char *pathname;
bool_t xdr_pathname();


struct hosereq {
	pathname map;
	pathname domain;
};
typedef struct hosereq hosereq;
bool_t xdr_hosereq();


struct pagdat {
	int blkno;
	pagblock blkdat;
};
typedef struct pagdat pagdat;
bool_t xdr_pagdat();


struct dirdat {
	int blkno;
	dirblock blkdat;
};
typedef struct dirdat dirdat;
bool_t xdr_dirdat();


struct pag {
	answer status;
	union {
		pagdat ok;
	} pag_u;
};
typedef struct pag pag;
bool_t xdr_pag();


struct paglist {
	struct pag d;
	struct paglist *next;
};
typedef struct paglist paglist;
bool_t xdr_paglist();


struct dir {
	answer status;
	union {
		dirdat ok;
	} dir_u;
};
typedef struct dir dir;
bool_t xdr_dir();


struct dirlist {
	struct dir d;
	struct dirlist *next;
};
typedef struct dirlist dirlist;
bool_t xdr_dirlist();


struct du {
	struct paglist p;
	struct dirlist d;
};
typedef struct du du;
bool_t xdr_du();


struct dbmfyl {
	answer status;
	union {
		struct du ok;
	} dbmfyl_u;
};
typedef struct dbmfyl dbmfyl;
bool_t xdr_dbmfyl();


#define YPXFRD 100069
#define V1 1
#define getdbm 1
extern dbmfyl *getdbm_1();

