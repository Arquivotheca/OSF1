; 
; *****************************************************************
; *                                                               *
; *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
; *                                                               *
; *   All Rights Reserved.  Unpublished rights  reserved  under   *
; *   the copyright laws of the United States.                    *
; *                                                               *
; *   The software contained on this media  is  proprietary  to   *
; *   and  embodies  the  confidential  technology  of  Digital   *
; *   Equipment Corporation.  Possession, use,  duplication  or   *
; *   dissemination of the software and media is authorized only  *
; *   pursuant to a valid written license from Digital Equipment  *
; *   Corporation.                                                *
; *                                                               *
; *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
; *   by the U.S. Government is subject to restrictions  as  set  *
; *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
; *   or  in  FAR 52.227-19, as applicable.                       *
; *                                                               *
; *****************************************************************
;
; HISTORY
;
; @(#)$RCSfile: syscalls.master,v $ $Revision: 4.3.18.22 $ (DEC) $Date: 1993/11/16 23:01:10 $ 
; 
;
; (c) Copyright 1990, OPEN SOFTWARE FOUNDATION, INC.
; ALL RIGHTS RESERVED
; 
; 
; OSF/1 Release 1.0

; System call name/number master file.
; Processed to created init_sysent.c, syscalls.c and syscall.h.

; Columns: number type nargs name altname/comments
;	number		system call number, must be in order
;	type		one of STD, STDALT, OBSOL, UNIMPL, COMPAT
;	parallelized	one of SERIAL, PARALLEL or UPARALLEL
;	nargs		number of arguments
;	audit encoding  see audit.h for explanation
;	name		name of syscall routine
;	altname		name of system call if different (in libc)
;			for UNIMPL/OBSOL, name continues with comments
; types:
;	STD	always included
;	STDALT	always included, alternate location for std syscall
;		(does not generate entry in syscalls.h)
;	COMPAT	included on COMPAT #ifdef
;	OBSOL	obsolete, not included in system, only specifies name
;	UNIMPL	not implemented, placeholder only
;
; Note that OBSOL and UNIMPL -- anything that expands to nosys -- will
; always be marked as parallel in the resulting system call table; there's
; no reason why nosys can't be handled on any processor.
;

; The presence of often-repeated conditionals makes this file somewhat
; difficult to maintain. A mechanism needs to be developed to generate
; these things more automatically and cleanly.

; Reserved/unimplemented system calls in the range 0-150 inclusive
; are reserved for use in future Berkeley releases.
; Additional system calls implemented in vendor and other
; redistributions should be placed in the reserved range at the end
; of the current calls.

; The PMAX flag results in the sysetm call being excluded from 
; automatic generation of a libc routine.
;

#ifdef	sun4
0	STD	SERIAL		1 000000000 indir syscall
#else
0	STD	PARALLEL	0 000000000 nosys syscall
#endif
1	STD	SERIAL		1 000000004 rexit exit
2	STD	SERIAL		0 000000000 fork
3	STD	UPARALLEL	3 c00000000 read
4	STD	UPARALLEL	3 c00000000 write
5	COMPAT	UPARALLEL	3 Wa1000001 open
6	STD	UPARALLEL	1 c00000005 close
7	STD	SERIAL		4 000000000 wait4
8	COMPAT	UPARALLEL	2 W10000000 creat
9	STD	UPARALLEL	2 BB0000001 link
10	STD	UPARALLEL	1 B00000000 unlink
11	STD	UPARALLEL	2 Rr0000005 execv
12	STD	UPARALLEL	1 b00000000 chdir
13	STD	UPARALLEL	1 c00000000 fchdir
14	STD	UPARALLEL	3 X10000000 mknod
15	STD	UPARALLEL	2 B10000000 chmod
16	STD	UPARALLEL	3 Blm000000 chown
17	STD	SERIAL		1 300000000 obreak
18	STD	UPARALLEL	3 000000000 getfsstat
19	STD	UPARALLEL	3 000000000 lseek
20	STD	PARALLEL	0 000000000 getpid
21	STD	UPARALLEL	4 000000004 mount
22	STD	UPARALLEL	2 Ba0000000 unmount
23	STD	UPARALLEL	1 l00000000 setuid
24	STD	UPARALLEL	0 000000000 getuid
25	STD	SERIAL		5 Rrrr00005 exec_with_loader
#ifdef	sun
26	STD	SERIAL		5 000000000 ptrace
#else
26	STD	SERIAL		4 aQ0000000 ptrace
#endif
#ifdef	COMPAT_43
; BSD4.4 versions of socket calls, with "new" names
27	STD	UPARALLEL	3 cT0000000 recvmsg nrecvmsg
28	STD	UPARALLEL	3 cT0000000 sendmsg nsendmsg
29	STD	UPARALLEL	6 c00000000 recvfrom nrecvfrom
30	STD	UPARALLEL	3 c00000000 accept naccept
31	STD	UPARALLEL	3 000000000 getpeername ngetpeername
32	STD	UPARALLEL	3 000000000 getsockname ngetsockname
#else
; BSD4.4 versions of socket calls, with actual names - LATER
27	STD	UPARALLEL	3 cT0000000 recvmsg
28	STD	UPARALLEL	3 cT0000000 sendmsg
29	STD	UPARALLEL	6 c00000000 recvfrom
30	STD	UPARALLEL	3 c00000000 accept
31	STD	UPARALLEL	3 000000000 getpeername
32	STD	UPARALLEL	3 000000000 getsockname
#endif
33	STD	UPARALLEL	2 B00000001 saccess access
34	STD	UPARALLEL	2 Ba0000000 nosys chflags
35	STD	UPARALLEL	2 ca0000000 nosys fchflags
36	STD	UPARALLEL	0 000000000 sync
37	STD	SERIAL		2 Qa0000000 kill
38	COMPAT	UPARALLEL	2 B00000001 stat
39	STD	SERIAL		2 Qa0000000 setpgid
40	COMPAT	UPARALLEL	2 B00000001 lstat
41	STD	UPARALLEL	2 c00000001 dup
42	STD	UPARALLEL	0 000000004 pipe
43	STD	SERIAL		4 000000000 set_program_attributes
44	STD	SERIAL		4 000000000 profil
45	STD	UPARALLEL	3 Wa1000001 open
#if	defined(balance) || defined(mips) || defined(__alpha)
#if 	defined(__alpha)
46	OBSOL	SERIAL		4 000000000 osigaction
#else
46	STD	SERIAL		4 000000000 sigaction
#endif
#else
46	STD	SERIAL		3 000000000 sigaction
#endif
47	STD	UPARALLEL	0 000000000 getgid
48	STD	SERIAL		2 000000000 sigprocmask
49	STD	UPARALLEL	2 000000000 getlogin
50	STD	UPARALLEL	2 b00000000 setlogin
51	STD	UPARALLEL	1 b00000000 sysacct acct
52	STD	SERIAL		0 000000000 sigpending
#ifdef	notyet
53	STD	SERIAL		3 000000000 sigaltstack
#else
53	UNIMPL	PARALLEL	0 000000000 nosys
#endif
#if	MACH_AFS
54	STD	SERIAL		3 000000000 afs_xioctl
#else
54	STD	UPARALLEL	3 c00000004 ioctl
#endif
55	STD	SERIAL		1 000000004 reboot
56	STD	UPARALLEL	1 B00000001 revoke
57	STD	UPARALLEL	2 BB0000000 symlink
58	STD	UPARALLEL	3 B00000001 readlink
59	STD	UPARALLEL	3 Rrr000005 execve
60	STD	UPARALLEL	1 000000000 umask
61	STD	UPARALLEL	1 b00000000 chroot
62	COMPAT	UPARALLEL	2 c00000001 fstat
63	STD	SERIAL		0 000000000 getpgrp
64	STD	PARALLEL	1 000000000 getpagesize
#ifdef	notyet
65	STD	SERIAL		2 000000000 msync
#else
65	STD	SERIAL		5 000000000 mremap
#endif
66	STD	SERIAL		0 000000000 vfork
67	STD	UPARALLEL	2 B00000001 stat
68	STD	UPARALLEL	2 B00000001 lstat
69	STD	SERIAL		1 000000000 sbrk
70	STD	SERIAL		1 000000000 sstk
71	STD	SERIAL		6 33aac0000 smmap mmap
72	STD	SERIAL		1 000000000 ovadvise
73	STD	SERIAL		2 330000000 munmap
74	STD	SERIAL		3 33a000000 mprotect
75	STD	SERIAL		3 000000000 madvise
76	COMPAT	UPARALLEL	1 000000000 vhangup
77	STD	SERIAL		6 3a0000000 kmodcall
78	STD	SERIAL		3 000000000 mincore
79	STD	UPARALLEL	2 000000000 getgroups
#if	MACH_AFS
80	STD	SERIAL		2 000000000 afs_xsetgroups
#else
80	STD	UPARALLEL	2 050000000 setgroups
#endif
81	COMPAT	SERIAL		1 000000000 getpgrp
82	STD	SERIAL		2 Qa0000000 setpgrp
83	STD	UPARALLEL	3 000000000 setitimer
#if	defined(mips) || defined(__alpha)
84	COMPAT	SERIAL		3 000000000 wait
#else
84	COMPAT	SERIAL		0 000000000 wait
#endif
85	STD	SERIAL		5 aa0a00000 table
86	STD	UPARALLEL	2 000000000 getitimer
87	STD	UPARALLEL	2 000000000 gethostname
88	STD	UPARALLEL	2 g00000000 sethostname
89	STD	UPARALLEL	0 000000000 getdtablesize
90	STD	UPARALLEL	2 cc0000005 dup2
91	STD	UPARALLEL	2 c00000001 fstat
92	STD	UPARALLEL	3 c00000004 fcntl
93	STD	UPARALLEL	5 000000000 select
94	STD	UPARALLEL	3 000000000 poll
95	STD	UPARALLEL	1 000000000 fsync
96	STD	SERIAL		3 aa0000000 setpriority
97	STD	UPARALLEL	3 000000000 socket
98	STD	UPARALLEL	3 cH0000000 connect
#ifdef	COMPAT_43
99	STD	UPARALLEL	3 c00000000 oaccept accept
#else
99	COMPAT	UPARALLEL	3 c00000000 accept
#endif
100	STD	SERIAL		2 000000000 getpriority
#ifdef	COMPAT_43
101	STD	UPARALLEL	4 c00000000 osend send
102	STD	UPARALLEL	4 c00000000 orecv recv
#else
101	COMPAT	UPARALLEL	4 c00000000 send
102	COMPAT	UPARALLEL	4 c00000000 recv
#endif
103	STD	SERIAL		1 000000000 sigreturn
104	STD	UPARALLEL	3 cH0000000 bind
105	STD	UPARALLEL	5 caa000000 setsockopt
106	STD	UPARALLEL	2 000000000 listen
107	STD	SERIAL		1 000000000 plock
#if	defined(balance) || defined(mips) || defined(__alpha)
108	COMPAT	SERIAL		4 000000000 sigvec
#else
108	COMPAT	SERIAL		3 000000000 sigvec
#endif
109	COMPAT	SERIAL		1 000000000 sigblock
110	COMPAT	SERIAL		1 000000000 sigsetmask
111	STD	SERIAL		1 000000000 sigsuspend
112	STD	SERIAL		2 000000000 sigstack
#ifdef	COMPAT_43
113	STD	UPARALLEL	3 cI0000000 orecvmsg recvmsg
114	STD	UPARALLEL	3 cI0000000 osendmsg sendmsg
#else
113	COMPAT	UPARALLEL	3 cT0000000 recvmsg
114	COMPAT	UPARALLEL	3 cT0000000 sendmsg
#endif
#ifdef	TRACE
115	STD	SERIAL		2 000000000 vtrace
#else
115	OBSOL	SERIAL		2 000000000 vtrace
#endif
116	STD	UPARALLEL	2 000000000 gettimeofday
117	STD	SERIAL		2 000000000 getrusage
118	STD	UPARALLEL	5 000000000 getsockopt
#if	defined(vax) || defined(i386)
119	STD	SERIAL		1 000000000 resuba
#else
119	UNIMPL	PARALLEL	0 000000000 nosys
#endif
120	STD	UPARALLEL	3 c00000000 readv
121	STD	UPARALLEL	3 c00000000 writev
122	STD	UPARALLEL	2 000000000 settimeofday
123	STD	UPARALLEL	3 Clm000000 fchown
124	STD	UPARALLEL	2 c10000000 fchmod
#ifdef	COMPAT_43
125	STD	UPARALLEL	6 c00000000 orecvfrom recvfrom
#else
125	COMPAT	UPARALLEL	6 c00000000 recvfrom
#endif
126	STD	UPARALLEL	2 aa0000000 setreuid
127	STD	UPARALLEL	2 aa0000000 setregid
128	STD	UPARALLEL	2 BB0000000 rename
129	STD	UPARALLEL	2 B00000000 truncate
130	STD	UPARALLEL	2 c00000000 ftruncate
#if	MACH_AFS
131	STD	SERIAL		2 000000000 afs_xflock
#else
131	STD	UPARALLEL	2 000000000 flock
#endif
132	STD	UPARALLEL	1 m00000000 setgid
133	STD	UPARALLEL	6 c000H0000 sendto
134	STD	UPARALLEL	2 ca0000000 shutdown
135	STD	UPARALLEL	5 000s00000 socketpair
136	STD	UPARALLEL	2 X10000000 mkdir
137	STD	UPARALLEL	1 B00000000 rmdir
138	STD	UPARALLEL	2 B00000000 utimes
139	OBSOL	SERIAL		0 000000000 4.2 sigreturn
140	STD	UPARALLEL	2 000000000 adjtime
#ifdef	COMPAT_43
141	STD	UPARALLEL	3 000000000 ogetpeername getpeername
#else
141	COMPAT	SERIAL		3 000000000 getpeername
#endif
142	STD	UPARALLEL	0 000000000 gethostid
143	STD	UPARALLEL	1 a00000000 sethostid
144	STD	SERIAL		2 000000000 getrlimit
145	STD	SERIAL		2 000000000 setrlimit
146	COMPAT	SERIAL		2 aa0000000 killpg
147	STD	SERIAL		0 000000000 setsid
148	STD	SERIAL		4 000000000 quotactl
149	STD	SERIAL		4 000000000 oldquota
#ifdef	COMPAT_43
150	STD	UPARALLEL	3 000000000 ogetsockname getsockname
#else
150	COMPAT	UPARALLEL	3 000000000 getsockname
#endif

; Syscalls 151-180 inclusive are reserved for vendor-specific
; system calls.  (This includes various calls added for compatibity
; with other Unix variants.)


#define	GENERIC	1
#ifdef	ibmrt
#undef	GENERIC
151	STD	UPARALLEL	3 000000000 exect
152	UNIMPL	PARALLEL	0 000000000 nosys
153	STD	SERIAL		0 000000000 getfpemulator
#if	MACH_AFS
154	COMPAT	SERIAL		3 000000000 iopen
155	COMPAT	SERIAL		6 000000000 iread
156	COMPAT	SERIAL		6 000000000 iwrite
157	COMPAT	SERIAL		3 000000000 iinc
158	COMPAT	SERIAL		3 000000000 idec
159	COMPAT	SERIAL		4 000000000 pioctl
160	COMPAT	SERIAL		0 000000000 setpag
161	COMPAT	SERIAL		6 000000000 icreate
#else
154	UNIMPL	PARALLEL	0 000000000 nosys
155	UNIMPL	PARALLEL	0 000000000 nosys
156	UNIMPL	PARALLEL	0 000000000 nosys
157	UNIMPL	PARALLEL	0 000000000 nosys
158	UNIMPL	PARALLEL	0 000000000 nosys
159	UNIMPL	PARALLEL	0 000000000 nosys
160	UNIMPL	PARALLEL	0 000000000 nosys
161	UNIMPL	PARALLEL	0 000000000 nosys
#endif
162	UNIMPL	PARALLEL	0 000000000 nosys
163	UNIMPL	PARALLEL	0 000000000 nosys
164	UNIMPL	PARALLEL	0 000000000 nosys
165	UNIMPL	PARALLEL	0 000000000 nosys
166	UNIMPL	PARALLEL	0 000000000 nosys
167	STD	SERIAL		2 000000000 getfloatstate
168	STD	SERIAL		3 000000000 setfloatstate
169	STD	UPARALLEL	3 000000000 nfssvc
170	STD	UPARALLEL	4 000000000 getdirentries
171	STD	UPARALLEL	2 000000000 statfs
172	STD	UPARALLEL	2 000000000 fstatfs
173	OBSOL	UPARALLEL	1 000000000 vfsunmount
174	STD	SERIAL		0 000000000 async_daemon
175	STD	UPARALLEL	2 000000000 getfh
176	STD	UPARALLEL	2 000000000 getdomainname
177	STD	UPARALLEL	2 000000000 setdomainname
178	OBSOL	SERIAL		4 000000000 quotactl
179	OBSOL	UPARALLEL	3 000000000 exportfs
180	OBSOL	UPARALLEL	1 000000000 vfsmount
#endif	/* ibmrt */
#ifdef	sun
#undef	GENERIC
151	UNIMPL	PARALLEL	0 000000000 nosys
152	UNIMPL	PARALLEL	0 000000000 nosys
153	UNIMPL	PARALLEL	0 000000000 nosys
154	UNIMPL	PARALLEL	0 000000000 nosys
155	STD	UPARALLEL	3 000000000 nfssvc
156	STD	UPARALLEL	4 000000000 getdirentries
157	STD	UPARALLEL	2 000000000 statfs
158	STD	UPARALLEL	2 000000000 fstatfs
159	OBSOL	UPARALLEL	1 000000000 vfsunmount
160	STD	SERIAL		0 000000000 async_daemon
161	STD	UPARALLEL	2 000000000 getfh
162	STD	UPARALLEL	2 000000000 getdomainname
163	STD	UPARALLEL	2 000000000 setdomainname
164	UNIMPL	PARALLEL	0 000000000 nosys
165	OBSOL	SERIAL		4 000000000 quotactl
166	OBSOL	UPARALLEL	3 000000000 exportfs
167	OBSOL	UPARALLEL	1 000000000 vfsmount
#if	MACH_AFS
168	COMPAT	SERIAL		4 000000000 pioctl
169	COMPAT	SERIAL		0 000000000 setpag
170	COMPAT	SERIAL		6 000000000 icreate
171	COMPAT	SERIAL		3 000000000 iopen
172	COMPAT	SERIAL		6 000000000 iread
173	COMPAT	SERIAL		6 000000000 iwrite
174	COMPAT	SERIAL		3 000000000 iinc
175	COMPAT	SERIAL		3 000000000 idec
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	COMPAT	SERIAL		6 000000000 afs_call
#else	/* MACH_AFS */
168	UNIMPL	PARALLEL	0 000000000 nosys
169	UNIMPL	PARALLEL	0 000000000 nosys
170	UNIMPL	PARALLEL	0 000000000 nosys
171	UNIMPL	PARALLEL	0 000000000 nosys
172	UNIMPL	PARALLEL	0 000000000 nosys
173	UNIMPL	PARALLEL	0 000000000 nosys
174	UNIMPL	PARALLEL	0 000000000 nosys
175	UNIMPL	PARALLEL	0 000000000 nosys
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* MACH_AFS */
#endif	/* sun */
#if	defined(vax) || defined(i386)
#undef	GENERIC
#if	MACH_AFS
151	COMPAT	SERIAL		6 000000000 icreate
152	COMPAT	SERIAL		3 000000000 iopen
153	COMPAT	SERIAL		6 000000000 iread
154	COMPAT	SERIAL		6 000000000 iwrite
155	COMPAT	SERIAL		3 000000000 iinc
156	COMPAT	SERIAL		3 000000000 idec
157	COMPAT	SERIAL		4 000000000 pioctl
158	COMPAT	SERIAL		0 000000000 setpag
#else
151	UNIMPL	PARALLEL	0 000000000 nosys
152	UNIMPL	PARALLEL	0 000000000 nosys
153	UNIMPL	PARALLEL	0 000000000 nosys
154	UNIMPL	PARALLEL	0 000000000 nosys
155	UNIMPL	PARALLEL	0 000000000 nosys
156	UNIMPL	PARALLEL	0 000000000 nosys
157	UNIMPL	PARALLEL	0 000000000 nosys
158	UNIMPL	PARALLEL	0 000000000 nosys
#endif
159	STD	UPARALLEL	3 000000000 nfssvc
160	STD	UPARALLEL	2 000000000 statfs
161	STD	UPARALLEL	2 000000000 fstatfs
162	OBSOL	UPARALLEL	1 000000000 vfsunmount
163	STD	SERIAL		0 000000000 async_daemon
164	STD	UPARALLEL	4 000000000 getdirentries
165	STD	UPARALLEL	2 000000000 getfh
166	OBSOL	SERIAL		4 000000000 quotactl
167	OBSOL	UPARALLEL	3 000000000 exportfs
168	OBSOL	UPARALLEL	1 000000000 vfsmount
169	STD	UPARALLEL	2 000000000 getdomainname
170	STD	UPARALLEL	2 000000000 setdomainname
#if	MACH_AFS
171	COMPAT	SERIAL		4 000000000 pioctl
172	COMPAT	SERIAL		0 000000000 setpag
173	COMPAT	SERIAL		6 000000000 icreate
174	COMPAT	SERIAL		3 000000000 iopen
175	COMPAT	SERIAL		6 000000000 iread
176	COMPAT	SERIAL		6 000000000 iwrite
177	COMPAT	SERIAL		3 000000000 iinc
178	COMPAT	SERIAL		3 000000000 idec
179	COMPAT	SERIAL		6 000000000 afs_call
#else
171	UNIMPL	PARALLEL	0 000000000 nosys
172	UNIMPL	PARALLEL	0 000000000 nosys
173	UNIMPL	PARALLEL	0 000000000 nosys
174	UNIMPL	PARALLEL	0 000000000 nosys
175	UNIMPL	PARALLEL	0 000000000 nosys
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
#endif
180	STD	SERIAL		0 000000000 clx_sys
#endif	/* defined(vax) || defined(i386) */
#if	defined(balance)
#undef	GENERIC
151	STD	UPARALLEL	4 000000000 getdirentries
152	STD	SERIAL		2 000000000 tmp_ctl
153	STD	SERIAL		0 000000000 universe
154	UNIMPL	PARALLEL	0 000000000 nosys
155	STD	UPARALLEL	3 000000000 nfssvc
156	UNIMPL	PARALLEL	0 000000000 nosys
157	STD	UPARALLEL	2 000000000 statfs
158	STD	UPARALLEL	2 000000000 fstatfs
159	OBSOL	UPARALLEL	1 000000000 vfsunmount
160	STD	SERIAL		0 000000000 async_daemon
161	STD	UPARALLEL	2 000000000 getfh
162	STD	UPARALLEL	2 000000000 getdomainname
163	STD	UPARALLEL	2 000000000 setdomainname
164	UNIMPL	PARALLEL	0 000000000 nosys
165	OBSOL	SERIAL		4 000000000 quotactl
166	OBSOL	UPARALLEL	3 000000000 exportfs
167	OBSOL	UPARALLEL	1 000000000 vfsmount
#if	MACH_AFS
168	COMPAT	SERIAL		4 000000000 pioctl
169	COMPAT	SERIAL		0 000000000 setpag
170	COMPAT	SERIAL		6 000000000 icreate
171	COMPAT	SERIAL		3 000000000 iopen
172	COMPAT	SERIAL		6 000000000 iread
173	COMPAT	SERIAL		6 000000000 iwrite
174	COMPAT	SERIAL		3 000000000 iinc
175	COMPAT	SERIAL		3 000000000 idec
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	COMPAT	SERIAL		6 000000000 afs_call
#else	/* MACH_AFS */
168	UNIMPL	PARALLEL	0 000000000 nosys
169	UNIMPL	PARALLEL	0 000000000 nosys
170	UNIMPL	PARALLEL	0 000000000 nosys
171	UNIMPL	PARALLEL	0 000000000 nosys
172	UNIMPL	PARALLEL	0 000000000 nosys
173	UNIMPL	PARALLEL	0 000000000 nosys
174	UNIMPL	PARALLEL	0 000000000 nosys
175	UNIMPL	PARALLEL	0 000000000 nosys
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* MACH_AFS */
#endif	/* defined(balance) */
#ifdef	mips
#undef	GENERIC
151	STD	SERIAL		5 000000000 sysmips
152	STD	SERIAL		3 000000000 cacheflush
153	OBSOL	SERIAL		3 000000000 cachectl
154	OBSOL	SERIAL		0 000000000 debug
155	STD	PARALLEL	2 000000000 atomic_op
156	UNIMPL	PARALLEL	0 000000000 nosys
157	OBSOL	UPARALLEL	0 000000000 nfs_mount
158	STD	SERIAL		3 000000000 nfssvc
159	STD	UPARALLEL	4 c00000000 getdirentries
160	STD	UPARALLEL	2 b00000000 statfs
161	STD	UPARALLEL	2 c00000000 fstatfs
162	OBSOL	SERIAL		1 000000000 vfsunmount
163	STD	SERIAL		0 000000000 async_daemon
164	STD	UPARALLEL	3 000000000 getfh
165	STD	UPARALLEL	2 000000000 getdomainname
166	STD	UPARALLEL	2 g00000000 setdomainname
167	OBSOL	SERIAL		0 000000000 old pcfs_mount
168	OBSOL	SERIAL		4 000000000 quotactl
169	STD	UPARALLEL	3 a4v000000 exportfs
170	OBSOL	UPARALLEL	1 000000000 vfsmount
171	STD	SERIAL		0 000000000 mipshwconf
172	UNIMPL	PARALLEL	0 000000000 nosys
173	UNIMPL	PARALLEL	0 000000000 nosys
174	UNIMPL	PARALLEL	0 000000000 nosys
175	UNIMPL	PARALLEL	0 000000000 nosys
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* mips */
#ifdef	__alpha
#undef	GENERIC
151	UNIMPL	PARALLEL	0 000000000 nosys
152	UNIMPL	SERIAL		3 000000000 cacheflush
153	UNIMPL	PARALLEL	0 000000000 nosys
154	UNIMPL	PARALLEL	0 000000000 nosys
155	UNIMPL	PARALLEL	0 000000000 nosys
156	STD	SERIAL		4 000000000 sigaction
157	UNIMPL	PARALLEL	0 000000000 nosys
158	STD	SERIAL		3 000000000 nfssvc
159	STD	UPARALLEL	4 c00000001 getdirentries
160	STD	UPARALLEL	2 b00000000 statfs
161	STD	UPARALLEL	2 c00000000 fstatfs
162	UNIMPL	PARALLEL	0 000000000 nosys
163	STD	SERIAL		0 000000000 async_daemon
164	STD	UPARALLEL	3 000000000 getfh
165	STD	UPARALLEL	2 000000000 getdomainname
166	STD	UPARALLEL	2 g00000000 setdomainname
167	UNIMPL	PARALLEL	0 000000000 nosys
168	UNIMPL	PARALLEL	0 000000000 nosys
169	STD	UPARALLEL	3 a4v000000 exportfs
170	UNIMPL	PARALLEL	0 000000000 nosys
171	UNIMPL	PARALLEL	0 000000000 nosys
172	UNIMPL	PARALLEL	0 000000000 nosys
173	UNIMPL	PARALLEL	0 000000000 nosys
174	UNIMPL	PARALLEL	0 000000000 nosys
175	UNIMPL	PARALLEL	0 000000000 nosys
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* alpha */
#ifdef	multimax
#undef	GENERIC
151	STD	PARALLEL	2 000000000 mapfrcounter
152	UNIMPL	PARALLEL	0 000000000 nosys
153	UNIMPL	PARALLEL	0 000000000 nosys
154	UNIMPL	PARALLEL	0 000000000 nosys
155	STD	UPARALLEL	3 000000000 nfssvc
156	STD	UPARALLEL	4 000000000 getdirentries
157	STD	UPARALLEL	2 000000000 statfs
158	STD	UPARALLEL	2 000000000 fstatfs
159	UNIMPL	PARALLEL	0 000000000 vfs_unmount
160	STD	SERIAL		0 000000000 async_daemon
161	STD	UPARALLEL	2 000000000 getfh
162	STD	UPARALLEL	2 000000000 getdomainname
163	STD	UPARALLEL	2 000000000 setdomainname
164	UNIMPL	PARALLEL	0 000000000 nosys
165	OBSOL	SERIAL		4 000000000 quotactl
166	OBSOL	UPARALLEL	3 000000000 exportfs
167	UNIMPL	UPARALLEL	0 000000000 vfs_mount
#if	MACH_AFS
168	COMPAT	SERIAL		4 000000000 pioctl
169	COMPAT	SERIAL		0 000000000 setpag
170	COMPAT	SERIAL		6 000000000 icreate
171	COMPAT	SERIAL		3 000000000 iopen
172	COMPAT	SERIAL		6 000000000 iread
173	COMPAT	SERIAL		6 000000000 iwrite
174	COMPAT	SERIAL		3 000000000 iinc
175	COMPAT	SERIAL		3 000000000 idec
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	COMPAT	SERIAL		6 000000000 afs_call
#else
168	UNIMPL	PARALLEL	0 000000000 nosys
169	UNIMPL	PARALLEL	0 000000000 nosys
170	UNIMPL	PARALLEL	0 000000000 nosys
171	UNIMPL	PARALLEL	0 000000000 nosys
172	UNIMPL	PARALLEL	0 000000000 nosys
173	UNIMPL	PARALLEL	0 000000000 nosys
174	UNIMPL	PARALLEL	0 000000000 nosys
175	UNIMPL	PARALLEL	0 000000000 nosys
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	UNIMPL	PARALLEL	0 000000000 nosys
#endif
#endif	/* multimax */
#ifdef	GENERIC
151	UNIMPL	PARALLEL	0 000000000 nosys
152	UNIMPL	PARALLEL	0 000000000 nosys
153	UNIMPL	PARALLEL	0 000000000 nosys
154	UNIMPL	PARALLEL	0 000000000 nosys
155	STD	UPARALLEL	3 000000000 nfssvc
156	STD	UPARALLEL	4 c00000001 getdirentries
157	STD	UPARALLEL	2 b00000000 statfs
158	STD	UPARALLEL	2 c00000000 fstatfs
159	OBSOL	UPARALLEL	1 000000000 vfsunmount
160	STD	SERIAL		0 000000000 async_daemon
161	STD	UPARALLEL	2 000000000 getfh
162	STD	UPARALLEL	2 000000000 getdomainname
163	STD	UPARALLEL	2 g00000000 setdomainname
164	UNIMPL	PARALLEL	0 000000000 nosys
165	OBSOL	SERIAL		4 000000000 quotactl
166	OBSOL	UPARALLEL	3 000000000 exportfs
167	OBSOL	UPARALLEL	1 000000000 vfsmount
#if	MACH_AFS && !defined(PMAX) && !defined(__alpha)
168	COMPAT	SERIAL		4 000000000 pioctl
169	COMPAT	SERIAL		0 000000000 setpag
170	COMPAT	SERIAL		6 000000000 icreate
171	COMPAT	SERIAL		3 000000000 iopen
172	COMPAT	SERIAL		6 000000000 iread
173	COMPAT	SERIAL		6 000000000 iwrite
174	COMPAT	SERIAL		3 000000000 iinc
175	COMPAT	SERIAL		3 000000000 idec
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
180	COMPAT	SERIAL		6 000000000 afs_call
#else	/* MACH_AFS  && !defined(PMAX) */
168	UNIMPL	PARALLEL	0 000000000 nosys
169	UNIMPL	PARALLEL	0 000000000 nosys
170	UNIMPL	PARALLEL	0 000000000 nosys
171	UNIMPL	PARALLEL	0 000000000 nosys
#if	defined(PMAX) || defined(__alpha)
172	STDALT	SERIAL		3 AaK000000 msgctl
173	STDALT	SERIAL		2 Aa0000000 msgget
174	STDALT	SERIAL		5 A00000000 msgrcv
175	STDALT	SERIAL		4 A00000000 msgsnd
176	STDALT	SERIAL		4 A0an00000 semctl
177	STDALT	SERIAL		3 A0a000000 semget
178	STDALT	SERIAL		3 A00000000 semop
179	STDALT	UPARALLEL	1 000000000 uname
#else	/* PMAX */
172	UNIMPL	PARALLEL	0 000000000 nosys
173	UNIMPL	PARALLEL	0 000000000 nosys
174	UNIMPL	PARALLEL	0 000000000 nosys
175	UNIMPL	PARALLEL	0 000000000 nosys
176	UNIMPL	PARALLEL	0 000000000 nosys
177	UNIMPL	PARALLEL	0 000000000 nosys
178	UNIMPL	PARALLEL	0 000000000 nosys
179	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* PMAX */
180	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* MACH_AFS && !defined(PMAX) */
#endif	/* GENERIC */
#if	defined(PMAX) || defined(__alpha)
#undef GENERIC
181	STDALT	SERIAL		1 000000000 plock
#ifdef	notyet
182	STD	SERIAL		0 000000000 lockf
#else	/* notyet */
182	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* notyet */
183	UNIMPL	PARALLEL	0 000000000 nosys
184	STD	SERIAL		5 000000000 getmnt
185	UNIMPL	PARALLEL	0 000000000 nosys
#ifdef notyet
#undef	SYS_unmount
186	STD	UPARALLEL	1 000000000 unmount
#else	/* notyet */
186	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* notyet */
187	STDALT	SERIAL		1 000000000 sigpending
188	STDALT	SERIAL		0 000000000 setsid
#else	/* PMAX */
#ifdef	ibmrt
181	STD	SERIAL		6 000000000 afs_call
#else	/* ibmrt */
181	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* ibmrt */
182	UNIMPL	PARALLEL	0 000000000 nosys
183	UNIMPL	PARALLEL	0 000000000 nosys
184	UNIMPL	PARALLEL	0 000000000 nosys
185	UNIMPL	PARALLEL	0 000000000 nosys
186	UNIMPL	PARALLEL	0 000000000 nosys
187	UNIMPL	PARALLEL	0 000000000 nosys
188	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* PMAX */
189	UNIMPL	PARALLEL	0 000000000 nosys
#if	defined(PMAX) || defined(__alpha)
#if	MACH_AFS
190	COMPAT	SERIAL		3 000000000 iopen
191	COMPAT	SERIAL		6 000000000 iread
192	COMPAT	SERIAL		6 000000000 iwrite
193	COMPAT	SERIAL		3 000000000 iinc
194	COMPAT	SERIAL		3 000000000 idec
195	COMPAT	SERIAL		4 000000000 pioctl
196	COMPAT	SERIAL		0 000000000 setpag
197	COMPAT	SERIAL		6 000000000 icreate
198	COMPAT	SERIAL		6 000000000 afs_call
#else	/* MACH_AFS */
190	UNIMPL	PARALLEL	0 000000000 nosys
191	UNIMPL	PARALLEL	0 000000000 nosys
192	UNIMPL	PARALLEL	0 000000000 nosys
193	UNIMPL	PARALLEL	0 000000000 nosys
194	UNIMPL	PARALLEL	0 000000000 nosys
195	UNIMPL	PARALLEL	0 000000000 nosys
196	UNIMPL	PARALLEL	0 000000000 nosys
197	UNIMPL	PARALLEL	0 000000000 nosys
198	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* MACH_AFS */
#else	/* PMAX */
190	UNIMPL	PARALLEL	0 000000000 nosys
191	UNIMPL	PARALLEL	0 000000000 nosys
192	UNIMPL	PARALLEL	0 000000000 nosys
193	UNIMPL	PARALLEL	0 000000000 nosys
194	UNIMPL	PARALLEL	0 000000000 nosys
195	UNIMPL	PARALLEL	0 000000000 nosys
196	UNIMPL	PARALLEL	0 000000000 nosys
197	UNIMPL	PARALLEL	0 000000000 nosys
198	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* PMAX */
199	STD	UPARALLEL	4 Ba3300000 swapon
200	STD	SERIAL		3 AaK000000 msgctl
201	STD	SERIAL		2 Aa0000000 msgget
202	STD	SERIAL		5 A00000000 msgrcv
203	STD	SERIAL		4 A00000000 msgsnd
204	STD	SERIAL		4 A0an00000 semctl
205	STD	SERIAL		3 A0a000000 semget
206	STD	SERIAL		3 A00000000 semop
207	STD	UPARALLEL	1 000000000 uname
208     STD     UPARALLEL       3 Blm000000 lchown
209	STD	SERIAL		3 A0a000000 shmat
210	STD	SERIAL		3 Aao000000 shmctl
211	STD	SERIAL		1 300000000 shmdt
212	STD	SERIAL		3 A0a000000 shmget
213	STD	SERIAL		3 000000000 mvalid
214	STD	SERIAL		2 000000000 getaddressconf
215	STD	PARALLEL	1 000000000 msleep
216	STD	PARALLEL	1 000000000 mwakeup
217	STD	PARALLEL	3 000000000 msync
#if	defined(balance) || defined(mips) || defined(__alpha)
218	STD	SERIAL		3 000000000 ssig signal
#else
218	STD	SERIAL		2 000000000 ssig signal
#endif
219	STD	SERIAL		1 000000000 utc_gettime
220	STD	SERIAL		2 000000000 utc_adjtime
221	UNIMPL	PARALLEL	0 000000000 nosys
222	STD	PARALLEL	6 000000004 security
223     STD     SERIAL		5 a33330000 kloadcall
; /* standardized afs system call numbers */

#if	MACH_AFS || !defined(KERNEL)
#undef	SYS_pioctl
#undef	SYS_setpag
#undef	SYS_iopen
#undef	SYS_icreate
#undef	SYS_iread
#undef	SYS_iwrite
#undef	SYS_iinc
#undef	SYS_idec
#undef	SYS_afs_call
224	STD	SERIAL		4 000000000 pioctl
225	STD	SERIAL		0 000000000 setpag
226	STD	SERIAL		3 000000000 iopen
227	STD	SERIAL		6 000000000 icreate
228	STD	SERIAL		6 000000000 iread
229	STD	SERIAL		6 000000000 iwrite
230	STD	SERIAL		3 000000000 iinc
231	STD	SERIAL		3 000000000 idec
232	STD	SERIAL		6 000000000 afs_call
#else	/* MACH_AFS || !defined(KERNEL) */
224	UNIMPL	PARALLEL	0 000000000 nosys
225	UNIMPL	PARALLEL	0 000000000 nosys
226	UNIMPL	PARALLEL	0 000000000 nosys
227	UNIMPL	PARALLEL	0 000000000 nosys
228	UNIMPL	PARALLEL	0 000000000 nosys
229	UNIMPL	PARALLEL	0 000000000 nosys
230	UNIMPL	PARALLEL	0 000000000 nosys
231	UNIMPL	PARALLEL	0 000000000 nosys
232	UNIMPL	PARALLEL	0 000000000 nosys
#endif	/* MACH_AFS || !defined(KERNEL) */
233	STD	UPARALLEL	1 000000000 getpgid
234     STD     UPARALLEL       1 000000000 getsid
235	STD	SERIAL		3 000000000 sigaltstack
236	STD	SERIAL		4 000000000 waitid
237	STD	SERIAL		3 000000004 priocntlset
238	STD	SERIAL		3 000000004 sigsendset
239	UNIMPL	PARALLEL	0 000000000 nosys
240	STD	PARALLEL	3 000000004 msfs_syscall
241	STD     SERIAL          3 ag0000000 sysinfo
242	STD     SERIAL          3 000000004 uadmin
243	STD     SERIAL          4 B00000000 fuser
244	UNIMPL	PARALLEL	0 000000000 nosys
245	UNIMPL	PARALLEL	0 000000000 nosys
246	UNIMPL	PARALLEL	0 000000000 nosys
247	UNIMPL	PARALLEL	0 000000000 nosys
248	UNIMPL	PARALLEL	0 000000000 nosys
249	UNIMPL	PARALLEL	0 000000000 nosys
250	STD	UPARALLEL	3 000000000 uswitch
251     STD     UPARALLEL       2 000000000 usleep_thread
252	STD	SERIAL		6 ag0aaq004 audcntl
253	STD	SERIAL          5 000000000 audgen
254	STD	SERIAL		3 000000000 sysfs
255	UNIMPL	PARALLEL	0 000000000 nosys
256	STD	SERIAL		6 000000000 getsysinfo
257	STD	SERIAL		5 a00000000 setsysinfo
258	STD	SERIAL		6 000000000 afs_syscall
259	STD	SERIAL		2 000000004 swapctl
260	STD	SERIAL		6 33aaaa000 memcntl
