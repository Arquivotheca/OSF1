.\"
.\" $XConsortium: p150,v 5.1 91/02/16 09:39:32 rws Exp $
.\"
.\" 
.\" Copyright (c) 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
.\" 
.\"                         All Rights Reserved
.\" 
.\" Permission to use, copy, modify, and distribute this software and its 
.\" documentation for any purpose and without fee is hereby granted, 
.\" provided that the above copyright notice appear in all copies and that
.\" both that copyright notice and this permission notice appear in 
.\" supporting documentation, and that the names of Sun Microsystems,
.\" the X Consortium, and MIT not be used in advertising or publicity 
.\" pertaining to distribution of the software without specific, written 
.\" prior permission.  
.\" 
.\" SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
.\" EVENT SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
.\" CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
.\" USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
.\" OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.\" 1. Substitute PHIGS+ function name (in CAPS) for "PNAME" in line below:
.ds pN INQUIRE LIGHT SOURCE REPRESENTATION
.TH "\*(pN" 3P+ "29 February 1991"
.SH NAME
\*(pN \-
inquire light source representation for a given workstation
.IX "Lighting" "INQUIRE LIGHT SOURCE REPRESENTATION"
.IX "Attribute Representations" "INQUIRE LIGHT SOURCE REPRESENTATION"
.IX "Inquiry functions" "INQUIRE LIGHT SOURCE REPRESENTATION"
.IX "PHIGS Extension Functions" "\*(pN"
.SH SYNOPSIS
.SS C Syntax
.ft B
.ta 1.5i 3i
.nf
.\" 6. Insert C syntax below
.nf
void
pinq_light_src_rep ( ws, index, type, error_ind, rep )
Pint	ws;	\fIworkstation identifier\fP
Pint	index;	\fIlight source index\fP
Pinq_type	type;	\fItype of returned value\fP
Pint	*error_ind;	\fIOUT error indicator\fP
Plight_src_bundle	*rep;	\fIOUT light source representation\fP
.fi
.ft R
.SS Required PHIGS Operating States
(PHOP, WSOP, *, *)
.SH DESCRIPTION
.SS Purpose
\s-2INQUIRE LIGHT SOURCE REPRESENTATION\s+2 
returns the attribute values of a specified entry in a workstation
extended light source bundle table.  See SET LIGHT SOURCE REPRESENTATION
for a full description of the contents of the bundle table entry and a 
description of the extended light source bundle table.
.\" .LP
.\" This is a \s-2PHIGS\s0 Extension function based on
.\" \s-2PHIGS PLUS\s+2 and is not part of the 
.\" \s-2PHIGS\s+2 standard.
.SS C Input Parameters
.IP \fIws\fR
The workstation identifier.
.IP \fIindex\fR
The light source index.
.IP \fItype\fP
An enumerated value specifying whether the values to be returned are 
those originally specified by the application (\s-2PINQ_SET\s+2), or
those resulting after \s-2PHIGS\s+2 mapped them to ones available on the
workstation (\s-2PINQ_REALIZED\s+2).  A Pinq_type structure is defined as:
.nf
.ta .5i +\w'PINQ_REALIZED     'u
.sp .4
typedef enum {
.sp .2
	PINQ_SET,
	PINQ_REALIZED
.sp .2
} Pinq_type;
.fi
.SS C Output Parameters
.IP \fIerror_ind\fR
A pointer to the location to store the error number of any
error detected by this function.
.IP \fIrep\fR
A pointer to the location in which to return the light source
representation. The Plight_src_bundle data structure
contains values needed to define the specified type of light source
representation. Plight_src_bundle is defined as:
.nf
.ta .5i +1i  +1i
.sp .4
typedef struct {
.sp .2
	Pint	type;	/* light source type */
	Plight_src_rec	rec;	/* light source data record */
.sp .2
} Plight_src_bundle;
.fi
.IP
.bp
Plight_src_rec is defined as:
.nf
.ta .5i +1.5i  +1i
.sp .4
typedef union {
.sp .2
	Pamb_light_src_rec	ambient;
	Pdir_light_src_rec	directional;
	Ppos_light_src_rec	positional;
	Pspot_light_src_rec	spot;
.sp .2
} Plight_src_rec;
.fi
.IP
Pamb_light_src_rec is defined as:
.nf
.ta .5i +.5i +.5i
.sp .4
typedef struct {
.sp .2
	Pgcolr	colr;	/* light source colour */
.sp .2
} Pamb_light_src_rec;
.fi
.IP
Pgcolr is defined as:
.ta .5i +.5i +.5i +.5i +.5i
.nf
.sp .4
typedef struct {
.sp .2
	Pint	type;	/* indirect, RGB, CIE, HSV, HLS */
	union {
		Pint	ind;	/* index in workstation colour bundle table */
		struct {
			Pfloat	x;	/* red, hue, etc. */
			Pfloat	y;	/* green, saturation, lightness, etc. */
			Pfloat	z;	/* blue, value, saturation, etc. */
		} general;
	} val;
} Pgcolr;
.fi
.IP
Pdir_light_src_rec is defined as:
.nf
.ta .5i +.5i +.5i
.sp .4
typedef struct {
.sp .2
	Pgcolr	colr;	/* light source colour */
	Pvec3	dir;	/* light source direction */
} Pdir_light_src_rec;
.sp .2
.fi
.IP
Pvec3 is defined as:
.sp .2
.nf
.ta .5i +\w'Pfloat     'u +\w'delta_x;     'u
.sp .2
typedef struct {	
.sp .2
	Pfloat	delta_x;	/* x magnitude */
	Pfloat	delta_y;	/* y magnitude */
	Pfloat	delta_z;	/* z magnitude */
.sp .2
} Pvec3;
.fi
.IP
Ppos_light_src_rec is defined as:
.nf
.ta .5i +\w'Ppoint3     'u +\w'coef[2];     'u
.sp .4
typedef struct {
.sp .2
	Pgcolr	colr;	/* light source colour */
	Ppoint3	pos;	/* light source position */
	Pfloat	coef[2];	/* attenuation coefficients */
.sp .2
} Ppos_light_src_rec;
.fi
.IP
.bp
Ppoint3 is defined as: 
.sp .2
.nf
.ta .5i +\w'Pfloat     'u +\w'x;	'u
.sp .2
typedef struct {
.sp .2
	Pfloat	x;	/* x coordinate */
	Pfloat	y;	/* y coordinate */
	Pfloat	z;	/* z coordinate */
.sp .2
} Ppoint3;
.fi
.IP
Pspot_light_src_rec is defined as:
.nf
.ta .5i +\w'Ppoint3     'u +\w'coef[2];     'u
.sp .4
typedef struct {
.sp .2
	Pgcolr	colr;	/* light source colour */
	Ppoint3	pos;	/* light source position */
	Pvec3	dir;	/* light source direction */
	Pfloat	exp;	/* concentration exponent */
	Pfloat	coef[2];	/* attenuation coefficients */
	Pfloat	angle;	/* spread angle */
.sp .2
} Pspot_light_src_rec;
.fi
.IP
.SS Execution
If the specified light source index is not present in the light source
table on the workstation and the specified type of returned value is
\fIRealized\fP, the representation for light source index one is
returned.
.LP
If the inquired information is not available, the values returned in
the output parameters are undefined and the error
indicator is set to one of the following error numbers to indicate
the reason for nonavailability.
.LP
Since this is an inquiry function, \s-2ERROR HANDLING\s+2 is not invoked
when an error is detected by this function.
.SH ERRORS
.IP 003
Ignoring function, function requires state (\s-2PHOP,WSOP,*,*\s+2)
.IP 054
Ignoring function, the specified workstation is not open
.IP 059
Ignoring function, the specified workstation does not have output capability
(i.e. the workstation category is neither \s-2OUTPUT\s+2, \s-2OUTIN\s+2, nor \s-2MO\s+2)
.IP 101
Ignoring function, the specified representation has not been defined
.IP 614
Ignoring function, the light source index is less than one
.SH SEE ALSO
.nf
.IP
.ta 0.5i
.SM "SET LIGHT SOURCE STATE (3P+)"
.SM "SET LIGHT SOURCE REPRESENTATION (3P+)"
.SM "INQUIRE LIST OF LIGHT SOURCE INDICES (3P+)"
.SM "INQUIRE LIGHT SOURCE FACILITIES (3P+)"
.SM "INQUIRE PREDEFINED LIGHT SOURCE REPRESENTATION (3P+)"
.fi
