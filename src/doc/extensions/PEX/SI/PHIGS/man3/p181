.\"
.\" $XConsortium: p181,v 5.1 91/02/16 09:40:09 rws Exp $
.\"
.\" 
.\" Copyright (c) 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
.\" 
.\"                         All Rights Reserved
.\" 
.\" Permission to use, copy, modify, and distribute this software and its 
.\" documentation for any purpose and without fee is hereby granted, 
.\" provided that the above copyright notice appear in all copies and that
.\" both that copyright notice and this permission notice appear in 
.\" supporting documentation, and that the names of Sun Microsystems,
.\" the X Consortium, and MIT not be used in advertising or publicity 
.\" pertaining to distribution of the software without specific, written 
.\" prior permission.  
.\" 
.\" SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
.\" EVENT SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
.\" CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
.\" USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
.\" OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.ds f \s-2INQUIRE POLYLINE FACILITIES PLUS\s+2
.TH "INQUIRE POLYLINE FACILITIES PLUS" 3P+ "29 February 1991"
.SH NAME
INQUIRE POLYLINE FACILITIES PLUS\-  inquire workstation type extended
polyline facilities  
.IX "Inquiry functions" "INQUIRE POLYLINE FACILITIES PLUS"
.IX "PHIGS Extension Functions" "INQUIRE POLYLINE FACILITIES PLUS"
.SH SYNOPSIS
.SS C Syntax
.ft B
.ta 1.25i 3i
.nf
void
pinq_line_facs_plus ( type, lt_length, lt_start, sm_length, sm_start, error_ind, tot_lt_length, tot_sm_length, facilities)
Pint	type;	\fIworkstation type\fP
Pint	lt_length;	\fInumber of line types to return\fP
Pint	lt_start;	\fIstarting position\fP
Pint	sm_length;	\fI number of shading methods to return \fP
Pint	sm_start;	\fIstarting position\fP
Pint	*error_ind;	\fIOUT error indicator\fP
Pint	*tot_lt_length;	\fIOUT length of line type list in PHIGS\fP
Pint	*tot_sm_length;	\fIOUT length of shading method list in PHIGS\fP
Pline_facs_plus	*facilities;	\fIOUT extended polyline facilities\fP
.fi
.ft R
.SS Required PHIGS Operating States
(PHOP, *, *, *)
.SH DESCRIPTION
.SS Purpose
\s-2INQUIRE POLYLINE FACILITIES PLUS\s+2  
returns the extended polyline support available from a 
specified workstation type. 
.SS C Input Parameters
.IP \fItype\fR
The workstation type.
.IP \fIlt_length\fR
The number of line types to return.
.IP \fIlt_start\fR
The index of first line type to return.
.IP \fIsm_length\fR
The number of shading methods to return.
.IP \fIsm_start\fR
The index of first shading method to return.
.sp .2
.SS C Output Parameters
.IP \fIerror_ind\fR
A pointer to the location to store the error number of any error
detected by this function.
.IP \fItot_lt_length\fR
A pointer to the location to store the total number of line types available. 
.IP \fItot_sm_length\fR
A pointer to the location to store the total number of shading methods available.
.IP \fIfacilities\fR
A pointer to the Pline_facs_plus structure that returns the
requested information.
Pline_facs_plus is defined as:
.sp .2
.nf
.ta .5i +\w'Pint_list     'u +\w'num_pred_inds;     'u
.sp .2
typedef struct {
.sp .2
	Pint_list	types;	/* list of available line types */
	Pint	num_widths;	/* number of available line widths */
	Pfloat	nom_width;	/* nominal line width */
	Pfloat	min_width;	/* minimum line width */
	Pfloat	max_width;	/* maximum line width */
	Pint	num_pred_inds;	/* number of predefined bundles */
	Pint_list	shads;	/* list of shading methods */
.sp .2
} Pline_facs_plus;
.IP
.fi
Pint_list is defined as:
.sp .2
.nf
.ta .5i +\w'Pint     'u +\w'num_ints;     'u
.sp .2
typedef struct {
.sp .2
	Pint	num_ints;	/* number of Pints in list */
	Pint	*ints;	/* list of integers */
.sp .2
} Pint_list;
.fi
.IP
Prior to calling this function, the \fIints\fR field of the Pint_list
structures must contain a pointer to an application
supplied buffer. This buffer must be at least as large as the 
corresponding \fIlength\fR parameter.
.sp
Defined shading methods are:
.sp
.nf
.ta .5i +\w'0     'u +\w'PSD_COLOUR     'u
1	PSD_NONE	\fINo Shading\fP
2	PSD_COLOUR	\fIColour Interpolation Shading\fP
.sp
.fi
.SS Execution
.LP
If the inquired information is available, the error indicator is returned
as zero and the requested information is returned in the output parameters.
.LP
If the inquired information is not available, the values returned in the
output parameters are undefined and the error indicator is
set to one of the below error numbers to indicate the reason for
nonavailability.
.LP
Since this is an inquiry function, \s-2ERROR HANDLING\s+2 is not invoked
when an error is detected by this function.
.SH ERRORS
.IP 002
Ignoring function, function requires state (\s-2PHOP, *, *, *\s+2)
.IP 052
Ignoring function, workstation type not recognized by the implementation
.IP 051
Ignoring function, this information is not yet available
for this workstation type; open a workstation of this type
and use the specific workstation type
.IP 059
Ignoring function, the specified workstation does not have output capability
(i.e. the workstation category is neither \s-2OUTPUT\s+2, \s-2OUTIN\s+2, nor \s-2MO\s+2)
.IP 062
Ignoring function, this information is not available for this
\s-2MO\s+2 workstation type
.SH SEE ALSO
.nf
.IP
.ta 0.5i
.SM "SET POLYLINE REPRESENTATION PLUS (3P+)"
.SM "INQUIRE POLYLINE REPRESENTATION PLUS (3P+)"
.SM "INQUIRE PREDEFINED POLYLINE REPRESENTATION PLUS (3P+)"
.fi
