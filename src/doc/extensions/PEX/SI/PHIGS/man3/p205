.\"
.\" $XConsortium: p205,v 5.1 91/02/16 09:40:39 rws Exp $
.\"
.\" 
.\" Copyright (c) 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
.\" 
.\"                         All Rights Reserved
.\" 
.\" Permission to use, copy, modify, and distribute this software and its 
.\" documentation for any purpose and without fee is hereby granted, 
.\" provided that the above copyright notice appear in all copies and that
.\" both that copyright notice and this permission notice appear in 
.\" supporting documentation, and that the names of Sun Microsystems,
.\" the X Consortium, and MIT not be used in advertising or publicity 
.\" pertaining to distribution of the software without specific, written 
.\" prior permission.  
.\" 
.\" SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
.\" EVENT SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
.\" CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
.\" USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
.\" OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.TH "INQUIRE RENDERING COLOUR MODEL FACILITIES" 3P+ "29 February 1991"
.SH NAME
INQUIRE RENDERING COLOUR MODEL FACILITIES \- 
inquire list of available direct colour models
.IX "INQUIRE RENDERING COLOR MODEL FACILITIES"
.SH SYNOPSIS
.SS C Syntax
.ft B
.ta 1.25i 3i
.nf
void
pinq_rendering_colr_model_facs( type, length, start, error_ind, models, total_length )                          
Pint	type;	\fIworkstation type\fP
Pint	length;	\fIlength of application's list\fP 
Pint	start;	\fIstarting position\fP    
Pint	*error_ind;	\fIOUT error indicator\fP 
Pint_list	*models;	\fIOUT rendering colour models\fP
Pint	*total_length;	\fIOUT total number of rendering\fP
.fi
.SS Required PHIGS Operating States
(PHOP, *, *, *)
.SH DESCRIPTION
.SS Purpose
Use \s-2INQUIRE RENDERING COLOUR MODEL FACILITIES\s+2 to obtain a list of
colour model facilities available for rendering for the specified workstation type
.\" .LP
.\" This is a \s-2PHIGS\s0 Extension function based on
.\" \s-2PHIGS PLUS\s+2 and is not part of the
.\" \s-2PHIGS\s+2 standard.
.SS C Input Parameters
.IP \fItype\fP
The workstation type.
.IP \fIlength\fP
The number of \fIints\fR in the \fImodels\fR output parameter for which the 
application has allocated memory. \fIlength\fR is the number of list elements
that the system can return in \fImodels\(->ints\fR.
If a value of 0 is used here, no data will be returned in the \fImodels\(->ints\fR
list, but the total number of elements will be returned in \fItotal_length\fR.
.IP \fIstart\fP
Starting position of inquiry.  The elements in the list, beginning
with the item number specified by \fIstart\fR, are copied sequentially into 
\fImodels\(->ints\fR until \fImodels\(->ints\fR is full
or all the elements have been copied.
.IP
.SS C Output Parameters
.IP \fIerror_ind\fP
A pointer to the location to store the error number of any error detected
by this function.
.IP \fImodels\fP
A pointer to a Pint_list that returns the portion of the list of 
available rendering colour models from the workstation description table,
starting with \fIstart\fP.
Pint_list is defined in phigs.h as follows:
.sp .4
.ta .5i +1i +1i
.nf
typedef struct {
.sp .2
	Pint	num_ints;	/* number of Pints in list */
	Pint	*ints;	/* list of integers */
.sp .2
} Pint_list;
.fi
.IP
The \fInum_ints\fR component specifies the number of elements in the list.
The \fIints\fR component is a pointer to a list \fInum_ints\fR long.
.IP
The application must allocate memory for \fIlength\fR elements in the
list of \fIints\fR.
.IP \fItotal_length\fP
A pointer to an integer in which to return the total length of the list.
This is the value required for \fIlength\fP if all the items in the list 
are to be returned.
.IP
.SS Execution
.LP
If the inquired information is available, the error indicator is returned
as zero and values are returned in the output parameters.
.LP
If the inquired information is not available, the values returned in the
output parameters are undefined and the error indicator is
set to one of the below error numbers to indicate the reason for
nonavailability.
.LP
Since this is an inquiry function, \s-2ERROR HANDLING\s+2 is not invoked
when an error is detected by this function.
.SH ERRORS
.IP 002
Ignoring function, function requires state 
(\s-2PHOP\s+2, \s-2*\s+2, \s-2*\s+2, \s-2*\s+2)
.IP 052
Ignoring function, workstation type not recognized by the implementation
.IP 059
Ignoring function, the specified workstation does not have output capability
(i.e., the workstation category is neither \s-2OUTPUT\s+2, \s-2OUTIN\s+2, nor \s-2MO\s+2)
.IP 062
Ignoring function, specified workstation category is neither 
\s-2OUTPUT\s+2 nor \s-2OUTIN\s+2
.IP -153
List length is less that zero \- zero will be used
.IP 2201
Start index out of range
.SH SEE ALSO
.nf
.IP
.ta 0.5i
.SM "SET RENDERING COLOUR MODEL (3P+)"
.fi
