.\"
.\" $XConsortium: p060,v 5.1 91/02/16 09:37:46 rws Exp $
.\"
.\" 
.\" Copyright (c) 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
.\" 
.\"                         All Rights Reserved
.\" 
.\" Permission to use, copy, modify, and distribute this software and its 
.\" documentation for any purpose and without fee is hereby granted, 
.\" provided that the above copyright notice appear in all copies and that
.\" both that copyright notice and this permission notice appear in 
.\" supporting documentation, and that the names of Sun Microsystems,
.\" the X Consortium, and MIT not be used in advertising or publicity 
.\" pertaining to distribution of the software without specific, written 
.\" prior permission.  
.\" 
.\" SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
.\" EVENT SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
.\" CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
.\" USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
.\" OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.ds f \s-2FILL AREA SET 3 WITH DATA \s+2
.TH "FILL AREA SET 3 WITH DATA" 3P+ "29 February 1991"
.SH NAME
FILL AREA SET 3 WITH DATA \-  creates a \s-2\&3D\s+2 fill area set structure element that includes colour and shading data   
.IX "PHIGS Extension Functions" "FILL AREA SET 3 WITH DATA"
.IX "Filled Area Primitives" "FILL AREA SET 3 WITH DATA"
.IX "Primitives, Filled Area Primitives" "FILL AREA SET 3 WITH DATA"
.SH SYNOPSIS
.SS C Syntax
.ft B
.ta 1.25i 3i
.nf
void
pfill_area_set3_data ( fflag, eflag, vflag, colour_model, fdata, nfa, edata,  vdata )
Pint	fflag;	\fIwhat data is specified per facet \fP
Pint	eflag;	\fIwhat data is specified per edge \fP
Pint	vflag;	\fIwhat data is specified per vertex \fP
Pint	colour_model;	\fIcolour model\fP
Pfacet_data3	*fdata;	\fIfacet data\fP
Pint	nfa;		\fInumber of fill areas in the set \fP
Pedge_data_list	*edata;	\fIedge data list\fP
Pfacet_vdata_list3	*vdata;		\fIfacet vertex data list\fP
.fi
.ft R
.SS Required PHIGS Operating States
(PHOP, *, STOP, *)
.SH DESCRIPTION
.SS Purpose
\s-2FILL AREA SET 3 WITH DATA\s+2 
creates a \s-2\&3D\s+2 fill area set primitive with colour and shading data. 
.LP
The
\s-2FILL AREA SET 3 WITH DATA\s+2
is a set of closed polygonal areas defined by a series of three
dimensional Modeling Coordinate points. You can specify a geometric normal
for the entire fill area, and specify colour/normal information for each
vertex
.I "in addition"
to point coordinates. The added data is used when applying lighting, shading,
face distinguishing, and face culling.
.SS C Input Parameters
.IP \fIfflag\fR
The data per facet flag specifies the available data for the entire 
fill area set.
.sp
.nf
.ta .5i +\w'0     'u +\w'PFACET_COLOUR_NORMAL    'u
0	PFACET_NONE	\fINo Facet Data Specified\fP
1	PFACET_COLOUR	\fIFacet Colours Specified\fP
2	PFACET_NORMAL	\fIFacet Normal Specified\fP
3	PFACET_COLOUR_NORMAL	\fIFacet Normal and Colours Specified\fP
.sp
.fi
.IP \fIeflag\fR
The data per edge flag specifies the available information for
each edge.
.sp
.nf
.ta .5i +\w'0     'u +\w'PEDGE_VISIBILITY     'u
0	PEDGE_NONE	\fINo Edge Data Specified\fP
1	PEDGE_VISIBILITY	\fIEdge Visibility Flags Specified\fP
.sp
.fi
.IP \fIvflag\fR
The data per vertex flag specifies the available data for
each vertex of the primitive.
.sp
.nf
.ta .5i +\w'0     'u +\w'PVERT_COORD_COLOUR_NORMAL     'u 
0	PVERT_COORD	\fICoordinates Specified\fP
1	PVERT_COORD_COLOUR	\fICoordinates and Vertex Colour Specified\fP
2	PVERT_COORD_NORMAL	\fICoordinates and Vertex Normal Specified\fP
3	PVERT_COORD_COLOUR_NORMAL	\fICoordinates, Vertex Colour, and 
				Vertex Normal Specified\fP
.sp
.fi
.bp
.IP \fIcolour_model\fR
The colour type for specified facet and/or vertex colours.
.sp
.nf
.ta .5i +\w'0     'u +\w'PMODEL_CIELUV     'u
0	PINDIRECT	\fIColour Index Specified\fP
1	PMODEL_RGB	\fIRed, Green, and Blue\fP
2	PMODEL_CIELUV	\fICIE Colour Model\fP
3	PMODEL_HSV	\fIHue, Saturation, and Value\fP
4	PMODEL_HLS	\fIHue, Lightness, and Saturation\fP
.sp
.fi
.IP \fIfdata\fP
A pointer to a Pfacet_data3 structure that specifies the fill area and
optionally associated colour information. Pfacet_data3 is defined as 
follows:
.sp .2
.nf
.ta .5i +1i +1i
.sp .2
typedef union {
.sp .2
	Pcoval	colr;	/* colour */
	Pvec3	normal;	/* unit normal*/
	Pconorm3	conorm;	/* colour and normal */		
.sp .2
} Pfacet_data3;
.IP
.fi
Pcoval is defined as: 
.nf
.ta .5i +1i +1i
.sp .2
typedef union {	
.sp .2
	Pint	ind;	/* index in workstation colour bundle table */
	Pcolr_rep	direct;	/* direct colour components */
.sp .2
} Pcoval;
.IP
.fi
Pcolr_rep is defined as:
.ta .5i +1i +1i
.nf
.sp .2
typedef union {
.sp .2
	Prgb	rgb;	/* Red Green Blue colour specification */
	Pcieluv	cieluv;	/* CIE L*U*V* colour specification */
	Phls	hls;	/* Hue Lightness Saturation colour specification */
	Phsv	hsv;	/* Hue Saturation Value colour specification */
	Pdata	unsupp;	/* Colour in unsupported colour model */
.sp .2
} Pcolr_rep;
.sp .2
.fi
.IP
Prgb is defined in phigs.h as follows:
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {
.sp .2
	Pfloat	red;	/* red, hue, etc */
	Pfloat	green;	/* green, saturation, lightness, etc */
	Pfloat	blue;	/* blue, value, saturation, etc */
.sp .2
} Prgb;
.sp .2
.fi
.IP
Pcieluv is defined in phigs.h as follows:
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {
.sp .2
	Pfloat	cieluv_x;	/* x coefficient */
	Pfloat	cieluv_y;	/* y coefficient */
	Pfloat	cieluv_y_lum;	/* y luminance */
.sp .2
} Pcieluv;
.sp .2
.fi
.bp
.IP
Phsv is defined in phigs.h as follows:
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {
.sp .2
	Pfloat	hue;	/* hue */
	Pfloat	satur;	/* saturation */
	Pfloat	value;	/* value */
.sp .2
} Phsv;
.fi
.IP
Phls is defined in phigs.h as follows:
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {
.yp .2
	Pfloat	hue;	/* hue */
	Pfloat	lightness;	/* lightness */
	Pfloat	satur;	/* saturation */
.sp .2
} Phls;
.fi
.IP
Pdata is defined in phigs.h as follows:
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {
.sp .2
	size_t	size;	/* size of data */
	char	*data	/* pointer to data */
.sp .2
} Pdata;
.sp .2
.fi
.IP
Pvec3 is defined in phigs.h as follows:
.ta .5i +1i +1i
.nf 
.sp .2
typedef struct  {
.sp .2
	Pfloat	delta_x;	/* x magnitude */
	Pfloat	delta_y;	/* y magnitude */
	Pfloat	delta_z;	/* z magnitude */
.sp .2
} Pvec3;
.sp .2
.fi
.IP
Pconorm3 is defined in phigs.h as follows:
.ta .5i +1i +1i
.nf 
.sp .2
typedef struct  {
.sp .2
	Pcoval	colr;	/* colour */
	Pvec3	norm;	/* normal */
.sp .2
} Pconorm3;
.sp .2
.fi
.IP
Pcoval and Pvec3 are defined above.
.IP \fInfa\fR
The number of fill areas in the set.
.IP \fIedata\fR
A pointer to an array (nfa) of Pedge_data_list structures
that specifies the edge data.
Pedge_data_list is defined as:
.sp .2
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {
.sp .2
	Pint	num_edges;	/* number of edges */
	Pedge_data_arr	edgedata;	/* edge data */
.sp .2
} Pedge_data_list;
.IP
.fi
Pedge_data_arr is defined as:
.ta .5i +1i +1i
.sp .4
typedef union {
.sp .2
	Pedge_flag	*edges;	/* array of edge flags */
.fi
	/* implementation dependent data */  	
.sp .2
} Pedge_data_arr;
.fi
.bp
.IP
Pedge_flag is defined as:
.sp .2
.nf
.ta .5i +1i +1i
.sp .2
typedef enum {
.sp .2
	PEDGE_OFF,
	PEDGE_ON
.sp .2
} Pedge_flag;
.fi
.IP \fIvdata\fR
A pointer to an array (nfa) of Pfacet_vdata_list3 structures 
that specifies each fill area in the set and optionally 
associated colour information.
Pfacet_vdata_list3 is defined as: 
.sp .2
.nf
.ta .5i +1.25i +1i
.sp .2
typedef struct {
.sp .2
	Pint	num_vertices;	/* number of vertices */
	Pfacet_vdata_arr3	vertex_data;	/* facet vertex data */
.sp .2
} Pfacet_vdata_list3;
.IP
.fi
Pfacet_vdata_arr3 is defined as:
.sp .2
.nf
.ta .5i +1i +1i
.sp .2
typedef union {	
.sp .2			
	Ppoint3	*points;	/* array of points */
	Pptco3	*ptcolrs;	/* array of points and colours */
	Pptnorm3	*ptnorms;	/* array of points and normals */
	Pptconorm3	*ptconorms;	/* array of points, colours, and normals */
	/* implementation dependent types can go here */
.\" /* implementation dependent data pointer */...in code
.sp .2
} Pfacet_vdata_arr3;
.fi
.IP
Ppoint3 is defined as: 
.sp .2
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {
.sp .2
	Pfloat	x;	/* x coordinate */
	Pfloat	y;	/* y coordinate */
	Pfloat	z;	/* z coordinate */
.sp .2
} Ppoint3;
.IP
.fi
Pptco3 is defined as:
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {	
.sp .2
	Ppoint3	point;	/* point coordinates */
	Pcoval	colr;	/* colour */
.sp .2
} Pptco3;
.fi
.IP
Ppoint3 anc Pcoval are defined above.
Pptnorm3 is defined in phigs.h as follows:
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {	
.sp .2
	Ppoint3	point;	/* point coordinates */
	Pvec3	norm;	/* normal */
.sp .2
} Pptnorm3;
.fi
.IP
Ppoint3 and Pvec3 are defined above.
Pptconorm3 is defined in phigs.h as follows:
.nf
.ta .5i +1i +1i
.sp .2
typedef struct {	
.sp .2
	Ppoint3	point;	/* point coordinates */
	Pcoval	colr;	/* colour */
	Pvec3	norm;	/* normal */
.sp .2
} Pptconorm3;		/* point with colour and normal */
.fi
.IP
Ppoint3, Pcoval, and Pvec3 are defined above.
.SS Execution
Depending on the edit mode, a \s-2FILL AREA SET 3 WITH DATA\s+2  
element is inserted into the open structure after the element pointer, or 
replaces the element pointed to by the element pointer.  In either case,
the element pointer is updated to point to the newly created 
\s-2FILL AREA SET 3 WITH DATA\s+2 element.
.LP
When the structure is traversed, 
\s-2FILL AREA SET 3 WITH DATA\s+2
draws an implicitly closed polygonal area with multiple boundaries.   
\s-2PHIGS\s0 
implicitly closes the area by extending each fill area boundary
from the last point to the first point. Fill areas can be empty,
hollow, shaded, or filled with a color, pattern, or hatch.
The interior of the primitive is defined by the odd winding rule.
The 
\s-2FILL AREA SET 3 WITH DATA\s+2
element can specify the facet color and normal vector
as well as colours and normal vectors for
each vertex. These colours and normal vectors are used in 
conjunction with the current lighting and depth cueing attributes
to colour and shade the primitive. Note that unexpected lighting 
effects will result if the supplied normals are not of unit length. 
.LP
The application 
should insure that the fill area set points are 
coplanar. Display of non-coplanar fill area set is device dependent.
\s-2FILL AREA SET 3 WITH DATA\s+2
elements containing fewer than three vertices can be created, but they are
treated in a device dependent manner during structure traversal.
.SS Attributes Applied
The attributes listed below are used to display the
\s-2FILL AREA SET 3 WITH DATA\s+2 primitive when the structure is traversed.
The Aspect Source 
Flags (\s-2ASF\s+2s) tell where to access the output display attributes. 
These attributes can come directly from the traversal state list,
or they can be accessed indirectly, using the appropriate index 
in the traversal state list and the corresponding bundled 
representation in the PHIGS workstation state list.
.RS
.nf
.ta .5i +\w'back interior reflectance equation   'u 
.sp
interior colour			interior colour index \s-2ASF\s+2
back interior colour		back interior colour \s-2ASF\s+2
interior style			interior style \s-2ASF\s+2
back interior style		back interior style \s-2ASF\s+2
interior style index		interior style index \s-2ASF\s+2
back interior style index	back interior style index \s-2ASF\s+2
interior shading method		interior shading method \s-2ASF\s+2
back interior shading method	back interior shading method \s-2ASF\s+2
interior reflectance equation 	interior reflectance equation \s-2ASF\s+2
back interior reflectance equation	back interior reflectance equation \s-2ASF\s+2
area properties			area properties \s-2ASF\s+2
back area properties		back area properties \s-2ASF\s+2
interior index
edge colour			edge colour index \s-2ASF\s+2
edge flag			edge flag \s-2ASF\s+2
edgetype			edgetype \s-2ASF\s+2
edgewidth scale factor		edgewidth scale factor \s-2ASF\s+2
edge index
face distinguishing mode
face culling mode
depth cue index
light source state
name set
.fi
.RE
.sp .2
.SH ERRORS
.IP 005
Ignoring function, function requires state 
(\s-2PHOP\s+2, \s-2*\s+2, \s-2STOP\s+2, \s-2*\s+2)
.SH SEE ALSO
.nf
.IP
.ta 0.5i
.SM "FILL AREA SET 3 (3P)"
.fi
