.\"
.\" $XConsortium: p081,v 5.1 91/02/16 09:38:11 rws Exp $
.\"
.\" 
.\" Copyright (c) 1990, 1991 by Sun Microsystems, Inc. and the X Consortium.
.\" 
.\"                         All Rights Reserved
.\" 
.\" Permission to use, copy, modify, and distribute this software and its 
.\" documentation for any purpose and without fee is hereby granted, 
.\" provided that the above copyright notice appear in all copies and that
.\" both that copyright notice and this permission notice appear in 
.\" supporting documentation, and that the names of Sun Microsystems,
.\" the X Consortium, and MIT not be used in advertising or publicity 
.\" pertaining to distribution of the software without specific, written 
.\" prior permission.  
.\" 
.\" SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
.\" INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
.\" EVENT SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
.\" CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
.\" USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
.\" OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.TH "INITIALIZE STRING" 3P "29 February 1991"
.SH NAME
INITIALIZE STRING \- initialize a \s-2STRING\s+2 input device
using \s-2\&2D\s+2 data
.IX "String Input Devices" "INITIALIZE STRING"
.SH SYNOPSIS
.SS C Syntax
.ft B
.ta 1.5i 3.25i
.nf
void
pinit_string ( ws, dev, init, pet, echo_area, record )
Pint	ws;	\fIworkstation identifier\fP
Pint	dev;	\fIstring device number\fP
char	*init;	\fIinitial string\fP
Pint	pet;	\fIprompt and echo type\fP
Plimit	*echo_area;	\fIecho area pointer\fP
Pstring_data	*record;	\fIdata record pointer\fP
.fi
.ft R
.SS Required PHIGS Operating States
(PHOP, WSOP, *, *)
.SH DESCRIPTION
.SS Purpose
\s-2INITIALIZE STRING\s+2 sets the initialization parameters of a
\s-2STRING\s+2 device.
This function stores these parameters in the workstation state list
of the workstation associated with the specified device.
The specified \fBdevice must be in \s-2REQUEST\s+2 mode\fP when this
function is called.
.SS C Input Parameters
.IP \fIws\fP
The workstation identifier of the workstation associated with the device.
.IP \fIdev\fP
The device number of the \s-2STRING\s+2 device to initialize.
See the \fIAVAILABLE DEVICES\fP section below for a description of the
available devices.
.IP \fIinit\fP
A pointer to the initial string.
\fIinit\fP can be \s-2NULL\s+2, that is, (char*)0.
.IP \fIpet\fP
The prompt/echo type desired.
Those supported by each device are listed in the
\fIAVAILABLE DEVICES\fP section below.
.IP \fIecho_area\fP
A pointer to a Plimit structure defining the \fIx\fP and \fIy\fP
components of the echo volume, in Device Coordinates (\s-2DC\s+2).
The \fIz\fP component in the workstation state list is left unchanged.
Plimit is defined in phigs.h as follows:
.sp .4
.ta .5i +1i  +1i
.nf
typedef struct {
.sp .2
	Pfloat	x_min;	/* minimum x coordinate value */
	Pfloat	x_max;	/* maximum x coordinate value */
	Pfloat	y_min;	/* minimum y coordinate value */
	Pfloat	y_max;	/* maximum y coordinate value */
.sp .2
} Plimit;
.fi
.IP \fIrecord\fP
A pointer to a Pstring_data structure containing the data record information.
The contents of the data record for each device and prompt/echo type are
described below in the \fIAvailable Devices\fP section.
.IP
The members of the data record union correspond to the prompt/echo type
being used.
As an example, the appropriate member of the Pstring_data structure for
prompt/echo type 1 is \fIpet_r1\fP.
.IP
For some prompt/echo types of some \s-2STRING\s+2 devices the data record is
not used.
The \fIrecord\fP parameter, however, must still be supplied.
.IP
Pstring_data3 is defined in phigs.h as follows:
.bp
.ta .5i +.5i +.5i  +.5i
.nf
typedef struct {
.sp .2
	Pint	buffer_size;		/* input buffer size		*/
	Pint	init_pos;		/* initial editing position	*/
	union {
.sp .2
		struct {
.sp .2
			Pint	unused;
.sp .2
		} pet_r1;
.sp .2
	} pets;
.sp .2
} Pstring_data;
.fi
.SS Execution
.LP
\s-2INITIALIZE STRING\s+2 sets the initialization parameters of a
\s-2STRING\s+2 device.
This function stores these parameters in the workstation state list
of the workstation associated with the specified device.
The specified device must be in \s-2REQUEST\s+2 mode when this
function is called.
.LP
The parameters that are initialized by this function are 
\fIinitial string\fP, \fIprompt/echo type\fP, \fIecho volume\fP,
and \fIinput data record\fP.
.LP
The \fIinitial string\fP is the logical input value the device will take
on whenever it is enabled.
The device's measure retains this value until operator input changes it.
A device is enabled when the appropriate \s-2REQUEST\s+2 function is called,
or when its input mode is set to \s-2SAMPLE\s+2 or \s-2EVENT\s+2.
.LP
A \s-2STRING\s+2 device measure consists of a character string.
.LP
The \fIprompt/echo type\fP determines how the device will be presented to
the operator and respond to his actions.
Each device supports one or more prompt/echo types.
Those supported by each device are listed in the device's
description in the \fIAVAILABLE DEVICES\fP section below.
All devices support prompt/echo type 1.
Positive prompt/echo types are defined by the \s-2PHIGS\s+2 standard.
Negative types are implementation-dependent.
.LP
The \fIecho volume\fP defines the region of the display surface in which to
echo the device.
It is specified in Device Coordinates (\s-2DC\s+2).
Devices that use the echo volume may restrict their display to this
region.
Some of these devices may still recognize operator input
outside the region even though they do not display there.
This function only specifies the \fIx\fP and \fIy\fP components of the
echo volume.  The existing \fIz\fP component in the workstation state
list is left unchanged.
.LP
The \fIinput data record\fP contains the prompt/echo type specific
information that controls the device's appearance and characteristics.
Not all of the data record contents are used by some devices.
The device descriptions in the \fIAVAILABLE DEVICES\fP section below
list the data record contents that each device recognizes.
.LP
All the initialization parameters must be specified properly, or this function
will generate an error.
The \fI\s-2ERRORS\s+2\fP section below lists the possible error conditions.
.LP
The default initialization parameters and the list of prompt/echo types
supported by a \s-2STRING\s+2 input device can be inquired with the function
\s-2INQUIRE DEFAULT STRING DEVICE DATA\s+2.
The current state of the device can be inquired with the function
\s-2INQUIRE STRING DEVICE STATE\s+2.
.SH AVAILABLE DEVICES
.SS Device 1 - "Athena Ascii Text Widget"
The string device realization is a collection of widgets from the
Athena widget set.  It consists of a Shell widget, a Viewport widget,
and an AsciiText widget.  The AsciiText widget is the item manipulated
by the operator to change the \fIstring value\fR.
.LP
String device events are generated by a carriage return.  A carriage
return also invokes the \fIRequestSatisfied\fR action.  
The device's measure corresponds to all the characters added to the widget
by the operator since the device was last enabled or the last
\s-2STRING\s+2 event was generated.
The string device has the following translation defined:
.IP
<Key>Return \(-> \fInewline() StringEvent() RequestSatisfied()\fR
.LP
The single prompt/echo type supported is 1.
.LP
The widgets used and their names, in decreasing hierarchy, are:
.IP
string1 \(->  \fIapplicationShellWidgetClass\fR
.RS
.br
viewport \(->  \fIviewportWidgetClass\fR
.RS
.br
text \(-> \fIasciiTextWidgetClass\fR
.RE
.RE
.LP
Fallback resources for string devices are:
.IP
*string1*Text*width \(-> \fI400\fR
.IP
*string1*Text*height \(-> \fI50\fR
.IP
*string1*Text*editType \(-> \fIedit\fR
.IP
*string1*Text*scrollVertical \(-> \fInever\fR
.IP
*string1*Text*scrollHorizontal \(-> \fInever\fR
.IP
*string1*Text*autoFill \(-> \fIon\fR
.LP
The fully qualified name of all widgets is
<appl_name>.workstation<ws_id>.string<dev_id>.<widget_name>, where
<appl_name> is the application name specified in the call to OPEN XPHIGS.
(This will be "phigs" if OPEN XPHIGS was not called.)
For example, phigs.workstation1.string.viewport is the name of the
pane widget of string device 1 on workstation 1.
.LP
This device does not use the \s-1PHIGS\s+1 echo area.  Applications or users can
specify the position of the devices (subject to window manager control)
by specifying the appropriate resource values in a resource file.
.LP
The echo volume is ignored by this device.
The \fIbuffer_size\fP and \fIinit_pos\fP fields of the data record
are used by this device.
.LP
\fBPrompt/echo types supported\fP: 1
.IP "PET 1" .8i
Display the text in the widget.
.LP
.RE
.SH ERRORS
.IP 003
Ignoring function, function requires state (\s-2PHOP\s+2, \s-2WSOP\s+2, *, *)
.IP 054
Ignoring function, the specified workstation is not open
.IP 061
Ignoring function, specified workstation is neither of category \s-2INPUT\s+2
nor of category \s-2OUTIN\s+2
.IP 250
Ignoring function, the specified device is not available
on the specified workstation
.IP 251
Ignoring function, the function requires the input device to be in \s-2REQUEST\s+2 mode
.IP 253
Warning, the specified prompt/echo type is not available on the specified
workstation.
Prompt/echo type one will be used in its place
.IP 254
Ignoring function, invalid echo area/volume;
\s-2XMIN \(>= XMAX, YMIN \(>= YMAX\s+2, or \s-2ZMIN > ZMAX\s+2
.IP 255
Ignoring function, one of the echo area/volume boundary points
is outside the range of the device
.IP 260
Ignoring function, one of the fields within the input device data record
is in error
.IP 261
Ignoring function, initial value is invalid
.IP 263
Ignoring function, length of the initial string is greater than the buffer size
.SH SEE ALSO
.nf
.IP
.ta 0.5i
.SM "SET STRING MODE (3P)"
.SM "REQUEST STRING (3P)"
.SM "SAMPLE STRING (3P)"
.SM "GET STRING (3P)"
.SM "INQUIRE STRING DEVICE STATE (3P)"
.SM "INITIALIZE STRING 3 (3P)"
.fi
