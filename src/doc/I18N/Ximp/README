*
* *****************************************************************
* *                                                               *
* *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
* *                                                               *
* *   All Rights Reserved.  Unpublished rights  reserved  under   *
* *   the copyright laws of the United States.                    *
* *                                                               *
* *   The software contained on this media  is  proprietary  to   *
* *   and  embodies  the  confidential  technology  of  Digital   *
* *   Equipment Corporation.  Possession, use,  duplication  or   *
* *   dissemination of the software and media is authorized only  *
* *   pursuant to a valid written license from Digital Equipment  *
* *   Corporation.                                                *
* *                                                               *
* *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
* *   by the U.S. Government is subject to restrictions  as  set  *
* *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
* *   or  in  FAR 52.227-19, as applicable.                       *
* *                                                               *
* *****************************************************************
*
*
* HISTORY
*
This is an implementation-dependent part of I18N Xlib sample implementation.
This implementation supports the input system based on the client-server model.
The communication protocol between library stab and IMServer process is defined by "XIMP" protocol 
specification (V3.3), which is defined by the specification document "Ximp3_3.doc" in the mit/doc/I18N/Ximp
directory.
For further information about "XIMP" protocol, please see the protocol document.

Its features include
--	provide for user to choose and use an input method which is suitable "Look and Feel" and 
	operation for his needs to every application running on the network-wide and heterogeneous 
	environments.
--	indepentent of a specific input method server and a specific vendor.
	Actually,various input methods from different vender support this protocol.
--	indepentent of a specific native language.
--	can provide consistent input method on each display.
--	can provide multi-language services on one display.
--	not require any special communication techniques except for  X protocol.
--	Allow vendor/IMserver dependent extensions.

How to use "Ximp" protocol:
	When you compile mit/lib/X/Imake (imake), define "BuildXimp".
		ex. imake -DBuildXimp ...

Supported input styles:
	XIMPreeditCallbacks
	XIMPreeditPosition
	XIMPreeditNothing
	XIMStatusCallbacks
	XIMStatusArea
	XIMStatusNothing

Supported architectures:
	Front-end architecture
	Back-end architecture

Supported callbacks:
	Preedit callback
	Geometry callback
	Status callback

This implementation is compiled on:
	SUN,           SunOS   4.1.1
	SUN,           SunOS   4.0.3 with JLE
	SONY,          NEWS-OS 4.0
        FUJITSU FM-G,  SX/G    E14
	AT&T 6386 WGS, SVR4.0 Version 2.0
	AT&T 6386 WGS, SVR4.0 Version 2.0 with MNLS4.0

In this implementation, locale name string format is compliant with XPG3,
and using following format.
	<locale name>	::= <language>_<territory>.<encoding>
	<language>	::= based on ISO 639
	<territory>	::= based on ISO 3166 (country code)
	<encoding>	::= "EUC", "SJIS", ...

In the system that uses other locale name format,
you should provide this format locale name.

For example:
Using Japanese environment on SunOS.
SunOS4.1.1 without JLE:
	% su
	# cd /usr/share/lib/locale
	# foreach i (*)
	> (cd $i; ln -s C ja_JP.EUC)
	> end
	# <ctrl>D
	% setenv LANG ja_JP.EUC

SunOS4.1.1 with JLE:
	% su
	# cd /usr/lib/locale
	# ln -s japanese ja_JP.EUC
	# <ctrl>D
	% setenv LANG ja_JP.EUC



