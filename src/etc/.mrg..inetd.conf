#!/sbin/sh
#
# *****************************************************************
# *                                                               *
# *    Copyright (c) Digital Equipment Corporation, 1991, 1994    *
# *                                                               *
# *   All Rights Reserved.  Unpublished rights  reserved  under   *
# *   the copyright laws of the United States.                    *
# *                                                               *
# *   The software contained on this media  is  proprietary  to   *
# *   and  embodies  the  confidential  technology  of  Digital   *
# *   Equipment Corporation.  Possession, use,  duplication  or   *
# *   dissemination of the software and media is authorized only  *
# *   pursuant to a valid written license from Digital Equipment  *
# *   Corporation.                                                *
# *                                                               *
# *   RESTRICTED RIGHTS LEGEND   Use, duplication, or disclosure  *
# *   by the U.S. Government is subject to restrictions  as  set  *
# *   forth in Subparagraph (c)(1)(ii)  of  DFARS  252.227-7013,  *
# *   or  in  FAR 52.227-19, as applicable.                       *
# *                                                               *
# *****************************************************************
#
# HISTORY
# 
# @(#)$RCSfile: .mrg..inetd.conf,v $ $Revision: 1.1.2.5 $ (DEC) $Date: 1993/11/02 19:20:22 $ 
# 


MERGE_ROUTINE=DRI_Merge


#	-DRI_Merge
#		merge routine provided by the DRIs.
#
#	given: 	global variable $_FILE
#	return: 0 if success
#		non-zero if failure
#
#	Note:	1) use MRG_Echo() to output additional messages.
#		2) see also /usr/share/lib/shell/libmrg for other available 
#		   global variables.

DRI_Merge()
{
	RET=0

	#
	#	Check if this merge was performed previously
	#	Check if the action field for the kmk entry is already 'wait'
	#

	grep -q 'rquotad/1' $_FILE ||
	{
		MRG_Echo "adding 'rquotad' entry"

		echo "# Rquotad serves UFS disk quotas to NFS clients." >> $_FILE
		echo "#" >> $_FILE
		echo "rquotad/1       dgram   rpc/udp wait root /usr/sbin/rpc.rquotad  rpc.rquotad" >> $_FILE

		[ "$?" = 0 ] ||
		{
			MRG_Echo "\tfailed to add 'rquotad' entry"
			RET=1
		}
	}

	grep -q 'rstatd/2-4' $_FILE ||
	{
		MRG_Echo "adding 'rstatd' entry"

		echo "# Rstatd is used by programs such as perfmeter." >> $_FILE
		echo "#" >> $_FILE
		echo "#rstatd/2-4      dgram   rpc/udp wait root /usr/sbin/rpc.rstatd   rpc.rstatd" >> $_FILE
		echo "#" >> $_FILE

		[ "$?" = 0 ] ||
		{
			MRG_Echo "\tfailed to add 'rstatd' entry"
			RET=1
		}
	}


	grep -q 'rusersd/1-2' $_FILE ||
	{
		MRG_Echo "adding 'rusersd' entry"

		echo "# The rusers service gives out user information.  Sites concerned " >> $_FILE
		echo "# with security may choose to disable it. " >> $_FILE
		echo "#" >> $_FILE
		echo "#rusersd/1-2     dgram   rpc/udp wait root /usr/sbin/rpc.rusersd  rpc.rusersd" >> $_FILE
		echo "#" >> $_FILE

		[ "$?" = 0 ] ||
		{
			MRG_Echo "\tfailed to add 'rusersd' entry"
			RET=1
		}
	}


	grep -q 'sprayd/1' $_FILE ||
	{
		MRG_Echo "adding 'sprayd' entry"

		echo "# The spray server is used primarily for testing." >> $_FILE
		echo "#" >> $_FILE
		echo "#sprayd/1        dgram   rpc/udp wait root /usr/sbin/rpc.sprayd   rpc.sprayd"  >> $_FILE
		echo "#" >> $_FILE

		[ "$?" = 0 ] ||
		{
			MRG_Echo "\tfailed to add 'sprayd' entry"
			RET=1
		}
	}


	grep -q 'walld/1' $_FILE ||
	{
		MRG_Echo "adding 'walld' entry"

		echo "# The rwall server lets anyone on the network bother everyone on your machine." >> $_FILE
		echo "#" >> $_FILE
		echo "#walld/1         dgram   rpc/udp wait root /usr/sbin/rpc.rwalld   rpc.rwalld" >> $_FILE
		echo "#" >> $_FILE

		[ "$?" = 0 ] ||
		{
			MRG_Echo "\tfailed to add 'walld' entry"
			RET=1
		}
	}

	#
	# Turn off talk
	#

	grep -q '^talk\(.*\)dgram\(.*\)udp\(.*\)wait\(.*\)root\(.*\)\/usr\/sbin\/talkd\(.*\)talkd' $_FILE &&
	{
		MRG_Echo "commenting out 'talk' entry"

		ed - $_FILE << _Comment_talk_ 1>/dev/null
/^talk
s/^talk/#talk
.
w
q
_Comment_talk_

		[ "$?" = 0 ] ||
		{
			MRG_Echo "\tfailed to comment out talk entry"
			RET=1
		}
	}

	return $RET
}


SHELL_LIB=${SHELL_LIB:-/usr/share/lib/shell}
. $SHELL_LIB/libmrg


[ "$CHECK_SYNTAX" ] || MRG_Merge "$@" 

