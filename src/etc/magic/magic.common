#
# (c) Copyright 1990, OPEN SOFTWARE FOUNDATION, INC.
# ALL RIGHTS RESERVED
#
#
# OSF/1 Release 1.0
#
#	This is the common section /etc/magic
#	Make the magic file.
#
#
#	This is the common file for magic. It is used to contain non-
#	architecture specific definitions for the 'file' command. This
#	file is the first of several files concatenated  to build
#	the magic file. In the future when additions to the magic file are
#	necessary and the addition of a new architecture is desired create
#	a new file containing the magic information as outlined below. When
#	it is desirable to add a non-architectural definition put the
#	definition in this file.
#
#
#	Syntax:
#
#		offset   type   operator,value    string
#
#	Field should be separated by tab(s), but must be contained on 
#	one(1) line..
#
#	Byte Offset: 
#
#		This field is used as a byte offset from the beginning 
#		of the file you are running the command 'file' on. It
#		will point to the first byte of the magic number or 
#		character string of interest. If a greater than (>) 
#		sign precedes the byte offset it will be intrepreted as
#		a continuation line in order to form a more exact
#		description of the file.
#
#
#	Value Type:  
#		This field informs the 'file' command what data type
#		it should expect to find at the byte offset. The 
#		following are acceptable values for this field:
#
#			byte		Expect unsigned char.
#			short		Expect unsigned short.
#			long		Expect long.
#			string		Expect character(byte).
#
#
#	Comparision Operator: 
#
#		This field instructs 'file' on how to compare the value
#		it read from the file against the value from the 'value'
#		field defined in this file. The following are valid 
#		comparision operators:
#
#			=		Equality.
#			>		Greater than.
#			<		Less than.
#
#		Note that is this field is optional and if left blank
#		equality is assumed.
#
#
#	Value:
#
#		Value used to compare against what is read from the file
#		being examined by the command. This field may be expressed
#		in decimal, hex, octal, or character string. The rules for
#		the use of character strings follow those of ed(1) and are
#		described as follows:
#
#		1)Unprintable characters are escaped using the backslash(\).
#		  All special characters are permitted to be included in a
#		  string, namely; \n, \b, \r, and \f. A backslash(\) may also
#		  appear in the string, but must be escaped with a backslash(\)
#		  immediately following(ie., \\) An octal representation
#		  of a string may also be used to insert any byte value with
#		  the exception of zero.
#
#		2)Text found in the string may also be inserted in the printed
#		  string by using the \\% delimiter. See definitions for 
#		  script and PostScript files for examples.
#
#		To indicate a hex number preceed the number with a '0x'
#		(ie.,0x80), to specify an octal number preceed the number
#		with a '0' (ie.,0200). A decimal number has no special 
#		representation and should be written as an integer (ie.,128).
#
#
#	String To Print:
#
#		The desired string providing information about the file.
#		Text found in the file may be included in this string.
#
# Mach magic number info
#
0	long		0xcefaefbe	OSF/Rose object
